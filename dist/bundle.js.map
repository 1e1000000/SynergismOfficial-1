{"version":3,"sources":["webpack://synergismofficial/./node_modules/eventemitter3/index.js","webpack://synergismofficial/./node_modules/lz-string/libs/lz-string.js","webpack://synergismofficial/./node_modules/pad-end/index.js","webpack://synergismofficial/./src/Logger.ts","webpack://synergismofficial/./node_modules/break_infinity.js/dist/break_infinity.esm.js","webpack://synergismofficial/./src/Utility.ts","webpack://synergismofficial/./src/Variables.ts","webpack://synergismofficial/./src/Events.ts","webpack://synergismofficial/./src/Achievements.ts","webpack://synergismofficial/./src/Talismans.ts","webpack://synergismofficial/./src/Runes.ts","webpack://synergismofficial/./src/Buy.ts","webpack://synergismofficial/./src/Generators.ts","webpack://synergismofficial/./src/Automation.ts","webpack://synergismofficial/./src/Upgrades.ts","webpack://synergismofficial/./src/Cubes.ts","webpack://synergismofficial/./src/Tesseracts.ts","webpack://synergismofficial/./src/Research.ts","webpack://synergismofficial/./src/Hypercubes.ts","webpack://synergismofficial/./src/Reset.ts","webpack://synergismofficial/./src/Calculate.ts","webpack://synergismofficial/./src/Ants.ts","webpack://synergismofficial/./src/Shop.ts","webpack://synergismofficial/./src/UpdateVisuals.ts","webpack://synergismofficial/./src/UpdateHTML.ts","webpack://synergismofficial/./src/Statistics.ts","webpack://synergismofficial/./src/Corruptions.ts","webpack://synergismofficial/./src/Toggles.ts","webpack://synergismofficial/./src/Challenges.ts","webpack://synergismofficial/./src/History.ts","webpack://synergismofficial/./src/PlatonicCubes.ts","webpack://synergismofficial/./src/Platonic.ts","webpack://synergismofficial/./src/ImportExport.ts","webpack://synergismofficial/./src/EventListeners.ts","webpack://synergismofficial/./src/Plugins/Dashboard.ts","webpack://synergismofficial/./src/Plugins/Example.ts","webpack://synergismofficial/./src/Plugins/OpenCubes.ts","webpack://synergismofficial/./src/Helper.ts","webpack://synergismofficial/./src/Synergism.ts","webpack://synergismofficial/./src/CheckVariables.ts","webpack://synergismofficial/./src/Tax.ts","webpack://synergismofficial/webpack/bootstrap","webpack://synergismofficial/webpack/runtime/compat get default export","webpack://synergismofficial/webpack/runtime/define property getters","webpack://synergismofficial/webpack/runtime/hasOwnProperty shorthand","webpack://synergismofficial/webpack/runtime/make namespace object","webpack://synergismofficial/webpack/startup"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","charAt","compressToBase64","input","res","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","result","forEach","c","join","compressToEncodedURIComponent","decompressFromEncodedURIComponent","replace","bitsPerChar","getCharFromInt","value","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Math","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","data","val","position","string","maxLength","fillString","targetLen","parseInt","isNaN","isFinite","filled","fillLen","substr","patchSettings","method","console","Proxy","target","thisArg","addConsoleEntry","_a","logger","document","getElementById","lastChild","textContent","childElementCount","removeChild","children","text","createElement","classList","add","appendChild","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","NUMBER_EXP_MIN","powerOf10","powersOf10","Number","D","Decimal","ME","mantissa","exponent","fromMantissaExponent","ME_NN","fromMantissaExponent_noNormalize","affordGeometricSeries","resourcesAvailable","priceStart","priceRatio","currentOwned","actualStart","mul","floor","div","sub","log10","sumGeometricSeries","numItems","NaN","m","e","fromDecimal","fromNumber","fromString","defineProperty","get","set","enumerable","configurable","sign","sgn","fromValue","fromValue_noAlloc","abs","neg","negate","negated","round","ceil","trunc","other","plus","subtract","minus","multiply","times","divide","recip","reciprocal","reciprocate","cmp","compare","eq","equals","neq","notEquals","lt","lte","gt","gte","max","min","clamp","clampMin","clampMax","cmp_tolerance","tolerance","compare_tolerance","eq_tolerance","equals_tolerance","neq_tolerance","notEquals_tolerance","lt_tolerance","lte_tolerance","gt_tolerance","gte_tolerance","absLog10","pLog10","log","base","log2","ln","logarithm","pow10","isInteger","exp","sqr","sqrt","cube","cbrt","dp","decimalPlaces","affordArithmeticSeries","priceAdd","b","b2","sumArithmeticSeries","efficiencyOfPurchase","cost","currentRpS","deltaRpS","randomDecimalForTesting","absMaxExponent","random","normalize","tempExponent","POSITIVE_INFINITY","NEGATIVE_INFINITY","indexOf","parts","split","parseFloat","Error","toNumber","resultRounded","mantissaWithDecimalPlaces","places","numDigits","rounded","toFixed","toString","toExponential","padEnd","toPrecision","valueOf","toJSON","toStringWithDecimalPlaces","biggerDecimal","smallerDecimal","decimal","divideBy","dividedBy","LN10","newMantissa","numberValue","temp","isSafeInteger","newExponent","residue","pow_base","factorial","n","E","sinh","PI","x","mod","cosh","tanh","asinh","acosh","atanh","ascensionPenalty","ascensions","egg","lessThanOrEqualTo","lessThan","greaterThanOrEqualTo","greaterThan","MAX_VALUE","MIN_VALUE","NUMBER_MAX_VALUE","NUMBER_MIN_VALUE","isDecimal","o","keys","smallestInc","MAX_SAFE_INTEGER","sumContents","array","isArray","values","reduce","productContents","id","stripIndents","s","raw","shift","trim","Globals","runediv","runeexpbase","upgradeCosts","crystalUpgradesCost","crystalUpgradeCostIncrement","researchBaseCosts","researchMaxLevels","ticker","costDivisor","freeAccelerator","totalAccelerator","freeAcceleratorBoost","totalAcceleratorBoost","acceleratorPower","acceleratorEffect","acceleratorEffectDisplay","generatorPower","freeMultiplier","totalMultiplier","multiplierPower","multiplierEffect","challengeOneLog","freeMultiplierBoost","totalMultiplierBoost","globalCoinMultiplier","totalCoinOwned","prestigeMultiplier","buildingPower","reincarnationMultiplier","coinOneMulti","coinTwoMulti","coinThreeMulti","coinFourMulti","coinFiveMulti","globalCrystalMultiplier","globalMythosMultiplier","grandmasterMultiplier","atomsMultiplier","mythosBuildingPower","challengeThreeMultiplier","totalMythosOwned","prestigePointGain","challengeFivePower","transcendPointGain","reincarnationPointGain","produceFirst","produceSecond","produceThird","produceFourth","produceFifth","produceTotal","produceFirstDiamonds","produceSecondDiamonds","produceThirdDiamonds","produceFourthDiamonds","produceFifthDiamonds","produceDiamonds","produceFirstMythos","produceSecondMythos","produceThirdMythos","produceFourthMythos","produceFifthMythos","produceMythos","produceFirstParticles","produceSecondParticles","produceThirdParticles","produceFourthParticles","produceFifthParticles","produceParticles","producePerSecond","producePerSecondDiamonds","producePerSecondMythos","producePerSecondParticles","uFourteenMulti","uFifteenMulti","tuSevenMulti","currentTab","researchfiller1","researchfiller2","ordinals","cardinals","challengeBaseRequirements","prestigeamount","taxdivisor","taxdivisorcheck","runemultiplierincrease","one","two","three","four","five","mythosupgrade13","mythosupgrade14","mythosupgrade15","challengefocus","maxexponent","maxbuyresearch","effectiveLevelMult","optimalOfferingTimer","optimalObtainiumTimer","runeSum","shopConfirmation","globalAntMult","antMultiplier","antOneProduce","antTwoProduce","antThreeProduce","antFourProduce","antFiveProduce","antSixProduce","antSevenProduce","antEightProduce","antCostGrowth","antUpgradeBaseCost","antUpgradeCostIncreases","bonusant1","bonusant2","bonusant3","bonusant4","bonusant5","bonusant6","bonusant7","bonusant8","bonusant9","bonusant10","bonusant11","bonusant12","rune1level","rune2level","rune3level","rune4level","rune5level","rune1Talisman","rune2Talisman","rune3Talisman","rune4Talisman","rune5Talisman","talisman1Effect","talisman2Effect","talisman3Effect","talisman4Effect","talisman5Effect","talisman6Effect","talisman7Effect","talisman6Power","talisman7Quarks","runescreen","settingscreen","talismanResourceObtainiumCosts","talismanResourceOfferingCosts","talismanLevelCostMultiplier","talismanPositiveModifier","talismanNegativeModifier","commonTalismanEnhanceCost","uncommonTalismanEnchanceCost","rareTalismanEnchanceCost","epicTalismanEnhanceCost","legendaryTalismanEnchanceCost","mythicalTalismanEnchanceCost","talismanRespec","obtainiumGain","mirrorTalismanStats","antELO","effectiveELO","timeWarp","blessingMultiplier","spiritMultiplier","runeBlessings","runeSpirits","effectiveRuneBlessingPower","effectiveRuneSpiritPower","blessingBaseCost","spiritBaseCost","triggerChallenge","prevReductionValue","buildingSubTab","blessingbase","blessingDRPower","giftbase","giftDRPower","benedictionbase","benedictionDRPower","platonicCubeBase","platonicDRPower","cubeBonusMultiplier","tesseractBonusMultiplier","hypercubeBonusMultiplier","platonicBonusMultiplier","buyMaxCubeUpgrades","autoOfferingCounter","researchOrderByCost","divisivenessPower","maladaptivePower","lazinessMultiplier","hyperchallengedMultiplier","illiteracyPower","deflationMultiplier","extinctionMultiplier","droughtMultiplier","financialcollapsePower","corruptionPointMultipliers","ascendBuildingProduction","first","second","third","fourth","fifth","freeUpgradeAccelerator","freeUpgradeMultiplier","acceleratorMultiplier","multiplierMultiplier","constUpgradeCosts","globalConstantMult","autoTalismanTimer","autoChallengeTimerIncrement","corruptionTrigger","challenge15Rewards","cube1","coinExponent","taxes","obtainium","offering","accelerator","multiplier","runeExp","runeBonus","cube2","transcendChallengeReduction","reincarnationChallengeReduction","antSpeed","bonusAntLevel","cube3","talismanBonus","globalSpeed","blessingBonus","constantBonus","cube4","spiritBonus","score","autoResetTimers","prestige","transcension","reincarnation","ascension","timeMultiplier","upgradeMultiplier","blankGlobals","assign","Synergism","achievementpointvalues","totalachievementpoints","adesc","adesc1","adesc2","adesc3","adesc4","adesc5","adesc6","adesc7","adesc8","adesc9","adesc10","adesc11","adesc12","adesc13","adesc14","adesc15","adesc16","adesc17","adesc18","adesc19","adesc20","adesc21","adesc22","adesc23","adesc24","adesc25","adesc26","adesc27","adesc28","adesc29","adesc30","adesc31","adesc32","adesc33","adesc34","adesc35","adesc36","adesc37","adesc38","adesc39","adesc40","adesc41","adesc42","adesc43","adesc44","adesc45","adesc46","adesc47","adesc48","adesc49","adesc50","adesc51","adesc52","adesc53","adesc54","adesc55","adesc56","adesc57","adesc58","adesc59","adesc60","adesc61","adesc62","adesc63","adesc64","adesc65","adesc66","adesc67","adesc68","adesc69","adesc70","adesc71","adesc72","adesc73","adesc74","adesc75","adesc76","adesc77","adesc78","adesc79","adesc80","adesc81","adesc82","adesc83","adesc84","adesc85","adesc86","adesc87","adesc88","adesc89","adesc90","adesc91","adesc92","adesc93","adesc94","adesc95","adesc96","adesc97","adesc98","adesc99","adesc100","adesc101","adesc102","adesc103","adesc104","adesc105","adesc106","adesc107","adesc108","adesc109","adesc110","adesc111","adesc112","adesc113","adesc114","adesc115","adesc116","adesc117","adesc118","adesc119","adesc120","adesc121","adesc122","adesc123","adesc124","adesc125","adesc126","adesc127","adesc128","adesc129","adesc130","adesc131","adesc132","adesc133","adesc134","adesc135","adesc136","adesc137","adesc138","adesc139","adesc140","adesc141","adesc142","adesc143","adesc144","adesc145","adesc146","adesc147","adesc148","adesc149","adesc150","adesc151","adesc152","adesc153","adesc154","adesc155","adesc156","adesc157","adesc158","adesc159","adesc160","adesc161","adesc162","adesc163","adesc164","adesc165","adesc166","adesc167","adesc168","adesc169","adesc170","adesc171","adesc172","adesc173","adesc174","adesc175","adesc176","adesc177","adesc178","adesc179","adesc180","adesc181","adesc182","adesc183","adesc184","adesc185","adesc186","adesc187","adesc188","adesc189","adesc190","adesc191","adesc192","adesc193","adesc194","adesc195","adesc196","adesc197","adesc198","adesc199","adesc200","adesc201","adesc202","adesc203","adesc204","adesc205","adesc206","adesc207","adesc208","adesc209","adesc210","adesc211","adesc212","adesc213","adesc214","adesc215","adesc216","adesc217","adesc218","adesc219","adesc220","adesc221","adesc222","adesc223","adesc224","adesc225","adesc226","adesc227","adesc228","adesc229","adesc230","adesc231","adesc232","adesc233","adesc234","adesc235","adesc236","adesc237","adesc238","adesc239","adesc240","adesc241","adesc242","adesc243","adesc244","adesc245","adesc246","adesc247","adesc248","adesc249","adesc250","adesc251","adesc252","areward","areward3","areward4","areward5","areward6","areward7","areward10","areward11","areward12","areward13","areward14","areward17","areward18","areward19","areward20","areward21","areward24","areward25","areward26","areward27","areward28","areward31","areward32","areward33","areward34","areward35","areward36","areward37","areward38","areward43","areward44","areward45","areward46","areward47","areward50","areward51","areward52","areward53","areward57","areward58","areward59","areward60","areward61","areward62","areward71","areward72","areward73","areward74","areward75","areward76","areward77","areward78","areward79","areward80","areward82","areward84","areward85","areward86","areward87","areward89","areward91","areward92","areward93","areward94","areward96","areward98","areward99","areward100","areward101","areward102","areward103","areward105","areward106","areward107","areward108","areward110","areward112","areward115","areward117","areward118","areward119","areward122","areward124","areward126","areward127","areward128","areward129","areward131","areward132","areward133","areward134","areward135","areward136","areward137","areward140","areward141","areward147","areward169","areward171","areward172","areward173","areward174","areward176","areward177","areward178","areward179","areward180","areward181","areward182","areward187","areward188","areward189","areward193","areward195","areward196","areward197","areward198","areward199","areward200","areward201","areward202","areward204","areward205","areward206","areward207","areward208","areward209","areward211","areward212","areward213","areward214","areward215","areward216","areward218","areward219","areward220","areward221","areward222","areward223","areward240","areward250","areward251","resetachievementcheck","player","prestigenoaccelerator","achievementaward","prestigenomultiplier","prestigenocoinupgrades","transcendnoaccelerator","transcendnomultiplier","transcendnocoinupgrades","transcendnocoinorprestigeupgrades","reincarnatenoaccelerator","reincarnatenomultiplier","reincarnatenocoinupgrades","reincarnatenocoinorprestigeupgrades","reincarnatenocoinprestigeortranscendupgrades","reincarnatenocoinprestigetranscendorgeneratorupgrades","challengeCompletionsBar","challengeCompletionsNotAuto","1","2","3","5","challengeachievementcheck","auto","generatorcheck","upgrades","bar","ach","filter","challengecompletions","includes","coinsThisTranscension","acceleratorBought","acceleratorBoostBought","challengeArray","achievements","buildAchievementReq","firstOwnedCoin","secondOwnedCoin","thirdOwnedCoin","fourthOwnedCoin","fifthOwnedCoin","buildingAchievementCheck","req","idx","ascensionAchievementCheck","ascendCountArray","ascensionCount","constantArray","ascendShards","scoreArray","achievementdescriptions","y","z","k","style","color","num","achievementPoints","worlds","revealStuff","backgroundColor","talismanResourceCosts","shard","offerings","commonFragment","uncommonFragment","rareFragment","epicFragment","legendaryFragment","mythicalFragment","getTalismanResourceInfo","type","percentage","buyTalismanShardPercent","obtainiumCost","offeringCost","maxBuyObtainium","researchPoints","maxBuyOffering","runeshards","amountToBuy","canBuy","buyAmount","updateTalismanCostDisplay","el","talismanCostInfo","TalismanName","format","toggleTalismanBuy","updateTalismanInventory","talismanShards","commonFragments","uncommonFragments","rareFragments","epicFragments","legendaryFragments","mythicalFragments","buyTalismanResources","talismanResourcesData","showTalismanEffect","display","d","g","h","talismanRarity","showTalismanPrices","talismanLevels","showEnhanceTalismanPrices","costArray","showRespecInformation","runeName","runeModifier","border","changeTalismanModifier","checkSum","updateTalismanAppearance","la","rarity","buyTalismanLevels","priceMult","CalcECC","researches","calculateRuneLevels","buyTalismanEnhance","displayRuneInformation","updatelevelup","SILevelMult","calculateCorruptionPoints","amountPerOffering","calculateRuneExpGiven","runelevels","arr","calculateOfferingsToLevelXTimes","offeringbuyamount","check","redeemShards","runeIndexPlusOne","cubeUpgraded","runeIndex","unlockedRune","levelsToAdd","shopUpgrades","offeringAuto","calculateMaxRunes","levelsAdded","all","maxLevel","amountArr","toSpendTotal","fact","mult","calculateRuneExpToLevel","runeexp","expPerOff","toSpend","runeToUpdate","runeLevel","levels","sum","amount","getReductionValue","reduction","antUpgrades","getCostAccelerator","buyingTo","factorialBit","multBit","sumNum","sumBit","currentChallenge","buyAccelerator","autobuyer","buyTo","cashToBuy","coins","stepdown","coinbuyamount","buyFrom","thisCost","acceleratorCost","updateAllTick","getCostMultiplier","powBit","buyMultiplier","multiplierBought","multiplierCost","updateAllMultiplier","mantissaFactorialPartExtra","exponentFactorialPartExtra","factorialByExponent","fact100exponent","known_log10s","needed","nums","obj","need","getCost","originalCost","r","mlog10125","fastFactMultBuyTo","fr","fastFactMultBuyTo100","extra","buyMax","pos","tag","buyStart","buyInc","buyProducerTypes","Diamonds","Mythos","Particles","Coin","buyProducer","amounttype","buythisamount","buyUpgrades","state","addendum","upgradeupdate","buyCrystalUpgrades","u","toBuy","prestigeShards","calculateCrystalBuy","crystalUpgrades","crystalupgradedescriptions","boostAccelerator","automated","buyamount","prestigePoints","acceleratorBoostCost","getAcceleratorBoostCost","level","eff","linSum","getParticleCost","DR","buyParticleBuilding","key","reincarnationPoints","particlebuyamount","getTesseractCost","intCost","subCost","wowTesseracts","tesseractbuyamount","buyTesseractBuilding","actualCost","buyRuneBonusLevels","baseCost","baseLevels","levelCap","runeSpiritLevels","runeSpiritBuyAmount","runeBlessingLevels","runeBlessingBuyAmount","calculateSummationLinear","requirementArray","calculateRuneBonuses","blessingMultiplierArray","t","spiritMultiplierArray","buyGenerator","unlocks","generation","q","achievementCheck","buyAutobuyers","autoUpgrades","shoptoggles","generators","transcendPoints","coin","cubeUpgrades","transcend","reincarnate","upgdesc","upgdesc1","upgdesc2","upgdesc3","upgdesc4","upgdesc5","upgdesc6","upgdesc7","upgdesc8","upgdesc9","upgdesc10","upgdesc11","upgdesc12","upgdesc13","upgdesc14","upgdesc15","upgdesc16","upgdesc17","upgdesc18","upgdesc19","upgdesc20","upgdesc21","upgdesc22","upgdesc23","upgdesc24","upgdesc25","upgdesc26","upgdesc27","upgdesc28","upgdesc29","upgdesc30","upgdesc31","upgdesc32","upgdesc33","upgdesc34","upgdesc35","upgdesc36","upgdesc37","upgdesc38","upgdesc39","upgdesc40","upgdesc41","upgdesc42","upgdesc43","upgdesc44","upgdesc45","upgdesc46","upgdesc47","upgdesc48","upgdesc49","upgdesc50","upgdesc51","upgdesc52","upgdesc53","upgdesc54","upgdesc55","upgdesc56","upgdesc57","upgdesc58","upgdesc59","upgdesc60","upgdesc61","upgdesc62","upgdesc63","upgdesc64","upgdesc65","upgdesc66","upgdesc67","upgdesc68","upgdesc69","upgdesc70","upgdesc71","upgdesc72","upgdesc73","upgdesc74","upgdesc75","upgdesc76","upgdesc77","upgdesc78","upgdesc79","upgdesc80","upgdesc81","upgdesc82","upgdesc83","upgdesc84","upgdesc85","upgdesc86","upgdesc87","upgdesc88","upgdesc89","upgdesc90","upgdesc91","upgdesc92","upgdesc93","upgdesc94","upgdesc95","upgdesc96","upgdesc97","upgdesc98","upgdesc99","upgdesc100","upgdesc101","upgdesc102","upgdesc103","upgdesc104","upgdesc105","upgdesc106","upgdesc107","upgdesc108","upgdesc109","upgdesc110","upgdesc111","upgdesc112","upgdesc113","upgdesc114","upgdesc115","upgdesc116","upgdesc117","upgdesc118","upgdesc119","upgdesc120","upgdesc121","upgdesc122","upgdesc123","upgdesc124","upgdesc125","crystalupgdesc","crystalupgdesc1","crystalupgdesc2","crystalupgdesc3","crystalupgdesc4","crystalupgdesc5","crystalupgdesc6","crystalupgdesc7","crystalupgdesc8","constantUpgDesc","constantUpgDesc1","constantUpgDesc2","constantUpgDesc3","constantUpgDesc4","constantUpgDesc5","constantUpgDesc6","constantUpgDesc7","constantUpgDesc8","constantUpgDesc9","constantUpgDesc10","upgradetexts","prestigeCount","firstGeneratedMythos","firstOwnedMythos","transcendShards","transcendCount","firstOwnedParticles","secondOwnedParticles","thirdOwnedParticles","fourthOwnedParticles","fifthOwnedParticles","maxobtainium","maxofferings","firstOwnedAnts","secondOwnedAnts","thirdOwnedAnts","fourthOwnedAnts","fifthOwnedAnts","sixthOwnedAnts","seventhOwnedAnts","eighthOwnedAnts","upgradedescriptions","toggles","currency","upgradeeffects","p","fast","constUpgEffect","constantUpgrades","ascendBuilding1","owned","ascendBuilding2","ascendBuilding3","ascendBuilding4","ascendBuilding5","4","6","7","8","9","10","getConstUpgradeMetadata","constantUpgradeDescriptions","returnConstUpgEffect","buyConstantUpgrades","calculateAnts","openCube","wowCubes","cubeBlessings","cubeOpenedDaily","cubeQuarkDaily","cubeToQuark","toSpendModulo","toSpendDiv20","blessings","weight","pdf","antSacrifice","calculateCubeBlessings","cubeUpgradeName","cubeBaseCost","cubeMaxLevel","cubeUpgradeDescriptions","getCubeCost","linGrowth","metaData","calculateSummationNonLinear","cubeUpgradeDesc","updateCubeUpgradeBG","buyCubeUpgrades","openTesseract","tesseractOpenedDaily","tesseractQuarkDaily","tesseractToQuark","tesseractBlessings","calculateTesseractBlessings","extraCubeBlessings","tesseractArray","getResearchCost","buyResearch","autoResearchToggle","autoResearch","obtainiumAuto","canAfford","isResearchUnlocked","isResearchMaxed","researchDescriptions","rrow1","rrow2","rrow3","rrow4","roombaResearchIndex","doc","maxRoombaResearchIndex","cumuSum","indices","map","chievos","resdesc","updateResearchBG","openHypercube","wowHypercubes","hypercubeOpenedDaily","hypercubeQuarkDaily","hypercubeToQuark","hypercubeBlessings","calculateHypercubeBlessings","extraTesseractBlessings","repeatreset","resetrepeat","clearInt","interval","resetdetails","src","transcensionChallenge","reincarnationChallenge","calculateOfferings","offeringImage","offeringText","currencyImage1","resetObtainiumImage","resetobtainiumText","resetInfo","resetCurrencyGain","coinsThisPrestige","prestigecounter","transcendcounter","reincarnationcounter","challengeRequirement","goal","goaldesc","CalcCorruptionStuff","ascensionCounter","updateAutoReset","transcendamount","v","reincarnationamount","autoAscendThreshold","autoAntSacTimer","from","offeringsGiven","isChallenge","historyEntry","seconds","date","Date","now","kind","diamonds","mythos","particles","corruptionMetaData","c10Completions","usedCorruptions","corruptionScore","wowPlatonicCubes","resetAddHistoryEntry","resetofferings","resetUpgrades","firstGeneratedCoin","firstCostCoin","secondGeneratedCoin","secondCostCoin","thirdGeneratedCoin","thirdCostCoin","fourthGeneratedCoin","fourthCostCoin","fifthGeneratedCoin","fifthCostCoin","firstGeneratedDiamonds","secondGeneratedDiamonds","thirdGeneratedDiamonds","fourthGeneratedDiamonds","fifthGeneratedDiamonds","fastestprestige","firstOwnedDiamonds","firstCostDiamonds","secondOwnedDiamonds","secondCostDiamonds","thirdOwnedDiamonds","thirdCostDiamonds","fourthOwnedDiamonds","fourthCostDiamonds","fifthOwnedDiamonds","fifthCostDiamonds","secondGeneratedMythos","thirdGeneratedMythos","fourthGeneratedMythos","fifthGeneratedMythos","fastesttranscend","opscheck","obtainiumpersecond","coinsThisReincarnation","firstCostMythos","secondOwnedMythos","secondCostMythos","thirdOwnedMythos","thirdCostMythos","fourthOwnedMythos","fourthCostMythos","fifthOwnedMythos","fifthCostMythos","firstGeneratedParticles","secondGeneratedParticles","thirdGeneratedParticles","fourthGeneratedParticles","fifthGeneratedParticles","reincarnationCount","platonicUpgrades","reincarnationShards","instantChallenge","highestchallengecompletions","fastestreincarnate","autoChallengeIndex","resetResearches","resetAnts","resetTalismans","maxobtainiumpersecond","offeringpersecond","antSacrificePoints","antSacrificeTimer","antSacrificeTimerReal","firstCostParticles","secondCostParticles","thirdCostParticles","fourthCostParticles","fifthCostParticles","ascCount","calculateAntSacrificeELO","calculateTalismanEffects","calculateObtainium","prototypeCorruptions","firstGeneratedAnts","secondGeneratedAnts","thirdGeneratedAnts","fourthGeneratedAnts","fifthGeneratedAnts","sixthGeneratedAnts","seventhGeneratedAnts","eighthGeneratedAnts","firstCostAnts","secondCostAnts","thirdCostAnts","fourthCostAnts","fifthCostAnts","sixthCostAnts","seventhCostAnts","eighthCostAnts","ant12","antPoints","destroy","item","calculateRecycleMultiplier","returnFactors","recycleMultiplier","allRuneExpAdditiveMultiplier","calculateSigmoidExponential","lookupTableRuneExp","_","increaseAll","calcMult","statistic","offeringEX","cashGrab","persecond","obtainiumEX","calculateAutomaticObtainium","positiveBonus","negativeBonus","talismanOne","talismanTwo","talismanThree","talismanFour","talismanFive","talismanSix","talismanSeven","talismansEffects","runesTalisman","talismanEffect","runeNumber","bonusLevels","c11","c11bonus","antUpgradeSum","calculateAntSacrificeRewards","rewardsMult","calculateSigmoid","constant","factor","divisor","coefficient","cubeArray","powerBonus","calculateCubeMultiplier","seasonPass","calculateTimeAcceleration","timeMult","basePoints","baseLevel","resourceAvailable","differenceCap","subtractCost","buyToLevel","diffPerLevel","alreadySpent","totalCost","corruptionArrayMultiplier","corruptionLevelSum","cubeBank","challengeModifier","corruptionMultiplier","bankMultiplier","effectiveScore","speed","baseScore","challengeScoreArrays1","challengeScoreArrays2","challengeScoreArrays3","cubeGain","tesseractGain","hypercubeGain","platonicGain","antdesc","antdesc1","antdesc2","antdesc3","antdesc4","antdesc5","antdesc6","antdesc7","antdesc8","antspecies","antspecies1","antspecies2","antspecies3","antspecies4","antspecies5","antspecies6","antspecies7","antspecies8","antspecies9","antspecies10","antspecies11","antspecies12","antupgdesc","antupgdesc1","antupgdesc2","antupgdesc3","antupgdesc4","antupgdesc5","antupgdesc6","antupgdesc7","antupgdesc8","antupgdesc9","antupgdesc10","antupgdesc11","antupgdesc12","calculateCrumbToCoinExp","antUpgradeTexts","repeatAnt","updateAntDescription","ti","me","priceType","tier","getAntCost","getAntUpgradeCost","buyAntProducers","sacrificeMult","antSacrificePointsToMultiplier","antMax","achRequirements","buyAntUpgrade","antUpgradeDescription","al","content1","content2","bonuslevel","childNodes","points","sacrificeAnts","confirm","antSacrificePointsBefore","sacRewards","antSacrificePointsAfter","baseELO","crumbs","crumbsPerSecond","autoSacrificeToggle","unmaxed","baseAmount","sacrificeTimer","shopData","offeringPotion","price","priceIncrease","refundable","refundMinimumLevel","description","obtainiumPotion","shopTalisman","challengeExtension","challengeTome","getShopCosts","priceIncreaseMult","shopDescriptions","rofl","lmao","lol","buyShopUpgrades","useConsumable","visualUpdateResearch","visualUpdateCubes","dayTimer","prefixes","multipliers","accuracy","subtabNumber","augmentAccuracy","hypercubeArray","platonicArray","platonicBlessings","cubes","tesseracts","hypercubes","platonics","hypercubeBonus","scoreBonus","DRThreshold","example","getElementsByClassName","coinone","example2","cointwo","example3","cointhree","example4","coinfour","example5","example6","example7","example8","example9","example10","example11","example12","example13","example14","example15","example16","example17","example18","example19","example20","example21","example22","example23","example24","example25","example26","example27","example28","example29","example30","example31","ex","visibility","automationUnlocks","0","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","hideStuff","settingsTab","getAttribute","visualTab","buildings","upper","totalProductionDivisor","place","warning","perSecNames","resettoggle1","resettoggle2","resettoggle3","tesseractAutoBuyerAmount","runes","talismans","challenges","research","settings","saveString","version","onExportQuarks","quarkstimer","maxExportQuarks","setAttribute","shop","ants","mode","autoAntSacrificeMode","timer","formatTimeShort","showSacrifice","traits","htmlInserts","updateAscensionStats","buttoncolorchange","toggle","costParticles","ascendBuilding","costAnts","updateChallengeDisplay","retrychallenges","updateChallengeLevel","maxChallenges","showCorruptionStatsLoadouts","corruptionShowStats","borderColor","tess","hyper","platonic","splice","fillers","ascStatToggles","tabColors","changeTabColor","tab","c15RewardUpdate","exponentRequirements","challenge15Exponent","updateDisplayC15Rewards","keepExponent","corruptionDisplay","corruptionTexts","current","planned","spiritContribution","image","corruptionLoadoutTableUpdate","updateRow","row","rows","cells","corruptionLoadouts","corruptionLoadoutSaveLoad","save","loadout","tabNumberConst","toggleTabs","tabnumber","subTabList","subTabsInMainTab","button","buttonID","btns","contains","toggleChallenges","getChallengeConditions","autoChallengeRunning","toggleAutoChallengeRun","toggleBuyAmount","quantity","toggleShops","tabs","mainTab","tabName","unlocked","tabSwitcher","setActiveSettingScreen","subTabID","toggleBuildingScreen","toggleRuneScreen","toggleCubeSubTab","toggleCorruptionLoadoutsStats","keyboardTabChange","dir","main","maxTab","minTab","Infinity","handleLoopBack","numSubTabs","toggleSubTab","subTab","btn","toggleautoreset","toggleauto","autos","toggleId","finishedString","toggleAutoResearch","toggleAutoSacrifice","autoSacrifice","screen","subtab","clickedButton","__awaiter","_arguments","generator","subtabEl","parentNode","querySelectorAll","remove","refreshStats","acc","desc","loadStatisticsOfferingMultipliers","loadStatisticsCubeMultipliers","credits","artists","fetch","headers","json","contributor","img","Image","avatar_url","alt","login","href","createTextNode","JSON","parse","files","content","user","P","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","toggleAntMaxBuy","toggleAntAutoSacrifice","autoAntSacrifice","cubeTab","updateAutoChallenge","autoChallengeTimer","start","exit","enter","toggleAutoChallengeTextColors","updateRuneBlessingBuyAmount","toggleAutoTesseracts","autoTesseracts","toggleCorruptionLevel","resetCheck","stats","toggleAscStatPerSecond","challengeDisplay","changefocus","quarksMultiplier","descriptor","scoreArray1","scoreArray2","scoreArray3","scoreDisplay","constructor","autoChallengeToggles","ella","highestChallengeRewards","chalNum","highestValue","calculateChallengeRequirementMultiplier","completions","special","requirementMultiplier","effective","challenge","completion","c10Reduction","formatDecimalSource","numOrStr","conditionalFormatPerSecond","historyShowPerSecond","historyGains","formatter","imgTitle","onlyif","historyGainsOrder","historyKinds","resetHistoryTableMapping","resetHistoryCorruptionImages","resetHistoryCorruptionTitles","category","history","historyCountMax","resetHistoryPushNewRow","resetHistoryRenderRow","tbody","querySelector","insertBefore","_category","colsUsed","rowContentHtml","kindMeta","toLocaleString","gains","dataIntersection","listable","gainInfo","str","oldMulti","newMulti","diff","match","extractStringExponent","corruptions","resetHistoryFormatCorruptions","innerHTML","resetHistoryRenderAllTables","categoryToRender","targetTable","resetHistoryRenderFullTable","corruptionIdx","openPlatonic","toSpendDiv40000","RNGesus","gainValues","commonDrops","calculatePlatonicBlessings","platonicUpgradeDesc","platUpgradeBaseCosts","abyssals","checkPlatonicUpgrade","checksum","resources","resourceNames","checks","createPlatonicDescription","maxLevelAppend","resourceCheck","wowAbyssals","buyPlatonicUpgrades","format24","Intl","DateTimeFormat","year","month","day","hour","hour12","minute","format12","getRealTime","use12","dateParts","formatToParts","period","dayPeriod","toUpperCase","exportSynergism","offlinetick","saveSynergy","toClipboard","checked","localStorage","getItem","navigator","clipboard","writeText","catch","error","textArea","body","focus","select","execCommand","click","resetGame","window","crypto","getRandomValues","Uint16Array","prompt","hold","blankSave","codes","importSynergism","btoa","stringify","atob","exporttest","isTesting","intervalHold","setItem","constantIntervals","createTimer","loadSynergy","generateEventHandlers","addEventListener","buildingTypes","buildingTypesAlternate","buildingOrds","buildingOrdsToNum","index2","buildingTypesAlternate2","buildingTypesAlternate3","particleBuildingCosts","targets","tesseractBuildingCosts","toggleSettings","tesseractAutoBuyerToggle","updateTesseractAutoBuyAmount","resourceTypes","resourceType","talismanBuyPercents","talismanBuyPercentsOrd","autoEnhanceToggle","toggleautoenhance","autoFortifyToggle","toggleautofortify","talismanItemNames","respecTalismanConfirm","respecTalismanCancel","toggleAutoChallengesIgnore","antProducerCostVals","antRepeat","antUpgradeCostVals","toggleMaxBuyCube","corrupt","setTimeout","corruptionCleanseConfirm","autoAscend","toggleAutoAscend","settingSubTabs","rngCode","addPrompt","quarkCounter","quarks","promocodes","resetHistoryTogglePerSecond","initialQuarks","shopItem","doNotRefund","resetShopUpgrades","saveItem","SplitTime","numberOfHours","Days","Remainder","Hours","Minutes","statValues","talismanColors","span","roomba","autorune","autoch","autosac","realtime","firstChild","lastElementChild","className","float","height","width","margin","dashboardLoopRefFast","dashboardLoopRefSlow","activeTab","renderDashboardSlow","upgrade","plat","Upgrades","tessCost","hyperCost","platCost","time","platRate","hyperRate","tessRate","platTimeNeeded","hyperTimeNeeded","tessTimeNeeded","Plats","Hypers","Tess","totalTimeNeeded","minutesToAdd","futureDate","getCubeTimes","renderDashboardFast","exitDashboard","stat","clearInterval","innerText","marginLeft","enable","css","head","GM_addStyle","setInterval","openDashboard","firstElementChild","insertAdjacentElement","defineProperties","addTimers","maxQuarkTimer","getMaxQuarkTime","automaticTools","notMaxed","maxxed","checkMaxRunes","rune","coinsTotal","firstProduceCoin","secondProduceCoin","thirdProduceCoin","fourthProduceCoin","fifthProduceCoin","firstProduceDiamonds","secondProduceDiamonds","thirdProduceDiamonds","fourthProduceDiamonds","fifthProduceDiamonds","firstProduceMythos","secondProduceMythos","thirdProduceMythos","fourthProduceMythos","fifthProduceMythos","firstProduceParticles","secondProduceParticles","thirdProduceParticles","fourthProduceParticles","fifthProduceParticles","firstProduceAnts","secondProduceAnts","thirdProduceAnts","fourthProduceAnts","fifthProduceAnts","sixthProduceAnts","seventhProduceAnts","eighthProduceAnts","generated","fill","highestChallenge15Exponent","obtainiumtimer","crystalbuyamount","mythosbuyamount","Map","loaded1009","loaded1009hotfix1","loaded10091","loaded1010","loaded10101","autoAscendMode","ascend","reset","autoChallengeStartExponent","dayCheck","loadedOct4Hotfix","loadedNov13Vers","loadedDec16Vers","oldCodesUsed","size","oldPromoKeys","Boolean","prop","offerpromo24used","antSpeedLevel","refundThese","refundReward","offeringTimerLevel","instantChallengeBought","talismanBought","challenge10Tomes","cubeToQuarkBought","tesseractToQuarkBought","hypercubeToQuarkBought","obtainiumTimerLevel","offeringAutoLevel","obtainiumAutoLevel","cashGrabLevel","seasonPassLevel","checkVariablesOnLoad","testArray","toSort","sort","ouch","forceTime","maximumTimer","updatedTime","timeAdd","simulatedTicks","tickValue","maxSimulatedTicks","progressBarWidth","automaticObtainium","runOffline","resourceGain","updateAll","calculateOffline","top","left","CSSAscend","CSSRuneBlessings","fixDisplay1","fixDisplay2","updateAchievementBG","getHours","getMinutes","getSeconds","long","standardString","standard","front","back","frontFormatted","BigInt","mantissaLook","powerDigits","powerFront","powerLook","powerLookF","msMaxSeconds","padStart","c7","dt","calculateTotalAcceleratorBoost","crystalExponent","first6CoinUp","compareC","calculatetax","addcoin","resetCurrency","pm","chal","reinchal","ascendchal","prestigePow","transcendPow","manual","leaving","resetConfirmation","reqCheck","comp","maxCompletions","maxInc","counter","conf","pop","cheapestTesseractBuilding","intCostArray","_ach","_cost","autoBuyAnts","reductionValue","scalings","originalCosts","resource","ord","particleOriginalCost","lastUpdate","performance","tick","deltaMean","dtEffective","delta","tack","getDate","getMonth","getFullYear","dailyResetCheck","maxCount","talismansUnlocked","upgradedTalisman","runChallengeSweep","activeElement","localName","stopPropagation","preventDefault","location","script","ver","title","dec","clear","alert","onclick","corruptionButtonsAdd","table","insertRow","cell","insertCell","textAlign","corruptionLoadoutTableCreate","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","definition","Symbol","toStringTag"],"mappings":"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EACA,4FACA,8CACA,oDACA,uEACA,gEACA,mGACA,wFACA,kEACA,kEACA,+GACA,oJACA,wGACA,qEACA,6DACA,4FACA,+HACA,qGACA,wHACA,yEACA,wFACA,uEACA,kFACA,yFACA,qFACA,2FACA,wFACA,uFACA,iFACA,sEACA,0DACA,4DACA,wEACA,kDACA,0CACA,0EACA,kDACA,mFACA,8DACA,sEACA,oGACA,yFACA,4FACA,oGACA,wFACA,oEACA,yFACA,8EACA,sGACA,yEACA,mEACA,kIACA,4GACA,oFACA,sEACA,mHACA,kGACA,+FACA,gFACA,uDACA,wFACA,4FACA,wEACA,4FACA,kHACA,oHACA,2HACA,0DACA,yDACA,mDACA,wHACA,mGACA,2DACA,sEACA,oEACA,+DACA,iDACA,kDACA,0GACA,kGACA,+DACA,uEACA,yEACA,0DACA,sDACA,6EACA,uHACA,sDACA,gFACA,6DACA,yDACA,6CACA,uFACA,6EACA,6GACA,0DACA,0EACA,6DACA,wDACA,qDACA,wGACA,kEACA,qFACA,4FACA,+DACA,mEACA,0GACA,4FACA,sFACA,iHACA,kGACA,kNAESZ,GAAuB,CAACl8C,EAAG09B,GAAO,EAAOkd,EAAY,KAC9D,MAAMtZ,EAAa,kBAAuB5D,EAAQ,IAAS,EACrD6B,EAAIud,GAAQ98C,EAAI,GACtB,IAAIw/B,EAAI,GACR,MAAM6Y,EAAI,MAAQr4C,EACZ66C,EAAWa,GAAgB17C,EAAGshC,EAAWsZ,GAC/Cpb,EAAI,UAAamC,GAAOkZ,EAAS,GAAI,GAAG,GAAU,gBAAkBlZ,GAAOkZ,EAAS,GAAKze,GAAOyH,WAAW7jC,GAAI,GAAG,GAAQ,WACtHo8B,GAAOyH,WAAW7jC,KAAQ,oBAAuBA,IACjDmH,SAASC,eAAe,gBAAgBs4B,MAAMC,MAAQ,OACtDx4B,SAASC,eAAe,iBAAiBs4B,MAAMC,MAAQ,OACvDH,GAAQ,eAGRr4B,SAASC,eAAe,gBAAgBs4B,MAAMC,MAAQ,YACtDx4B,SAASC,eAAe,iBAAiBs4B,MAAMC,MAAQ,SAEvDvD,GAAO6E,eAAiB,oBAAuBjhC,IAAMo8B,GAAOyH,WAAW7jC,GAAM,oBAAuBA,KACpGmH,SAASC,eAAe,gBAAgBs4B,MAAMC,MAAQ,WAErDjC,GAAStB,GAAOwf,oBACbxf,GAAOyH,WAAW7jC,GAAK,IAAOo8B,GAAOyH,WAAW7jC,GAAM,oBAAuBA,KAC7EmH,SAASC,eAAeixC,GAAG3Y,MAAMM,gBAAkB,UAGvD5D,GAAOyH,WAAW7jC,GAAK,IAAOo8B,GAAOyH,WAAW7jC,IAAO,oBAAuBA,KAC9EmH,SAASC,eAAeixC,GAAG3Y,MAAMM,gBAAkB,SAEvD74B,SAASC,eAAe,iBAAiBE,YAAci4B,EACvDp4B,SAASC,eAAe,gBAAgBE,YAAck4B,EACtDr4B,SAASC,eAAe,iBAAiBE,YAAc,SAAW80B,GAAOyH,WAAW7jC,GAAK,IAAO,oBAAuBA,IAE9G+8C,GAAoB77C,IACzBk7B,GAAOyH,WAAW3iC,GAAK,oBAAuBA,KAC9Ck7B,GAAO6E,iBAAmB7E,GAAOyH,WAAW3iC,GAAK,oBAAuBA,IAAM,oBAAuBA,GACrGk7B,GAAOyH,WAAW3iC,GAAK,oBAAuBA,IAElD,MAAMu+B,EAAI,MAAQv+B,EACdk7B,GAAOyH,WAAW3iC,GAAK,IAAOk7B,GAAOyH,WAAW3iC,GAAK,oBAAuBA,GAC5EiG,SAASC,eAAeq4B,GAAGC,MAAMM,gBAAkB,SAE9C5D,GAAOyH,WAAW3iC,GAAK,IAAOk7B,GAAOyH,WAAW3iC,IAAM,oBAAuBA,GAClFiG,SAASC,eAAeq4B,GAAGC,MAAMM,gBAAkB,QAGnD74B,SAASC,eAAeq4B,GAAGC,MAAMM,gBAAkB,SCrV9Cgd,GAAgB,CAAC94C,EAAOkI,GAAM,KACvC,MAAM05B,EAAU15B,EAAMgwB,GAAO6gB,cAAgBl4C,KAAKsH,IAAI+vB,GAAO6gB,cAAe/4C,GAG5E,GAFAk4B,GAAO6gB,eAAiBnX,EACxB1J,GAAO8gB,sBAAwBpX,EAC3B1J,GAAO+gB,oBAAsB,GAAK,GAAK/gB,GAAO6I,aAAamY,iBAC3D,KAAOhhB,GAAO8gB,sBAAwB,EAAIn4C,KAAKC,IAAI,EAAIo3B,GAAO+gB,oBAAqB,IAAM/gB,GAAO+gB,oBAAsB,GAAK,GAAK/gB,GAAO6I,aAAamY,kBAChJhhB,GAAO+gB,qBAAuB,EAC9B/gB,GAAO0D,QAAU,EAGzB,MAAMka,EAAgBlU,EAAU,GAC1BmU,EAAel1C,KAAKqE,MAAM08B,EAAU,IACpCoU,EAAY,CACdv4B,YAAa,CAAEw4B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACrDmQ,WAAY,CAAEu4B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACpDiQ,SAAU,CAAEy4B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IAClDoQ,QAAS,CAAEs4B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACjDgQ,UAAW,CAAE04B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACnDyQ,SAAU,CAAEi4B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IAClD4oC,aAAc,CAAEF,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACtDsM,OAAQ,CAAEo8B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IAChD4Q,cAAe,CAAE83B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACvD6Q,YAAa,CAAE63B,OAAQ,EAAGC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,MAEzD,IAAK,MAAM25B,KAAOhP,GAAOihB,mBACrBjhB,GAAOihB,mBAAmBjS,IAAQ8O,EAAU9O,GAAK+O,OAASF,EAE9D,IAAK,IAAIj6C,EAAI,EAAGA,EAAIg6C,EAAeh6C,IAAK,CACpC,MAAM4/B,EAAM,IAAM76B,KAAKgK,SACvB,IAAK,MAAMq8B,KAAOhP,GAAOihB,mBACjBnD,EAAU9O,GAAKgP,IAAIxa,KACnBxD,GAAOihB,mBAAmBjS,IAAQ,GAG9CkS,KACA,MAAMC,EAA0Bx4C,KAAKqE,MAAgB,IAAV08B,EAAgB1J,GAAOyH,WAAW,MAC7EzH,GAAOsP,eAAiB6R,EACxBrC,GAAcqC,GAAyB,IAE9BD,GAA8B,KACvC,MAAMzqC,EAAO9U,OAAO8U,KAAKupB,GAAOihB,oBAChC,IAAK,MAAMjS,KAAOv4B,EAAM,CACpB,MAAMy1B,EAAMlM,GAAOihB,mBAAmBjS,GAChCrM,EAAMlsB,EAAKzD,QAAQg8B,GAAO,EAChC,IAAI7lC,EAAQ,EACRmgC,EAAO,EACP4C,GAAO,MACP/iC,EAAQ,qBAAwBw5B,GAChC2G,GAAQ3gC,KAAKC,IAAI,IAAO,EAAI,qBAAwB+5B,KAExD,2BAA8BA,GAAO,EAAI2G,EAAO,kBAAqB3G,GAAOh6B,KAAKC,IAAIsjC,EAAK/iC,GAAS,+BCtC3G,IAAIi4C,GACG,MAAMC,GAAep7C,IACxBq7C,GAASF,IACTA,GAAcG,IAAS,IAAMC,GAAav7C,IAAQ,KAEzCu7C,GAAgBv7C,IACzB+E,EAAe,mBAAmBy2C,IAAM,wBACxC,MAAMC,EAAwB1hB,GAAOyK,iBAAiB/jB,aAChDi7B,EAAyB3hB,GAAOyK,iBAAiB9jB,cACjDrB,EAAWs8B,GAAmB37C,GAC9B47C,EAAgB72C,EAAe,mBAC/B82C,EAAe/2C,SAASC,eAAe,mBACvC+2C,EAAiB/2C,EAAe,kBAChCg3C,EAAsBh3C,EAAe,kBACrCi3C,EAAqBl3C,SAASC,eAAe,mBAC7Ck3C,EAAYn3C,SAASC,eAAe,aACpCm3C,EAAoBp3C,SAASC,eAAe,kBAOlD,OANU,iBAAT/E,GACI+7C,EAAoBP,IAAM,yBAA0BQ,EAAmB/2C,YAAcq6B,GAAO58B,KAAKqE,MAAM,oBACvGg1C,EAAoBP,IAAM,GAAIQ,EAAmB/2C,YAAc,IAEhE22C,EAAcve,MAAM8C,QAAU0b,EAAaxe,MAAM8C,QAD3C,sBAATngC,GAA0C,aAATA,EAC6B,OACA,QACvDA,GACJ,IAAK,WAC0B,yBAAvB87C,EAAeN,MACfM,EAAeN,IAAM,wBAEzBU,EAAkBj3C,YAAc,IAAMq6B,GAAO,qBAC7C2c,EAAUh3C,YAAc,gIAAkIq6B,GAAOvF,GAAOoiB,mBAAqB,8BAAgC7c,GAAOvF,GAAOqiB,iBAAmB,YAC9PH,EAAU5e,MAAMC,MAAQ,YACxB,MACJ,IAAK,eAC0B,wBAAvBwe,EAAeN,MACfM,EAAeN,IAAM,uBAEzBU,EAAkBj3C,YAAc,IAAMq6B,GAAO,sBAC7C2c,EAAUh3C,YAAc,+GAAiHq6B,GAAOvF,GAAO8B,uBAAyB,+BAAiCyD,GAAOvF,GAAOsiB,kBAAoB,YACnPJ,EAAU5e,MAAMC,MAAQ,SACxB,MACJ,IAAK,gBAC0B,0BAAvBwe,EAAeN,MACfM,EAAeN,IAAM,yBAEzBU,EAAkBj3C,YAAc,IAAMq6B,GAAO,0BAC7C2c,EAAUh3C,YAAc,0FAA4Fq6B,GAAOvF,GAAO4a,iBAAmB,uCAAyCrV,GAAOvF,GAAOuiB,sBAAwB,YACpOL,EAAU5e,MAAMC,MAAQ,YACxB,MACJ,IAAK,mBAC0B,yBAAvBwe,EAAeN,MACfM,EAAeN,IAAM,wBAEzBU,EAAkBj3C,YAAc,IAAMq6B,GAAOvF,GAAOwO,sBACpD0T,EAAUh3C,YAAc,uHAAyHq6B,GAAOvF,GAAOuO,gBAAkB,IAAMhJ,GAAOvF,GAAOwO,sBAAwB,aAC7N0T,EAAU5e,MAAMC,MAAQ,OACxB,MACJ,IAAK,wBACDwe,EAAeN,IAAM,GACrBU,EAAkBj3C,YAAc,GACL,IAA1Bw2C,GACIQ,EAAU5e,MAAMC,MAAQ,aAAc2e,EAAUh3C,YAAc,+EAAiFw2C,EAAwB,eAAiBnc,GAAOvF,GAAO8B,uBAAyB,IAAMyD,GAAOid,GAAqBd,EAAuB1hB,GAAO4B,qBAAqB8f,KAA2B,uBAAyBnc,GAAOvF,GAAOsiB,kBAAoB,cAC1YJ,EAAU5e,MAAMC,MAAQ,UAAW2e,EAAUh3C,YAAc,8FAChE,MACJ,IAAK,yBAGD,GAFA62C,EAAeN,IAAM,GACrBU,EAAkBj3C,YAAc,GACD,IAA3By2C,EAA8B,CAC9B,MAAMc,EAAOd,GAA0B,EAAI,QAAU,kBAC/Ce,EAAWf,GAA0B,EAAI,SAAW,iBAC1DO,EAAU5e,MAAMC,MAAQ,SACxB2e,EAAUh3C,YAAc,8EAAgFy2C,EAAyB,eAAiBpc,GAAOvF,GAAOyiB,IAAS,IAAMld,GAAOid,GAAqBb,EAAwB3hB,GAAO4B,qBAAqB+f,GAAyBA,IAA2Be,EAAW,iBAAmBnd,GAAOvF,GAAOuiB,sBAAwB,iBAGvXL,EAAU5e,MAAMC,MAAQ,UACxB2e,EAAUh3C,YAAc,8FAE5B,MACJ,IAAK,qBACD62C,EAAeN,IAAM,GACrBU,EAAkBj3C,YAAc,GAChCg3C,EAAUh3C,YAAc,wFACxBg3C,EAAU5e,MAAMC,MAAQ,OACxB,MACJ,IAAK,YACDwe,EAAeN,IAAM,GACrBU,EAAkBj3C,YAAc,GAChCg3C,EAAUh3C,YAAc,8BAAgCq6B,GAAOod,KAAsB,GAAI,GAAG,GAAQ,mCAAqCpd,GAAOvF,GAAO4iB,iBAAkB,GAAG,GAAS,YACrLV,EAAU5e,MAAMC,MAAQ,OAGhCx4B,SAASC,eAAe,mBAAmBE,YAAc,IAAMq6B,GAAOjgB,IAE7Du9B,GAAmBj/C,IAC5B,GAAU,IAANA,EAAS,CACT,MAAM0sC,GAAKtlC,EAAe,kBAAkBlD,MAExCk4B,GAAOrjB,eADP2zB,GAAK,EACmBA,EAGA,OAG3B,GAAU,IAAN1sC,EAAS,CACd,MAAMkqC,GAAK9iC,EAAe,mBAAmBlD,MAEzCk4B,GAAO8iB,gBADPhV,GAAK,EACoBA,EAGA,OAG5B,GAAU,IAANlqC,EAAS,CACd,MAAMm/C,GAAK/3C,EAAe,uBAAuBlD,MAE7Ck4B,GAAOgjB,oBADPD,GAAK,EACwBA,EAGA,OAGhC,GAAU,IAANn/C,EAAS,CACd,IAAIm/C,EAAI5vC,WAAWnI,EAAe,mBAAmBlD,OACrDi7C,EAAIp6C,KAAKqE,MAAM+1C,GAEX/iB,GAAOijB,oBADPF,GAAK,EACwBA,EAGA,OAGhC,GAAU,IAANn/C,EAAS,CACd,MAAMm/C,EAAI5vC,WAAWnI,EAAe,0BAA0BlD,OAC9Dk4B,GAAOkjB,gBAAkBv6C,KAAKqH,IAAI,EAAG+yC,KAuEhC,GAAQ,CAAC98C,EAAOi2C,GAAO,EAAOiH,EAAO,aAgH9C,GA1KyB,EAACl9C,EAAOk9C,EAAO,aACxC,MAAMC,EAAiBxB,GAAmB37C,GACpCo9C,EAAc,CAAC,iBAAkB,kBAAkBxhB,SAASshB,GAClE,GAAc,aAAVl9C,EAAsB,CACtB,MAAMq9C,EAAe,CACjBC,QAASvjB,GAAOqiB,gBAChBmB,KAAMC,KAAKC,MACX3f,UAAWqf,EACXO,KAAM,WACNC,SAAU,gCAEd38B,EAAU/iB,KAAK,aAAc,QAASo/C,QAErC,GAAc,iBAAVr9C,GAAsC,0BAAVA,EAAmC,CACpE,MAAMq9C,EAAe,CACjBC,QAASvjB,GAAOsiB,iBAChBkB,KAAMC,KAAKC,MACX3f,UAAWqf,EACXO,KAAM,YACNE,OAAQ,iCAEZ58B,EAAU/iB,KAAK,aAAc,QAASo/C,QAErC,GAAc,kBAAVr9C,GAAuC,2BAAVA,GAClC,IAAKo9C,GAAe,6BAAgCrjB,GAAOiP,oBAAoBhiC,IAAI,KAAM,CACrF,MAAMq2C,EAAe,CACjBC,QAASvjB,GAAOuiB,qBAChBiB,KAAMC,KAAKC,MACX3f,UAAWqf,EACXO,KAAM,cACNG,UAAW,oCACXz+B,UAAW,iBAEf4B,EAAU/iB,KAAK,aAAc,QAASo/C,SAGzC,IAAc,cAAVr9C,GAAmC,uBAAVA,IAC1B+5B,GAAO4B,qBAAqB,IAAM,EAAG,CACrC,MAAMmiB,EAAqBpB,KACrBW,EAAe,CACjBC,QAASvjB,GAAO4iB,iBAChBY,KAAMC,KAAKC,MACXM,eAAgBhkB,GAAO4B,qBAAqB,IAC5CqiB,gBAAiBjkB,GAAOikB,gBAAgB1gD,MAAM,GAC9C2gD,gBAAiBH,EAAmB,GACpCxG,SAAUwG,EAAmB,GAC7BzU,cAAeyU,EAAmB,GAClClD,cAAekD,EAAmB,GAClCI,iBAAkBJ,EAAmB,GACrCJ,KAAM,UAEG,mBAATR,GAAmE,IAAtCnjB,GAAOyK,iBAAiB7jB,YACrD08B,EAAa7Y,iBAAmBzK,GAAOyK,iBAAiB7jB,WAE5DK,EAAU/iB,KAAK,aAAc,SAAUo/C,KAK/Cc,CAAqBn+C,EAAOk9C,GTxKF,CAACl9C,IAC3B+5B,GAAO+E,YAAc6c,GAAmB37C,ISwKxCo+C,CAAep+C,GACfq+C,GAAc,GACdtkB,GAAO8K,MAAQ,IAAI,EAAQ,OAC3B9K,GAAOoiB,kBAAoB,IAAI,EAAQ,OACvCpiB,GAAOoC,eAAiB,EACxBpC,GAAOukB,mBAAqB,IAAI,EAAQ,KACxCvkB,GAAOwkB,cAAgB,IAAI,EAAQ,OACnCxkB,GAAOqC,gBAAkB,EACzBrC,GAAOykB,oBAAsB,IAAI,EAAQ,KACzCzkB,GAAO0kB,eAAiB,IAAI,EAAQ,OACpC1kB,GAAOsC,eAAiB,EACxBtC,GAAO2kB,mBAAqB,IAAI,EAAQ,KACxC3kB,GAAO4kB,cAAgB,IAAI,EAAQ,OACnC5kB,GAAOuC,gBAAkB,EACzBvC,GAAO6kB,oBAAsB,IAAI,EAAQ,KACzC7kB,GAAO8kB,eAAiB,IAAI,EAAQ,OACpC9kB,GAAOwC,eAAiB,EACxBxC,GAAO+kB,mBAAqB,IAAI,EAAQ,KACxC/kB,GAAOglB,cAAgB,IAAI,EAAQ,SACnChlB,GAAOilB,uBAAyB,IAAI,EAAQ,KAC5CjlB,GAAOklB,wBAA0B,IAAI,EAAQ,KAC7CllB,GAAOmlB,uBAAyB,IAAI,EAAQ,KAC5CnlB,GAAOolB,wBAA0B,IAAI,EAAQ,KAC7CplB,GAAOqlB,uBAAyB,IAAI,EAAQ,KAC5CrlB,GAAOyL,eAAiB,IAAI,EAAQ,OACpCzL,GAAOwL,iBAAmB,EAC1BxL,GAAOmL,gBAAkB,IAAI,EAAQ,OACrCnL,GAAO+B,kBAAoB,EAC3B/B,GAAOya,eAAiB,EACxBza,GAAOuO,eAAiBvO,GAAOuO,eAAe9iC,IAAI,qBAClDu0B,GAAOgO,eAAiB,IAAI,EAAQ,KACpChO,GAAOC,uBAAwB,EAC/BD,GAAOG,sBAAuB,EAC9BH,GAAOI,wBAAyB,EAChCJ,GAAOyQ,QAAQhqB,UAAW,EACtBuZ,GAAOqiB,gBAAkBriB,GAAOslB,kBAChCtlB,GAAOslB,gBAAkBtlB,GAAOqiB,iBAEpC,oBAAyB,IAAI,EAAQ,KACrCriB,GAAOqiB,gBAAkB,EACzB,2BAAgC,EAClB,CAAC,eAAgB,wBAAyB,gBAAiB,yBAA0B,YAAa,sBACtGxgB,SAAS57B,KACfq+C,GAAc,GACdtkB,GAAO8B,sBAAwB,IAAI,EAAQ,OAC3C9B,GAAOulB,mBAAqB,EAC5BvlB,GAAOwlB,kBAAoB,IAAI,EAAQ,OACvCxlB,GAAOylB,oBAAsB,EAC7BzlB,GAAO0lB,mBAAqB,IAAI,EAAQ,OACxC1lB,GAAO2lB,mBAAqB,EAC5B3lB,GAAO4lB,kBAAoB,IAAI,EAAQ,QACvC5lB,GAAO6lB,oBAAsB,EAC7B7lB,GAAO8lB,mBAAqB,IAAI,EAAQ,QACxC9lB,GAAO+lB,mBAAqB,EAC5B/lB,GAAOgmB,kBAAoB,IAAI,EAAQ,SACvChmB,GAAO0a,qBAAuB,IAAI,EAAQ,KAC1C1a,GAAOimB,sBAAwB,IAAI,EAAQ,KAC3CjmB,GAAOkmB,qBAAuB,IAAI,EAAQ,KAC1ClmB,GAAOmmB,sBAAwB,IAAI,EAAQ,KAC3CnmB,GAAOomB,qBAAuB,IAAI,EAAQ,KAC1CpmB,GAAOgC,uBAAyB,EAChChC,GAAOwO,qBAAuB,IAAI,EAAQ,OAC1CxO,GAAO6a,gBAAkB,EACzB7a,GAAOuO,eAAiB,IAAI,EAAQ,KACpCvO,GAAOiR,gBAAkBjR,GAAOiR,gBAAgBxlC,IAAI,sBACpDu0B,GAAO4a,gBAAkB,IAAI,EAAQ,KACrC5a,GAAOO,yBAA0B,EACjCP,GAAOQ,mCAAoC,EAC3CR,GAAOK,wBAAyB,EAChCL,GAAOM,uBAAwB,EAC/B,qBAA0B,IAAI,EAAQ,KAClCN,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOulB,oBAAsB,GAE7BvlB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOylB,qBAAuB,GAE9BzlB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAO2lB,oBAAsB,GAE7B3lB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAO6lB,qBAAuB,GAE9B7lB,GAAOkC,aAAa,KAAO,KAC3BlC,GAAO+lB,oBAAsB,GAE7B/lB,GAAOkC,aAAa,GAAK,KACzBlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOsiB,iBAAmBtiB,GAAOqmB,kBAA6D,IAAzCrmB,GAAOyK,iBAAiB/jB,eAC7EsZ,GAAOqmB,iBAAmBrmB,GAAOsiB,kBAErCtiB,GAAOsiB,iBAAmB,EAC1B,+BAAoC,GAE1B,kBAAVr8C,GAAuC,2BAAVA,GAAgD,cAAVA,GAAmC,uBAAVA,EAAgC,CACxH+5B,GAAO8C,eAAiB,GAAK9C,GAAOkC,aAAa,KAAO,GACxDU,EAA0B,GAE9B5C,GAAO6E,gBAAkBl8B,KAAKqE,MAAM,iBACpC,MAAMs5C,EAAW,iBAAsB,EAAItmB,GAAOuiB,sBAsDlD,GArDI+D,EAAWtmB,GAAOumB,qBAClBvmB,GAAOumB,mBAAqBD,GAEhCtmB,GAAOyK,iBAAiB/jB,aAAe,EACvC49B,GAAc,GACdtkB,GAAOwmB,uBAAyB,IAAI,EAAQ,OAC5CxmB,GAAO2a,iBAAmB,EAC1B3a,GAAOymB,gBAAkB,IAAI,EAAQ,KACrCzmB,GAAO0mB,kBAAoB,EAC3B1mB,GAAO2mB,iBAAmB,IAAI,EAAQ,OACtC3mB,GAAO4mB,iBAAmB,EAC1B5mB,GAAO6mB,gBAAkB,IAAI,EAAQ,OACrC7mB,GAAO8mB,kBAAoB,EAC3B9mB,GAAO+mB,iBAAmB,IAAI,EAAQ,OACtC/mB,GAAOgnB,iBAAmB,EAC1BhnB,GAAOinB,gBAAkB,IAAI,EAAQ,QACrCjnB,GAAOknB,wBAA0B,IAAI,EAAQ,KAC7ClnB,GAAOmnB,yBAA2B,IAAI,EAAQ,KAC9CnnB,GAAOonB,wBAA0B,IAAI,EAAQ,KAC7CpnB,GAAOqnB,yBAA2B,IAAI,EAAQ,KAC9CrnB,GAAOsnB,wBAA0B,IAAI,EAAQ,KAC7CtnB,GAAOunB,oBAAsB,EAC7BvnB,GAAOiR,gBAAkB,IAAI,EAAQ,KACrCjR,GAAOiP,oBAAsBjP,GAAOiP,oBAAoBxjC,IAAI,0BACxDu0B,GAAOikB,gBAAgB,GAAK,IAAMjkB,GAAOwnB,iBAAiB,IAAM,IAChExnB,GAAOuO,eAAiBvO,GAAOuO,eAAe9iC,IAAI,2BAEtDu0B,GAAOynB,oBAAsB,IAAI,EAAQ,KACzCznB,GAAO4B,qBAAqB,GAAK,EACjC5B,GAAO4B,qBAAqB,GAAK,EACjC5B,GAAO4B,qBAAqB,GAAK,EACjC5B,GAAO4B,qBAAqB,GAAK,EACjC5B,GAAO4B,qBAAqB,GAAK,EACjC,yBAA8B,IAAI,EAAQ,KACtC5B,GAAO6I,aAAa6e,iBAAmB,GAA+C,IAA1C1nB,GAAOyK,iBAAiB9jB,gBACpEqZ,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GACpE3nB,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GACpE3nB,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GACpE3nB,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GACpE3nB,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,IAExE3nB,GAAOW,2BAA4B,EACnCX,GAAOY,qCAAsC,EAC7CZ,GAAOa,8CAA+C,EACtDb,GAAOc,uDAAwD,EAC/Dd,GAAOS,0BAA2B,EAClCT,GAAOU,yBAA0B,EAC7BV,GAAOuiB,qBAAuBviB,GAAO4nB,oBAAgE,IAA1C5nB,GAAOyK,iBAAiB9jB,gBACnFqZ,GAAO4nB,mBAAqB5nB,GAAOuiB,sBAEvCrE,KACAle,GAAOuiB,qBAAuB,EAC9B,gCAAqC,EACjCviB,GAAOwf,oBAAsBxf,GAAOyf,aAAe,GAAK,CACxD,MAAMjB,EAAqC,MAAxBxe,GAAOyf,aAAwB,IAAO,EACzDF,GAAYvf,GAAOyf,cAAc,EAAMjB,GAE3C9W,KACA2V,KAEJ,GAAc,cAAVp3C,GAAmC,uBAAVA,EAAgC,CACzD,MAAMw4C,EAAWkE,KACjB/f,EAA0B,EAAG6b,EAAS,IACtCze,GAAOyK,iBAAiB/jB,aAAe,EACvCsZ,GAAOyK,iBAAiB9jB,cAAgB,EACxCqZ,GAAO6nB,mBAAqB,EAC5B,8BAAmC,EACnCC,KACAC,KACAC,KACAhoB,GAAOiP,oBAAsB,IAAI,EAAQ,KACzCjP,GAAOynB,oBAAsB,IAAI,EAAQ,KACzCznB,GAAOumB,mBAAqB,EAC5BvmB,GAAOioB,sBAAwB,EAC/BjoB,GAAOkoB,kBAAoB,EAC3BloB,GAAOmoB,mBAAqB,EAC5BnoB,GAAOooB,kBAAoB,EAC3BpoB,GAAOqoB,sBAAwB,EAC/BroB,GAAOkK,YAAY,IAAU,EAC7B,IAAK,IAAIplC,EAAI,GAAIA,GAAK,GAAIA,IACtBk7B,GAAOwB,SAAS18B,GAAK,EAEzB,IAAK,IAAIA,EAAI,GAAIA,GAAK,IAAKA,IACvBk7B,GAAOwB,SAAS18B,GAAK,EA+BzB,GA7BAk7B,GAAO8a,oBAAsB,EAC7B9a,GAAO+a,qBAAuB,EAC9B/a,GAAOgb,oBAAsB,EAC7Bhb,GAAOib,qBAAuB,EAC9Bjb,GAAOkb,oBAAsB,EAC7Blb,GAAOsoB,mBAAqB,IAAI,EAAQ,KACxCtoB,GAAOuoB,oBAAsB,IAAI,EAAQ,OACzCvoB,GAAOwoB,mBAAqB,IAAI,EAAQ,OACxCxoB,GAAOyoB,oBAAsB,IAAI,EAAQ,OACzCzoB,GAAO0oB,mBAAqB,IAAI,EAAQ,QACxC1oB,GAAOwJ,QAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAC9BxJ,GAAOkI,WAAa,CAAC,EAAG,EAAG,EAAG,EAAG,GACjClI,GAAO+E,WAAa,EACpB/E,GAAOkO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/ClO,GAAOkI,WAAW,GAAK,EAAIlI,GAAOmR,aAAa,IAC/CnR,GAAOkI,WAAW,GAAK,EAAIlI,GAAOmR,aAAa,IAC/CnR,GAAOkI,WAAW,GAAK,EAAIlI,GAAOmR,aAAa,IAC/CnR,GAAOkI,WAAW,GAAK,EAAIlI,GAAOmR,aAAa,IAC/CnR,GAAOkI,WAAW,GAAK,EAAIlI,GAAOmR,aAAa,IACf,IAA5BnR,GAAOmR,aAAa,MACpBnR,GAAO8a,oBAAsB,EAC7B9a,GAAO+a,qBAAuB,EAC9B/a,GAAOgb,oBAAsB,EAC7Bhb,GAAOib,qBAAuB,EAC9Bjb,GAAOkb,oBAAsB,GAE7Blb,GAAOmR,aAAa,IAAM,IAC1BnR,GAAOqb,gBAAkB,GAEzBrb,GAAO4B,qBAAqB,IAAM,EAAG,CACrC,IAAI+mB,EAAW,EACX3oB,GAAO4iB,kBAAoB,KACvB5iB,GAAOkC,aAAa,KAAO,IAC3BymB,GAAY,IAEhBA,GAAY,EAA8D,IAAzDhgD,KAAKsH,IAAI,MAAW+vB,GAAO4iB,kBAAoB,GAAK,IAAY5iB,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,OAEjNlC,GAAOkC,aAAa,KAAO,GAAKuc,EAAS,GAAK,MAC9CkK,GAAahgD,KAAKuI,IAAIutC,EAAS,IAAM91C,KAAKuI,IAAI,IAAM,GAExDy3C,GAAY,gCACZA,EAAWhgD,KAAKqE,MAAM27C,GACtB3oB,GAAO8C,gBAAkB6lB,EACzB3oB,GAAOud,UAAYkB,EAAS,GAC5Bze,GAAOsP,eAAiBmP,EAAS,GACjCze,GAAO6gB,eAAiBpC,EAAS,GACjCze,GAAOmkB,kBAAoB1F,EAAS,GAExC,IAAK,IAAI35C,EAAI,EAAGA,GAAK,GAAIA,IACrBk7B,GAAO4B,qBAAqB98B,GAAK,EACjCk7B,GAAO2nB,4BAA4B7iD,GAAK,EAE5Ck7B,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GAAK3nB,GAAOmR,aAAa,IAC7FnR,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GAAK3nB,GAAOmR,aAAa,IAC7FnR,GAAO4B,qBAAqB,GAAK5B,GAAO2nB,4BAA4B,GAAK3nB,GAAOmR,aAAa,IAC7FnR,GAAOmgB,oBAAsB,EAC7BngB,GAAOyf,aAAe,EACtB,IAAK,IAAI36C,EAAI,EAAGA,GAAK,IAAOA,IAAK,CAC7B,MAAMu+B,EAAI,MAAQv+B,EACdk7B,GAAOyH,WAAW3iC,GAAK,IAAOk7B,GAAOyH,WAAW3iC,GAAK,oBAAuBA,GAC5EiG,SAASC,eAAeq4B,GAAGC,MAAMM,gBAAkB,SAE9C5D,GAAOyH,WAAW3iC,GAAK,IAAOk7B,GAAOyH,WAAW3iC,IAAM,oBAAuBA,GAClFiG,SAASC,eAAeq4B,GAAGC,MAAMM,gBAAkB,QAGnD74B,SAASC,eAAeq4B,GAAGC,MAAMM,gBAAkB,QAG3DyZ,KACA3V,KACAkhB,KACAC,KACAC,KACAlmB,EAA0B,GAC1B5C,GAAO4iB,iBAAmB,EAC1Bnd,IACA0B,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzB+W,KACAiB,KACA+B,KAC+B,IAA3BlhB,GAAOmR,aAAa,KACpBnR,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,GAEK,IAA3BxB,GAAOmR,aAAa,KACpBnR,GAAOwB,SAAS,IAAM,GAEK,IAA3BxB,GAAOmR,aAAa,KACpBnR,GAAOwB,SAAS,KAAO,GAE3B,IAAK,IAAI18B,EAAI,GAAIA,GAAK,GAAIA,IACtBiG,SAASC,eAAe,MAAQlG,GAAGw+B,MAAMM,gBAAkB,QAE/D,IAAK,IAAI9+B,EAAI,GAAIA,GAAK,IAAKA,IACI,IAAvBk7B,GAAOwB,SAAS18B,KAChBiG,SAASC,eAAe,MAAQlG,GAAGw+B,MAAMM,gBAAkB,SAGnE5D,GAAOikB,gBAAkBjgD,MAAMm/C,KAAKnjB,GAAO+oB,sBAE/C/oB,GAAOyQ,QAAQhqB,UAAW,EACb,gBAATxgB,GAAoC,yBAATA,IAC3B+5B,GAAOyQ,QAAQW,WAAY,GAElB,iBAATnrC,GAAqC,0BAATA,IAC5B+5B,GAAOyQ,QAAQY,aAAc,GAE5B6K,GACDvY,MAGF2gB,GAAiB1gD,IACnB,GAAIA,EAAI,IAAK,CACT,IAAK,IAAIA,EAAI,GAAIA,EAAI,GAAIA,IACX,KAANA,IACAo8B,GAAOwB,SAAS59B,GAAK,GAGC,IAA1Bo8B,GAAOyH,WAAW,MAClBzH,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOyH,WAAW,IAAM,KACxBzH,GAAOwB,SAAS,IAAM,GAEM,IAA5BxB,GAAOkC,aAAa,MACpBlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOyH,WAAW,IAAM,KACxBzH,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOyH,WAAW,IAAM,KACxBzH,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOyH,WAAW,IAAM,KACxBzH,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOyH,WAAW,IAAM,KACxBzH,GAAOwB,SAAS,IAAM,GAE1BxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EAE3B,IAAK,IAAI18B,EAAI,EAAGA,GAAK,GAAIA,IACrBk7B,GAAOwB,SAAS18B,GAAK,EAEzB,IAAK,IAAIA,EAAI,IAAKu+B,EAAI,IAAKv+B,GAAK,IAAKA,IAAKu+B,IACtCrD,GAAOwB,SAAS18B,GAAK,EACrBk7B,GAAOwB,SAAS6B,GAAK,EA8BzB,GA5BIz/B,EAAI,MACAo8B,GAAOkC,aAAa,GAAK,KACzBlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAEtBxB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,GAE1BxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,GAEvB59B,EAAI,IAAK,CACT,IAAK,IAAIy/B,EAAI,GAAIA,EAAI,GAAIA,IACrBrD,GAAOwB,SAAS6B,GAAK,EAEzBrD,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EACvBxB,GAAOwB,SAAS,KAAO,EAE3B,GAAI59B,EAAI,IAAK,CACTo8B,GAAOkO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/ClO,GAAOpoB,oBAAsB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAC5D,IAAIrK,EAAI,EACRA,GAAkE,IAA7D5E,KAAKqE,MAAM,aAAkB,qBAA0B,IAAY,IACpEgzB,GAAOwB,SAAS,IAAM,IAAiD,IAA1CxB,GAAOyK,iBAAiB9jB,gBACrDpZ,GAAK,IAETyyB,GAAOkO,gBAAkB,CAAC3gC,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,EAAGA,GAEnD,IAAK,IAAI8H,EAAI,EAAGA,GAAK,IAAKA,IACtBu4B,GAAcv4B,GAAG,GAEjB2qB,GAAOkC,aAAa,IAAM,KAC1BlC,GAAOwB,SAAS,IAAM,IAGjBumB,GAAY,KACrB/nB,GAAOqb,eAAiB,EACpBrb,GAAOmR,aAAa,IAAM,IAC1BnR,GAAOqb,eAAiB,GAE5Brb,GAAOsb,gBAAkB,EACzBtb,GAAOub,eAAiB,EACxBvb,GAAOwb,gBAAkB,EACzBxb,GAAOyb,eAAiB,EACxBzb,GAAO0b,eAAiB,EACxB1b,GAAO2b,iBAAmB,EAC1B3b,GAAO4b,gBAAkB,EACzB5b,GAAOgpB,mBAAqB,IAAI,EAAQ,KACxChpB,GAAOipB,oBAAsB,IAAI,EAAQ,KACzCjpB,GAAOkpB,mBAAqB,IAAI,EAAQ,KACxClpB,GAAOmpB,oBAAsB,IAAI,EAAQ,KACzCnpB,GAAOopB,mBAAqB,IAAI,EAAQ,KACxCppB,GAAOqpB,mBAAqB,IAAI,EAAQ,KACxCrpB,GAAOspB,qBAAuB,IAAI,EAAQ,KAC1CtpB,GAAOupB,oBAAsB,IAAI,EAAQ,KACzCvpB,GAAOwpB,cAAgB,IAAI,EAAQ,SACnCxpB,GAAOypB,eAAiB,IAAI,EAAQ,KACpCzpB,GAAO0pB,cAAgB,IAAI,EAAQ,OACnC1pB,GAAO2pB,eAAiB,IAAI,EAAQ,OACpC3pB,GAAO4pB,cAAgB,IAAI,EAAQ,QACnC5pB,GAAO6pB,cAAgB,IAAI,EAAQ,QACnC7pB,GAAO8pB,gBAAkB,IAAI,EAAQ,SACrC9pB,GAAO+pB,eAAiB,IAAI,EAAQ,SACpC,MAAMC,EAAQhqB,GAAOkK,YAAY,IACjClK,GAAOkK,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG8f,GACvDhqB,GAAOiqB,UAAY,IAAI,EAAQ,KACW,KAAtCjqB,GAAOyK,iBAAiB7jB,YACxBoZ,GAAOiqB,UAAY,IAAI,EAAQ,MAEnC5M,KACA3V,MAEEogB,GAAkB,KACpB9nB,GAAO6E,eAAiB,EACxB,MAAMqlB,EAAU,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/F,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC/F,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEnG,IAAK,MAAMC,KAAQD,EACflqB,GAAOyH,WAAW0iB,GAAQ,GAG5BnC,GAAiB,KACnBhoB,GAAO0G,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C1G,GAAOwG,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3CxG,GAAO0F,eAAiB,EACxB1F,GAAO2F,gBAAkB,EACzB3F,GAAO4F,kBAAoB,EAC3B5F,GAAO6F,cAAgB,EACvB7F,GAAO8F,cAAgB,EACvB9F,GAAO+F,mBAAqB,EAC5B/F,GAAOgG,kBAAoB,GC5mBlBokB,GAA6B,IAc/B,GAAK,EAbWxzC,EAAY,CAC/B,IAAOopB,GAAOkC,aAAa,IAC3B,IAAOlC,GAAOkC,aAAa,IAC3B,IAAOlC,GAAOkC,aAAa,IAC3B,IAAOlC,GAAOkC,aAAa,KAC3B,IAAOlC,GAAOkC,aAAa,KAC3B,IAAOlC,GAAOkC,aAAa,KAC3B,KAAQlC,GAAOkC,aAAa,KAC5B,KAAQlC,GAAOkC,aAAa,KAC5B,IAAOlC,GAAOwB,SAAS,IACvB,IAAO74B,KAAKsH,IAAI,EAAG,aAAkB,KACrC,KAAQ+vB,GAAOmR,aAAa,MAI7B,SAASlJ,GAAsBS,EAAWO,GAAM,EAAOW,EAAY5J,GAAOkI,WAAWQ,GAAY2hB,GAAgB,GACpH,MAAMC,EAAoBF,KAC1B,IAAIG,EAA+B,KAE/BA,EAA+B3zC,EAD/BqyB,EAC2C,CACvC,IAAUjJ,GAAO2nB,4BAA4B,GAC7C,EAAI3nB,GAAOwB,SAAS,KAImB,CACvC,EACA74B,KAAKsH,IAAI,EAAG+vB,GAAO2nB,4BAA4B,IAC/C,IAAW3nB,GAAO2nB,4BAA4B,GAC9C,GAAM3nB,GAAOyH,WAAW,IACxB,GAAMzH,GAAOyH,WAAW,IACxB,EAAIzH,GAAOwB,SAAS,IACpBxB,GAAOwB,SAAS,IAAMoI,EAAY,KAG1C,MA2BMP,EAAO,CACTkhB,EA5ByBtzC,EAAgB,CACzC,EAAK+oB,GAAOyH,WAAW,IAAM,GAC7B,EAAKzH,GAAOyH,WAAW,IAAM,GAC7B+iB,GAA4B,IAAK,KAAY7hD,KAAKC,IAAIo3B,GAAOkK,YAAY,GAAS,YAAgB,MAClG,yBACC,EAAIlK,GAAO4iB,iBAAmB,IAAO5iB,GAAOmR,aAAa,IAC1D,EAAIxoC,KAAKC,IAAI,oBAAuBo3B,GAAOikB,gBAAgB,IAAK,EAAI,GAAQjkB,GAAOwnB,iBAAiB,KACpG,EAAI,GAASxnB,GAAOoc,iBAAiB,GACrC,+BAsBAkO,EApBsB,CACtBrzC,EAAgB,CACZ,EAAK+oB,GAAOyH,WAAW,IAAM,GAAK,EAAKzH,GAAOyH,WAAW,KAAO,IAAM,EAAKD,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,KAE1I3qB,EAAgB,CACZ,EAAK+oB,GAAOyH,WAAW,IAAM,GAAK,EAAKzH,GAAOyH,WAAW,KAAO,IAAM,EAAKD,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,KAE1I3qB,EAAgB,CACZ,EAAK+oB,GAAOyH,WAAW,IAAM,GAAK,EAAKzH,GAAOyH,WAAW,KAAO,IAAM,EAAKD,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,IAE1I3qB,EAAgB,CACZ,EAAK+oB,GAAOyH,WAAW,IAAM,GAAK,EAAKzH,GAAOyH,WAAW,KAAO,IAAM,EAAKD,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,KAE1I3qB,EAAgB,CACZ,EAAK+oB,GAAOyH,WAAW,IAAM,GAAK,EAAKzH,GAAOyH,WAAW,KAAO,IAAM,EAAKD,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,KAOxH8G,IAEtB,OAAO2hB,EAAgBhhB,EAAOpyB,EAAgBoyB,GAE3C,MAWDohB,GAAqB9oD,OAAOqlB,OAAO,MAAOhjB,MAAMm/C,KAAK,CAAEr/C,OAAQ,MAAS,CAAC4mD,EAAG9mD,KAAM,OAAG,CAACA,IAX7DgmC,EAWgFhmC,EAVtEqT,EAAgB,CACjDtO,KAAKC,IAAIghC,EAAY,EAAG,IACtB,IAAMA,EAAa,KAAO,IAC5BjhC,KAAKqH,IAAI,GAAI45B,EAAY,KAAO,GAChCjhC,KAAKqH,IAAI,GAAI45B,EAAY,KAAO,IAChCjhC,KAAKqH,IAAI,GAAI45B,EAAY,KAAO,IAChCjhC,KAAKqH,IAAI,EAAGrH,KAAKC,IAAI,MAAOghC,EAAY,KAAO,QAPzB,IAACA,MAYlBL,GAA0B,CAACb,EAAWkB,EAAY5J,GAAOkI,WAAWQ,KACtE+hB,GAAmB7gB,GAAa,cAAiBlB,GAE/CK,GAAqBnlC,IAC9B,IAAIoM,EAAM,IACV,MAAM26C,EAAc,IAAM,EAAI3qB,GAAOmR,aAAa,IAAM,EAAInR,GAAOmR,aAAa,KAC1E,EAAInR,GAAOoc,iBAAiB,GAAK,GAAK5U,GAAQ,YAAaxH,GAAO4B,qBAAqB,KACvF,IAAM4F,GAAQ,YAAaxH,GAAO4B,qBAAqB,KACvDj5B,KAAKqE,MAAM,IAAOgzB,GAAOyH,WAAW,KAAO,IAAOzH,GAAOmR,aAAa,KAU5E,OADAnhC,GARyB,CACrB,KACA,IAAMgwB,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,MAAQkjB,EACxD,IAAM3qB,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,MAAQkjB,EACxD,IAAM3qB,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,MAAQkjB,EACxD,IAAM3qB,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,MAAQkjB,EACxD,GAAK3qB,GAAOyH,WAAW,KAAOkjB,GAEV/mD,GACjBoM,GAEJ,SAAS4xC,GAAmB37C,EAAO2kD,GAAW,EAAMC,GAAY,GACnE,GAAa,oBAAT5kD,GAAwC,aAATA,GAAiC,sBAATA,EACvD,OAAO,EAEX,IAAI0qC,EAAI,EACJvqC,EAAI,EACJ8L,EAAI,EACJ3K,EAAI,EACK,iBAATtB,GAAqC,0BAATA,IAC5BG,GAAK,EACD45B,GAAOkC,aAAa,IAAM,KAC1B97B,GAAM,GAAKuC,KAAKsH,IAAI+vB,GAAOuiB,qBAAuB,KAAM,IAExDviB,GAAOwB,SAAS,IAAM,KACtBp7B,GAAK,IAAUwQ,EAAYopB,GAAO4B,uBAEtCx7B,GAAK,GAAM45B,GAAOyH,WAAW,IACC,IAA1BzH,GAAOyH,WAAW,MAClBrhC,GAAK,GAETA,GAAK,KAAU,aAAkB,sBAA2B,EAAI45B,GAAOyH,WAAW,IAAM,KACxFrhC,GAAM,EAAIuC,KAAKC,IAAI,MAAYo3B,GAAOynB,oBAAoBh8C,IAAI,GAAI,IAAK,EAAI,GAAK,EAChFrF,GAAKuC,KAAKsH,IAAItH,KAAKC,IAAIo3B,GAAOuiB,qBAAuB,GAAI,GAAI,GACzDviB,GAAOuiB,sBAAwB,IAC/Bn8C,GAAKuC,KAAKqH,IAAI,EAAGgwB,GAAOuiB,qBAAuB,MAG1C,gBAATt8C,GAAoC,yBAATA,GAA6C,iBAATA,GACtD,0BAATA,IACAiM,GAAK,EACD8tB,GAAOunB,mBAAqB,IAC5Br1C,GAAK,GAEL8tB,GAAOkC,aAAa,IAAM,KAC1BhwB,GAAM,GAAKvJ,KAAKsH,IAAI+vB,GAAOsiB,iBAAmB,KAAM,IAEpDtiB,GAAO4B,qBAAqB,GAAK,IACjC1vB,GAAK,GAETA,GAAK,GAAM8tB,GAAOyH,WAAW,IAC7Bv1B,GAAK,KAAU,aAAkB,sBAA2B,EAAI8tB,GAAOyH,WAAW,IAAM,KACxFv1B,GAAM,EAAIvJ,KAAKC,IAAI,MAAYo3B,GAAO4a,gBAAgBnvC,IAAI,GAAI,IAAK,IAAS,EAC5EyG,GAAM,EAAIs1B,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,GACrE1vB,GAAKvJ,KAAKsH,IAAItH,KAAKC,IAAIo3B,GAAOsiB,iBAAmB,GAAI,GAAI,GACrDtiB,GAAO6a,gBAAkB,IACzB3oC,GAAKvJ,KAAKqH,IAAI,EAAGgwB,GAAOsiB,iBAAmB,MAGnD/6C,GAAK,GACDy4B,GAAO6a,eAAiB,GAAK7a,GAAOunB,mBAAqB,KACzDhgD,GAAK,GAELy4B,GAAOunB,mBAAqB,IAC5BhgD,GAAK,GAELy4B,GAAOkC,aAAa,IAAM,KAC1B36B,GAAM,GAAKoB,KAAKsH,IAAI+vB,GAAOqiB,gBAAkB,KAAM,IAEnDriB,GAAO4B,qBAAqB,GAAK,IACjCr6B,GAAK,GAETA,GAAK,GAAMy4B,GAAOyH,WAAW,IAC7BlgC,GAAK,KAAU,aAAkB,sBAA2B,EAAIy4B,GAAOyH,WAAW,IAAM,KACxFlgC,GAAM,EAAIoB,KAAKC,IAAI,MAAYo3B,GAAOgO,eAAeviC,IAAI,GAAI,IAAK,IAAS,EAC3ElE,GAAM,EAAIigC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAM,GACrEr6B,GAAKoB,KAAKsH,IAAItH,KAAKC,IAAIo3B,GAAOqiB,gBAAkB,GAAI,GAAI,GACpDriB,GAAOya,eAAiB,IACxBlzC,GAAKoB,KAAKqH,IAAI,EAAGgwB,GAAOqiB,gBAAkB,KAE9C1R,EAAIvqC,EAAI8L,EAAI3K,EACZ,MAAM4gC,EAAM,CACR,EAAI,GAAKnI,GAAOkC,aAAa,IAAM,IACnC,EAAI,GAAKlC,GAAOkC,aAAa,IAAM,IACnC,EAAI,GAAKlC,GAAOkC,aAAa,IAAM,IACnC,EAAI,GAAKlC,GAAOwB,SAAS,IAAM,IAC/B,EAA0B,EAAtBxB,GAAOwB,SAAS,IAAU74B,KAAKsH,IAAI,EAAGtH,KAAKC,IAAIo3B,GAAOmb,aAAe,IAAU,KACnF,EAAI,IAASnb,GAAO6I,aAAaC,aACjC,EAAI,IAAS9I,GAAO6I,aAAaiiB,WACjC,EAAI,IAAU9qB,GAAO6I,aAAakiB,SAClC,EAAI,KAAYn0C,EAAYopB,GAAO4B,sBAAwB5B,GAAOyH,WAAW,IAC7E,EAAI9+B,KAAKC,IAAKo3B,GAAOkK,YAAY,GAAS,YAAiB,KAC3D,yBACA,EAAI,IAAOlK,GAAOoc,iBAAiB,GACnC,EAAI,KAASpc,GAAO0G,eAAe,GAAS1G,GAAOyH,WAAW,KAAO,KAASzH,GAAO0G,eAAe,GAAS1G,GAAOyH,WAAW,KAC/H,EAAI,IAAOD,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAC5D,EAAI,KAAa5B,GAAOyH,WAAW,KACnC,EAAI9+B,KAAKsH,IAAI,EAAG+vB,GAAO8C,eAAiB,KAAO9C,GAAOkC,aAAa,KACnE,EAAI,GAAKlC,GAAOkC,aAAa,KAAO,EAAIlC,GAAOkC,aAAa,KAC5D,EAAI,IAAOlC,GAAOmR,aAAa,IAC/B,EAAI,KAAanR,GAAOmR,aAAa,IACrC,EAAInR,GAAOwnB,iBAAiB,GAC5B,EAAI,IAAMxnB,GAAOwnB,iBAAiB,IAClC,EAAI,EAAIxnB,GAAOwnB,iBAAiB,IAChC,+BAEJ,GAAIoD,EACAja,GAAK15B,EAAgBkxB,QAEpB,IAAKyiB,EACN,OAAOziB,EAEX,GAAI0iB,EACA,OAAO5zC,EAAgBkxB,GAE3BwI,EAAoB,IAAhBhoC,KAAKqE,MAAM2jC,GAAW,IAC1B,IAAIqa,EAAY,EAahB,MAZc,aAAV/kD,IACA+kD,EAAYra,GAAK,EAAI3Q,GAAOqiB,kBAElB,iBAAVp8C,GAAqC,yBAATA,IAC5B+kD,EAAYra,GAAK,EAAI3Q,GAAOsiB,mBAElB,kBAAVr8C,GAAsC,0BAATA,IAC7B+kD,EAAYra,GAAK,EAAI3Q,GAAOuiB,uBAE5ByI,EAAYhrB,GAAOkoB,oBACnBloB,GAAOkoB,kBAAoB8C,GAExBra,EAEJ,MAAMmY,GAAqB,KAC9B,gBAAqB,EACjB9oB,GAAOwB,SAAS,IAAM,IACtB,iBAAsB74B,KAAKsH,IAAI,GAAI,IAAI,EAAQ,MAAY,MAAY,6BAAgC,IAAK,IAAK,KAAMoD,aAEvH2sB,GAAOwB,SAAS,IAAM,IACtB,iBAAsB74B,KAAKsH,IAAI,GAAK,EAAI,EAAI+vB,GAAO4B,qBAAqB,GAAK,EAAI5B,GAAO4B,qBAAqB,GAAK,EAAI5B,GAAO4B,qBAAqB,GAAK,EAAI5B,GAAO4B,qBAAqB,GAAK,EAAI5B,GAAO4B,qBAAqB,MAE5N5B,GAAOwB,SAAS,IAAM,IACtB,iBAAuB,EAAI,EAAI74B,KAAKsH,IAAI,EAAGtH,KAAKC,IAAIo3B,GAAOob,aAAe,IAAQ,MAEtF,iBAAuB,EAAIpb,GAAOyH,WAAW,IAAM,EACnD,iBAAuB,EAAIzH,GAAOyH,WAAW,IAAM,GACnD,iBAAuB,EAAIzH,GAAOyH,WAAW,IAAM,GACnD,iBAAuB,EAAIzH,GAAO6I,aAAa6W,cAAgB,GAC/D,iBAAuB,EAAI1f,GAAO6I,aAAakiB,SAAW,IAC1D,iBAAuB,EAAI,aAAkB,IAAM,sBAA2B,EAAI/qB,GAAOyH,WAAW,IAAM,KAAO,EAAI,EAAI,8BAAmCM,KAA8B,MAC1L,iBAAuB,EAAI,IAAO/H,GAAOkC,aAAa,IAAM,IAAOlC,GAAOkC,aAAa,IAAM,IAAOlC,GAAOkC,aAAa,IAAM,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KACrW,iBAAuB,EAAI,EAAIv5B,KAAKC,KAAKo3B,GAAOkK,YAAY,GAAU,cAAmB,GAAI,EAAI,GACjG,iBAAuB,EAAIlK,GAAOkC,aAAa,KAAOv5B,KAAKsH,IAAI,EAAG+vB,GAAO8C,eAAiB,KAC1F,iBAAuB,EAAI,GAAM9C,GAAOkC,aAAa,KAAO,EAAIlC,GAAOkC,aAAa,KACpF,iBAAsB,yBACtB,iBAAuB,EAAI,IAAOlC,GAAOoc,iBAAiB,GAC1D,iBAAuB,EAAI,GAAMpc,GAAOmR,aAAa,IACrD,iBAAuB,EAAI,GAAMnR,GAAOmR,aAAa,GACrD,iBAAuB,EAAI,GAAM3J,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAClF,iBAAuB,EAAImG,KAA8B,IAAM,8BAC/D,iBAAuB,EAAI,IAAOp/B,KAAKuI,IAAI8uB,GAAO4F,kBAAoB,GAAKj9B,KAAKuI,IAAI,GAAK8uB,GAAOyH,WAAW,KAC3G,iBAAuB,EAAI,KAAazH,GAAOmR,aAAa,IACxDnR,GAAOkC,aAAa,IAAM,IAC1B,iBAAuB,EAAI,EAAI,IAAO,EAAY,SAElDlC,GAAOkC,aAAa,OACpB,iBAAsB,KAEtBlC,GAAOkC,aAAa,OACpB,iBAAsB,MAEtBlC,GAAOkC,aAAa,IAAM,IAC1B,iBAAsB,GAEtBlC,GAAOuiB,sBAAwB,IAC/B,iBAAsB,EAAIviB,GAAOyH,WAAW,KAE5CzH,GAAOuiB,sBAAwB,IAC/B,iBAAsB,EAAIviB,GAAOyH,WAAW,KAEhD,iBAAsB9+B,KAAKsH,IAAI,EAAGtH,KAAKC,IAAIo3B,GAAOuiB,qBAAuB,GAAI,IAC7E,iBAAuB,EAAI,IAASviB,GAAO6I,aAAaoiB,YACpDjrB,GAAOunB,oBAAsB,IAC7B,iBAAsB5+C,KAAKqH,IAAI,EAAGgwB,GAAOuiB,qBAAuB,KAEpE,iBAAsB55C,KAAKC,IAAI,MAAYo3B,GAAO4a,gBAAgBnvC,IAAI,GAAI,IAAM,IAAK,GACrF,gBAAqB9C,KAAKC,IAAI,gBAAoBD,KAAKsH,IAAI,EAAG,kBAAqB+vB,GAAOikB,gBAAgB,KAAO,EAAI,IAAUjkB,GAAOwnB,iBAAiB,GAAK7+C,KAAKsH,IAAI,IAAKtH,KAAKuI,IAAI8uB,GAAO6E,eAAiB,IAAMl8B,KAAKuI,IAAI,QAC1N,iBAAuB,EAAI,IAAU8uB,GAAOmR,aAAa,IACzD,iBAAuB,EAAI,IAAUnR,GAAOmR,aAAa,IACzD,iBAAuB,EAAInR,GAAOwnB,iBAAiB,GACnD,iBAAuB,EAAI,IAAMxnB,GAAOwnB,iBAAiB,GACzD,iBAAuB,EAAI,IAAMxnB,GAAOwnB,iBAAiB,IACzD,iBAAuB,EAAI,EAAIxnB,GAAOwnB,iBAAiB,IACvD,iBAAsB,+BACoB,KAAtCxnB,GAAOyK,iBAAiB7jB,YACxB,iBAAsB,GAEgB,KAAtCoZ,GAAOyK,iBAAiB7jB,YACxB,gBAAqB,GAEzBoZ,GAAOumB,mBAAqB,iBAAsB,GAAMvmB,GAAOuiB,sBAC/DviB,GAAOioB,sBAAwBt/C,KAAKqH,IAAIgwB,GAAOioB,sBAAuBjoB,GAAOumB,qBAEpE2E,GAA8B,IAChC,KAAQ,GAAKlrB,GAAOyH,WAAW,IAAM,EAAIzH,GAAOyH,WAAW,KAAOzH,GAAOioB,uBAAyB,EAAI,EAAIjoB,GAAOmR,aAAa,GAAK,GAEjI0X,GAA2B,KACpC,IAAIsC,EAAgB,EAChBC,EAAgB,EACa,IAA7BprB,GAAOkC,aAAa,OACpBipB,GAAiB,KAEY,IAA7BnrB,GAAOkC,aAAa,OACpBipB,GAAiB,KAErBA,GAAiB,KAAQnrB,GAAOwG,eAAe,GAAS,GACxD2kB,GAAiB,IAAMnrB,GAAOyH,WAAW,KAAO,IAChD0jB,GAAiB,IAAMnrB,GAAOyH,WAAW,KAAO,IAChD0jB,GAAiB,IAAMnrB,GAAOyH,WAAW,KAAO,IAChD0jB,GAAiB,IAAMnrB,GAAOyH,WAAW,KAAO,IAChD0jB,GAAkB,yBAA8B,EAChDA,GAAiB,KAASnrB,GAAOmR,aAAa,IAC9Cia,GAAiB,IAAOprB,GAAOyH,WAAW,KAC1C2jB,GAAiB,KAASprB,GAAOmR,aAAa,IAC9C,IAAK,IAAIvtC,EAAI,EAAGA,GAAK,EAAGA,IACU,IAA1Bo8B,GAAOqrB,YAAYznD,GACnB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAEtH,IAA1B1G,GAAOsrB,YAAY1nD,GACnB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAEpH,IAA5B1G,GAAOurB,cAAc3nD,GACrB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAErH,IAA3B1G,GAAOwrB,aAAa5nD,GACpB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAErH,IAA3B1G,GAAOyrB,aAAa7nD,GACpB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAEtH,IAA1B1G,GAAO0rB,YAAY9nD,GACnB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAEpH,IAA5B1G,GAAO2rB,cAAc/nD,GACrB,kBAAqBA,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU2kB,GAAiBnrB,GAAO0G,eAAe,GAAS,mCAGzI,kBAAqB9iC,IAAM,2BAA8Bo8B,GAAOwG,eAAe,IAAU4kB,GAAiBprB,GAAO0G,eAAe,IAAW,EAAK,mCAGxJ,MAAMklB,EAAmB,CAAC,kBAAsB,kBAAsB,kBAAsB,kBAAsB,kBAAsB,kBAAsB,mBACxJC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCD,EAAiBtkD,SAASwkD,IACtBA,EAAexkD,SAAQ,CAACuiC,EAAQkiB,KAC5BF,EAAcE,IAAeliB,SAGpC,CAAE,gBAAoB,gBAAoB,gBAAoB,gBAAoB,iBAAsBgiB,EACzG,iBAAsB,EACtB,kBAAuB,EACc,IAAjC7rB,GAAOwG,eAAe,KACtB,iBAAsB,KAEW,IAAjCxG,GAAOwG,eAAe,KACtB,iBAAsB,KAEW,IAAjCxG,GAAOwG,eAAe,KACtB,iBAAsB,KAEW,IAAjCxG,GAAOwG,eAAe,KACtB,iBAAsB,KAEW,IAAjCxG,GAAOwG,eAAe,KACtB,iBAAsB,KAEW,IAAjCxG,GAAOwG,eAAe,KACtB,iBAAsB,KAEW,IAAjCxG,GAAOwG,eAAe,KACtB,kBAAuB,IAGlBkB,GAAsB,KAC/BmhB,KAC8C,IAA1C7oB,GAAOyK,iBAAiB9jB,gBACxB,aAAkBhe,KAAKqH,IAAI,EAAGgwB,GAAOkI,WAAW,GAAmE,EAA9Dv/B,KAAKsH,IAAI,IAAM+vB,GAAOkK,YAAY,GAAS,aAAwB,EAAkB,cAAI,EAAIlK,GAAOoc,iBAAiB,IAC1K,aAAkBzzC,KAAKqH,IAAI,EAAGgwB,GAAOkI,WAAW,GAAmE,EAA9Dv/B,KAAKsH,IAAI,IAAM+vB,GAAOkK,YAAY,GAAS,aAAwB,EAAkB,cAAI,EAAIlK,GAAOoc,iBAAiB,IAC1K,aAAkBzzC,KAAKqH,IAAI,EAAGgwB,GAAOkI,WAAW,GAAmE,EAA9Dv/B,KAAKsH,IAAI,IAAM+vB,GAAOkK,YAAY,GAAS,aAAwB,EAAkB,cAAI,EAAIlK,GAAOoc,iBAAiB,IAC1K,aAAkBzzC,KAAKqH,IAAI,EAAGgwB,GAAOkI,WAAW,GAAmE,EAA9Dv/B,KAAKsH,IAAI,IAAM+vB,GAAOkK,YAAY,GAAS,aAAwB,EAAkB,cAAI,EAAIlK,GAAOoc,iBAAiB,IAC1K,aAAkBzzC,KAAKqH,IAAI,EAAGgwB,GAAOkI,WAAW,GAAmE,EAA9Dv/B,KAAKsH,IAAI,IAAM+vB,GAAOkK,YAAY,GAAS,aAAwB,EAAkB,cAAI,EAAIlK,GAAOoc,iBAAiB,KAE9K,UAAexlC,EAAY,CAAC,aAAiB,aAAiB,aAAiB,aAAiB,eAChGw5B,MAESA,GAAuB,KAChC,qBAA0B,EAC1B,mBAAwB,EACxB,sBAA4B,EAAI,IAAMpQ,GAAOyH,WAAW,KAAO,IAC/D,sBAA4B,GAAKzH,GAAOwG,eAAe,GAAS,GAAK,GACrE,sBAA4B,EAAI,GAAO79B,KAAKuI,IAAI8uB,GAAO8F,cAAgB,GAAKn9B,KAAKuI,IAAI,IAAM8uB,GAAOyH,WAAW,KAC7G,sBAA4B,EAAI,EAAIzH,GAAOyH,WAAW,KAAO,IACzDzH,GAAOyH,WAAW,KAAO,IACzB,sBAA2B9+B,KAAKC,IAAI,KAAM,IAE9C,oBAA0B,EAAI,EAAIo3B,GAAOyH,WAAW,KAAO,IACvDzH,GAAOyH,WAAW,KAAO,GAA2C,IAAtCzH,GAAOyK,iBAAiB7jB,YACtD,oBAAyBje,KAAKC,IAAI,EAAG,IAEzC,oBAA0B,EAAI,IAAOD,KAAKuI,IAAI8uB,GAAO+F,mBAAqB,GAAKp9B,KAAKuI,IAAI,IAAM8uB,GAAOyH,WAAW,KAChH,oBAA0B,EAAI,EAAIzH,GAAOyH,WAAW,KAAO,IAC3D,oBAA0B,GAAKzH,GAAOwG,eAAe,GAAS,GAAK,IACnE,IAAK,IAAI5iC,EAAI,EAAGA,GAAK,EAAGA,IACpB,gBAAmBA,GAAK,qBAA0Bo8B,GAAOkI,WAAWtkC,EAAI,GAAKo8B,GAAOgQ,mBAAmBpsC,GACvG,cAAiBA,GAAK,mBAAwBo8B,GAAOkI,WAAWtkC,EAAI,GAAKo8B,GAAO8P,iBAAiBlsC,GAErG,IAAK,IAAIA,EAAI,EAAGA,GAAK,EAAGA,IAChB,gBAAmBA,IAAM,KACzB,6BAAgCA,GAAM+E,KAAKC,IAAI,gBAAmBhF,GAAI,EAAI,GAAM,GAAK,mCAEhF,gBAAmBA,GAAK,OAC7B,6BAAgCA,GAAK+E,KAAKC,IAAI,GAAI,KAAUD,KAAKC,IAAI,gBAAmBhF,GAAI,EAAI,IAAO,GAAK,oCAE5G,cAAiBA,IAAM,KACvB,2BAA8BA,GAAM+E,KAAKC,IAAI,cAAiBhF,GAAI,EAAI,GAAM,GAAK,iCAE5E,cAAiBA,GAAK,OAC3B,2BAA8BA,GAAK+E,KAAKC,IAAI,GAAI,GAAK,IAAOD,KAAKC,IAAI,cAAiBhF,GAAI,EAAI,IAAO,GAAK,mCAIzGy5C,GAAgB,KACzB,IAAI2O,EAAc,EAClBA,GAAe,GAAKhsB,GAAOwG,eAAe,GAAS,GACnDwlB,GAAexkB,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IACpEoqB,GAAe,EAAIhsB,GAAOoc,iBAAiB,GAC3C4P,GAAe,GAAKxkB,GAAQ,YAAaxH,GAAO4B,qBAAqB,KACrEoqB,GAAerjD,KAAKqE,MAAM,KAAUgzB,GAAOyH,WAAW,MACtDukB,GAAe,mCACf,IAAIC,EAAM,EACNC,EAAW,EAC2B,KAAtClsB,GAAOyK,iBAAiB7jB,YACxBqlC,EAAM,KAEgC,KAAtCjsB,GAAOyK,iBAAiB7jB,YACxBslC,EAAWvjD,KAAKqE,OAAO,EAAIgzB,GAAO4B,qBAAqB,GAAK,GAAK5B,GAAO4B,qBAAqB,IAAMj5B,KAAKqH,IAAI,EAAI,EAAIgwB,GAAO4B,qBAAqB,IAAM,MAE1J,YAAiBj5B,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,YAAiBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAS+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC3J,aAAkBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,GAAU+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC7J,aAAkBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,IAAU+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,GAC7J,aAAkBvjD,KAAKsH,IAAI+vB,GAAOkK,YAAY,IAAU+hB,EAAK,EAAIjsB,GAAOyH,WAAW,IAAMukB,EAAchsB,GAAOyH,WAAW,KAAO,EAAIzH,GAAOyH,WAAW,KAAOykB,IAEpJtD,GAA2B,KACpC,SAAc,EACd,eAAoB,EACpB,MAAMuD,EAAgBv1C,EAAYopB,GAAOkK,aACrClK,GAAOiqB,UAAUl6C,IAAI,UACrB,UAAe,MAAYiwB,GAAOiqB,UAAW,IAC7C,UAAe,GAAQkC,EACvB,UAAe,GAASnsB,GAAOqb,eAC/B,UAAe,GAAQrb,GAAOsb,gBAC9B,UAAe,EAAI,EAAItb,GAAOub,eAC9B,UAAe,GAAQvb,GAAOwb,gBAC9B,UAAexb,GAAOyb,eACtB,UAAe,EAAIzb,GAAO0b,eAC1B,UAAe,EAAI1b,GAAO2b,iBAC1B,UAAe,EAAI3b,GAAO4b,gBAC1B,UAAe,IAAM5b,GAAOyH,WAAW,KACN,IAA7BzH,GAAOkC,aAAa,OACpB,UAAe,MAEc,IAA7BlC,GAAOkC,aAAa,OACpB,UAAe,KAAO,MAEO,IAA7BlC,GAAOkC,aAAa,OACpB,UAAe,KAAO,MAE1B,UAAgB,EAAIlC,GAAOyH,WAAW,KAAO,IAC7C,UAAgB,EAAI,IAAMzH,GAAOyH,WAAW,KAAO,IAClB,IAA7BzH,GAAOkC,aAAa,OACpB,UAAe,IAEc,IAA7BlC,GAAOkC,aAAa,OACpB,UAAe,IAEc,IAA7BlC,GAAOkC,aAAa,OACpB,UAAe,IAEc,IAA7BlC,GAAOkC,aAAa,OACpB,UAAe,KAEnB,UAAe,GAAKlC,GAAOyH,WAAW,KACtC,UAAe,GAAKzH,GAAOyH,WAAW,KACtC,UAAe,GAAKzH,GAAOyH,WAAW,KACtC,UAAe,IAAMD,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAC1E,UAAe,GAAK5B,GAAOwB,SAAS,IACpC,SAAc,GAAS74B,KAAKqE,MAAM,GAAK,UACvC,gBAAqB,GAAMrE,KAAKsH,IAAI,KAAM,UAC1C,gBAAqB,GAAMtH,KAAKsH,IAAI,IAAM,UAC1C,gBAAqB,GAAMtH,KAAKsH,IAAI,IAAM,UAC1C,gBAAqB,GAAMtH,KAAKsH,IAAI,IAAO,UAC3C,gBAAqB,GAAM,SAC3B,gBAAsB,yBAA8B,EACpD,gBAAqB,EAAI+vB,GAAOmR,aAAa,IAC7C,gBAAsB,EAAI,IAAOnR,GAAOwB,SAAS,OA+B5C4qB,GAA+B,KACxCxD,KA5BA,iBAAsBjgD,KAAKsH,IAAI,EAAGtH,KAAKC,IAAIo3B,GAAOooB,kBAAoB,GAAI,IACzC,IAA7BpoB,GAAOkC,aAAa,OACpB,kBAAuBv5B,KAAKsH,IAAI,IAAMtH,KAAKqH,IAAI,EAAGgwB,GAAOooB,kBAAoB,MAE7EpoB,GAAOkC,aAAa,KAAO,IAC3B,kBAAuBv5B,KAAKqH,IAAI,EAAGgwB,GAAOooB,kBAAoB,KAElE,oBAAyB,EACzB,qBAA2B,EAAI,GAAK,EAAIz/C,KAAKC,IAAI,IAAKo3B,GAAOkK,YAAY,IAAU,cAAmB,MACtG,qBAA2B,EAAIlK,GAAOyH,WAAW,KAAO,GACxD,qBAA2B,EAAIzH,GAAOyH,WAAW,KAAO,GACvB,IAA7BzH,GAAOkC,aAAa,OACpB,qBAA0B,MAEG,IAA7BlC,GAAOkC,aAAa,OACpB,qBAA0B,MAE9B,qBAA2B,EAAI,KAAO,gCACtC,qBAA2B,EAAI,IAASsF,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAC7F,qBAA2B,EAAI,IAAS5B,GAAOyH,WAAW,KAC1D,qBAA2B,EAAI,IAAUzH,GAAOyH,WAAW,KAC3D,qBAA2B,EAAI,IAAUzH,GAAOyH,WAAW,KAC3D,qBAA2B,EAAI,IAAUzH,GAAOyH,WAAW,KAC3D,qBAA2B,EAAI,GAASzH,GAAOwB,SAAS,IACxD,qBAA2B,EAAI,IAAOxB,GAAOwB,SAAS,IACtD,qBAA0B,yBAK1B,MAAM6qB,EAAc,iBAAsB,oBA2B1C,MA1BgB,CACZlE,mBAAoB,eAAoBkE,EAAc,GACtDtoB,UAAsC,IAA3B/D,GAAOkoB,kBAA2B,eAAoBmE,EAAc,IAC/EhnC,UAA0C,IAA/B2a,GAAOioB,sBAA+B,eAAoBoE,EAAc,IACnF3mB,eAAiB,SAAc,IACzB/8B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,EAAI,EAAKD,KAAKqH,IAAI,EAAG,eAAoB,KAAO,KACpG,EACN21B,gBAAkB,SAAc,IAC1Bh9B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,EAAI,EAAKD,KAAKqH,IAAI,EAAG,eAAoB,KAAO,QACpG,EACN41B,kBAAoB,SAAc,IAC5Bj9B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,EAAI,GAAMD,KAAKqH,IAAI,EAAG,eAAoB,KAAQ,QACtG,EACN61B,cAAgB,SAAc,KACxBl9B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,IAAUD,KAAKqH,IAAI,EAAG,eAAoB,MAAQ,OACtG,EACN81B,cAAgB,SAAc,IACxBn9B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,EAAI,GAAMD,KAAKqH,IAAI,EAAG,eAAoB,KAAQ,QACtG,EACN+1B,mBAAqB,SAAc,IAC7Bp9B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,EAAI,GAAMD,KAAKqH,IAAI,EAAG,eAAoB,KAAQ,QACtG,EACNg2B,kBAAoB,SAAc,IAC5Br9B,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAMq/C,EAAc,IAAM1jD,KAAKC,IAAI,EAAI,GAAMD,KAAKqH,IAAI,EAAG,eAAoB,MAAQ,KACtG,IA4EDs8C,GAAmB,CAACC,EAAUC,EAAQC,IACvC,GAAKF,EAAW,IAAM,EAAI5jD,KAAKC,IAAI,GAAI,EAAW,IAEjD4hD,GAA8B,CAAC+B,EAAUG,IAC1C,GAAKH,EAAW,IAAM,EAAI5jD,KAAK8I,KAAKi7C,IAEnCxO,GAAyB,KAClC,MAAMyO,EAAY,CAAC3sB,GAAOwd,cAAcj4B,YAAaya,GAAOwd,cAAch4B,WAAYwa,GAAOwd,cAAcl4B,SAAU0a,GAAOwd,cAAc/3B,QAASua,GAAOwd,cAAcn4B,UAAW2a,GAAOwd,cAAc13B,SAAUka,GAAOwd,cAAcS,aAAcje,GAAOwd,cAAc77B,OAAQqe,GAAOwd,cAAcv3B,cAAe+Z,GAAOwd,cAAct3B,aACrU0mC,EAAa,CAAC5sB,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,GAAInR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,IAAKnR,GAAOmR,aAAa,IAAM,KACpU,IAAK,IAAIvtC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAIuF,EAAQ,EACRmgC,EAAO,EACPqjB,EAAU/oD,EAAI,IAAM,MACpBuF,EAAQ,kBAAqBvF,GAC7B0lC,GAAQ3gC,KAAKC,IAAI,KAAO,EAAI,kBAAqBhF,KAAO,EAAIgpD,EAAWhpD,EAAI,MAErE,IAANA,IACAuF,EAAQ,KACRmgC,EAAO,GAEX,sBAAyB1lC,GAAK,EAAI0lC,EAAO,eAAkB1lC,GAAK+E,KAAKC,IAAI+jD,EAAU/oD,EAAI,GAAIuF,GAAS,EAAIyjD,EAAWhpD,EAAI,KAAO,2BAA8BA,GAEhK8jC,KACAkhB,KACAE,MAEG,SAAS+D,GAAwBjC,GAAW,GAC/C,MAAMziB,EAAM,CACRx/B,KAAKC,IAAID,KAAKsH,IAAI,EAAG+vB,GAAO4iB,iBAAmB,IAAK,IAAM,GAAK,EAAI,EAAI5iB,GAAOkC,aAAa,KAAO,EAAI,EAAIlC,GAAOkC,aAAa,KAAO,GAAQlC,GAAOkC,aAAa,MAAQv5B,KAAKqH,IAAI,EAAGgwB,GAAO4iB,iBAAmB,GAAK,IACpN,EAAI,KAAU5iB,GAAO6I,aAAaikB,WAClC,EAAI9sB,GAAOyH,WAAW,KAAO,IAC7B,EAAIzH,GAAOyH,WAAW,KAAO,IAC7B,EAAI,GAAKzH,GAAOmR,aAAa,GAAK,IAClC,EAAI,EAAInR,GAAOmR,aAAa,IAAM,IAClC,EAAI,EAAInR,GAAOmR,aAAa,IAAM,IAClC,EAAI,EAAInR,GAAOmR,aAAa,IAAM,IAClC,EAAI,EAAInR,GAAOmR,aAAa,IAAM,IAClC,EAAInR,GAAOyH,WAAW,KAAO,IAC7B,EAAI,GAAMzH,GAAOyH,WAAW,KAAO,IACnC,EAAI,GAAMzH,GAAOyH,WAAW,KAAO,IACnC,EAAI,GAAMzH,GAAOyH,WAAW,KAAO,IACnC,EAAI,GAAMzH,GAAOyH,WAAW,KAAO,IACnC,EAAIzH,GAAOkC,aAAa,KAAOv5B,KAAKsH,IAAI,EAAG+vB,GAAO8C,eAAiB,MACnE,EAAI,KAAa9C,GAAOyH,WAAW,KAAOzH,GAAOkK,YAAY,IAC7D,EAAInC,KAA8B,IAAM,8BACxC,EAAI,KAAc/H,GAAOyH,WAAW,KACpC,EAAI,IAAO,MAAYzH,GAAOgD,aAAav3B,IAAI,GAAI,GAAK9C,KAAKsH,IAAI,EAAG+vB,GAAOoc,iBAAiB,KAC5F,EAAI,IAAOpc,GAAOmR,aAAa,IAC/B,EAAInR,GAAOkC,aAAa,KAAO,MAAYlC,GAAOgD,aAAav3B,IAAI,GAAI,IAAM,IAC7E,EAAIu0B,GAAOkC,aAAa,KAAO,MAAYlC,GAAOgD,aAAav3B,IAAI,GAAI,IAAM,IAC7E,EAAI,KAAWu0B,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,MAAQ,IAAUlC,GAAOkC,aAAa,KAC/H,EAAIlC,GAAOkC,aAAa,KAAOv5B,KAAKqH,IAAI,GAAK,IAASrH,KAAKuI,IAAI67C,KAA8B,KAAQpkD,KAAKuI,IAAI,KAC9G,EAAI,IAAU8uB,GAAOkC,aAAa,KAAO,GAAWlC,GAAOkC,aAAa,KACxE,6BACA,2BAAgC,2BAAgC,2BAAgC,4BAEpG,OAAI0oB,EACO3zC,EAAgBkxB,GAGhBA,EAGR,MAAM4kB,GAA4B,KACrC,IAAIC,EAAW,EAgCf,OA/BAA,GAAa,EAAI,EAAI,IAAMrkD,KAAKuI,IAAI8uB,GAAOmb,aAAe,GAAKxyC,KAAKuI,IAAI,IAAM8uB,GAAOwB,SAAS,IAC9FwrB,GAAa,EAAIhtB,GAAOyH,WAAW,KAAO,GAC1CulB,GAAa,EAAI,KAAQhtB,GAAOyH,WAAW,KAC3CulB,GAAa,EAAI,KAAQhtB,GAAOyH,WAAW,KAC3CulB,GAAa,EAAI,KAAQhtB,GAAOyH,WAAW,KAC3CulB,GAAa,EAAI,KAAQhtB,GAAOyH,WAAW,KAC3CulB,GAAa,EAAI,KAAQhtB,GAAOyH,WAAW,KAC3CulB,GAAa,EAAI,EAAI,gCACrBA,GAAa,EAAIjlB,KAA8B,IAAM,8BACrDilB,GAAY,0BACZA,GAAY,EAAIhtB,GAAOmR,aAAa,IAAM,EAC1C6b,GAAYV,GAAiB,EAAGtsB,GAAOkK,YAAY,IAAU,aAAiB,IAC9E8iB,GAAa,EAAI,IAAQhtB,GAAOwG,eAAe,GAAS,GACxDwmB,GAAY,iCACZA,GAAY,qBAAwBhtB,GAAOikB,gBAAgB,IACjB,KAAtCjkB,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAOwnB,iBAAiB,IAAM,IAC1EwF,GAAY,KAEZA,EAAW,MACXA,EAAW,GAAKrkD,KAAKgJ,KAAKq7C,IAE1BA,EAAW,IACXA,EAAWrkD,KAAKC,IAAIokD,EAAU,EAAIhtB,GAAOwnB,iBAAiB,GAAK,KAEnEwF,GAAY,6BACRhtB,GAAOikB,gBAAgB,IAAM,GAAKjkB,GAAOkC,aAAa,KAAO,GAC7DhC,EAAiB,KAEjB8sB,EAAW,MAAQhtB,GAAOkC,aAAa,KAAO,GAC9ChC,EAAiB,KAEd,GAEE6H,GAA4B,KACrC,IAAIklB,EAAa,IACjB,IAAK,IAAIrpD,EAAI,EAAGA,GAAK,EAAGA,IACpBqpD,GAAc,GAAKtkD,KAAKC,IAAIo3B,GAAOikB,gBAAgBrgD,GAAI,GAE3D,OAAO,GAEEssC,GAA2B,CAACgd,EAAWvd,EAAUwd,EAAmBC,EAAgB,OAC7F,MAAMC,EAAe1d,EAAWud,GAAa,EAAIA,GAAa,EACxDI,EAAa3kD,KAAKsH,IAAIi9C,EAAYE,EAAezkD,KAAKqE,OAAM,GAASrE,KAAKgJ,KAAK,EAAI,EAAI,GAAKw7C,EAAoBE,GAAgB1d,KAEtI,MAAO,CAAC2d,EADU3d,EAAW2d,GAAc,EAAIA,GAAc,EAAKD,IAGzD3O,GAA8B,CAACwO,EAAWvd,EAAUwd,EAAmBI,EAAcroB,KAC9F,MAAM39B,EAAIgmD,EAAe,EACzBJ,EAAoBA,GAAqB,EACzC,MAAMK,EAAe7d,GAAYpoC,EAAIoB,KAAKC,IAAIskD,EAAW,GAAKA,GAAa,EAAI3lD,IAEzEw7C,GADNoK,GAAqBK,GACS7d,EAC9B,IAAI2d,EAAa/lD,EAAI,EACfoB,KAAKqH,IAAI,EAAGrH,KAAKqE,OAAOzF,EAAI,IAAM,EAAIA,GAAKoB,KAAKC,IAAID,KAAKC,IAAI,EAAIrB,EAAG,GAAK,EAAIA,EAAIw7C,EAAG,KAAU,EAAIx7C,KAClGoB,KAAKqE,MAAM+1C,GACjBuK,EAAa3kD,KAAKsH,IAAIq9C,EAAYpoB,EAAYgoB,GAC9C,IAAIO,EAAY9d,GAAYpoC,EAAIoB,KAAKC,IAAI0kD,EAAY,GAAKA,GAAc,EAAI/lD,IAAMimD,EAIlF,OAHIF,GAAcJ,IACdO,EAAY9d,GAAY,EAAI,EAAIpoC,EAAI2lD,IAEjC,CAACI,EAAYG,IAEX9K,GAAsB,KAC/B,MAAM+K,EAA4B,CAAC,EAAG,EAAG,KAAM,IAAK,KAAM,EAAG,KAAM,IAAK,EAAG,IAAK,EAAG,EAAG,IAChFC,EAAqB/2C,EAAYopB,GAAOikB,iBAC9C,IAAI2J,EAAW,EACXC,EAAoB,EACpBC,EAAuB,EACvBC,EAAiB,EACjBC,EAAiB,EACrB,MAAMC,EAAQlB,KACd,IAAK,IAAInpD,EAAI,EAAGA,GAAK,GAAIA,IACrBiqD,EAAqBjqD,GAAK,EAAK,EAAI,EACnCgqD,GAAYC,EAAoB7tB,GAAO2nB,4BAA4B/jD,GAEvE,IAAIsqD,EAAY,EAChB,MAAMC,EAAwB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACjEC,EAAwB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACnEC,EAAwB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,IAAK,IAAIzqD,EAAI,EAAGA,GAAK,GAAIA,IACrBsqD,GAAaC,EAAsBvqD,GAAKo8B,GAAO2nB,4BAA4B/jD,GACvEA,GAAK,GAAKo8B,GAAO2nB,4BAA4B/jD,IAAM,KACnDsqD,GAAaE,EAAsBxqD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAK,IAC7Eo8B,GAAO2nB,4BAA4B/jD,IAAM,MACzCsqD,GAAaG,EAAsBzqD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAK,OAGrFA,GAAK,IAAMA,EAAI,GAAKo8B,GAAO2nB,4BAA4B/jD,IAAM,KAC7DsqD,GAAaE,EAAsBxqD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAK,IAC7Eo8B,GAAO2nB,4BAA4B/jD,IAAM,KACzCsqD,GAAaG,EAAsBzqD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAK,MAI7FsqD,GAAavlD,KAAKC,IAAI,KAAO,KAAQo3B,GAAOmR,aAAa,IAAM,OAAUnR,GAAOwnB,iBAAiB,GAAKxnB,GAAOwnB,iBAAiB,IAAMxnB,GAAOwnB,iBAAiB,KAAMxnB,GAAO2nB,4BAA4B,KACrM,IAAK,IAAI/jD,EAAI,EAAGA,GAAK,GAAIA,IACrBkqD,GAAwBJ,EAA0B1tB,GAAOikB,gBAAgBrgD,IAE7EoqD,EAAiBE,EAAYJ,EAAuB,2BAAgC,6BACpFC,EAAiBplD,KAAKC,IAAIolD,EAAiB,IAAM,EAAI,KACrD,IAAIM,EAAWV,EAAWG,EAC1BO,GAAYzB,KACZyB,GAAa,EAAI,MAAWX,EAAqB3tB,GAAOwnB,iBAAiB,GACrEwG,EAAiB,MAAQhuB,GAAOwnB,iBAAiB,IAAM,IACvD8G,GAAY,GAEZN,EAAiB,OAAShuB,GAAOwnB,iBAAiB,IAAM,IACxD8G,GAAY,MAEhB,IAAIC,EAAgB,EACpBA,GAAiB5lD,KAAKC,IAAI,EAAID,KAAKqH,IAAI,EAAIg+C,EAAiB,KAAQ,IAAK,KACzEO,GAAkB,EAAI,IAAO,MAAYvuB,GAAOgD,aAAav3B,IAAI,GAAI,GAAK9C,KAAKsH,IAAI,EAAG+vB,GAAOoc,iBAAiB,KAC1G4R,GAAkB,MAClBO,GAAiB,GAErBA,GAAkB,EAAI,IAAOvuB,GAAOmR,aAAa,IACjDod,GAAkB,EAAI,KAAUvuB,GAAOmR,aAAa,IAAMv6B,EAAYopB,GAAOikB,iBAC7EsK,GAAkB,EAAIvuB,GAAOkC,aAAa,KAAO,MAAYlC,GAAOgD,aAAav3B,IAAI,GAAI,IAAM,IAC/F8iD,GAAiB5lD,KAAKC,IAAID,KAAKsH,IAAI,EAAG+vB,GAAO4iB,iBAAmB,IAAK,IAAM,GAAK,EAAI,EAAI5iB,GAAOkC,aAAa,KAAO,EAAI,EAAIlC,GAAOkC,aAAa,KAAO,GAAQlC,GAAOkC,aAAa,MAAQv5B,KAAKqH,IAAI,EAAGgwB,GAAO4iB,iBAAmB,GAAK,IACrO2L,GAAkB,EAAI,MAAUZ,EAAqB3tB,GAAOwnB,iBAAiB,GACzEwG,EAAiB,OAAUhuB,GAAOwnB,iBAAiB,IAAM,IACzD+G,GAAiB,GAEjBP,EAAiB,MAAShuB,GAAOwnB,iBAAiB,IAAM,IACxD+G,GAAiB,MAErBA,GAAiB,6BACjBA,GAAkB,2BAAgC,2BAAgC,2BAAgC,2BAClHA,GAAkB,EAAIvuB,GAAOkC,aAAa,KAAOv5B,KAAKsH,IAAI,EAAG+vB,GAAO8C,eAAiB,KACrFyrB,GAAkB,EAAI,KAAWvuB,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,MAAQ,IAAUlC,GAAOkC,aAAa,KACjJqsB,GAAkB,EAAIvuB,GAAOkC,aAAa,KAAOv5B,KAAKqH,IAAI,GAAK,IAASrH,KAAKuI,IAAI+8C,EAAQ,KAAQtlD,KAAKuI,IAAI,KAC1Gq9C,GAAkB,EAAI,IAAUvuB,GAAOkC,aAAa,KAAO,GAAWlC,GAAOkC,aAAa,KAC1FqsB,GAAkB,EAAI,KAAUvuB,GAAO6I,aAAaikB,WACpD,IAAI0B,EAAiBR,GAAkB,IAAO,EAAI,EAClDQ,GAAiB7lD,KAAKC,IAAI,EAAID,KAAKqH,IAAI,EAAIg+C,EAAiB,KAAQ,IAAK,IACzEQ,GAAiB7lD,KAAKC,IAAID,KAAKsH,IAAI,EAAG+vB,GAAO4iB,iBAAmB,IAAK,IAAM,GAAK,EAAI,EAAI5iB,GAAOkC,aAAa,KAAO,EAAI,EAAIlC,GAAOkC,aAAa,KAAO,GAAQlC,GAAOkC,aAAa,MAAQv5B,KAAKqH,IAAI,EAAGgwB,GAAO4iB,iBAAmB,GAAK,IACrO4L,GAAkB,EAAI,MAAUb,EAAqB3tB,GAAOwnB,iBAAiB,GACzEwG,EAAiB,MAAShuB,GAAOwnB,iBAAiB,IAAM,IACxDgH,GAAiB,GAEjBR,EAAiB,MAAUhuB,GAAOwnB,iBAAiB,IAAM,IACzDgH,GAAiB,MAErBA,GAAiB,6BACjBA,GAAkB,2BAAgC,2BAAgC,2BAAgC,2BAClHA,GAAkB,EAAIxuB,GAAOkC,aAAa,KAAOv5B,KAAKsH,IAAI,EAAG+vB,GAAO8C,eAAiB,KACrF0rB,GAAkB,EAAI,KAAWxuB,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,MAAQ,IAAUlC,GAAOkC,aAAa,KACjJssB,GAAkB,EAAIxuB,GAAOkC,aAAa,KAAOv5B,KAAKqH,IAAI,GAAK,IAASrH,KAAKuI,IAAI+8C,EAAQ,KAAQtlD,KAAKuI,IAAI,KAC1Gs9C,GAAkB,EAAI,IAAUxuB,GAAOkC,aAAa,KAAO,GAAWlC,GAAOkC,aAAa,KAC1F,IAAIusB,EAAgBT,GAAkB,OAAY,EAAI,EAmBtD,OAlBAS,GAAgB9lD,KAAKC,IAAI,EAAID,KAAKqH,IAAI,EAAGg+C,EAAiB,QAAY,OAAU,KAChFS,GAAgB9lD,KAAKC,IAAID,KAAKsH,IAAI,EAAG+vB,GAAO4iB,iBAAmB,IAAK,IAAM,GAAK,EAAI,EAAI5iB,GAAOkC,aAAa,KAAO,EAAI,EAAIlC,GAAOkC,aAAa,KAAO,GAAQlC,GAAOkC,aAAa,MAAQv5B,KAAKqH,IAAI,EAAGgwB,GAAO4iB,iBAAmB,GAAK,IAChOoL,EAAiB,QACjBS,GAAiB,EAAIzuB,GAAOwnB,iBAAiB,GAAK,IAElDwG,EAAiB,MAAShuB,GAAOwnB,iBAAiB,IAAM,IACxDiH,GAAgB,GAEhBT,EAAiB,OAAUhuB,GAAOwnB,iBAAiB,IAAM,IACzDiH,GAAgB,MAEpBA,GAAgB,6BAChBA,GAAiB,2BAAgC,2BAAgC,2BAAgC,2BACjHA,GAAiB,EAAIzuB,GAAOkC,aAAa,KAAOv5B,KAAKsH,IAAI,EAAG+vB,GAAO8C,eAAiB,QACpF2rB,GAAiB,EAAI,KAAWzuB,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,KAAOlC,GAAOkC,aAAa,MAAQ,IAAUlC,GAAOkC,aAAa,KAChJusB,GAAiB,EAA+B,EAA3BzuB,GAAOkC,aAAa,KAAW,IAAO,MAAYlC,GAAOgD,aAAav3B,IAAI,GAAI,IACnGgjD,GAAiB,EAAIzuB,GAAOkC,aAAa,KAAOv5B,KAAKqH,IAAI,GAAK,IAASrH,KAAKuI,IAAI+8C,EAAQ,KAAQtlD,KAAKuI,IAAI,KACzGu9C,GAAiB,EAAI,IAAUzuB,GAAOkC,aAAa,KAAO,GAAWlC,GAAOkC,aAAa,KAClF,CAAC0rB,EAAUjlD,KAAKqE,MAAMkhD,GAAYJ,EAAsBnlD,KAAKqE,MAAMghD,GAAiBrlD,KAAKqE,MAAMshD,GAAW3lD,KAAKqE,MAAMuhD,GAAgB5lD,KAAKqE,MAAMwhD,GAAgB7lD,KAAKqE,MAAMyhD,KC57BhLC,GAAU,CACZC,SAAU,gFACVC,SAAU,8DACVC,SAAU,oEACVC,SAAU,yEACVC,SAAU,kEACVC,SAAU,gEACVC,SAAU,oEACVC,SAAU,yEAERC,GAAa,CACfC,YAAa,sBACbC,YAAa,sBACbC,YAAa,sBACbC,YAAa,uBACbC,YAAa,mBACbC,YAAa,yBACbC,YAAa,iBACbC,YAAa,yBACbC,YAAa,wBACbC,aAAc,sBACdC,aAAc,0BACdC,aAAc,0BAEZC,GAAa,CACfC,YAAa,yEACbC,YAAa,4HACbC,YAAa,wDACbC,YAAa,6CACbC,YAAa,qEACbC,YAAa,+DACbC,YAAa,gGACbC,YAAa,6DACbC,YAAa,oGACbC,aAAc,+CACdC,aAAc,wEACdC,aAAc,2HAELC,GAA0B,IACoB,KAAtC7wB,GAAOyK,iBAAiB7jB,UACnC,IAAS4jC,GAA4B,OAAWxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,IAAM,KAC3G,MAAa,IAASsgB,GAA4B,OAAWxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,IAAM,MAG5H4mB,GAAkB,CACpB,IAAM,oBAAsBvrB,GAAO,MAAY,KAAO,KAAWvF,GAAOyH,WAAW,KAAMzH,GAAOkK,YAAY,GAAS,aAAiB,GAAK,WAC3I,IAAM,kCAAiC3E,GAAOsrB,MAC9C,IAAM,+BAAiCtrB,GAAO,KAAQ,KAAQ58B,KAAKC,IAAI,IAAMo3B,GAAOkK,YAAY,GAAS,aAAiB,GAC1H,IAAM,uBAAyB3E,GAAO,KAAOilB,GAA4B,IAAKxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,GAAK,IAAM,GAAI,GAAK,IACvJ,IAAM,gBAAkB3E,GAAO,KAAOilB,GAA4B,IAAKxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,GAAK,IAAM,GAAI,GAAK,IAChJ,IAAM,cAAgB3E,GAAO,EAAI58B,KAAKC,KAAKo3B,GAAOkK,YAAY,GAAS,aAAkB,GAAI,KAAO,GACpG,IAAM,wBAA0B3E,GAAO58B,KAAKsH,IAAI,QAAS,EAAI+vB,GAAOkK,YAAY,GAAS,EAAI,aAAiB,GAAG,GAAQ,YACzH,IAAM,6BAA+B3E,GAAOilB,GAA4B,IAAK,KAAY7hD,KAAKC,IAAIo3B,GAAOkK,YAAY,GAAS,YAAgB,MAAO,GAAK,IAC1J,IAAM,kBAAoB3E,GAAO,EAAI58B,KAAKsH,IAAI,IAAM+vB,GAAOkK,YAAY,GAAS,aAAkB,GAAG,GAAQ,qBAC7G,IAAM,cAAgB3E,GAAO,EAAI,EAAI58B,KAAKC,KAAKo3B,GAAOkK,YAAY,GAAU,cAAmB,GAAI,KAAO,GAC1G,IAAM,kBAAoB3E,GAAO,EAAI,GAAK,EAAI58B,KAAKC,IAAI,IAAKo3B,GAAOkK,YAAY,IAAU,cAAmB,MAAO,GAAK,iBACxH,IAAM,0CAA4C3E,GAAO+mB,GAAiB,EAAGtsB,GAAOkK,YAAY,IAAU,aAAiB,IAAK,IAEpI,IAAI6mB,GAAY,KACT,MAIMC,GAAwBptD,IACjC,MAAMwhC,EAAKr6B,SAASC,eAAe,sBAC7Bo8B,EAAKr8B,SAASC,eAAe,YAC7BimD,EAAKlmD,SAASC,eAAe,eAC7BkmD,EAAKnmD,SAASC,eAAe,eACnC,IAAImmD,EAAY,kBACZC,EAAO,GAEX,OADAhsB,EAAGl6B,YAAcwjD,GAAQ,UAAY9qD,GAC7BA,GACJ,KAAK,EACDutD,EAAY,YACZC,EAAO,QACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,gBAAoB,GAAK,cAChE,MACJ,KAAK,EACD6rB,EAAO,SACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,gBAAoB,GAAK,eAChE,MACJ,KAAK,EACD6rB,EAAO,QACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,kBAAsB,GAAK,gBAClE,MACJ,KAAK,EACD6rB,EAAO,SACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,iBAAqB,GAAK,oBACjE,MACJ,KAAK,EACD6rB,EAAO,QACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,iBAAqB,GAAK,oBACjE,MACJ,KAAK,EACD6rB,EAAO,QACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,gBAAoB,GAAK,cAChE,MACJ,KAAK,EACD6rB,EAAO,UACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,kBAAsB,GAAK,cAClE,MACJ,KAAK,EACD6rB,EAAO,SACPF,EAAGhmD,YAAc,aAAeq6B,GAAO,kBAAsB,GAAK,kBAG1E6B,EAAGl8B,YAAc,SAAWq6B,GAAOvF,GAAOoxB,EAAO,aAAe,IAAMD,EACtEF,EAAG/lD,YAAc,UAAYq6B,GAAOvF,GAAOoxB,EAAO,cAAgB,MAAQ7rB,GAAOvF,GAAOoxB,EAAO,iBAAkB,GAAK,KAEpHC,GAAa,CAAChlB,EAAczB,EAAOrkC,OACnCqkC,EACWyB,EACRp9B,MAAM,MAAY,gBAAmB1I,EAAQ,GAAIqkC,IACjDn/B,IAAI,EAAIm/B,IAGX0mB,GAAoB,CAACjlB,EAAczB,EAAOrkC,OAC1CqkC,EACWyB,EAAap9B,MAAM,MAAY,0BAA6B1I,EAAQ,GAAIqkC,KAG5E2mB,GAAkB,CAAC1kB,EAAKtI,EAAM8H,EAAc9lC,KACrD,MAAMirD,EAAgBC,GAA+BzxB,GAAOmoB,oBAC5D9b,EAAe,IAAI,EAAQA,GAC3B,MAAMS,EAAgB,IAAVvmC,EAAc,sBAAwB,YAClD,IAAIqkC,EAAQ5K,GAAO6M,EAAM,QAAUtI,GAAQ,EACvCsG,EAAYwmB,GAAWhlB,EAAczB,EAAOrkC,GAChD,KAAOy5B,GAAO8M,GAAK/8B,IAAI86B,IACnBD,GAAgB,EAChBC,EAAYwmB,GAAWhlB,EAAczB,EAAOrkC,GAEhD,IAAIwkC,EAAWpiC,KAAKqE,MAAM49B,EAAQ,GAClC,KAAoB,IAAbG,GACCsmB,GAAWhlB,EAAczB,EAAQG,EAAUxkC,GAAOsJ,IAAImwB,GAAO8M,IAC7D/B,EAAWpiC,KAAKqE,MAAM+9B,EAAW,GAGjCH,GAAgBG,EAGnB/K,GAAO0xB,QACJ,EAAI1xB,GAAO6M,EAAM,QAAUtI,GAAQqG,IACnCA,EAAQ5K,GAAO6M,EAAM,QAAUtI,GAAQ,GAG/C,IAAI0G,EAAUtiC,KAAKqH,IAAI46B,EAAQ,EAAG5K,GAAO6M,EAAM,QAAUtI,GAAQ,GAC7D2G,EAAWmmB,GAAWhlB,EAAcpB,EAAS1kC,GACjD,KAAO0kC,GAAWL,GAAS5K,GAAO8M,GAAK/8B,IAAIshD,GAAWhlB,EAAcpB,EAAS1kC,KACzEy5B,GAAO8M,GAAO9M,GAAO8M,GAAK5/B,IAAIg+B,GAC9BlL,GAAO6M,EAAM,QAAUtI,GAAQ0G,EAC/BA,GAAoB,EACpBC,EAAWmmB,GAAWhlB,EAAcpB,EAAS1kC,GAC7Cy5B,GAAO6M,EAAM,OAAStI,GAAQ2G,EAE9BlL,GAAOiP,oBAAoBr/B,GAAG,KAC9BowB,GAAOiP,oBAAsB,IAAI,EAAQ,MAEzCjP,GAAOiqB,UAAUr6C,GAAG,KACpBowB,GAAOiqB,UAAY,IAAI,EAAQ,MAEnCrB,KACA,MAAM+I,EAAkB,CAAC,EAAG,EAAG,GAAI,IAAK,IAAK,KAAM,OACnD,IAAK,IAAI7sD,EAAI,EAAGA,EAAI6sD,EAAgB7tD,OAAQgB,IACpC0sD,EAAgBG,EAAgB7sD,IAAMk7B,GAAO,WAAcl7B,EAAI,GAAK,aAAe,GAAsC,IAAjCk7B,GAAOkC,aAAa,IAAMp9B,IAClHo7B,EAAiB,IAAMp7B,GAG3Bk7B,GAAOqb,eAAiB,OACxBrb,GAAOqb,eAAiB,OAGnBuW,GAAgB,CAACvlB,EAAc/K,EAAM/6B,KAC9C,GAA0C,KAAtCy5B,GAAOyK,iBAAiB7jB,UAAkB,CAC1CylB,EAAe,IAAI,EAAQA,GAC3B,IAAIzB,EAAQ,EAAI5K,GAAOkK,YAAY3jC,EAAQ,GACvCskC,EAAYymB,GAAkBjlB,EAAczB,EAAOrkC,GACvD,KAAOy5B,GAAOiqB,UAAUl6C,IAAI86B,IACxBD,GAAgB,EAChBC,EAAYymB,GAAkBjlB,EAAczB,EAAOrkC,GAEvD,IAAIwkC,EAAWpiC,KAAKqE,MAAM49B,EAAQ,GAClC,KAAoB,IAAbG,GACCumB,GAAkBjlB,EAAczB,EAAQG,EAAUxkC,GAAOsJ,IAAImwB,GAAOiqB,WACpElf,EAAWpiC,KAAKqE,MAAM+9B,EAAW,GAGjCH,GAAgBG,EAGnB/K,GAAO0xB,QACJ1xB,GAAOkK,YAAY3jC,EAAQ,GAAK,EAAIqkC,IACpCA,EAAQ,EAAI5K,GAAOkK,YAAY3jC,EAAQ,IAG/C,IAAI0kC,EAAUtiC,KAAKqH,IAAI46B,EAAQ,EAAG,EAAI5K,GAAOkK,YAAY3jC,EAAQ,IAC7D2kC,EAAWomB,GAAkBjlB,EAAcpB,EAAS1kC,GACxD,KAAO0kC,GAAWL,GAAS5K,GAAOiqB,UAAUl6C,IAAIm7B,IAC5ClL,GAAOiqB,UAAYjqB,GAAOiqB,UAAU/8C,IAAIg+B,GACxClL,GAAOkK,YAAY3jC,EAAQ,GAAK0kC,EAChCA,GAAoB,EACpBC,EAAWomB,GAAkBjlB,EAAcpB,EAAS1kC,GAExD82C,KACA3V,KACAkhB,KACKtnB,GACDuwB,GAAsBtrD,GAES,IAA/By5B,GAAOkK,YAAY,KAA2B,KAAV3jC,GACpCo9B,OAICkuB,GAAyBjuD,IAClC,MAAMwhC,EAAKr6B,SAASC,eAAe,cAC7B8mD,EAAK/mD,SAASC,eAAe,iBAC7Bo8B,EAAKr8B,SAASC,eAAe,yBAC7BimD,EAAKlmD,SAASC,eAAe,kBAC7BkmD,EAAKnmD,SAASC,eAAe,oBAC7B+mD,EAAW5C,GAAW,aAAevrD,GACrCouD,EAAWhC,GAAW,aAAepsD,GACrCquD,EAAa,EAAE,WAAaruD,GAC5BqoD,EAA4C,KAAtCjsB,GAAOyK,iBAAiB7jB,UAAmB,IAAM,EAC7Dwe,EAAG8sB,WAAW,GAAGhnD,YAAc6mD,EAAW,UAAYxsB,GAAOvF,GAAOkK,YAAYtmC,EAAI,IACpFkuD,EAAG5mD,YAAc,MAAQq6B,GAAO58B,KAAKsH,IAAI+vB,GAAOkK,YAAYtmC,EAAI,GAAKqoD,EAAKgG,IAAe,IACzF7qB,EAAGl8B,YAAc8mD,EACjBf,EAAG/lD,YAAc,SAAWq6B,GAAO,MAAY,0BAA6B3hC,EAAI,GAAIo8B,GAAOkK,YAAYtmC,EAAI,GAAK,uBAA0Bo8B,GAAOikB,gBAAgB,MAAMh1C,MAAM,qBAAwBrL,EAAI,KAAO,mBAChNstD,EAAGhmD,YAAc,mBAAqB4lD,GAAgBltD,EAAI,MAEjD6tD,GAAkCU,IAC3C,IAAI3sC,EAAa7c,KAAKC,IAAI,EAAIupD,EAAS,IAAM,GAK7C,OAJA3sC,GAAe,EAAI,GAAM7c,KAAKuI,IAAI,EAAIihD,GAAUxpD,KAAKuI,IAAI,IACrD8uB,GAAOkC,aAAa,KAAO,IAC3B1c,GAAe,EAAI,GAAM7c,KAAKuI,IAAI,EAAIihD,GAAUxpD,KAAKuI,IAAI,KAEtDsU,GAwBE4sC,GAAgB,CAAC9wB,GAAO,KACjC,IAAI2a,GAAI,EACR,GAAIjc,GAAOiqB,UAAUl6C,IAAI,WAChBuxB,GAAQtB,GAAOmoB,mBAAqB,KAAOnoB,GAAO8b,QAAQ,MAC3DG,EAAIoW,QAAQ,4GAEZpW,GAAG,CACH,MAAMqW,EAA2BtyB,GAAOmoB,mBAClCoK,EAAanG,KACnBpsB,GAAOmoB,oBAAsBoK,EAAWpK,mBACxCnoB,GAAO+E,YAAcwtB,EAAWxuB,UAChC/D,GAAO6E,gBAAkB0tB,EAAWltC,UACpC,MAAMi+B,EAAe,CACjBE,KAAMC,KAAKC,MACXH,QAASvjB,GAAOooB,kBAChBzE,KAAM,eACN5f,UAAWwuB,EAAWxuB,UACtB1e,UAAWktC,EAAWltC,UACtBitC,yBAA0BA,EAC1BE,wBAAyBxyB,GAAOmoB,mBAChCsK,QAAS,SACT7wC,aAAc,eACd8wC,OAAQ1yB,GAAOiqB,UAAUr2C,WACzB++C,gBAAiB,4BAWrB,GATI3yB,GAAO4B,qBAAqB,GAAK,IACjC5B,GAAO0F,gBAAkB6sB,EAAW7sB,eACpC1F,GAAO2F,iBAAmB4sB,EAAW5sB,gBACrC3F,GAAO4F,mBAAqB2sB,EAAW3sB,kBACvC5F,GAAO6F,eAAiB0sB,EAAW1sB,cACnC7F,GAAO8F,eAAiBysB,EAAWzsB,cACnC9F,GAAO+F,oBAAsBwsB,EAAWxsB,mBACxC/F,GAAOgG,mBAAqBusB,EAAWvsB,mBAEvChG,GAAO6I,aAAaC,aAAe,IAAO9I,GAAO4yB,qBACjB,IAA5B5yB,GAAOmR,aAAa,KAAanR,GAAO+E,YAAc,EAAG,CACzD,IAAI8tB,EAAU,EACd,IAAK,IAAIjvD,EAAI,EAAGA,GAAK,EAAGA,IAChBo8B,GAAOkI,WAAWtkC,EAAI,GAAKmlC,GAAkBnlC,IAC7CivD,IAER,GAAIA,EAAU,EAAG,CACb,MAAMC,EAAanqD,KAAKqE,MAAMgzB,GAAO+E,WAAa8tB,GAClD,IAAK,IAAIjvD,EAAI,EAAGA,GAAK,EAAGA,IACpB2kC,GAAa3kC,GAAG,EAAMkvD,GAE1B9yB,GAAO+yB,eAAiB,GAQpC,GAJAhL,KACA/nB,GAAOooB,kBAAoB,EAC3BpoB,GAAOqoB,sBAAwB,EAC/B5iB,IACIzF,GAAOyf,aAAe,GAAKzf,GAAOwf,mBAAoB,CACtD,MAAMhB,EAAqC,MAAxBxe,GAAOyf,aAAwB,IAAO,EACzDF,GAAYvf,GAAOyf,cAAc,EAAMjB,GAE3CoK,KACA3hC,EAAU/iB,KAAK,aAAc,OAAQo/C,GAGzCtjB,GAAOgG,mBAAqB,MAA8C,KAAtChG,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAOkC,aAAa,KAAO,GAC3GhC,EAAiB,MCzUnB8yB,GAAW,CACbC,eAAgB,CACZC,MAAO,IACPC,cAAe,EACfjqB,SAAU,OACV3E,KAAM,aACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,oHAEjBC,gBAAiB,CACbL,MAAO,IACPC,cAAe,EACfjqB,SAAU,OACV3E,KAAM,aACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,oHAEjBxI,WAAY,CACRoI,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,6CAEjBxqB,aAAc,CACVoqB,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,qNAEjBrI,YAAa,CACTiI,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,6CAEjB5T,cAAe,CACXwT,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,gOAEjB5L,iBAAkB,CACdwL,MAAO,IACPC,cAAe,MACfjqB,SAAU,EACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,kOAEjBxtC,SAAU,CACNotC,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,8FAEjBvI,SAAU,CACNmI,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,8GAEjBE,aAAc,CACVN,MAAO,KACPC,cAAe,MACfjqB,SAAU,EACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,yIAEjBxG,WAAY,CACRoG,MAAO,IACPC,cAAe,GACfjqB,SAAU,IACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,qIAEjBG,mBAAoB,CAChBP,MAAO,IACPC,cAAe,IACfjqB,SAAU,EACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,gIAEjBI,cAAe,CACXR,MAAO,IACPC,cAAe,IACfjqB,SAAU,GACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,sKAEjB3V,YAAa,CACTuV,MAAO,IACPC,cAAe,MACfjqB,SAAU,EACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,kIAEjBrU,iBAAkB,CACdiU,MAAO,KACPC,cAAe,MACfjqB,SAAU,EACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,kIAEjBtS,iBAAkB,CACdkS,MAAO,IACPC,cAAe,MACfjqB,SAAU,EACV3E,KAAM,UACN6uB,YAAY,EACZC,mBAAoB,EACpBC,YAAa,mIAGRK,GAAgB1tD,IACzB,GAA6B,eAAzB+sD,GAAS/sD,GAAOs+B,MAAsD,IAA7ByuB,GAAS/sD,GAAOijC,SACzD,OAAO8pB,GAAS/sD,GAAOitD,MAEtB,CACD,MAAMU,EAAoB5zB,GAAO6I,aAAa5iC,GAC9C,OAAO+sD,GAAS/sD,GAAOitD,MAAQF,GAAS/sD,GAAOktD,cAAgBS,IAG1DC,GAAoB5tD,IAC7B,MAAM6tD,EAAO/oD,SAASC,eAAe,oBAC/B+oD,EAAOhpD,SAASC,eAAe,aAC/BgpD,EAAMjpD,SAASC,eAAe,eAGpC,OAFA8oD,EAAK5oD,YAAc8nD,GAAS/sD,GAAOqtD,YACnCS,EAAK7oD,YAAc,SAAWq6B,GAAOouB,GAAa1tD,IAAU,UACpDA,GACJ,IAAK,iBACD+tD,EAAI9oD,YAAc,QAAUq6B,GAAQ,KAAOvF,GAAOkoB,kBAAoB6E,KAA8B,GAAG,GAAQ,cAC/G,MACJ,IAAK,kBACDiH,EAAI9oD,YAAc,QAAUq6B,GAAQ,KAAOvF,GAAOioB,sBAAwB8E,KAA8B,GAAG,GAAQ,cACnH,MACJ,IAAK,aACDiH,EAAI9oD,YAAc,iCAAmCq6B,GAAO,EAAIvF,GAAO6I,aAAaiiB,WAAY,GAAG,GAAQ,oBAC3G,MACJ,IAAK,eACDkJ,EAAI9oD,YAAc,wCAA0Cq6B,GAAO58B,KAAKC,IAAI,EAAG,EAAIo3B,GAAO6I,aAAaC,eAAiB,gBAAkBvD,GAAO,EAAIvF,GAAO6I,aAAaC,aAAc,GAAK,eAC5L,MACJ,IAAK,cACDkrB,EAAI9oD,YAAc,iCAAmCq6B,GAAO,EAAIvF,GAAO6I,aAAaoiB,YAAa,GAAG,GAAQ,oBAC5G,MACJ,IAAK,gBACD+I,EAAI9oD,YAAc,wEAA0Eq6B,GAA2C,EAApCvF,GAAO6I,aAAa6W,cAAmB,GAAK,oBAC/I,MACJ,IAAK,mBACDsU,EAAI9oD,YAAc,oEAClB,MACJ,IAAK,WACD8oD,EAAI9oD,YAAc,oCAAsCq6B,GAAO58B,KAAKC,IAAI,MAAOo3B,GAAO6I,aAAa/iB,UAAW,GAC9G,MACJ,IAAK,WACDkuC,EAAI9oD,YAAc,iCAAmCq6B,GAAOvF,GAAO6I,aAAakiB,SAAU,GAAK,kCAC/F,MACJ,IAAK,eACDiJ,EAAI9oD,YAAc,oEAClB,MACJ,IAAK,aACD8oD,EAAI9oD,YAAc,mCAAqCq6B,GAAO,IAAQvF,GAAO6I,aAAaikB,YAAc,oCACxG,MACJ,IAAK,qBACDkH,EAAI9oD,YAAc,2EAA6Eq6B,GAAO,EAAIvF,GAAO6I,aAAa4qB,oBAAsB,UACpJ,MACJ,IAAK,gBACDO,EAAI9oD,YAAc,gEAAkEq6B,GAAO,GAAKvF,GAAO6I,aAAa6qB,eAAiB,YACrI,MACJ,IAAK,cAGL,IAAK,mBAGL,IAAK,mBACDM,EAAI9oD,YAAc,sEAIjB+oD,GAAmBhuD,IAC5B,IAAIg2C,GAAI,EACJ,qBACAA,EAAIoW,QAAQ,uCAAyCpsD,EAAQ,QAAUs/B,GAAOouB,GAAa1tD,IAAU,8CAErGg2C,IACIjc,GAAO0D,QAAUiwB,GAAa1tD,IAAU+5B,GAAO6I,aAAa5iC,GAAS+sD,GAAS/sD,GAAOijC,UACrFlJ,GAAO0D,QAAUiwB,GAAa1tD,GAC9B+5B,GAAO6I,aAAa5iC,IAAU,EAC9BuE,QAAQ0G,IAAI,uCAAyCjL,EAAQ,OAG7DuE,QAAQ0G,IAAI,sCAAwCjL,EAAQ,kBAGpE09B,MAESuwB,GAAiBjuD,IAI1B,IAHU,oBACJosD,QAAQ,sCAGV,OAAQpsD,GACJ,IAAK,iBACG+5B,GAAO6I,aAAaoqB,eAAiB,KACrCjzB,GAAO6I,aAAaoqB,gBAAkB,EACtCjzB,GAAO+E,YAAcp8B,KAAKqE,MAAM,KAAOgzB,GAAOkoB,kBAAoB6E,OAEtE,MACJ,IAAK,kBACG/sB,GAAO6I,aAAa0qB,gBAAkB,KACtCvzB,GAAO6I,aAAa0qB,iBAAmB,EACvCvzB,GAAO6E,gBAAkBl8B,KAAKqE,MAAM,KAAOgzB,GAAOioB,sBAAwB8E,SC5DjFoH,GAAuB,KACR,eAApB,cAEAn0B,GAAOyH,WAAW,IAAM,IACxB18B,SAASC,eAAe,sBAAsBE,YAAc,+CAAiDq6B,GAAO2lB,KAAgC6B,KAA6B,GAAG,GAAQ,qCAevLqH,GAAoB,KAC7B,GAAwB,UAApB,aACA,OACJrpD,SAASC,eAAe,yBAAyBE,YAAcq6B,GAAO58B,KAAKqE,MAAMgzB,GAAOq0B,SAAW,MAAO,GAAK,UAAY9uB,GAAO58B,KAAKqE,MAAMgzB,GAAOq0B,SAAW,GAAK,IAAK,GAAK,SAAW9uB,GAAO58B,KAAKqE,MAAMgzB,GAAOq0B,SAAW,IAAK,GAAK,SACvO,MAAMC,EAAW,CAAC,OAAQ,YAAa,aACjCnrD,EAAQ,CAAC,EAAG,EAAG,GACforD,EAAc,CAAC,GAAI,GAAI,GAC7B,IAAK,IAAI3wD,EAAI,EAAGA,GAAK,EAAGA,IACpBmH,SAASC,eAAespD,EAAS1wD,GAAK,oBAAoBsH,YAAcq6B,GAAOvF,GAAOs0B,EAAS1wD,GAAK,eAAiB,IAAM2hC,GAAO,GAAK,GAAKvF,GAAO6I,aAAa,GAAGyrB,EAAS1wD,cAC5KmH,SAASC,eAAespD,EAAS1wD,GAAK,wBAAwBsH,YAAcq6B,GAAOvF,GAAOs0B,EAAS1wD,GAAK,eAAgB,GAAG,GAC3HmH,SAASC,eAAespD,EAAS1wD,GAAK,8BAA8BsH,YAAcq6B,GAAO58B,KAAKqH,IAAI,EAAGukD,EAAY3wD,GAAK+E,KAAKC,IAAID,KAAKsH,IAAI,GAAK,IAAM+vB,GAAO6I,aAAa,GAAGyrB,EAAS1wD,aAAc,EAAIo8B,GAAOs0B,EAAS1wD,GAAK,eAAgBuF,EAAMvF,IAAMo8B,GAAOs0B,EAAS1wD,GAAK,gBAAiB,GAAG,GAEnS,IAAI4wD,EACJ,OAAQx0B,GAAOy0B,cACX,KAAK,EAAG,CACJ1pD,SAASC,eAAe,gBAAgBE,YAAcq6B,GAAOvF,GAAOud,SAAU,GAAG,GACjF,MAAMoP,EAAY,CAAC,KAAM3sB,GAAOwd,cAAcj4B,YAAaya,GAAOwd,cAAch4B,WAAYwa,GAAOwd,cAAcl4B,SAAU0a,GAAOwd,cAAc/3B,QAASua,GAAOwd,cAAcn4B,UAAW2a,GAAOwd,cAAc13B,SAAUka,GAAOwd,cAAcS,aAAcje,GAAOwd,cAAc77B,OAAQqe,GAAOwd,cAAcv3B,cAAe+Z,GAAOwd,cAAct3B,aACjVsuC,EAAW,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,IAAK,IAAI5wD,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAI8wD,EAAkB,EAClB/H,EAAU/oD,IAAM,KAAc,IAANA,IACxB8wD,GAAmB,GAEvB3pD,SAASC,eAAe,eAAepH,WAAWsH,YAAc,IAAIq6B,GAAOonB,EAAU/oD,GAAI,GAAG,KAC5FmH,SAASC,eAAe,eAAepH,WAAWsH,YAAc,IAAIq6B,GAAO,KAAO,sBAAyB3hC,GAAK,GAAI4wD,EAAS5wD,GAAK8wD,GAAiB,MACzI,IAAN9wD,GAAiB,IAANA,GAAiB,IAANA,IACtBmH,SAASC,eAAe,eAAepH,WAAWsH,YAAc,IAAIq6B,GAAO,sBAAyB3hC,GAAK,EAAG4wD,EAAS5wD,GAAK8wD,GAAiB,MAGnJ3pD,SAASC,eAAe,2BAA2BE,YAAcq6B,GAAO3uB,EAAY+1C,GAAY,GAAG,GACnG,MAEJ,KAAK,EAAG,CACJ5hD,SAASC,eAAe,qBAAqBE,YAAcq6B,GAAOvF,GAAOsP,cAAe,GAAG,GAC3F,MAAM+P,EAAiB,CAAC,KAAMrf,GAAOkf,mBAAmB35B,YAAaya,GAAOkf,mBAAmB15B,WAAYwa,GAAOkf,mBAAmB55B,SAAU0a,GAAOkf,mBAAmBz5B,QAASua,GAAOkf,mBAAmB75B,UAAW2a,GAAOkf,mBAAmBp5B,SAAUka,GAAOkf,mBAAmBjB,aAAcje,GAAOkf,mBAAmBv9B,OAAQqe,GAAOkf,mBAAmBj5B,cAAe+Z,GAAOkf,mBAAmBh5B,aACxYsuC,EAAW,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,IAAK,IAAI5wD,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAI8wD,EAAkB,EAClBrV,EAAez7C,IAAM,KAAc,IAANA,IAC7B8wD,GAAmB,GAEvB3pD,SAASC,eAAe,oBAAoBpH,WAAWsH,YAAc,IAAIq6B,GAAO8Z,EAAez7C,GAAI,GAAG,KACtGmH,SAASC,eAAe,oBAAoBpH,WAAWsH,YAAc,IAAIq6B,GAAO,KAAO,2BAA8B3hC,GAAK,GAAI4wD,EAAS5wD,GAAK8wD,GAAiB,MAEjK3pD,SAASC,eAAe,gCAAgCE,YAAcq6B,GAAO3uB,EAAYyoC,GAAiB,GAAG,GAC7G,MAEJ,KAAK,EAAG,CACJt0C,SAASC,eAAe,qBAAqBE,YAAcq6B,GAAOvF,GAAO6gB,cAAe,GAAG,GAC3F,MAAM8T,EAAiB,CAAC,KAAM30B,GAAOihB,mBAAmB17B,YAAaya,GAAOihB,mBAAmBz7B,WAAYwa,GAAOihB,mBAAmB37B,SAAU0a,GAAOihB,mBAAmBx7B,QAASua,GAAOihB,mBAAmB57B,UAAW2a,GAAOihB,mBAAmBn7B,SAAUka,GAAOihB,mBAAmBhD,aAAcje,GAAOihB,mBAAmBt/B,OAAQqe,GAAOihB,mBAAmBh7B,cAAe+Z,GAAOihB,mBAAmB/6B,aACxYsuC,EAAW,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7C,IAAK,IAAI5wD,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAI8wD,EAAkB,EAClBC,EAAe/wD,IAAM,MACrB8wD,GAAmB,GAEvB3pD,SAASC,eAAe,oBAAoBpH,WAAWsH,YAAc,IAAIq6B,GAAOovB,EAAe/wD,GAAI,GAAG,KACtGmH,SAASC,eAAe,oBAAoBpH,WAAWsH,YAAc,IAAIq6B,GAAO,KAAO,2BAA8B3hC,GAAK,GAAI4wD,EAAS5wD,GAAK8wD,GAAiB,MAEjK3pD,SAASC,eAAe,gCAAgCE,YAAcq6B,GAAO3uB,EAAY+9C,GAAiB,GAAG,GAC7G,MAEJ,KAAK,EAAG,CACJ5pD,SAASC,eAAe,oBAAoBE,YAAcq6B,GAAOvF,GAAOmkB,iBAAkB,GAAG,GAC7F,MAAMyQ,EAAgB,CAAC50B,GAAO60B,kBAAkBC,MAAO90B,GAAO60B,kBAAkBE,WAAY/0B,GAAO60B,kBAAkBG,WAAYh1B,GAAO60B,kBAAkBI,UAAWj1B,GAAO60B,kBAAkBK,eAAgBl1B,GAAO60B,kBAAkBzvC,MAAO4a,GAAO60B,kBAAkBM,WAAYn1B,GAAO60B,kBAAkB3uC,aACtSkvC,EAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxDZ,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjC,IAAK,IAAI5wD,EAAI,EAAGA,EAAIgxD,EAAc9wD,OAAQF,IAAK,CAC3C,IAAI8wD,EAAkB,EAClBE,EAAchxD,IAAMwxD,EAAYxxD,KAChC8wD,GAAmB,GAEvB3pD,SAASC,eAAe,mBAAmBpH,EAAI,WAAWsH,YAAc,IAAIq6B,GAAOqvB,EAAchxD,GAAI,GAAG,KACxGmH,SAASC,eAAe,mBAAmBpH,EAAI,WAAWsH,YAAc,IAAIq6B,GAAO,KAAO,0BAA6B3hC,GAAK,GAAI4wD,EAAS5wD,GAAK8wD,GAAiB,MAEnK3pD,SAASC,eAAe,+BAA+BE,YAAcq6B,GAAO3uB,EAAYg+C,GAAgB,GAAG,GAC3G,MAEJ,KAAK,EACD7pD,SAASC,eAAe,eAAeE,YAAc,YAAYq6B,GAAOvF,GAAOud,SAAU,GAAG,qBCvR3F5Z,GAAc,KACvB,MAAM0xB,EAAUtqD,SAASuqD,uBAAuB,eAChD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIyxD,EAAQvxD,OAAQF,IAChCo8B,GAAOyQ,QAAQ8kB,QAAUF,EAAQzxD,GAAG0/B,MAAM8C,QAAU,QAAUivB,EAAQzxD,GAAG0/B,MAAM8C,QAAU,OAE7F,MAAMovB,EAAWzqD,SAASuqD,uBAAuB,eACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI4xD,EAAS1xD,OAAQF,IACjCo8B,GAAOyQ,QAAQglB,QAAUD,EAAS5xD,GAAG0/B,MAAM8C,QAAU,QAAUovB,EAAS5xD,GAAG0/B,MAAM8C,QAAU,OAE/F,MAAMsvB,EAAW3qD,SAASuqD,uBAAuB,eACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI8xD,EAAS5xD,OAAQF,IACjCo8B,GAAOyQ,QAAQklB,UAAYD,EAAS9xD,GAAG0/B,MAAM8C,QAAU,QAAUsvB,EAAS9xD,GAAG0/B,MAAM8C,QAAU,OAEjG,MAAMwvB,EAAW7qD,SAASuqD,uBAAuB,eACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIgyD,EAAS9xD,OAAQF,IACjCo8B,GAAOyQ,QAAQolB,SAAWD,EAAShyD,GAAG0/B,MAAM8C,QAAU,QAAUwvB,EAAShyD,GAAG0/B,MAAM8C,QAAU,OAEhG,MAAM0vB,EAAW/qD,SAASuqD,uBAAuB,kBACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIkyD,EAAShyD,OAAQF,IACjCo8B,GAAOyQ,QAAQhqB,SAAWqvC,EAASlyD,GAAG0/B,MAAM8C,QAAU,QAAU0vB,EAASlyD,GAAG0/B,MAAM8C,QAAU,OAEhG,MAAM2vB,EAAWhrD,SAASuqD,uBAAuB,oBACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAImyD,EAASjyD,OAAQF,IACjCo8B,GAAOyQ,QAAQC,WAAaqlB,EAASnyD,GAAG0/B,MAAM8C,QAAU,QAAU2vB,EAASnyD,GAAG0/B,MAAM8C,QAAU,OAElG,MAAM4vB,EAAWjrD,SAASuqD,uBAAuB,mBACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIoyD,EAASlyD,OAAQF,IACjCo8B,GAAOyQ,QAAQW,UAAY4kB,EAASpyD,GAAG0/B,MAAM8C,QAAU,QAAU4vB,EAASpyD,GAAG0/B,MAAM8C,QAAU,OAEjG,MAAM6vB,EAAWlrD,SAASuqD,uBAAuB,uBACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIqyD,EAASnyD,OAAQF,IACjCo8B,GAAOyQ,QAAQY,YAAc4kB,EAASryD,GAAG0/B,MAAM8C,QAAU,QAAU6vB,EAASryD,GAAG0/B,MAAM8C,QAAU,OAEnG,MAAM8vB,EAAWnrD,SAASuqD,uBAAuB,QACjD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIsyD,EAASpyD,OAAQF,IACjCsyD,EAAStyD,GAAG0/B,MAAM8C,QAAU,OAEhC,MAAM+vB,EAAYprD,SAASuqD,uBAAuB,YAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIuyD,EAAUryD,OAAQF,IACR,IAA1Bo8B,GAAOyH,WAAW,IAAY0uB,EAAUvyD,GAAG0/B,MAAM8C,QAAU,QAAU+vB,EAAUvyD,GAAG0/B,MAAM8C,QAAU,OAEtG,MAAMgwB,EAAYrrD,SAASuqD,uBAAuB,YAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIwyD,EAAUtyD,OAAQF,IACR,IAA1Bo8B,GAAOyH,WAAW,IAAY2uB,EAAUxyD,GAAG0/B,MAAM8C,QAAU,QAAUgwB,EAAUxyD,GAAG0/B,MAAM8C,QAAU,OAEtG,MAAMiwB,EAAYtrD,SAASuqD,uBAAuB,YAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIyyD,EAAUvyD,OAAQF,IACR,IAA1Bo8B,GAAOyH,WAAW,IAAY4uB,EAAUzyD,GAAG0/B,MAAM8C,QAAU,QAAUiwB,EAAUzyD,GAAG0/B,MAAM8C,QAAU,OAEtG,MAAMkwB,EAAYvrD,SAASuqD,uBAAuB,YAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI0yD,EAAUxyD,OAAQF,IACR,IAA1Bo8B,GAAOyH,WAAW,IAAY6uB,EAAU1yD,GAAG0/B,MAAM8C,QAAU,QAAUkwB,EAAU1yD,GAAG0/B,MAAM8C,QAAU,OAEtG,MAAMmwB,EAAYxrD,SAASuqD,uBAAuB,SAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI2yD,EAAUzyD,OAAQF,IACL,IAA7Bo8B,GAAOkC,aAAa,KAAaq0B,EAAU3yD,GAAG0/B,MAAM8C,QAAU,QAAUmwB,EAAU3yD,GAAG0/B,MAAM8C,QAAU,OAEzG,MAAMowB,EAAYzrD,SAASuqD,uBAAuB,SAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI4yD,EAAU1yD,OAAQF,IACL,IAA7Bo8B,GAAOkC,aAAa,KAAas0B,EAAU5yD,GAAG0/B,MAAM8C,QAAU,QAAUowB,EAAU5yD,GAAG0/B,MAAM8C,QAAU,OAEzG,MAAMqwB,EAAY1rD,SAASuqD,uBAAuB,YAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI6yD,EAAU3yD,OAAQF,IACL,IAA7Bo8B,GAAOkC,aAAa,KAAau0B,EAAU7yD,GAAG0/B,MAAM8C,QAAU,QAAUqwB,EAAU7yD,GAAG0/B,MAAM8C,QAAU,OAEzG,MAAMswB,EAAY3rD,SAASuqD,uBAAuB,SAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI8yD,EAAU5yD,OAAQF,IACL,IAA7Bo8B,GAAOkC,aAAa,KAAaw0B,EAAU9yD,GAAG0/B,MAAM8C,QAAU,QAAUswB,EAAU9yD,GAAG0/B,MAAM8C,QAAU,OAEzG,MAAMuwB,EAAY5rD,SAASuqD,uBAAuB,SAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI+yD,EAAU7yD,OAAQF,IACL,IAA7Bo8B,GAAOkC,aAAa,KAAay0B,EAAU/yD,GAAG0/B,MAAM8C,QAAU,QAAUuwB,EAAU/yD,GAAG0/B,MAAM8C,QAAU,OAEzG,MAAMwwB,EAAY7rD,SAASuqD,uBAAuB,WAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIgzD,EAAU9yD,OAAQF,IAClCo8B,GAAO2nB,4BAA4B,GAAK,EAAIiP,EAAUhzD,GAAG0/B,MAAM8C,QAAU,QAAUwwB,EAAUhzD,GAAG0/B,MAAM8C,QAAU,OAEpH,MAAMywB,EAAY9rD,SAASuqD,uBAAuB,UAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIizD,EAAU/yD,OAAQF,IACL,IAA7Bo8B,GAAOkC,aAAa,KAAa20B,EAAUjzD,GAAG0/B,MAAM8C,QAAU,QAAUywB,EAAUjzD,GAAG0/B,MAAM8C,QAAU,OAEzG,MAAM0wB,EAAY/rD,SAASuqD,uBAAuB,gBAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIkzD,EAAUhzD,OAAQF,IAClCo8B,GAAO8C,eAAiB,EAAIg0B,EAAUlzD,GAAG0/B,MAAM8C,QAAU,QAAU0wB,EAAUlzD,GAAG0/B,MAAM8C,QAAU,OAEpG,MAAM2wB,EAAYhsD,SAASuqD,uBAAuB,UAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAImzD,EAAUjzD,OAAQF,IAClCo8B,GAAO4B,qBAAqB,IAAM,EAAIm1B,EAAUnzD,GAAG0/B,MAAM8C,QAAU,QAAU2wB,EAAUnzD,GAAG0/B,MAAM8C,QAAU,OAE9G,MAAM4wB,EAAYjsD,SAASuqD,uBAAuB,UAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIozD,EAAUlzD,OAAQF,IAClCo8B,GAAO4B,qBAAqB,IAAM,EAAIo1B,EAAUpzD,GAAG0/B,MAAM8C,QAAU,QAAU4wB,EAAUpzD,GAAG0/B,MAAM8C,QAAU,OAE9G,MAAM6wB,EAAYlsD,SAASuqD,uBAAuB,UAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIqzD,EAAUnzD,OAAQF,IAClCo8B,GAAO4B,qBAAqB,IAAM,EAAIq1B,EAAUrzD,GAAG0/B,MAAM8C,QAAU,QAAU6wB,EAAUrzD,GAAG0/B,MAAM8C,QAAU,OAE9G,MAAM8wB,EAAYnsD,SAASuqD,uBAAuB,UAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIszD,EAAUpzD,OAAQF,IAClCo8B,GAAO4B,qBAAqB,IAAM,EAAIs1B,EAAUtzD,GAAG0/B,MAAM8C,QAAU,QAAU8wB,EAAUtzD,GAAG0/B,MAAM8C,QAAU,OAE9G,MAAM+wB,EAAYpsD,SAASuqD,uBAAuB,kBAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIuzD,EAAUrzD,OAAQF,IAClCuzD,EAAUvzD,GAAG0/B,MAAM8C,QAAUpG,GAAO8C,eAAiB,EAAI,eAAiB,OAE9E,MAAMs0B,EAAYrsD,SAASuqD,uBAAuB,oBAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIwzD,EAAUtzD,OAAQF,IAClCwzD,EAAUxzD,GAAG0/B,MAAM8C,SAAWpG,GAAOyQ,QAAQhqB,SAAW,EAAI,eAAiB,OAEjF,MAAM4wC,EAAYtsD,SAASuqD,uBAAuB,eAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAIyzD,EAAUvzD,OAAQF,IAClCyzD,EAAUzzD,GAAG0/B,MAAM8C,QAAUpG,GAAOyH,WAAW,KAAO,EAAI,QAAU,OAExE,MAAM6vB,EAAYvsD,SAASuqD,uBAAuB,iBAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI0zD,EAAUxzD,OAAQF,IAClC0zD,EAAU1zD,GAAG0/B,MAAM8C,QAAUpG,GAAOmR,aAAa,IAAM,EAAI,OAAS,OAExE,MAAMomB,EAAYxsD,SAASuqD,uBAAuB,iBAClD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI2zD,EAAUzzD,OAAQF,IAClC2zD,EAAU3zD,GAAG0/B,MAAM8C,QAAUpG,GAAOmR,aAAa,IAAM,EAAI,QAAU,OAEzE,MAAMqmB,EAAYzsD,SAASuqD,uBAAuB,iBAClD,IAAK,MAAMmC,KAAMzzD,MAAMm/C,KAAKqU,GACxBC,EAAGn0B,MAAM8C,QAAuC,IAA7BpG,GAAOkC,aAAa,KAAa,QAAU,OAEtC,IAAxBlC,GAAOwB,SAAS,KAChBz2B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,QAC/Dr7B,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,QAC3Dr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,UAGzDr7B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,OAC/Dr7B,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,OAC3Dr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QAEjC,IAA5BpG,GAAOkC,aAAa,KACfn3B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,SACvHr7B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC5F,IAA5BpG,GAAOkC,aAAa,KACpBn3B,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,QAC9Dr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC1Dr7B,SAASC,eAAe,gBAAgBs4B,MAAM8C,QAAU,UAGxDr7B,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,OAC9Dr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,OAC1Dr7B,SAASC,eAAe,gBAAgBs4B,MAAM8C,QAAU,QAEhC,IAA5BpG,GAAOkC,aAAa,KACfn3B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,SACvHr7B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC/F,IAA7BpG,GAAOkC,aAAa,MACfn3B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,SACvHr7B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC/F,IAA7BpG,GAAOkC,aAAa,KAChBn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAChC,IAA7BpG,GAAOkC,aAAa,KAChBn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAChC,IAA7BpG,GAAOkC,aAAa,KAChBn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAChC,IAA7BpG,GAAOkC,aAAa,MACfn3B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,QAASr7B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,UACnIr7B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,QAC1G,IAA7BpG,GAAOkC,aAAa,KAChBn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAChC,IAA7BpG,GAAOkC,aAAa,KAChBn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAChC,IAA7BpG,GAAOkC,aAAa,KAChBn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAC7DpG,GAAOyH,WAAW,IAAM,EACpB18B,SAASC,eAAe,4BAA4Bs4B,MAAM8C,QAAU,QACpEr7B,SAASC,eAAe,4BAA4Bs4B,MAAM8C,QAAU,OACxEpG,GAAOyH,WAAW,IAAM,EACpB18B,SAASC,eAAe,2BAA2Bs4B,MAAM8C,QAAU,QACnEr7B,SAASC,eAAe,2BAA2Bs4B,MAAM8C,QAAU,OACvEpG,GAAOyH,WAAW,IAAM,EACpB18B,SAASC,eAAe,yBAAyBs4B,MAAM8C,QAAU,QACjEr7B,SAASC,eAAe,yBAAyBs4B,MAAM8C,QAAU,OACrEpG,GAAOyH,WAAW,IAAM,GACnB18B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,SACvHr7B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OAAQr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC5HpG,GAAOyH,WAAW,KAAO,EACrB18B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,QAC7Dr7B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,OACjEpG,GAAOyH,WAAW,KAAO,EACrB18B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,QAC7Dr7B,SAASC,eAAe,qBAAqBs4B,MAAM8C,QAAU,OACjE,IAAK,IAAIhD,EAAI,EAAGA,GAAK,EAAGA,IACnBpD,GAAOyH,WAAW,KAAO,EACtB18B,SAASC,eAAe,sBAAwBo4B,GAAGE,MAAM8C,QAAU,QACnEr7B,SAASC,eAAe,sBAAwBo4B,GAAGE,MAAM8C,QAAU,OAE3EpG,GAAOyH,WAAW,KAAO,EACrB18B,SAASC,eAAe,0BAA0Bs4B,MAAM8C,QAAU,QAClEr7B,SAASC,eAAe,0BAA0Bs4B,MAAM8C,QAAU,OACtEpG,GAAOyH,WAAW,KAAO,EACrB18B,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,QAC3Dr7B,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,OAC/DpG,GAAOyH,WAAW,KAAO,EACrB18B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,QAC/Dr7B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,OAClEpG,GAAOkK,YAAY,IAAU,GAAKlK,GAAO8C,eAAiB,EACvD/3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAC7DpG,GAAO6I,aAAaC,aAAe,EAC/B/9B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,QAC/Dr7B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,OACnEpG,GAAO6I,aAAa6W,cAAgB,EAChC30C,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,QAC9Dr7B,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,OAClEpG,GAAO6I,aAAa2qB,aAAe,EAC/BzoD,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,QACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OAC7DpG,GAAOmR,aAAa,GAAK,EACrBpmC,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,QAC/Dr7B,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,OACnEr7B,SAASC,eAAe,kBAAkBs4B,MAAMo0B,WAAa13B,GAAOkC,aAAa,KAAO,EAAI,UAAY,SACxGn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAUpG,GAAO4B,qBAAqB,IAAM,EAAI,GAAK,OACpG72B,SAASC,eAAe,oBAAoBs4B,MAAM8C,QAAUpG,GAAO4B,qBAAqB,IAAM,EAAI,GAAK,OACvG,MAAMp0B,EAAIzC,SAASuqD,uBAAuB,QACpCqC,EAAoB,CACtBC,EAA2B,IAAxB53B,GAAOwB,SAAS,IACnBP,EAA2B,IAAxBjB,GAAOwB,SAAS,IACnBN,EAA2B,IAAxBlB,GAAOwB,SAAS,IACnBL,EAA2B,IAAxBnB,GAAOwB,SAAS,IACnBmb,EAA2B,IAAxB3c,GAAOwB,SAAS,IACnBJ,EAA2B,IAAxBpB,GAAOwB,SAAS,IACnBob,EAA2B,IAAxB5c,GAAOwB,SAAS,IACnBqb,EAA2B,IAAxB7c,GAAOwB,SAAS,IACnBsb,EAA+B,IAA5B9c,GAAOkC,aAAa,IACvB6a,EAA+B,IAA5B/c,GAAOkC,aAAa,IACvB8a,GAAgC,IAA5Bhd,GAAOkC,aAAa,IACxB21B,GAAgC,IAA5B73B,GAAOkC,aAAa,IACxB41B,GAAiC,IAA7B93B,GAAOkC,aAAa,KACxB61B,GAAgC,IAA5B/3B,GAAOkC,aAAa,IACxB81B,GAA4B,IAAxBh4B,GAAOwB,SAAS,IACpBy2B,GAA4B,IAAxBj4B,GAAOwB,SAAS,IACpB02B,GAA4B,IAAxBl4B,GAAOwB,SAAS,IACpB22B,GAA4B,IAAxBn4B,GAAOwB,SAAS,IACpB42B,GAA4B,IAAxBp4B,GAAOwB,SAAS,IACpB62B,GAA4B,IAAxBr4B,GAAOwB,SAAS,IACpB82B,GAA+B,IAA3Bt4B,GAAOmR,aAAa,GACxBonB,GAA+B,IAA3Bv4B,GAAOmR,aAAa,GACxBqnB,GAA+B,IAA3Bx4B,GAAOmR,aAAa,GACxBsnB,GAA+B,IAA3Bz4B,GAAOmR,aAAa,GACxBunB,GAA+B,IAA3B14B,GAAOmR,aAAa,GACxBwnB,GAA8B,IAA1B34B,GAAOyH,WAAW,IACtBmxB,GAA4B,IAAxB54B,GAAOwB,SAAS,IACpBq3B,GAA4B,IAAxB74B,GAAOwB,SAAS,IACpBs3B,GAA4B,IAAxB94B,GAAOwB,SAAS,IACpBu3B,GAA4B,IAAxB/4B,GAAOwB,SAAS,IACpBw3B,GAAIh5B,GAAOyQ,QAAQhqB,SACnBwyC,GAAIj5B,GAAOya,cAAgB,IAAOza,GAAOunB,mBAAqB,GAC9D2R,GAAIl5B,GAAO6a,eAAiB,IAAO7a,GAAOunB,mBAAqB,GAC/D4R,GAAIn5B,GAAOunB,mBAAqB,GAChC6R,GAAIp5B,GAAO8C,eAAiB,EAC5Bu2B,GAAIr5B,GAAOkC,aAAa,KAAO,GAEnC,IAAK,IAAIt+B,EAAI,EAAGA,EAAI4J,EAAE1J,OAAQF,IACtB+zD,EAAkB/zD,KAClB4J,EAAE5J,GAAG0/B,MAAM8C,QAAU,UAIpBkzB,GAAY,KACrBvuD,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,OACrDr7B,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,UAChE74B,SAASC,eAAe,YAAYs4B,MAAM8C,QAAU,OACpDr7B,SAASC,eAAe,eAAes4B,MAAMM,gBAAkB,UAC/D74B,SAASC,eAAe,YAAYs4B,MAAM8C,QAAU,OACpD,MAAMmzB,EAAcxuD,SAASC,eAAe,eACH,MAArCuuD,EAAYC,aAAa,UACzBD,EAAYj2B,MAAMM,gBAAkB,UACpC21B,EAAYj2B,MAAMC,MAAQ,QAC1Bg2B,EAAYj2B,MAAM0D,OAAS,mBAE/Bj8B,SAASC,eAAe,cAAcs4B,MAAM8C,QAAU,OACtDr7B,SAASC,eAAe,mBAAmBs4B,MAAMM,gBAAkB,UACnE74B,SAASC,eAAe,mBAAmBs4B,MAAMC,MAAQ,QACzDx4B,SAASC,eAAe,SAASs4B,MAAM8C,QAAU,OACjDr7B,SAASC,eAAe,YAAYs4B,MAAMM,gBAAkB,UAC5D74B,SAASC,eAAe,cAAcs4B,MAAM8C,QAAU,OACtDr7B,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,UAChE74B,SAASC,eAAe,YAAYs4B,MAAM8C,QAAU,OACpDr7B,SAASC,eAAe,eAAes4B,MAAMM,gBAAkB,UAC/D74B,SAASC,eAAe,QAAQs4B,MAAM8C,QAAU,OAChDr7B,SAASC,eAAe,WAAWs4B,MAAMM,gBAAkB,SAC3D74B,SAASC,eAAe,QAAQs4B,MAAM8C,QAAU,OAChDr7B,SAASC,eAAe,UAAUs4B,MAAMM,gBAAkB,UAC1D74B,SAASC,eAAe,WAAWs4B,MAAMM,gBAAkB,UAC3D74B,SAASC,eAAe,aAAas4B,MAAMM,gBAAkB,UAC7D74B,SAASC,eAAe,SAASs4B,MAAM8C,QAAU,OACjDr7B,SAASC,eAAe,UAAUs4B,MAAM8C,QAAU,OAClDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OACzDr7B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,OACjC,cAApB,eACAr7B,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,SAChE74B,SAASC,eAAe,aAAas4B,MAAM8C,QAAU,SAEjC,aAApB,eACAr7B,SAASC,eAAe,YAAYs4B,MAAM8C,QAAU,QACpDr7B,SAASC,eAAe,eAAes4B,MAAMM,gBAAkB,SAC/D74B,SAASC,eAAe,sBAAsBE,YAAc,0CAExC,aAApB,eACAH,SAASC,eAAe,YAAYs4B,MAAM8C,QAAU,QACX,MAArCmzB,EAAYC,aAAa,UACzBD,EAAYj2B,MAAMM,gBAAkB,QACpC21B,EAAYj2B,MAAMC,MAAQ,QAC1Bg2B,EAAYj2B,MAAM0D,OAAS,oBAGX,iBAApB,eACAj8B,SAASC,eAAe,cAAcs4B,MAAM8C,QAAU,QACtDr7B,SAASC,eAAe,mBAAmBs4B,MAAMM,gBAAkB,QACnE74B,SAASC,eAAe,mBAAmBs4B,MAAMC,MAAQ,QACzDx4B,SAASC,eAAe,uBAAuBE,YAAc,uBAAyB80B,GAAOyD,kBAAoB,IAAMtc,EAAyB,MAAQ,IAAM6Y,GAAOyD,kBAAoBtc,GAAwBpT,YAAY,GAAK,MAE9M,UAApB,eACAhJ,SAASC,eAAe,SAASs4B,MAAM8C,QAAU,QACjDr7B,SAASC,eAAe,YAAYs4B,MAAMM,gBAAkB,OAC5D74B,SAASC,eAAe,mBAAmBE,YAAc,yGACzDH,SAASC,eAAe,qBAAqBE,YAAc,iEAAmE,IAAM,qBAA0B,KAAK6I,YAAY,GAAK,IACpL6zB,GAAuB,GAAG,GAC1BA,GAAuB,GAAG,GAC1BA,GAAuB,GAAG,GAC1BA,GAAuB,GAAG,GAC1BA,GAAuB,GAAG,IAEN,eAApB,eACA78B,SAASC,eAAe,cAAcs4B,MAAM8C,QAAU,QACtDr7B,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,UAE5C,eAApB,eACA74B,SAASC,eAAe,YAAYs4B,MAAM8C,QAAU,QACpDr7B,SAASC,eAAe,eAAes4B,MAAMM,gBAAkB,SAE3C,SAApB,eACA74B,SAASC,eAAe,QAAQs4B,MAAM8C,QAAU,QAChDr7B,SAASC,eAAe,WAAWs4B,MAAMM,gBAAkB,aAEvC,SAApB,eACA74B,SAASC,eAAe,QAAQs4B,MAAM8C,QAAU,QAChDr7B,SAASC,eAAe,UAAUs4B,MAAMM,gBAAkB,SAEtC,UAApB,eACA74B,SAASC,eAAe,SAASs4B,MAAM8C,QAAU,QACjDr7B,SAASC,eAAe,WAAWs4B,MAAMM,gBAAkB,SAEvC,WAApB,eACA74B,SAASC,eAAe,UAAUs4B,MAAM8C,QAAU,OAClDr7B,SAASC,eAAe,aAAas4B,MAAMM,gBAAkB,SAE7D5D,GAAOkC,aAAa,IAAM,KAC1Bn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,SAEzDpG,GAAOkC,aAAa,IAAM,KAC1Bn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,SAEzDpG,GAAOkC,aAAa,KAAO,KAC3Bn3B,SAASC,eAAe,iBAAiBs4B,MAAM8C,QAAU,UAG3DqzB,GAAY,CACdC,UDjXiC,KACjC,GAAwB,cAApB,aAAJ,CAIA,GAA4B,SAAxB,iBAAgC,CAChC,MAAMC,EAAQ,CAAC,eAAgB,gBAAiB,eAAgB,gBAAiB,gBAC3Et2D,EAAQ,CAAC,KAAM,UAAW,cAAe,WAAY,aAAc,aACzE,IAAImhC,EAAa,IAAI,EACjBo1B,EAAyB,IAAI,EAAQ,gBACrCA,EAAuBnqD,OAAO,KAC9BmqD,EAAyB,IAAI,EAAQ,IAEzC,IAAK,IAAIh2D,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMi2D,EAAQ,EAAEF,EAAM/1D,EAAI,IAC1BmH,SAASC,eAAe,aAAe,EAAIpH,EAAI,IAAIsH,YAAc7H,EAAMO,GAAK,KAAO2hC,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,aAAc,GAAG,GAAQ,MAAQ2hC,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,kBAAoB,IAClNmH,SAASC,eAAe,UAAYpH,GAAGsH,YAAc,SAAWq6B,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,aAAe,UACpH4gC,EAAaA,EAAWl4B,qBAAqButD,EAAMztD,SAAWwtD,EAAuBxtD,SAAUytD,EAAMxtD,SAAWutD,EAAuBvtD,UAAU4C,MAAM,KACvJlE,SAASC,eAAe,YAAe,EAAIpH,GAAIsH,YAAc,cAAgBq6B,GAAQs0B,EAAMtlD,UAAU,cAAkBtF,MAAM,IAAK,GAAK,KAAOs2B,GAAOf,EAAY,GAAK,KAE1Kz5B,SAASC,eAAe,eAAeE,YAAc,iBAAmBq6B,GAAOvF,GAAO+B,kBAAmB,GAAG,GAAQ,MAAQwD,GAAO,kBAAsB,GAAG,GAAQ,IACpKx6B,SAASC,eAAe,eAAeE,YAAc,wBAAwD,KAA7B,mBAAwB,IAAY6I,YAAY,GAAK,iCAAmCwxB,GAAO,oBAAwB,GAAK,IAC5Mx6B,SAASC,eAAe,eAAeE,YAAc,gBAAkBq6B,GAAOvF,GAAOwL,iBAAkB,GAAG,GAAQ,MAAQjG,GAAO,iBAAqB,GAAG,GAAQ,IACjKx6B,SAASC,eAAe,eAAeE,YAAc,qBAAuB,8BAAiC,GAAK,oBAAsBq6B,GAAO,mBAAuB,GAAK,IAC3Kx6B,SAASC,eAAe,eAAeE,YAAc,sBAAwBq6B,GAAOvF,GAAOgC,uBAAwB,GAAG,GAAQ,MAAQuD,GAAO,uBAA2B,GAAG,GAAS,IACpLx6B,SAASC,eAAe,eAAeE,YAAc,kDAAoD,gBAAqB,EAAI80B,GAAOyH,WAAW,IAAM,KAAO,EAAID,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,MAAM7tB,YAAY,GAAK,gDACnPhJ,SAASC,eAAe,kBAAkBE,YAAc,SAAWq6B,GAAOvF,GAAOmL,iBAAmB,UACpGpgC,SAASC,eAAe,iBAAiBE,YAAc,SAAWq6B,GAAOvF,GAAOyL,gBAAkB,UAClG1gC,SAASC,eAAe,uBAAuBE,YAAc,SAAWq6B,GAAOvF,GAAOwO,sBAAwB,aAC9G,IAAIsrB,EAAU,GACV95B,GAAOunB,mBAAqB,KAC5BuS,EAAU,wCAAwCv0B,GAAO,MAAY,GAAI,cAAmB,MAAY,kBAAsB,YAElIx6B,SAASC,eAAe,WAAWE,YAC/B,+DAA+Dq6B,GAAO,aAAiB,oBAAoBu0B,IAEnH,GAA4B,YAAxB,iBAAmC,CACnC,MAAMH,EAAQ,CAAC,uBAAwB,wBAAyB,uBAAwB,wBAAyB,wBAC3Gt2D,EAAQ,CAAC,KAAM,aAAc,cAAe,YAAa,WAAY,kBACrE02D,EAAc,CAAC,KAAM,cAAe,WAAY,aAAc,WAAY,gBAChFhvD,SAASC,eAAe,qBAAqBE,YAAc,YAAcq6B,GAAOvF,GAAOgO,eAAgB,GAAK,6CAA+CzI,GAAO,qBAAyB,GAAK,KAChM,IAAK,IAAI3hC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMi2D,EAAQ,EAAEF,EAAM/1D,EAAI,IAC1BmH,SAASC,eAAe,gBAAkB,EAAIpH,EAAI,IAAIsH,YAAc7H,EAAMO,GAAK,KAAO2hC,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,iBAAkB,GAAG,GAAQ,MAAQ2hC,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,qBAAsB,GAAK,IAChOmH,SAASC,eAAe,eAAkB,EAAIpH,GAAIsH,YAAc6uD,EAAYn2D,GAAK,KAAO2hC,GAAO,EAAQt2B,MAAM,IAAK,GAClHlE,SAASC,eAAe,aAAepH,GAAGsH,YAAc,SAAWq6B,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,gBAAiB,GAAK,YAElI,GAA4B,IAAxBo8B,GAAOg6B,cAA8C,IAAxBh6B,GAAOg6B,aAAoB,CACxD,MAAM/d,EAAI,MAAY,GAAI,MAAY,wBAA2B,GAAI,IAAM,MAAYjc,GAAOuO,eAAerhC,IAAI,GAAI,KACrHnC,SAASC,eAAe,gBAAgBE,YAAc,wDAA0Dq6B,GAAO,MAAY,GAAIvF,GAAOrjB,iBAAmB,+CAAiD4oB,GAAO0W,GAAK,IAEtM,IAAxBjc,GAAOg6B,eACPjvD,SAASC,eAAe,gBAAgBE,YAAc,2CAA8C80B,GAAqB,eAAI,6DAA+DuF,GAAO,2BAA+B,GAAK,MAG/O,GAA4B,WAAxB,iBAAkC,CAClC,MAAMo0B,EAAQ,CAAC,qBAAsB,sBAAuB,qBAAsB,sBAAuB,sBACnGt2D,EAAQ,CAAC,KAAM,WAAY,eAAgB,UAAW,UAAW,gBACjE02D,EAAc,CAAC,KAAM,aAAc,eAAgB,mBAAoB,cAAe,eAC5FhvD,SAASC,eAAe,sBAAsBE,YAAc,YAAcq6B,GAAOvF,GAAO4a,gBAAiB,GAAK,6BAA+BrV,GAAO,uBAA2B,GAAG,GAAQ,4BAC1L,IAAK,IAAI3hC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMi2D,EAAQ,EAAEF,EAAM/1D,EAAI,IAC1BmH,SAASC,eAAe,iBAAmB,EAAIpH,EAAI,IAAIsH,YAAc7H,EAAMO,GAAK,KAAO2hC,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,eAAgB,GAAG,GAAQ,MAAQ2hC,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,mBAAoB,GAAK,IAC7NmH,SAASC,eAAe,gBAAmB,EAAIpH,GAAIsH,YAAc6uD,EAAYn2D,GAAK,KAAO2hC,GAAO,EAAQt2B,MAAM,IAAK,GACnHlE,SAASC,eAAe,YAAcpH,GAAGsH,YAAc,SAAWq6B,GAAOvF,GAAO,WAAcp8B,EAAI,GAAK,cAAe,GAAK,UAEnG,IAAxBo8B,GAAOi6B,cAA8C,IAAxBj6B,GAAOi6B,eACpClvD,SAASC,eAAe,iBAAiBE,YAAc,sDAAwDq6B,GAAO,MAAY,GAAIvF,GAAO8iB,kBAAoB,+CAAiDvd,GAAO,MAAY,GAAI,MAAY,yBAA4B,GAAI,IAAM,MAAYvF,GAAOiR,gBAAgBxlC,IAAI,GAAI,KAAM,GAAK,KAEzT,IAAxBu0B,GAAOi6B,eACPlvD,SAASC,eAAe,iBAAiBE,YAAc,4CAA+C80B,GAAsB,gBAAI,6DAA+DuF,GAAO,+BAAmC,GAAK,MAGtP,GAA4B,aAAxB,iBAAoC,CACpC,MAAMo0B,EAAQ,CAAC,iBAAkB,kBAAmB,iBAAkB,kBAAmB,kBACnFt2D,EAAQ,CAAC,UAAW,WAAY,UAAW,UAAW,mBACtD02D,EAAc,CAAC,YAAa,cAAe,eAAgB,cAAe,eAChF,IAAK,IAAIn2D,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMi2D,EAAQ,EAAE,UAAUF,EAAM/1D,EAAI,MACpCmH,SAASC,eAAe,oBAAoBpH,KAAKsH,YAC7C,GAAG7H,EAAMO,EAAI,OAAO2hC,GAAOvF,GAAO,GAAG,WAAcp8B,EAAI,oBAAqB,GAAG,QAAW2hC,GAAOvF,GAAO,GAAG,WAAcp8B,EAAI,wBAAyB,MAC1JmH,SAASC,eAAe,oBAAoBpH,EAAI,KAAKsH,YACjD,GAAG6uD,EAAYn2D,EAAI,OAAO2hC,GAAO,EAAQt2B,MAAM,IAAK,KACxDlE,SAASC,eAAe,eAAepH,KAAKsH,YACxC,SAASq6B,GAAOvF,GAAO,GAAG,WAAcp8B,EAAI,mBAAoB,eAExEmH,SAASC,eAAe,0BAA0BE,YAAc,YAAcq6B,GAAOvF,GAAOynB,oBAAqB,GAAK,qBAAuB,4BAA+B,GAAK,mDAAqDliB,GAAO,2BAC7Ox6B,SAASC,eAAe,4BAA4BE,YAAc,oEAAsEq6B,GAAO,MAAY,0BAA8B,KAAS,GAAG,GACrMx6B,SAASC,eAAe,2BAA2BE,YAAc,yEAA2Eq6B,GAAO,MAAY,0BAA8B,MAAU,GAAG,GAC9K,IAAxBvF,GAAOk6B,cAA8C,IAAxBl6B,GAAOk6B,eACpCnvD,SAASC,eAAe,mBAAmBE,YAAc,4DAA8Dq6B,GAAO,MAAY,GAAIvF,GAAOgjB,sBAAwB,+CAAiDzd,GAAO,MAAY,GAAI,MAAY,6BAAgC,GAAI,IAAM,MAAYvF,GAAOiP,oBAAoBxjC,IAAI,GAAI,KAAM,GAAK,KAE7U,IAAxBu0B,GAAOk6B,eACPnvD,SAASC,eAAe,mBAAmBE,YAAc,8CAAiD80B,GAA0B,oBAAI,6DAA+DuF,GAAO,gCAAoC,GAAK,MAG/P,GAA4B,cAAxB,iBAAqC,CACrC,MAAMliC,EAAQ,CAAC,KAAM,MAAO,SAAU,cAAe,YAAa,iBAC5D02D,EAAc,CAAC,KAAM,gBAAiB,UAAW,aAAc,kBAAmB,iBACxF,IAAK,IAAIn2D,EAAI,EAAGA,GAAK,EAAGA,IACpBmH,SAASC,eAAe,aAAepH,GAAGsH,YAAc7H,EAAMO,GAAK,KAAO2hC,GAAOvF,GAAO,iBAAmBp8B,GAAU,MAAG,GAAG,GAAQ,MAAQ2hC,GAAOvF,GAAO,iBAAmBp8B,GAAc,UAAG,GAAK,IAClMmH,SAASC,eAAe,cAAgB,EAAIpH,IAAIsH,YAC5C6uD,EAAYn2D,GAAK,KAAO2hC,GAAQ,2BAA8B,WAAc3hC,EAAI,IAAM,GAC1FmH,SAASC,eAAe,gBAAkBpH,GAAGsH,YAAc,SAAWq6B,GAAOvF,GAAO,iBAAmBp8B,GAAS,KAAG,GAAK,cAE5HmH,SAASC,eAAe,iBAAiBE,YAAc,YAAcq6B,GAAOvF,GAAOsP,eAAiB,yEACpGvkC,SAASC,eAAe,mBAAmBE,YAAc,uCAAyCq6B,GAAOvF,GAAOgD,aAAc,GAAK,0BAA4BuC,GAAO58B,KAAKC,IAAI,MAAYo3B,GAAOgD,aAAav3B,IAAI,GAAI,IAAM,EAAG,EAAI,GAAK,GAAKu0B,GAAO4B,qBAAqB,IAAM5B,GAAOwB,SAAS,KAAO,GAAMxB,GAAOwnB,iBAAiB,GAAK,GAAMxnB,GAAOwnB,iBAAiB,IAAM,GAAMxnB,GAAOwnB,iBAAiB,KAAO,6BAAkC,IAAK,GAAG,GAAQ,IACrcz8C,SAASC,eAAe,uBAAuBE,YAAc,iCAAmCq6B,GAAOvF,GAAOm6B,0BAA4B,2CAzG1I3vD,QAAQ0G,IAAI,+CCgXhBswB,SDpQgC,KAC5B,cCoQJU,aDjQoC,KAChC,cCiQJk4B,MD9P6B,KAC7B,GAAwB,UAApB,aAAJ,CAEA,GAAwB,UAApB,aAA6B,CAC7B,MAAMC,EAAY,CACd,gBACA,gBACA,gBACA,gBACA,iBAEJtvD,SAASC,eAAe,iBAAiBE,YAAc,YAAcq6B,GAAOvF,GAAO+E,WAAY,GAAG,GAAQ,cAC1G,IAAK,IAAInhC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMi2D,EAAQ,EAAEQ,EAAUz2D,EAAI,IAC9BmH,SAASC,eAAe,OAASpH,EAAI,SAASsuD,WAAW,GAAGhnD,YAAc,UAAYq6B,GAAOvF,GAAOkI,WAAWtkC,EAAI,IAAM,IAAM2hC,GAAOwD,GAAkBnlC,IACxJmH,SAASC,eAAe,OAASpH,EAAI,OAAOsH,YAAc,SAAWq6B,GAAOgE,GAAwB3lC,EAAI,GAAKo8B,GAAOwJ,QAAQ5lC,EAAI,GAAI,GAAK,OACzImH,SAASC,eAAe,YAAcpH,GAAGsH,YAAc,YAAcq6B,GAAO,EAAIvF,GAAOoc,iBAAiB,GAAKzzC,KAAKsH,IAAI,IAAK+vB,GAAOkK,YAAY,GAAS,aAAkB2vB,GAAS,IAClLjyB,GAAuBhkC,GAAG,GAE9BmH,SAASC,eAAe,2BAA2BE,YAAc,QAAUq6B,IAAQ,EAAI58B,KAAKsH,IAAI+vB,GAAO2nB,4BAA4B,GAAI,GAAK,IAAS3nB,GAAO2nB,4BAA4B,GAAK,GAAM3nB,GAAOyH,WAAW,IAAM,GAAMzH,GAAOyH,WAAW,IAAM,IAASzH,GAAOwB,SAAS,IAAM,EAAIxB,GAAOwB,SAAS,KAAO4oB,KAA8B,GAAG,GAAQ,iCAC5Vr/C,SAASC,eAAe,uBAAuBE,YAAc,YAAcq6B,GAAQ,EAAIvF,GAAOkC,aAAa,IAAM,EAAIlC,GAAOkC,aAAa,IAAM,EAAIlC,GAAOkC,aAAa,IAAM,EAAIlC,GAAOkC,aAAa,KAAO,EAAIlC,GAAOkC,aAAa,KAAO,EAAIlC,GAAOkC,aAAa,KAAO,IAAMlC,GAAOkC,aAAa,KAAO,IAAMlC,GAAOkC,aAAa,KAAO,EAAIlC,GAAOwB,SAAS,IAAM74B,KAAKsH,IAAI,GAAI,aAAkB,IAAM,GAAM+vB,GAAOmR,aAAa,GAAK,GAAG,GAAQ,qEAAuE5L,GAAO6kB,KAA8B,GAAG,GAAQ,IAEhjB,GAAwB,cAApB,aACA,IAAK,IAAIxmD,EAAI,EAAGA,GAAK,EAAGA,IACpBmH,SAASC,eAAe,WAAapH,EAAI,SAASsH,YAAc,SAAW80B,GAAO0G,eAAe9iC,EAAI,GAAK,KAAO,GAAKo8B,GAAOwG,eAAe5iC,EAAI,GAAK,EAAI4jC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAAOj5B,KAAKqE,MAAMgzB,GAAOyH,WAAW,KAAO,MAG7P,GAAwB,cAApB,aAAiC,CACjC,MAAM4I,EAA0B,CAAC,EAAG,EAAG,GAAI,KAAM,EAAG,GACpD,IAAIC,EAAI,EACR,IAAK,IAAI1sC,EAAI,EAAGA,GAAK,EAAGA,IACpBmH,SAASC,eAAe,oBAAsBpH,EAAI,SAASsH,YAAcq6B,GAAOvF,GAAOgQ,mBAAmBpsC,GAAI,GAAG,GACjHmH,SAASC,eAAe,oBAAsBpH,EAAI,UAAUsH,YAAcq6B,GAAO,gBAAmB3hC,IACpGmH,SAASC,eAAe,6BAA+BpH,GAAGsH,YAAcq6B,GAAO58B,KAAKqH,IAAI,EAAGkgC,GAAyBlQ,GAAOgQ,mBAAmBpsC,GAAI,mBAAuBo8B,GAAO+E,WAAY/E,GAAOiQ,uBAAuB,GAAKjQ,GAAOgQ,mBAAmBpsC,KACzPmH,SAASC,eAAe,2BAA6BpH,GAAGsH,YAAcq6B,GAAO58B,KAAKqH,IAAI,oBAAyB,EAAIgwB,GAAOgQ,mBAAmBpsC,IAAKssC,GAAyBlQ,GAAOgQ,mBAAmBpsC,GAAI,mBAAuBo8B,GAAO+E,WAAY/E,GAAOiQ,uBAAuB,KACvQ,IAANrsC,IACA0sC,EAAI,GAERvlC,SAASC,eAAe,oBAAsBpH,EAAI,UAAUsH,YAAcq6B,GAAO,EAAI+K,EAAID,EAAwBzsC,GAAK,6BAAgCA,GAAI,GAAG,GAGrK,GAAwB,YAApB,aAA+B,CAC/B,MAAM2sC,EAAwB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,KACzCzhC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACjC,IAAK,IAAIlL,EAAI,EAAGA,GAAK,EAAGA,IACpB2sC,EAAsB3sC,IAAOmkC,KAA8B,IAC3Dh9B,SAASC,eAAe,kBAAoBpH,EAAI,SAASsH,YAAcq6B,GAAOvF,GAAO8P,iBAAiBlsC,GAAI,GAAG,GAC7GmH,SAASC,eAAe,kBAAoBpH,EAAI,UAAUsH,YAAcq6B,GAAO,cAAiB3hC,IAChGmH,SAASC,eAAe,2BAA6BpH,GAAGsH,YAAcq6B,GAAO58B,KAAKqH,IAAI,EAAGkgC,GAAyBlQ,GAAO8P,iBAAiBlsC,GAAI,iBAAqBo8B,GAAO+E,WAAY/E,GAAO+P,qBAAqB,GAAK/P,GAAO8P,iBAAiBlsC,KAC/OmH,SAASC,eAAe,yBAA2BpH,GAAGsH,YAAcq6B,GAAO58B,KAAKqH,IAAI,kBAAuB,EAAIgwB,GAAO8P,iBAAiBlsC,IAAKssC,GAAyBlQ,GAAO8P,iBAAiBlsC,GAAI,iBAAqBo8B,GAAO+E,WAAY/E,GAAO+P,qBAAqB,KACrQhlC,SAASC,eAAe,kBAAoBpH,EAAI,UAAUsH,YAAcq6B,GAAO,EAAIz2B,EAASlL,GAAK2sC,EAAsB3sC,GAAK,2BAA8BA,GAAI,GAAG,MC6MzK02D,WDzMkC,KACV,eAApB,cAEAt6B,GAAOyH,WAAW,KAAO,IACzB18B,SAASC,eAAe,yBAAyBE,YAAcq6B,GAAO,8BAAkC,GAAK,MCsMjHg1B,SAAUpG,GACVqG,SD1EgC,KAChC,GAAwB,aAApB,aACA,OACJzvD,SAASC,eAAe,0BAA0BknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAOya,cAAe,GAAG,GAC9G1vC,SAASC,eAAe,8BAA8BknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAO6a,eAAgB,GAAG,GACnH9vC,SAASC,eAAe,+BAA+BknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAOunB,mBAAoB,GAAG,GACxHx8C,SAASC,eAAe,4BAA4BknD,WAAW,GAAGhnD,YAAcq6B,GAAO,IAAOvF,GAAOslB,iBAAmB,KACxHv6C,SAASC,eAAe,gCAAgCknD,WAAW,GAAGhnD,YAAcq6B,GAAO,IAAOvF,GAAOqmB,kBAAoB,KAC7Ht7C,SAASC,eAAe,iCAAiCknD,WAAW,GAAGhnD,YAAcq6B,GAAO,IAAOvF,GAAO4nB,oBAAsB,KAChI78C,SAASC,eAAe,yBAAyBknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAOob,cAC3FrwC,SAASC,eAAe,0BAA0BknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAOmb,cAC5FpwC,SAASC,eAAe,mCAAmCknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAOioB,sBAAuB,GAAG,GAC/Hl9C,SAASC,eAAe,oBAAoBknD,WAAW,GAAGhnD,YAAcq6B,GAAO,WAC/Ex6B,SAASC,eAAe,+BAA+BknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAOumB,mBAAoB,GAAG,GACxHx7C,SAASC,eAAe,2BAA2BknD,WAAW,GAAGhnD,YAAcq6B,GAAOvF,GAAO8C,eAAgB,GAAG,GAChH/3B,SAASC,eAAe,cAAcE,YAClC,cAAc80B,GAAOy6B,WAAW9yD,QAAQ,YAAa,IAAMq4B,GAAO06B,WACtE,MAAMC,EAAkBhyD,KAAKqE,MAAMgzB,GAAO46B,YAAc,OAAS,EAAI56B,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,KAAO,kBAAuBzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,MAC3MozB,EAAoB,IAAM,EAAI76B,GAAOyH,WAAW,KAAO,IAAO,EAAIzH,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,KAAO,kBAAuBzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,MAOpN,GANA18B,SAASC,eAAe,qBAAqBE,YAAcq6B,GAAQ,KAAQvF,GAAO46B,YAAc,WAAc,GAAK,aAAe,EAAI56B,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,KAAO,kBAAuBzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,MAAQ,gBAC1R18B,SAASC,eAAe,oBAAoBE,YAAc,qBACpDyvD,EACA,SACAp1B,GAAOs1B,GACP,IACFF,IAAmBE,EAAiB,CACpC,MAAMtB,EAAcxuD,SAASC,eAAe,eAC5CuuD,EAAYj2B,MAAMM,gBAAkB,SACpC21B,EAAYj2B,MAAM0D,OAAS,iBAC3BuyB,EAAYuB,aAAa,OAAQ,OC8CrCC,KD3C4B,KACJ,SAApB,eAEJhwD,SAASC,eAAe,eAAeE,YAAc,YAAcq6B,GAAOvF,GAAO0D,QAAU,WAC3F34B,SAASC,eAAe,uBAAuBE,YAAc,QAAUq6B,GAAOvF,GAAO6I,aAAaoqB,gBAClGloD,SAASC,eAAe,wBAAwBE,YAAc,QAAUq6B,GAAOvF,GAAO6I,aAAa0qB,iBACnGxoD,SAASC,eAAe,sBAAsBE,YAAc,UAAY80B,GAAO6I,aAAaiiB,WAAa,OACzG//C,SAASC,eAAe,uBAAuBE,YAAc,UAAY80B,GAAO6I,aAAaoiB,YAAc,OAC3GlgD,SAASC,eAAe,qBAAqBE,YAAc,UAAY80B,GAAO6I,aAAaC,aAAe,OAC1G/9B,SAASC,eAAe,sBAAsBE,YAAc,UAAY80B,GAAO6I,aAAa6W,cAAgB,OAC5G30C,SAASC,eAAe,oBAAoBE,YAAc80B,GAAO6I,aAAa6e,iBAAmB,EAAI,SAAW,aAChH38C,SAASC,eAAe,YAAYE,YAAc,UAAY80B,GAAO6I,aAAa/iB,SAAW,OAC7F/a,SAASC,eAAe,YAAYE,YAAc,UAAY80B,GAAO6I,aAAakiB,SAAW,OAC7FhgD,SAASC,eAAe,gBAAgBE,YAAc80B,GAAO6I,aAAa2qB,aAAe,EAAI,SAAW,aACxGzoD,SAASC,eAAe,yBAAyBE,YAAc,UAAY80B,GAAO6I,aAAa4qB,mBAAqB,KACpH1oD,SAASC,eAAe,wBAAwBE,YAAc,UAAY80B,GAAO6I,aAAa6qB,cAAgB,MAC9G3oD,SAASC,eAAe,mBAAmBE,YAAc,UAAY80B,GAAO6I,aAAaikB,WAAa,OACtG/hD,SAASC,eAAe,eAAeE,YAAc80B,GAAO6I,aAAa8U,YAAc,SAAW,aAClG5yC,SAASC,eAAe,oBAAoBE,YAAc80B,GAAO6I,aAAaoW,iBAAmB,SAAW,aAC5Gl0C,SAASC,eAAe,oBAAoBE,YAAc80B,GAAO6I,aAAamY,iBAAmB,SAAW,aACzE,MAAnChhB,GAAO6I,aAAaiiB,WAChB//C,SAASC,eAAe,uBAAuBE,YAAc,SAC7DH,SAASC,eAAe,uBAAuBE,YAAc,eAAiBq6B,GAAOouB,GAAa,eAAiB,UAClF,MAArC3zB,GAAO6I,aAAaC,aAChB/9B,SAASC,eAAe,sBAAsBE,YAAc,SAC5DH,SAASC,eAAe,sBAAsBE,YAAc,eAAiBq6B,GAAOouB,GAAa,iBAAmB,UACpF,MAApC3zB,GAAO6I,aAAaoiB,YAChBlgD,SAASC,eAAe,wBAAwBE,YAAc,SAC9DH,SAASC,eAAe,wBAAwBE,YAAc,eAAiBq6B,GAAOouB,GAAa,gBAAkB,UACnF,MAAtC3zB,GAAO6I,aAAa6W,cAChB30C,SAASC,eAAe,uBAAuBE,YAAc,SAC7DH,SAASC,eAAe,uBAAuBE,YAAc,eAAiBq6B,GAAOouB,GAAa,kBAAoB,UAC1H3zB,GAAO6I,aAAa6e,iBAAmB,EAClC38C,SAASC,eAAe,0BAA0BE,YAAc,UACjEH,SAASC,eAAe,0BAA0BE,YAAc,WAAaq6B,GAAOouB,GAAa,qBAAuB,UAC3F,MAAjC3zB,GAAO6I,aAAa/iB,SAChB/a,SAASC,eAAe,kBAAkBE,YAAc,SACxDH,SAASC,eAAe,kBAAkBE,YAAc,eAAiBq6B,GAAOouB,GAAa,aAAe,UAC/E,MAAjC3zB,GAAO6I,aAAakiB,SAChBhgD,SAASC,eAAe,kBAAkBE,YAAc,SACxDH,SAASC,eAAe,kBAAkBE,YAAc,eAAiBq6B,GAAOouB,GAAa,aAAe,UAChH3zB,GAAO6I,aAAa2qB,aAAe,EAC9BzoD,SAASC,eAAe,sBAAsBE,YAAc,UAC7DH,SAASC,eAAe,sBAAsBE,YAAc,WAAaq6B,GAAOouB,GAAa,iBAAmB,UACzE,IAA3C3zB,GAAO6I,aAAa4qB,mBAChB1oD,SAASC,eAAe,0BAA0BE,YAAc,SAChEH,SAASC,eAAe,0BAA0BE,YAAc,WAAaq6B,GAAOouB,GAAa,uBAAyB,UACxF,KAAtC3zB,GAAO6I,aAAa6qB,cAChB3oD,SAASC,eAAe,yBAAyBE,YAAc,SAC/DH,SAASC,eAAe,yBAAyBE,YAAc,WAAaq6B,GAAOouB,GAAa,kBAAoB,UACrF,MAAnC3zB,GAAO6I,aAAaikB,WAChB/hD,SAASC,eAAe,oBAAoBE,YAAc,SAC1DH,SAASC,eAAe,oBAAoBE,YAAc,WAAaq6B,GAAOouB,GAAa,eAAiB,UAChH3zB,GAAO6I,aAAa8U,YAAc,EAC7B5yC,SAASC,eAAe,qBAAqBE,YAAc,SAC5DH,SAASC,eAAe,qBAAqBE,YAAc,WAAaq6B,GAAOouB,GAAa,gBAAkB,UAClH3zB,GAAO6I,aAAaoW,iBAAmB,EAClCl0C,SAASC,eAAe,0BAA0BE,YAAc,SACjEH,SAASC,eAAe,0BAA0BE,YAAc,WAAaq6B,GAAOouB,GAAa,qBAAuB,UAC5H3zB,GAAO6I,aAAamY,iBAAmB,EAClCj2C,SAASC,eAAe,0BAA0BE,YAAc,SACjEH,SAASC,eAAe,0BAA0BE,YAAc,WAAaq6B,GAAOouB,GAAa,qBAAuB,YCjB5HqH,KD/L4B,KAC5B,GAAwB,SAApB,aACA,OACJjwD,SAASC,eAAe,cAAcE,YAAc,YAAcq6B,GAAOvF,GAAOiqB,UAAW,GAAK,qBAAuB1kB,GAAO,gBAAoB,GAAK,oBAAsBA,GAAO,MAAY,MAAY,EAAGvF,GAAOiqB,WAAY,IAASO,GAA4B,OAAWxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,IAAM,OAAS,qBACtV,MAAM+wB,EAAuC,IAAhCj7B,GAAOk7B,qBAA6B,YAAc,eACzDC,EAAwC,IAAhCn7B,GAAOk7B,qBAA6Bl7B,GAAOqoB,sBAAwBroB,GAAOooB,kBACxFr9C,SAASC,eAAe,oBAAoBE,YAAc,wCAAwC80B,GAAOkjB,4BAA4B+X,kBAAqB11B,GAAO41B,KAChI,IAA7Bn7B,GAAOkC,aAAa,OACpBn3B,SAASC,eAAe,qBAAqBE,YAAckwD,GAAgBp7B,GAAOooB,mBF6C7D,MACzB,MAAMmK,EAAanG,KACnBrhD,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,QAC/Dr7B,SAASC,eAAe,UAAUknD,WAAW,GAAGhnD,YAAc,mBAC9DH,SAASC,eAAe,OAAOE,YAAcq6B,GAAO,SAAa,GACjEx6B,SAASC,eAAe,gBAAgBE,YAAc,IAAMq6B,GAAO,eAAmB,GAAG,GAAS,cAClGx6B,SAASC,eAAe,0BAA0BknD,WAAW,GAAGhnD,YAAc,mBAAqBq6B,GAAOksB,GAA+BzxB,GAAOmoB,oBAAqB,GAAG,GAAS,WACjLp9C,SAASC,eAAe,uBAAuBE,YAAc,IAAMq6B,GAAOksB,GAA+BzxB,GAAOmoB,mBAAqBoK,EAAWpK,oBAAqB,GAAG,GACxKp9C,SAASC,eAAe,8BAA8BE,YAAcq6B,GAAO,oBAAwB,GAAG,GAAQ,IAC9Gx6B,SAASC,eAAe,2BAA2BE,YAAcq6B,GAAO,iBAAqB,GAAG,GAAQ,IACxGx6B,SAASC,eAAe,wBAAwBE,YAAc,IAAMq6B,GAAOgtB,EAAWxuB,WACtFh5B,SAASC,eAAe,yBAAyBE,YAAc,IAAMq6B,GAAOgtB,EAAWltC,WACnF2a,GAAO4B,qBAAqB,GAAK,IACjC72B,SAASC,eAAe,6BAA6BE,YAAc,IAAMq6B,GAAOgtB,EAAW7sB,gBAAkB,cAC7G36B,SAASC,eAAe,8BAA8BE,YAAc,IAAMq6B,GAAOgtB,EAAW5sB,iBAAmB,cAC/G56B,SAASC,eAAe,gCAAgCE,YAAc,IAAMq6B,GAAOgtB,EAAW3sB,mBAAqB,gBACnH76B,SAASC,eAAe,4BAA4BE,YAAc,IAAMq6B,GAAOgtB,EAAW1sB,eAAiB,gBAC3G96B,SAASC,eAAe,4BAA4BE,YAAc,IAAMq6B,GAAOgtB,EAAWzsB,eAAiB,gBAC3G/6B,SAASC,eAAe,iCAAiCE,YAAc,IAAMq6B,GAAOgtB,EAAWxsB,oBAAsB,gBACrHh7B,SAASC,eAAe,gCAAgCE,YAAc,IAAMq6B,GAAOgtB,EAAWvsB,mBAAqB,kBE/DnHq1B,KCuLJvG,MAAOV,GACPkH,OD9FmC,KACnC,GAAwB,WAApB,aACA,OACJvwD,SAASC,eAAe,oBAAoBE,YAAcq6B,GAAOvF,GAAOijB,oBAAqB,GAAG,GAChG,MAAMxE,EAAWkE,KACjB53C,SAASC,eAAe,uBAAuBE,YAAcq6B,GAAOkZ,EAAS,IAC7E1zC,SAASC,eAAe,wBAAwBE,YAAcq6B,GAAOkZ,EAAS,GAAI,GAAG,GACrF1zC,SAASC,eAAe,6BAA6BE,YAAcq6B,GAAOkZ,EAAS,GAAI,GAAG,GAC1F1zC,SAASC,eAAe,wBAAwBE,YAAcq6B,GAAOkZ,EAAS,GAAI,GAAG,GACrF1zC,SAASC,eAAe,wBAAwBE,YAAcq6B,GAAOkZ,EAAS,GAAI,GAAG,GACrF1zC,SAASC,eAAe,6BAA6BE,YAAcq6B,GAAOkZ,EAAS,IACnF1zC,SAASC,eAAe,6BAA6BE,YAAcq6B,GAAOkZ,EAAS,IACnF1zC,SAASC,eAAe,gCAAgCE,YAAcq6B,GAAOkZ,EAAS,IACtF1zC,SAASC,eAAe,8BAA8BE,YAAcq6B,IAAQ,EAAI,IAAW3uB,EAAYopB,GAAOikB,kBAAoB,uBAA0BjkB,GAAOikB,gBAAgB,IAAK,GACxLl5C,SAASC,eAAe,8BAA8BE,YAAcq6B,GAAOwC,KAA8B,IAAK,GAAG,KCkFxGwzB,GAAc,KACvB,IAAI1wD,EACJE,SAASC,eAAe,eAAeE,YAAcq6B,GAAOvF,GAAO8K,OACnE//B,SAASC,eAAe,mBAAmBE,YAAcq6B,GAAOvF,GAAO+E,YACvEh6B,SAASC,eAAe,kBAAkBE,YAAcq6B,GAAOvF,GAAOuO,gBACtExjC,SAASC,eAAe,iBAAiBE,YAAcq6B,GAAOvF,GAAOiR,iBACrElmC,SAASC,eAAe,sBAAsBE,YAAcq6B,GAAOvF,GAAO4a,iBAC1E7vC,SAASC,eAAe,oBAAoBE,YAAcq6B,GAAOvF,GAAOiP,qBACxElkC,SAASC,eAAe,gBAAgBE,YAAcq6B,GAAOvF,GAAO0D,QACpE34B,SAASC,eAAe,oBAAoBE,YAAcq6B,GAAOvF,GAAO6E,gBACxE22B,KACsC,QAArC3wD,EAAK4uD,GAAU,qBAAqC,IAAP5uD,GAAyBA,EAAGvH,KAAKm2D,KAEtEgC,GAAoB,KAsB7B,GArBCz7B,GAAO8b,QAAQ,KAAmC,IAA5B9b,GAAOkC,aAAa,IACvCn3B,SAASC,eAAe,eAAes4B,MAAMM,gBAAkB,QAC/D74B,SAASC,eAAe,eAAes4B,MAAMM,gBAAkB,UAClE5D,GAAO8b,QAAQ,KAAO9b,GAAOwB,SAAS,IAAM,IAAiD,IAAzCxB,GAAOyK,iBAAiB/jB,aACzE3b,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,QAChE74B,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,UACnE5D,GAAO8b,QAAQ,KAAO9b,GAAOyH,WAAW,IAAM,IAAiD,IAAzCzH,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,cACzH5b,SAASC,eAAe,kBAAkBs4B,MAAMM,gBAAkB,QAClE74B,SAASC,eAAe,kBAAkBs4B,MAAMM,gBAAkB,UACrE5D,GAAO8b,QAAQ,IAAM9b,GAAOwB,SAAS,IAAM,GACxCz2B,SAASC,eAAe,uBAAuBs4B,MAAMM,gBAAkB,QACvE74B,SAASC,eAAe,uBAAuBs4B,MAAMM,gBAAkB,UACjC,IAAzC5D,GAAOyK,iBAAiB/jB,aACrB3b,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,UAChE74B,SAASC,eAAe,gBAAgBs4B,MAAMM,gBAAkB,SACzB,IAA1C5D,GAAOyK,iBAAiB9jB,cACrB5b,SAASC,eAAe,2BAA2Bs4B,MAAMM,gBAAkB,UAC3E74B,SAASC,eAAe,2BAA2Bs4B,MAAMM,gBAAkB,SACxC,IAAtC5D,GAAOyK,iBAAiB7jB,UACrB7b,SAASC,eAAe,sBAAsBs4B,MAAMM,gBAAkB,UACtE74B,SAASC,eAAe,sBAAsBs4B,MAAMM,gBAAkB,SAClD,cAApB,cAA2D,SAAxB,iBAAgC,CACnE,MAAMx9B,EAAI2E,SAASC,eAAe,YAC5BkH,EAAInH,SAASC,eAAe,YAC5BzD,EAAIwD,SAASC,eAAe,YAC5Bq7B,EAAIt7B,SAASC,eAAe,YAC5BwC,EAAIzC,SAASC,eAAe,YAC5B1F,EAAIyF,SAASC,eAAe,kBAC5Bs7B,EAAIv7B,SAASC,eAAe,iBAC5Bu7B,EAAIx7B,SAASC,eAAe,uBAC/Bg1B,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOwkB,eAE1Ep+C,EAAEk9B,MAAMM,gBAAkB,UAD1Bx9B,EAAEk9B,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAO0kB,gBAE1ExyC,EAAEoxB,MAAMM,gBAAkB,UAD1B1xB,EAAEoxB,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAO4kB,eAE1Er9C,EAAE+7B,MAAMM,gBAAkB,UAD1Br8B,EAAE+7B,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAO8kB,gBAE1Eze,EAAE/C,MAAMM,gBAAkB,UAD1ByC,EAAE/C,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOglB,eAE1Ex3C,EAAE81B,MAAMM,gBAAkB,UAD1Bp2B,EAAE81B,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOmL,iBAE1E7lC,EAAEg+B,MAAMM,gBAAkB,UAD1Bt+B,EAAEg+B,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOyL,gBAE1EnF,EAAEhD,MAAMM,gBAAkB,UAD1B0C,EAAEhD,MAAMM,gBAAkB,UAE3B5D,GAAO8b,QAAQ,IAA8B,IAAxB9b,GAAOwB,SAAS,MAAcxB,GAAOuO,eAAex+B,IAAIiwB,GAAOwO,sBAEnFjI,EAAEjD,MAAMM,gBAAkB,UAD1B2C,EAAEjD,MAAMM,gBAAkB,UAGlC,GAAwB,cAApB,cAA2D,YAAxB,iBAAmC,CACtE,MAAMx9B,EAAI2E,SAASC,eAAe,eAC5BkH,EAAInH,SAASC,eAAe,eAC5BzD,EAAIwD,SAASC,eAAe,eAC5Bq7B,EAAIt7B,SAASC,eAAe,eAC5BwC,EAAIzC,SAASC,eAAe,eAC5B1F,EAAIyF,SAASC,eAAe,sBAC5Bs7B,EAAIv7B,SAASC,eAAe,sBAC5Bu7B,EAAIx7B,SAASC,eAAe,sBAC5BpH,EAAImH,SAASC,eAAe,sBAC5BlG,EAAIiG,SAASC,eAAe,sBAC/Bg1B,GAAO8b,QAAQ,KAAmC,IAA5B9b,GAAOkC,aAAa,MAAclC,GAAOuO,eAAex+B,IAAIiwB,GAAOwlB,mBAA4Dp/C,EAAEk9B,MAAMM,gBAAkB,UAAhEx9B,EAAEk9B,MAAMM,gBAAkB,UACzI5D,GAAO8b,QAAQ,KAAmC,IAA5B9b,GAAOkC,aAAa,MAAclC,GAAOuO,eAAex+B,IAAIiwB,GAAO0lB,oBAA6DxzC,EAAEoxB,MAAMM,gBAAkB,UAAhE1xB,EAAEoxB,MAAMM,gBAAkB,UAC1I5D,GAAO8b,QAAQ,KAAmC,IAA5B9b,GAAOkC,aAAa,MAAclC,GAAOuO,eAAex+B,IAAIiwB,GAAO4lB,mBAA4Dr+C,EAAE+7B,MAAMM,gBAAkB,UAAhEr8B,EAAE+7B,MAAMM,gBAAkB,UACzI5D,GAAO8b,QAAQ,KAAmC,IAA5B9b,GAAOkC,aAAa,MAAclC,GAAOuO,eAAex+B,IAAIiwB,GAAO8lB,oBAA6Dzf,EAAE/C,MAAMM,gBAAkB,UAAhEyC,EAAE/C,MAAMM,gBAAkB,UAC1I5D,GAAO8b,QAAQ,KAAoC,IAA7B9b,GAAOkC,aAAa,OAAelC,GAAOuO,eAAex+B,IAAIiwB,GAAOgmB,mBAA4Dx4C,EAAE81B,MAAMM,gBAAkB,UAAhEp2B,EAAE81B,MAAMM,gBAAkB,UAC7I,IAAIP,EAAI,EACRA,GAAkE,IAA7D16B,KAAKqE,MAAM,aAAkB,GAAK,sBAAiC,IAC5C,IAAxBgzB,GAAOwB,SAAS,KAAuD,IAA1CxB,GAAOyK,iBAAiB9jB,gBACrD0c,GAAK,IAERrD,GAAOkC,aAAa,IAAM,GAAKlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM7K,EAAG,GAAK,KAAS/9B,EAAEg+B,MAAMM,gBAAkB,SAAWt+B,EAAEg+B,MAAMM,gBAAkB,UACpR5D,GAAOkC,aAAa,IAAM,GAAKlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM7K,EAAG,GAAK,KAASiD,EAAEhD,MAAMM,gBAAkB,SAAW0C,EAAEhD,MAAMM,gBAAkB,UACpR5D,GAAOkC,aAAa,IAAM,GAAKlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM7K,EAAG,GAAK,KAASkD,EAAEjD,MAAMM,gBAAkB,SAAW2C,EAAEjD,MAAMM,gBAAkB,UACpR5D,GAAOkC,aAAa,KAAO,GAAKlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM7K,EAAG,GAAK,KAASz/B,EAAE0/B,MAAMM,gBAAkB,SAAWhgC,EAAE0/B,MAAMM,gBAAkB,UACrR5D,GAAOkC,aAAa,KAAO,GAAKlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM7K,EAAG,GAAK,KAASv+B,EAAEw+B,MAAMM,gBAAkB,SAAW9+B,EAAEw+B,MAAMM,gBAAkB,UAE1R,GAAwB,UAApB,aAA6B,CAC7B,GAAwB,UAApB,aACA,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,EAAGA,IACpBo8B,GAAO+E,WAAa,GAAMh6B,SAASC,eAAe,eAAiBpH,GAAG0/B,MAAMM,gBAAkB,SAAW74B,SAASC,eAAe,eAAiBpH,GAAG0/B,MAAMM,gBAAkB,UAGrL,GAAwB,cAApB,aAAiC,CACjC,MAOMuE,EAAM,CAPFp9B,SAASC,eAAe,oBACxBD,SAASC,eAAe,oBACxBD,SAASC,eAAe,oBACxBD,SAASC,eAAe,oBACxBD,SAASC,eAAe,oBACxBD,SAASC,eAAe,oBACxBD,SAASC,eAAe,qBAElC,IAAK,IAAIpH,EAAI,EAAGA,EAAIukC,EAAIrkC,OAAQF,IAC5BukC,EAAIvkC,GAAG0/B,MAAMM,gBAAmB5D,GAAO6E,eAAiB,iCAAoCjhC,IACrFo8B,GAAO+E,WAAa,gCAAmCnhC,GAAM,SAAW,WAI3F,GAAwB,cAApB,cAA2D,WAAxB,iBACnC,IAAK,IAAIA,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAM83D,EAAS17B,GAAO8b,QAAQl4C,EAAI,IAC5BigD,EAAS7jB,GAAO,GAAG,WAAcp8B,EAAI,gBACzC83D,GAAW17B,GAAOwB,SAAS,GAAK59B,KAAOo8B,GAAOiR,gBAAgBlhC,IAAI8zC,GAE9D94C,SAASC,eAAe,YAAcpH,GAAG0/B,MAAMM,gBAAkB,UADjE74B,SAASC,eAAe,YAAcpH,GAAG0/B,MAAMM,gBAAkB,UAI/E,GAAwB,cAApB,cAA2D,aAAxB,iBACnC,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAM+3D,EAAgB37B,GAAO,WAAcp8B,EAAI,GAAK,iBACpDo8B,GAAOiP,oBAAoBl/B,IAAI4rD,GACzB5wD,SAASC,eAAe,eAAiBpH,GAAG0/B,MAAMM,gBAAkB,UACpE74B,SAASC,eAAe,eAAiBpH,GAAG0/B,MAAMM,gBAAkB,UAGlF,GAAwB,cAApB,cAA2D,cAAxB,iBAAqC,CACxE,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMg4D,EAAiB57B,GAAO,iBAAmBp8B,GAAS,KAC1Do8B,GAAOsP,eAAiBssB,EACpB7wD,SAASC,eAAe,gBAAkBpH,GAAG0/B,MAAMM,gBAAkB,UACrE74B,SAASC,eAAe,gBAAkBpH,GAAG0/B,MAAMM,gBAAkB,UAE7E,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,EAAGA,IACnBo8B,GAAOgD,aAAajzB,IAAI,MAAY,GAAIiwB,GAAOoc,iBAAiBx4C,IAAIqL,MAAM,oBAAuBrL,KAC9FmH,SAASC,eAAe,qBAAuBpH,GAAG0/B,MAAMM,gBAAkB,QAC1E74B,SAASC,eAAe,qBAAuBpH,GAAG0/B,MAAMM,gBAAkB,UAElF,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,GAAIA,IACpBo8B,GAAOgD,aAAajzB,IAAI,MAAY,GAAIiwB,GAAOoc,iBAAiBx4C,IAAIqL,MAAM,oBAAuBrL,MAAQo8B,GAAOoc,iBAAiBx4C,IAAM,EACpImH,SAASC,eAAe,qBAAuBpH,GAAG0/B,MAAMM,gBAAkB,OAC1E74B,SAASC,eAAe,qBAAuBpH,GAAG0/B,MAAMM,gBAAkB,UAGtF,GAAwB,SAApB,aAA4B,CAC3B5D,GAAOiP,oBAAoBl/B,IAAIiwB,GAAOwpB,eAAkBz+C,SAASC,eAAe,YAAYs4B,MAAMM,gBAAkB,QAAU74B,SAASC,eAAe,YAAYs4B,MAAMM,gBAAkB,UAC3L,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMi4D,EAAW77B,GAAO,WAAcp8B,EAAI,GAAK,YAC/Co8B,GAAOiqB,UAAUl6C,IAAI8rD,GACf9wD,SAASC,eAAe,UAAYpH,GAAG0/B,MAAMM,gBAAkB,QAC/D74B,SAASC,eAAe,UAAYpH,GAAG0/B,MAAMM,gBAAkB,UAEzE,IAAK,IAAIhgC,EAAI,EAAGA,GAAK,GAAIA,IACjBo8B,GAAOiqB,UAAUl6C,IAAI,MAAY,0BAA6BnM,EAAI,GAAIo8B,GAAOkK,YAAYtmC,EAAI,GAAK,uBAA0Bo8B,GAAOikB,gBAAgB,MAAMh1C,MAAM,qBAAwBrL,EAAI,KAC3LmH,SAASC,eAAe,aAAepH,GAAG0/B,MAAMM,gBAAkB,SAGlE74B,SAASC,eAAe,aAAepH,GAAG0/B,MAAMM,gBAAkB,YAKrEk4B,GAAyB,KAClC,IAAK,IAAIz4B,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,MAAM+B,EAAKr6B,SAASC,eAAe,YAAcq4B,GACjD+B,EAAG9B,MAAMM,gBAAkB,UACvB5D,GAAOyK,iBAAiB/jB,eAAiB2c,IACzC+B,EAAG9B,MAAMM,gBAAkB,QAE3B5D,GAAOyK,iBAAiB9jB,gBAAkB0c,IAC1C+B,EAAG9B,MAAMM,gBAAkB,QAGnC,IAAK,IAAIP,EAAI,GAAIA,GAAK,GAAIA,IAAK,CAC3B,MAAM+B,EAAKr6B,SAASC,eAAe,YAAcq4B,GACjD+B,EAAG9B,MAAMM,gBAAkB,UACvB5D,GAAOyK,iBAAiB7jB,YAAcyc,IACtC+B,EAAG9B,MAAMM,gBAAkB,QAG/B5D,GAAO+7B,gBACPhxD,SAASC,eAAe,kBAAkBE,YAAc,uBAGxDH,SAASC,eAAe,kBAAkBE,YAAc,wBAE5D,IAAK,IAAIm4B,EAAI,EAAGA,GAAK,GAAIA,IACrB24B,GAAqB34B,IAGhB24B,GAAwB34B,IACjC,MAAM+B,EAAKr6B,SAASC,eAAe,YAAcq4B,EAAI,SACrD,IAAI44B,EAAgB,EACpB,OAAQ54B,GACJ,KAAK,EACD44B,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzE,MACJ,KAAK,EACDw0B,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzE,MACJ,KAAK,EACDw0B,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzE,MACJ,KAAK,EACDw0B,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzE,MACJ,KAAK,EACDw0B,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzE,MACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,GACDw0B,EAAgB,GAAK,EAAIj8B,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,mBAAqB,EAAIzzB,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,GAAKxnB,GAAOwnB,iBAAiB,IAChM,MACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACDyU,EAAgB,GAAK,EAAIj8B,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,EAAIxnB,GAAOwnB,iBAAiB,IACpH,MACJ,KAAK,GACDyU,EAAgB,KAGxB72B,EAAGl6B,YAAc,GAAG80B,GAAO4B,qBAAqByB,QAAQ44B,KA8D/CC,GAA8B,KACnCl8B,GAAOm8B,qBACPpxD,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,QAC3Dr7B,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,OAC9Dr7B,SAASC,eAAe,gBAAgBs4B,MAAM84B,YAAc,aAC5DrxD,SAASC,eAAe,mBAAmBs4B,MAAM84B,YAAc,UAG/DrxD,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,OAC3Dr7B,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,QAC9Dr7B,SAASC,eAAe,gBAAgBs4B,MAAM84B,YAAc,QAC5DrxD,SAASC,eAAe,mBAAmBs4B,MAAM84B,YAAc,eAG1DZ,GAAuB,KAChC,MAAMlrB,EAAItQ,GAAO4iB,kBACVkS,EAAOuH,EAAMC,EAAOC,GAAY5Z,KAAsB6Z,OAAO,GAC9DC,EAAU,CACZ,OAAUrB,GAAgBp7B,GAAO4iB,kBACjC,SAAYrd,GAAOuvB,GAAS90B,GAAO08B,eAAe,GAAK,EAAI,EAAIpsB,GAAI,GAAG,GACtE,QAAW/K,GAAO82B,GAAQr8B,GAAO08B,eAAe,GAAK,EAAI,EAAIpsB,GAAI,GAAG,GACpE,SAAY/K,GAAO+2B,GAASt8B,GAAO08B,eAAe,GAAK,EAAI,EAAIpsB,GAAI,GAAG,GACtE,YAAe/K,GAAOg3B,GAAYv8B,GAAO08B,eAAe,GAAK,EAAI,EAAIpsB,GAAI,GAAG,GAC5E,OAAUtQ,GAAO4B,qBAAqB,IAAM,GAC5C,aAAgB,GAAG2D,GAAOwnB,KAA6B,GAAG,OAE9D,IAAK,MAAM/d,KAAOytB,EACd1xD,SAASC,eAAegkC,GAAK9jC,YAAcuxD,EAAQztB,IAGrD2tB,GAAY,CACdjD,UAAW,SACXl4B,SAAU,SACVU,aAAc,QACdk4B,MAAO,OACPE,WAAY,OACZ7yB,WAAY,QACZuzB,KAAM,QACNlG,MAAO,SACPwG,OAAQ,SACRd,SAAU,QACVO,KAAM,aAEG6B,GAAiB,KAC1B,IAAI/xD,EACJ,MAAMgyD,EAAM9xD,SAASC,eAAe,aAC9Bu4B,EAA8C,QAArC14B,EAAK8xD,GAAU,qBAAqC,IAAP9xD,EAAgBA,EAAK,SACjFgyD,EAAIv5B,MAAMM,gBAAkBL,GCrnBnBu5B,GAAkB,KAC3B,MAAMC,EAAuB,CAAC,IAAK,KAAO,IAAK,IAAK,KAAO,KAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC5ItmD,EAAO9U,OAAO8U,KAAK,sBACnBjJ,EAAIwyB,GAAOg9B,oBACjB,IAAK,MAAM9wB,KAAO,qBACd,qBAAwBA,GAAO,EAE/B1+B,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,KAAO7E,KAAKuI,IAAI,IAE7E1D,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,KAAO7E,KAAKuI,IAAI,IAE7E1D,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,EAAI,IAAM9N,KAAKuI,IAAI1D,EAAI,KAAO7E,KAAKuI,IAAI,IAE9E1D,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM9N,KAAKC,IAAI,IAAMD,KAAKuI,IAAI1D,EAAI,MAAU7E,KAAKuI,IAAI,KAElF1D,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,GAAQ9N,KAAKC,IAAI4E,EAAI,KAAO,MAEnEA,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,GAAQ9N,KAAKC,IAAI4E,EAAI,KAAO,MAEnEA,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAE/E1D,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAE/E1D,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI9N,KAAKC,IAAI4E,EAAI,IAAK,MAEzDA,GAAKuvD,EAAqB,KAC1B,qBAAwBtmD,EAAK,IAAM,EAAI,EAAI,GAAK9N,KAAKuI,IAAI1D,EAAI,KAAO7E,KAAKuI,IAAI,IAE7E1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,IAAU9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAEjF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO9N,KAAKC,IAAI,IAAMD,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,KAElF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO9N,KAAKC,IAAI,IAAMD,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,KAElF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO9N,KAAKC,IAAI,EAAID,KAAKuI,IAAI1D,EAAI,KAAO7E,KAAKuI,IAAI,GAAI,IAElF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAEhF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,EAAI,IAAM9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAEjF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAEhF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,IAAS9N,KAAKuI,IAAI1D,EAAI,MAAS7E,KAAKuI,IAAI,IAEhF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,GAAQ9N,KAAKC,IAAI4E,EAAI,IAAK,EAAI,IAEtEA,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,GAAQ9N,KAAKC,IAAI4E,EAAI,IAAK,EAAI,IAEtEA,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,KAAU9N,KAAKuI,IAAI1D,EAAI,OAAU7E,KAAKuI,IAAI,IAElF1D,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,GAAQ9N,KAAKC,IAAI4E,EAAI,IAAK,EAAI,IAEtEA,GAAKuvD,EAAqB,MAC1B,qBAAwBtmD,EAAK,KAAO,EAAI,EAAI,EAAI9N,KAAKC,IAAI4E,EAAI,KAAM,EAAI,IAE3EyvD,MAEEA,GAA0B,KAC5BlyD,SAASC,eAAe,iBAAiBE,YAAcq6B,GAAOvF,GAAOg9B,oBAAqB,GAAG,GAC7F,MAAMD,EAAuB,CAAC,IAAK,KAAO,IAAK,IAAK,KAAO,KAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC5IhmD,EAASpV,OAAOoV,OAAO,sBAC7B,IAAImmD,EAAe,OACnB,IAAK,IAAIt5D,EAAI,EAAGA,EAAIm5D,EAAqBj5D,OAAQF,IACxB,SAAjBs5D,GAA2Bl9B,GAAOg9B,oBAAsBD,EAAqBn5D,KAC7Es5D,EAAeH,EAAqBn5D,IAEpCo8B,GAAOg9B,qBAAuBD,EAAqBn5D,KACnDmH,SAASC,eAAe,aAAepH,EAAI,GAAK,OAAOsH,YAAcq6B,GAAO,IAAMxuB,EAAOnT,GAAK,IAAK,GAAG,IAE1GmH,SAASC,eAAe,aAAepH,EAAI,IAAI0/B,MAAM8C,QAAWpG,GAAOg9B,qBAAuBD,EAAqBn5D,GAAM,QAAU,OACnImH,SAASC,eAAe,iBAAiBE,YAAsC,iBAAjBgyD,EACxD,wDACA,6BAA+B33B,GAAO23B,EAAc,GAAG,GAAQ,cCjMhEC,GAAqB52D,IACwC,YAAlEwE,SAASC,eAAe,qBAAqBs4B,MAAMo0B,aACnD3sD,SAASC,eAAe,qBAAqBs4B,MAAMo0B,WAAa,WAEM,YAAtE3sD,SAASC,eAAe,yBAAyBs4B,MAAMo0B,aACvD3sD,SAASC,eAAe,yBAAyBs4B,MAAMo0B,WAAa,WAExE,oBAAyBnxD,EACzB,MAAM62D,EAAkB,CACpBn8B,EAAG,CACC79B,KAAM,6BACNkwD,YAAa,iGACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,iCAAmC1e,GAAO,oBAAuBvF,GAAOikB,gBAAgB,IAAK,GAC3LqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,uCAAyCxjB,GAAO,oBAAuBvF,GAAO+oB,qBAAqB,IAAK,GAChNvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,qCAEXt8B,EAAG,CACC99B,KAAM,6BACNkwD,YAAa,gGACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,mCAAqC1e,GAAO,mBAAsBvF,GAAOikB,gBAAgB,IAAK,GAC5LqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,wCAA0CxjB,GAAO,mBAAsBvF,GAAO+oB,qBAAqB,IAAK,GAChNvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,kCAEXr8B,EAAG,CACC/9B,KAAM,mCACNkwD,YAAa,qBACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,sCAAwC1e,GAAO,EAAI,qBAAwBvF,GAAOikB,gBAAgB,IAAK,GACrMqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,gCAAkCxjB,GAAO,EAAI,qBAAwBvF,GAAO+oB,qBAAqB,IAAK,GAC9MvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,+BAEX7gB,EAAG,CACCv5C,KAAM,iCACNkwD,YAAa,yBACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,wCAA0C1e,GAAO,4BAA+BvF,GAAOikB,gBAAgB,IAAK,GAC1MqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,wCAA0CxjB,GAAO,4BAA+BvF,GAAO+oB,qBAAqB,IAAK,GACzNvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,sCAEXp8B,EAAG,CACCh+B,KAAM,sCACNkwD,YAAa,2DACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,6BAA+B1e,GAAO,kBAAqBvF,GAAOikB,gBAAgB,IAAK,GACrLqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,6BAA+BxjB,GAAO,kBAAqBvF,GAAO+oB,qBAAqB,IAAK,GACpMvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,4CAEX5gB,EAAG,CACCx5C,KAAM,kCACNkwD,YAAa,gDACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,2BAA6B1e,GAAO,sBAAyBvF,GAAOikB,gBAAgB,IAAK,GACvLqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,2BAA6BxjB,GAAO,sBAAyBvF,GAAO+oB,qBAAqB,IAAK,GACtMvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,gCAEX3gB,EAAG,CACCz5C,KAAM,6BACNkwD,YAAa,0CACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,6BAA+B1e,GAAO,uBAA0BvF,GAAOikB,gBAAgB,IAAK,GAC1LqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,6BAA+BxjB,GAAO,uBAA0BvF,GAAO+oB,qBAAqB,IAAK,GACzMvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,iCAEX1gB,EAAG,CACC15C,KAAM,2BACNkwD,YAAa,oCACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,qCAAuC1e,GAAO,oBAAuBvF,GAAOikB,gBAAgB,IAAK,GAC/LqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,qCAAuCxjB,GAAO,oBAAuBvF,GAAO+oB,qBAAqB,IAAK,GAC9MvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,8BAEXzgB,EAAG,CACC35C,KAAM,qCACNkwD,YAAa,gCACb+J,QAAS,+CAAiD93B,GAAOvF,GAAOikB,gBAAgB,IAAM,wBAA0B1e,GAAO,yBAA4BvF,GAAOikB,gBAAgB,IAAK,GACvLqZ,QAAS,oDAAsD/3B,GAAOvF,GAAO+oB,qBAAqB,IAAM,wBAA0BxjB,GAAO,yBAA4BvF,GAAO+oB,qBAAqB,IAAK,GACtMvjC,WAAY,6BAA+B+f,GAAO,6BAAgCvF,GAAOikB,gBAAgB,IAAK,GAAK,uCAAyC1e,GAAO,6BAAgCvF,GAAO+oB,qBAAqB,IAAK,GACpOwU,mBAAoB,4CAA8Ch4B,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAOikB,gBAAgB,GAAI,GAAI,GAAK,0CAA4C1e,GAAO,EAAI58B,KAAKC,IAAIo3B,GAAO+oB,qBAAqB,GAAI,GAAI,GAAK,IACnOyU,MAAO,yCAEXxgB,GAAI,CACA55C,KAAM,yBACNkwD,YAAa,0BACb+J,QAAS,sGACTC,QAAS,qEACT93C,WAAY,gFACZ+3C,mBAAoB,GACpBC,MAAO,gCAGfzyD,SAASC,eAAe,kBAAkBE,YAAckyD,EAAgB72D,GAAOnD,KAC/E2H,SAASC,eAAe,yBAAyBE,YAAckyD,EAAgB72D,GAAO+sD,YACtFvoD,SAASC,eAAe,0BAA0BE,YAAckyD,EAAgB72D,GAAO82D,QACvFtyD,SAASC,eAAe,0BAA0BE,YAAckyD,EAAgB72D,GAAO+2D,QACvFvyD,SAASC,eAAe,oCAAoCE,YAAckyD,EAAgB72D,GAAOif,WACjGza,SAASC,eAAe,gCAAgCE,YAAckyD,EAAgB72D,GAAOg3D,mBAC7FxyD,SAASC,eAAe,yBAAyB8vD,aAAa,MAAOsC,EAAgB72D,GAAOi3D,OACxFj3D,EAAQ,KACRwE,SAASC,eAAe,cAAczE,KAAS2E,YAAcq6B,GAAOvF,GAAOikB,gBAAgB19C,IAC3FwE,SAASC,eAAe,WAAWzE,KAAS2E,YAAcq6B,GAAOvF,GAAO+oB,qBAAqBxiD,MA6ExFk3D,GAA+B,CAACC,EAAY,KACrD,MAAMC,EAAM3yD,EAAe,0BAA0B4yD,KAAKF,EAAY,GAAGG,MACzE,IAAK,IAAIj6D,EAAI,EAAGA,EAAI+5D,EAAI75D,OAAQF,IAClB,IAANA,GAAWA,EAAI,IAEnB+5D,EAAI/5D,GAAGsH,aAA8B,IAAdwyD,EAAmB19B,GAAO+oB,qBAAqBnlD,GAAKo8B,GAAO89B,mBAAmBJ,GAAW95D,IAAIgQ,aAGtHmqD,GAA4B,CAACC,GAAO,EAAMC,EAAU,KAClDD,GACAh+B,GAAO89B,mBAAmBG,GAAWj6D,MAAMm/C,KAAKnjB,GAAO+oB,sBACvD0U,GAA6BQ,KAG7Bj+B,GAAO+oB,qBAAuB/kD,MAAMm/C,KAAKnjB,GAAO89B,mBAAmBG,IACnER,OCxLR,MAAMS,GAAiB,CACnB,UAAa,EACb,KAAQ,EACR,UAAa,EACb,SAAY,EACZ,aAAgB,EAChB,MAAS,EACT,WAAc,EACd,WAAc,EACd,KAAQ,EACR,MAAS,EACT,OAAU,GAEDC,GAAc/6D,IACvB,aAAkBA,EAClB48B,GAAOo+B,UAAYF,GAAe96D,GAClCugC,KACA21B,KACA,MAAM+E,EAAaC,GAAiBt+B,GAAOo+B,WAAWC,WACtD,IAA0B,IAAtBr+B,GAAOo+B,UACP,IAAK,IAAIx6D,EAAI,EAAGA,EAAIy6D,EAAWv6D,OAAQF,IAAK,CACxC,MAAM26D,EAASxzD,SAASC,eAAeqzD,EAAWz6D,GAAG46D,UACrD,GAAID,GAA2C,YAAjCA,EAAOj7B,MAAMM,gBAA+B,CACtD5D,GAAOy0B,aAAe7wD,EACtB,MAEJ,GAAyB,IAArBo8B,GAAOo+B,WAAgD,eAA7BG,EAAOj7B,MAAM84B,YAA8B,CACrEp8B,GAAOy0B,aAAe7wD,EACtB,WAIP,CACD,MAAM66D,EAAO1zD,SAASC,eAAe,YAAYsqD,uBAAuB,kBAAkB,GAAGjqD,SAC7F,IAAK,IAAIzH,EAAI,EAAGA,EAAI66D,EAAK36D,OAAQF,IAC7B,GAAI66D,EAAK76D,GAAG4H,UAAUkzD,SAAS,gBAAiB,CAC5C1+B,GAAOy0B,aAAe7wD,EACtB,SAeH+6D,GAAmB,CAAC/6D,EAAG09B,GAAO,KAevC,GAd6C,IAAzCtB,GAAOyK,iBAAiB/jB,cAAuB9iB,GAAK,IACV,KAAtCo8B,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAO4iB,kBAAoB,KACvE5iB,GAAOyK,iBAAiB/jB,aAAe9iB,EACvC,GAAM,yBAAyB,EAAO,kBACtCo8B,GAAO6a,gBAAkB,GAGa,IAAzC7a,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,eAAyB/iB,GAAK,GAAKA,EAAI,KACpE,KAAtCo8B,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAO4iB,kBAAoB,KACvE5iB,GAAOyK,iBAAiB9jB,cAAgB/iB,EACxC,GAAM,0BAA0B,EAAO,kBACvCo8B,GAAOunB,oBAAsB,GAGjCvnB,GAAO4B,qBAAqB,IAAM,GACY,IAAzC5B,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,eAA6D,IAAtCqZ,GAAOyK,iBAAiB7jB,WAAqBhjB,GAAK,KAChJ,GAAM,sBAAsB,EAAO,kBACnCo8B,GAAOyK,iBAAiB7jB,UAAYhjB,EACM,KAAtCo8B,GAAOyK,iBAAiB7jB,YACxBoZ,GAAOiqB,UAAY,IAAI,EAAQ,MAEO,KAAtCjqB,GAAOyK,iBAAiB7jB,WAAkB,CAC1CoZ,GAAOikB,gBAAgB,GAAK,EAC5BjkB,GAAO+oB,qBAAqB,GAAK,EACjC,IAAK,IAAInlD,EAAI,EAAGA,GAAK,EAAGA,IACpBo8B,GAAOikB,gBAAgBrgD,GAAK,GAK5Ck4D,KACA8C,GAAuBh7D,IAClB09B,GAAQtB,GAAO6+B,sBAChBC,KAEyC,IAAzC9+B,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,eAA6D,IAAtCqZ,GAAOyK,iBAAiB7jB,WAAmBoZ,GAAOkC,aAAa,KAAO,GACnKhC,EAAiB,MAGZ6+B,GAAkB,CAACC,EAAUz6B,KACtCvE,GAAOuE,EAAO,aAAey6B,EAC7B,IAAI54D,EAAI,CAAC,MAAO,MAAO,UAAW,YAAY44D,EAASprD,WAAW9P,OAAS,GAEvEuiC,EAAI,GACRA,GAFU9B,EAAOn+B,EAGjB2E,SAASC,eAAeq7B,GAAG/C,MAAMM,gBAAkB,QAClC,IAAbo7B,IACA54D,EAAI,MACJigC,EAAI9B,EAAOn+B,EACX2E,SAASC,eAAeq7B,GAAG/C,MAAMM,gBAAkB,SAEtC,KAAbo7B,IACA54D,EAAI,MACJigC,EAAI9B,EAAOn+B,EACX2E,SAASC,eAAeq7B,GAAG/C,MAAMM,gBAAkB,SAEtC,MAAbo7B,IACA54D,EAAI,UACJigC,EAAI9B,EAAOn+B,EACX2E,SAASC,eAAeq7B,GAAG/C,MAAMM,gBAAkB,SAEtC,MAAbo7B,IACA54D,EAAI,WACJigC,EAAI9B,EAAOn+B,EACX2E,SAASC,eAAeq7B,GAAG/C,MAAMM,gBAAkB,UAG9Cq7B,GAAer7D,IACd,IAANA,IAAuC,IAA5Bo8B,GAAO+Q,YAAYG,MAC9BlR,GAAO+Q,YAAYG,MAAO,EAC1BnmC,SAASC,eAAe,kBAAkBE,YAAc,YAE7C,IAANtH,IAAuC,IAA5Bo8B,GAAO+Q,YAAYG,OACnClR,GAAO+Q,YAAYG,MAAO,EAC1BnmC,SAASC,eAAe,kBAAkBE,YAAc,aAElD,IAANtH,IAA2C,IAAhCo8B,GAAO+Q,YAAYtqB,UAC9BuZ,GAAO+Q,YAAYtqB,UAAW,EAC9B1b,SAASC,eAAe,sBAAsBE,YAAc,YAEjD,IAANtH,IAA2C,IAAhCo8B,GAAO+Q,YAAYtqB,WACnCuZ,GAAO+Q,YAAYtqB,UAAW,EAC9B1b,SAASC,eAAe,sBAAsBE,YAAc,aAEtD,IAANtH,IAA4C,IAAjCo8B,GAAO+Q,YAAYK,WAC9BpR,GAAO+Q,YAAYK,WAAY,EAC/BrmC,SAASC,eAAe,uBAAuBE,YAAc,YAElD,IAANtH,IAA4C,IAAjCo8B,GAAO+Q,YAAYK,YACnCpR,GAAO+Q,YAAYK,WAAY,EAC/BrmC,SAASC,eAAe,uBAAuBE,YAAc,aAEvD,IAANtH,IAA6C,IAAlCo8B,GAAO+Q,YAAYC,YAC9BhR,GAAO+Q,YAAYC,YAAa,EAChCjmC,SAASC,eAAe,uBAAuBE,YAAc,YAElD,IAANtH,IAA6C,IAAlCo8B,GAAO+Q,YAAYC,aACnChR,GAAO+Q,YAAYC,YAAa,EAChCjmC,SAASC,eAAe,uBAAuBE,YAAc,aAEvD,IAANtH,IAA8C,IAAnCo8B,GAAO+Q,YAAYM,aAC9BrR,GAAO+Q,YAAYM,aAAc,EACjCtmC,SAASC,eAAe,uBAAuBE,YAAc,YAElD,IAANtH,IAA8C,IAAnCo8B,GAAO+Q,YAAYM,cACnCrR,GAAO+Q,YAAYM,aAAc,EACjCtmC,SAASC,eAAe,uBAAuBE,YAAc,cAG9D,SAASg0D,GAAKC,GACjB,MAAMD,EAAO,CACT,KAAM,CAAEE,QAAS,WAAYC,UAAU,GACvCzH,EAAG,CAAEwH,QAAS,OAAQC,SAAUr/B,GAAOyQ,QAAQY,aAC/CpQ,EAAG,CAAEm+B,QAAS,YAAaC,UAAU,GACrCn+B,EAAG,CAAEk+B,QAAS,WAAYC,UAAU,GACpCl+B,EAAG,CAAEi+B,QAAS,eAAgBC,SAAUr/B,GAAOyQ,QAAQolB,UACvDlZ,EAAG,CAAEyiB,QAAS,QAASC,SAAUr/B,GAAOyQ,QAAQhqB,UAChD2a,EAAG,CAAEg+B,QAAS,aAAcC,SAAUr/B,GAAOyQ,QAAQW,WACrDwL,EAAG,CAAEwiB,QAAS,aAAcC,SAAUr/B,GAAOyQ,QAAQY,aACrDwL,EAAG,CAAEuiB,QAAS,OAAQC,SAAUr/B,GAAOkC,aAAa,KAAO,GAC3D4a,EAAG,CAAEsiB,QAAS,QAASC,SAAUr/B,GAAOkC,aAAa,KAAO,GAC5D6a,EAAG,CAAEqiB,QAAS,SAAUC,SAAUr/B,GAAOkC,aAAa,KAAO,IAEjE,YAAuB,IAAZi9B,EACAD,EAEJA,EAAKC,GAET,MAAMb,GAAoBa,IACb,CACZ,KAAM,CACFG,YAAaC,GACblB,WAAY,CACR,CAAEmB,SAAU,gBAAiBH,UAAU,GACvC,CAAEG,SAAU,gBAAiBH,UAAU,GACvC,CAAEG,SAAU,mBAAoBH,UAAU,GAC1C,CAAEG,SAAU,qBAAsBH,SAAUr/B,GAAOyQ,QAAQhqB,UAC3D,CAAE+4C,SAAU,sBAAuBH,SAAUr/B,GAAO8C,eAAiB,GACrE,CAAE08B,SAAU,gBAAiBH,UAAU,KAG/CzH,EAAG,CAAEyG,WAAY,IACjBp9B,EAAG,CACCq+B,YAAaG,GACbpB,WAAY,CACR,CAAEmB,SAAU,OAAQH,UAAU,EAAMb,SAAU,wBAC9C,CAAEgB,SAAU,UAAWH,SAAUr/B,GAAOyQ,QAAQhqB,SAAU+3C,SAAU,2BACpE,CAAEgB,SAAU,SAAUH,SAAUr/B,GAAOyQ,QAAQW,UAAWotB,SAAU,0BACpE,CAAEgB,SAAU,WAAYH,SAAUr/B,GAAOyQ,QAAQY,YAAamtB,SAAU,4BACxE,CAAEgB,SAAU,YAAaH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,+BAGnFt9B,EAAG,CAAEm9B,WAAY,IACjBl9B,EAAG,CAAEk9B,WAAY,IACjB1hB,EAAG,CACC2iB,YAAaI,GACbrB,WAAY,CACR,CAAEmB,SAAU,EAAGH,SAAUr/B,GAAOyQ,QAAQhqB,SAAU+3C,SAAU,qBAC5D,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,uBAGzEp9B,EAAG,CAAEi9B,WAAY,IACjBzhB,EAAG,CAAEyhB,WAAY,IACjBxhB,EAAG,CAAEwhB,WAAY,IACjBvhB,EAAG,CACCwiB,YAAaK,GACbtB,WAAY,CACR,CAAEmB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,qBACjE,CAAEgB,SAAU,EAAGH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,uBAGzEzhB,EAAG,CACCuiB,YAAaM,GACbvB,WAAY,CACR,CAAEmB,UAAU,EAAMH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,gBACpE,CAAEgB,UAAU,EAAOH,SAAUr/B,GAAOkC,aAAa,KAAO,EAAGs8B,SAAU,sBAIlEW,IAENU,GAAoB,CAACC,EAAM,EAAGC,GAAO,KAC9C,GAAIA,EAAM,CACN//B,GAAOo+B,WAAa0B,EACpB,MAAME,EAASr+D,OAAO8U,KAAKyoD,MAAQloD,QAAO,CAAC5Q,EAAG8L,IAAMvJ,KAAKqH,IAAI5J,GAAI8L,KAAI,KAC/D+tD,EAASt+D,OAAO8U,KAAKyoD,MAAQloD,QAAO,CAAC5Q,EAAG8L,IAAMvJ,KAAKsH,IAAI7J,GAAI8L,IAAIguD,KAC/DC,EAAiB,KACfngC,GAAOo+B,YAAc4B,EAAS,IAC9BhgC,GAAOo+B,UAAY6B,GAEnBjgC,GAAOo+B,YAAc6B,EAAS,IAC9BjgC,GAAOo+B,UAAY4B,IAI3B,IADAG,KACQjB,GAAKl/B,GAAOo+B,WAAWiB,UAC3Br/B,GAAOo+B,WAAa0B,EACpBK,IAEJhC,GAAWe,GAAKl/B,GAAOo+B,WAAWgB,aAEjC,CACD,MAAMf,EAAaC,GAAiBt+B,GAAOo+B,WAAWC,WACtD,GAA0B,IAAtBA,EAAWv6D,OACX,OACJk8B,GAAOy0B,cAAgBqL,EACvB,MAAMK,EAAiB,KACnB,MAAMC,EAAa/B,EAAWv6D,OAC9Bk8B,GAAOy0B,cAAgBz0B,GAAOy0B,aAAe2L,GAAcA,GAG/D,IADAD,KACQ9B,EAAWr+B,GAAOy0B,cAAc4K,UACpCr/B,GAAOy0B,cAAgBqL,EACvBK,IAEJE,GAAargC,GAAOo+B,UAAWp+B,GAAOy0B,cAE1CmI,MAESyD,GAAe,CAAClB,EAAU,EAAGmB,EAAS,KAC/C,GAAIpB,GAAKC,GAASE,UAAYf,GAAiBa,GAASd,WAAWv6D,OAAS,EACxE,IAAiB,IAAbq7D,EAAgB,CAChB,MAAMoB,EAAMx1D,SAASC,eAAe,YAAYsqD,uBAAuB,kBAAkB,GAAGjqD,SAASi1D,GACjGhC,GAAiBa,GAASd,WAAWiC,GAAQjB,UAC7Cf,GAAiBa,GAASG,YAAYhB,GAAiBa,GAASd,WAAWiC,GAAQd,SAAUe,QAG7FjC,GAAiBa,GAASd,WAAWiC,GAAQjB,UAC7Cf,GAAiBa,GAASG,YAAYhB,GAAiBa,GAASd,WAAWiC,GAAQd,WAItFgB,GAAmB58D,IAClB,IAANA,EAC4B,IAAxBo8B,GAAOg6B,cAA8C,IAAxBh6B,GAAOg6B,cACpCh6B,GAAOg6B,aAAe,EACtBjvD,SAASC,eAAe,sBAAsBE,YAAc,eAG5D80B,GAAOg6B,aAAe,EACtBjvD,SAASC,eAAe,sBAAsBE,YAAc,gBAGrD,IAANtH,EACuB,IAAxBo8B,GAAOi6B,cAA8C,IAAxBj6B,GAAOi6B,cACpCj6B,GAAOi6B,aAAe,EACtBlvD,SAASC,eAAe,uBAAuBE,YAAc,eAG7D80B,GAAOi6B,aAAe,EACtBlvD,SAASC,eAAe,uBAAuBE,YAAc,gBAGtD,IAANtH,IACuB,IAAxBo8B,GAAOk6B,cAA8C,IAAxBl6B,GAAOk6B,cACpCl6B,GAAOk6B,aAAe,EACtBnvD,SAASC,eAAe,yBAAyBE,YAAc,eAG/D80B,GAAOk6B,aAAe,EACtBnvD,SAASC,eAAe,yBAAyBE,YAAc,kBAkB9Du1D,GAAa,KACtB,MAAMC,EAAQ31D,SAASuqD,uBAAuB,QAC9C,IAAK,MAAMh0B,KAAQt9B,MAAMm/C,KAAKud,GAAQ,CAClC,MAAMn7B,EAASjE,EAAKk4B,aAAa,WAAa,WACxCmH,EAAWr/B,EAAKk4B,aAAa,YACnC,GAAImH,QACA,SAEJ,MAAMC,EAAiBr7B,EAAO59B,QAAQ,IAAKq4B,GAAO8b,SAAS6kB,GAAY,KAAO,OAC9Er/B,EAAKp2B,YAAc01D,EACnBt/B,EAAKgC,MAAM0D,OAAS,cAAgBhH,GAAO8b,SAAS6kB,GAAY,QAAU,SAarEE,GAAqB,KAC9B,MAAMz7B,EAAKr6B,SAASC,eAAe,sBAUnC,GATIg1B,GAAOwf,oBACPxf,GAAOwf,oBAAqB,EAC5Bpa,EAAGl6B,YAAc,iBACjB80B,GAAOyf,aAAe,IAGtBzf,GAAOwf,oBAAqB,EAC5Bpa,EAAGl6B,YAAc,kBAEhB80B,GAAOwf,mBACR,IAAK,IAAI57C,EAAI,EAAGA,GAAKy8C,GAAuBrgB,IAASp8B,IAAK,CACtD,MAAMC,EAAIkH,SAASC,eAAe,MAAQpH,GACb,IAAzBo8B,GAAOyH,WAAW7jC,KAClBC,EAAEy/B,MAAMM,gBAAkB,SAE1B,EAAI5D,GAAOyH,WAAW7jC,IAAMo8B,GAAOyH,WAAW7jC,GAAK,oBAAuBA,KAC1EC,EAAEy/B,MAAMM,gBAAkB,UAE1B5D,GAAOyH,WAAW7jC,KAAO,oBAAuBA,KAChDC,EAAEy/B,MAAMM,gBAAkB,SAItC,GAAI5D,GAAOwf,oBAAiD,IAA3Bxf,GAAOmR,aAAa,GAAU,CAC3DnR,GAAOyf,aAAe,sBAAyBzf,GAAOmgB,qBACtD,MAAMC,EAAMr1C,SAASC,eAAe,MAAQg1B,GAAOyf,cAC/CW,IACAA,EAAI9c,MAAMM,gBAAkB,YAG3Bk9B,GAAuBv6D,IAChC,MAAM6+B,EAAKr6B,SAASC,eAAe,uBACrB,IAAVzE,EACIy5B,GAAO4yB,qBACP5yB,GAAO4yB,qBAAsB,EAC7BxtB,EAAGl6B,YAAc,kBACjBH,SAASC,eAAe,uBAAuBs4B,MAAM0D,OAAS,gBAC9DhH,GAAO+gC,cAAgB,IAGvB/gC,GAAO4yB,qBAAsB,EAC7BxtB,EAAGl6B,YAAc,iBACjBH,SAASC,eAAe,uBAAuBs4B,MAAM0D,OAAS,mBAG7DhH,GAAO4yB,qBAAuB5yB,GAAO6I,aAAaC,aAAe,KACtE9I,GAAO+gC,cAAgBx6D,GAE3B,IAAK,IAAI3C,EAAI,EAAGA,GAAK,EAAGA,IACpBmH,SAASC,eAAe,OAASpH,GAAG0/B,MAAMM,gBAAkB5D,GAAO+gC,gBAAkBn9D,EAAI,SAAW,UAExG8jC,MAES+3B,GAAwBx5D,IACjC,iBAAsBA,EACtB,MAAM+6D,EAAS,CACX,KAAQ,CACJA,OAAQ,gBACRzC,OAAQ,uBACR9J,aAAc,GAElB,QAAW,CACPuM,OAAQ,WACRzC,OAAQ,0BACR9J,aAAc,GAElB,OAAU,CACNuM,OAAQ,eACRzC,OAAQ,yBACR9J,aAAc,GAElB,SAAY,CACRuM,OAAQ,gBACRzC,OAAQ,2BACR9J,aAAc,GAElB,UAAa,CACTuM,OAAQ,YACRzC,OAAQ,4BACR9J,aAAc,IAGtB,IAAK,MAAMzlB,KAAOgyB,EACdj2D,SAASC,eAAeg2D,EAAOhyB,GAAKgyB,QAAQ19B,MAAM8C,QAAU,OAC5Dr7B,SAASC,eAAeg2D,EAAOhyB,GAAKuvB,QAAQj7B,MAAMM,gBAAkB,UAExE74B,SAASC,eAAeg2D,EAAO,kBAAqBA,QAAQ19B,MAAM8C,QAAU,QAC5Er7B,SAASC,eAAeg2D,EAAO,kBAAqBzC,QAAQj7B,MAAMM,gBAAkB,UACpF5D,GAAOy0B,aAAeuM,EAAO,kBAAqBvM,cAEzCiL,GAAoBn5D,IAE7B,aADgB,CAAC,QAAS,YAAa,YAAa,WAC1BA,EAAQ,GAClC,IAAK,IAAI3C,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMwC,EAAI2E,SAASC,eAAe,mBAAqBpH,GACjDsO,EAAInH,SAASC,eAAe,gBAAkBpH,GAChDA,IAAM2C,GACNH,EAAEk9B,MAAM0D,OAAS,iBACjB5gC,EAAEk9B,MAAMM,gBAAkB,UAC1B1xB,EAAEoxB,MAAM8C,QAAU,UAGlBhgC,EAAEk9B,MAAM0D,OAAS,mBACjB5gC,EAAEk9B,MAAMM,gBAAkB,UAC1B1xB,EAAEoxB,MAAM8C,QAAU,QAG1BpG,GAAOy0B,aAAeluD,EAAQ,GA0B5Bg5D,GAAyB,CAAC0B,EAAQC,KAAkBC,OApgBJx2D,OAogBc,EApgBLy2D,OAogBa,EApgBEC,EAogBc,YACxF,MAAMC,EAAWv2D,SAASC,eAAei2D,GACzC,IAAIK,EAAS91D,UAAUkzD,SAAS,gBAQhC,GALmBwC,EAAcK,WACtBC,iBAAiB,iBAAiBl6D,SAAQ4K,GAAKA,EAAE1G,UAAUi2D,OAAO,kBAC7EP,EAAc11D,UAAUC,IAAI,gBAC5B61D,EAASC,WAAWC,iBAAiB,iBAAiBl6D,SAAQ25D,GAAUA,EAAOz1D,UAAUi2D,OAAO,kBAChGH,EAAS91D,UAAUC,IAAI,gBACR,qBAAXw1D,EAA+B,CAC/B,MAAMS,EAAe,WACO,aAApB,cACApgB,GAASpqC,GF7gBrBnM,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,yBAA6B,GAAG,GAC1Fx6B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,yBAA8B,EAAI,EAAIvF,GAAOyH,WAAW,IAAM,EAAIzH,GAAOyH,WAAW,IAAM,EAAIzH,GAAOyH,WAAW,IAAM,0BAA8B,GAAG,GACjN18B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO58B,KAAKqE,MAAMrE,KAAKC,IAAI,aAAkB,qBAA0B,GAAI,MAAO,GAAG,GACxImC,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAsB,EAAlB,aAAsB,IAAM,qBAAyB,GAAG,GACtHx6B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO58B,KAAKC,IAAI,KAAMo3B,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,KAAM,GAAG,GAC1Lz2B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO58B,KAAKC,IAAI,KAAMo3B,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,KAAM,GAAG,GAC1Jn3B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,GAAQvF,GAAOyH,WAAW,GAAI,GAAG,GAC/F18B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,IAASvF,GAAOyH,WAAW,GAAK,IAASzH,GAAOyH,WAAW,GAAK,EAAI,GAAKzH,GAAOyH,WAAW,GAAK,KAAUzH,GAAOyH,WAAW,GAAK,KAAUzH,GAAOyH,WAAW,IAAK,GAAG,GACnO18B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,IAASvF,GAAOyH,WAAW,IAAK,GAAG,GACjG18B,SAASC,eAAe,QAAQE,YAAc,IAAMq6B,GAAO,KAAM,GAAG,GACpEx6B,SAASC,eAAe,QAAQE,YAAc,IAAMq6B,GAAO58B,KAAKsH,IAAI,GAAI,EAAI+vB,GAAOwnB,iBAAiB,GAAK,IAAM,mBAAsBxnB,GAAOikB,gBAAgB,KAAO,EAAIt7C,KAAK0F,IAAI2xB,GAAOikB,gBAAgB,GAAKjkB,GAAOikB,gBAAgB,MAAO,GAAG,GAC7Ol5C,SAASC,eAAe,QAAQE,YAAcq6B,GAAO,kBAAsB,GAAG,GAG9Ex6B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,wBAA4B,GAAG,GACzFx6B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAsJ,IAA/I58B,KAAKqE,MAAMrE,KAAKqE,MAAM,aAAkB,GAAK,sBAA2BrE,KAAKqE,MAAM,GAAK,aAAkB,GAAK,sBAA2B,GAAW,IAAK,GAAG,GACvNjC,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,aAAkB,IAAM,qBAAyB,GAAG,GAClHx6B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO58B,KAAKC,IAAI,KAAMo3B,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,MAAQ,EAA0B,EAAtBxB,GAAOwB,SAAS,IAAU,MAAQ,EAAIxB,GAAOwB,SAAS,KAAO,EAAI,MAAO,GAAG,GACxQz2B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO58B,KAAKC,IAAI,KAAMo3B,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,KAAM,GAAG,GAC1Jn3B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,GAAQvF,GAAOyH,WAAW,GAAI,GAAG,GAC/F18B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,IAASvF,GAAOyH,WAAW,IAAM,IAASzH,GAAOyH,WAAW,IAAM,EAAI,GAAKzH,GAAOyH,WAAW,IAAM,KAAUzH,GAAOyH,WAAW,IAAM,KAAUzH,GAAOyH,WAAW,IAAK,GAAG,GACvO18B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAO,EAAI,IAASvF,GAAOyH,WAAW,IAAK,GAAG,GACjG18B,SAASC,eAAe,OAAOE,YAAc,IAAMq6B,GAAOilB,GAA4B,IAAKxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,GAAK,IAAK,GAAG,GAC7Jn/B,SAASC,eAAe,QAAQE,YAAc,IAAMq6B,GAAO,yBAA6B,GAAG,GAC3Fx6B,SAASC,eAAe,QAAQE,YAAc,IAAMq6B,GAAO,KAAM,GAAG,GACpEx6B,SAASC,eAAe,QAAQE,YAAc,IAAMq6B,GAAO58B,KAAKsH,IAAI,GAAI,EAAI+vB,GAAOwnB,iBAAiB,GAAK,IAAM,oBAAuBxnB,GAAOikB,gBAAgB,KAAO,EAAIt7C,KAAK0F,IAAI2xB,GAAOikB,gBAAgB,GAAKjkB,GAAOikB,gBAAgB,MAAO,GAAG,GAC9Ol5C,SAASC,eAAe,QAAQE,YAAcq6B,GAAO,iBAAqB,GAAG,GAwChC,MAC7C,MAAM4C,EAAMyZ,GAAmB,YAAY,GACrCpB,EAAM,CACRvf,EAAG,CAAE0gC,IAAK,EAAGC,KAAM,0BACnB1gC,EAAG,CAAEygC,IAAK,EAAGC,KAAM,0BACnBzgC,EAAG,CAAEwgC,IAAK,EAAGC,KAAM,0BACnBjlB,EAAG,CAAEglB,IAAK,EAAGC,KAAM,wBACnBxgC,EAAG,CAAEugC,IAAK,EAAGC,KAAM,yBACnBhlB,EAAG,CAAE+kB,IAAK,EAAGC,KAAM,+BACnB/kB,EAAG,CAAE8kB,IAAK,EAAGC,KAAM,6BACnB9kB,EAAG,CAAE6kB,IAAK,EAAGC,KAAM,2BACnB7kB,EAAG,CAAE4kB,IAAK,EAAGC,KAAM,kBACnB5kB,GAAI,CAAE2kB,IAAK,EAAGC,KAAM,2BACpB/J,GAAI,CAAE8J,IAAK,EAAGC,KAAM,wBACpB9J,GAAI,CAAE6J,IAAK,EAAGC,KAAM,uBACpB7J,GAAI,CAAE4J,IAAK,EAAGC,KAAM,sBACpB5J,GAAI,CAAE2J,IAAK,EAAGC,KAAM,iBACpB3J,GAAI,CAAE0J,IAAK,EAAGC,KAAM,kBACpB1J,GAAI,CAAEyJ,IAAK,EAAGC,KAAM,gCACpBzJ,GAAI,CAAEwJ,IAAK,EAAGC,KAAM,8BACpBxJ,GAAI,CAAEuJ,IAAK,EAAGC,KAAM,qBACpBvJ,GAAI,CAAEsJ,IAAK,EAAGC,KAAM,sBACpBtJ,GAAI,CAAEqJ,IAAK,EAAGC,KAAM,mBACpBrJ,GAAI,CAAEoJ,IAAK,EAAGC,KAAM,kBACpBpJ,GAAI,CAAEmJ,IAAK,EAAGC,KAAM,mBACpBnJ,GAAI,CAAEkJ,IAAK,EAAGC,KAAM,kBAExB,IAAK,IAAIh+D,EAAI,EAAGA,EAAIukC,EAAIrkC,OAAQF,IACXmH,SAASC,eAAe,UAAUpH,EAAI,KAC9CsuD,WAAW,GAAGhnD,YAAcs1C,EAAI58C,EAAI,GAAGg+D,KAChD72D,SAASC,eAAe,OAAOpH,EAAI,KAAKsH,YAAc,IAAIq6B,GAAO4C,EAAIvkC,GAAI48C,EAAI58C,EAAI,GAAG+9D,KAAK,KAE7F52D,SAASC,eAAe,SAASE,YAAc,IAAIq6B,GAAOqc,GAAmB,YAAY,GAAM,GAAO,ME+a9FigB,GFrfiC,MACzC,MAAM15B,EAAM0kB,IAAwB,GAC9BrM,EAAM,CACRvf,EAAG,CAAE0gC,IAAK,EAAGC,KAAM,8BACnB1gC,EAAG,CAAEygC,IAAK,EAAGC,KAAM,gBACnBzgC,EAAG,CAAEwgC,IAAK,EAAGC,KAAM,kBACnBjlB,EAAG,CAAEglB,IAAK,EAAGC,KAAM,kBACnBxgC,EAAG,CAAEugC,IAAK,EAAGC,KAAM,qBACnBhlB,EAAG,CAAE+kB,IAAK,EAAGC,KAAM,qBACnB/kB,EAAG,CAAE8kB,IAAK,EAAGC,KAAM,qBACnB9kB,EAAG,CAAE6kB,IAAK,EAAGC,KAAM,qBACnB7kB,EAAG,CAAE4kB,IAAK,EAAGC,KAAM,qBACnB5kB,GAAI,CAAE2kB,IAAK,EAAGC,KAAM,kBACpB/J,GAAI,CAAE8J,IAAK,EAAGC,KAAM,iBACpB9J,GAAI,CAAE6J,IAAK,EAAGC,KAAM,kBACpB7J,GAAI,CAAE4J,IAAK,EAAGC,KAAM,iBACpB5J,GAAI,CAAE2J,IAAK,EAAGC,KAAM,kBACpB3J,GAAI,CAAE0J,IAAK,EAAGC,KAAM,gCACpB1J,GAAI,CAAEyJ,IAAK,EAAGC,KAAM,oCACpBzJ,GAAI,CAAEwJ,IAAK,EAAGC,KAAM,6BACpBxJ,GAAI,CAAEuJ,IAAK,EAAGC,KAAM,kBACpBvJ,GAAI,CAAEsJ,IAAK,EAAGC,KAAM,wBACpBtJ,GAAI,CAAEqJ,IAAK,EAAGC,KAAM,sBACpBrJ,GAAI,CAAEoJ,IAAK,EAAGC,KAAM,+BACpBpJ,GAAI,CAAEmJ,IAAK,EAAGC,KAAM,+BACpBnJ,GAAI,CAAEkJ,IAAK,EAAGC,KAAM,qBACpBlJ,GAAI,CAAEiJ,IAAK,EAAGC,KAAM,yBACpBjJ,GAAI,CAAEgJ,IAAK,EAAGC,KAAM,4BACpBhJ,GAAI,CAAE+I,IAAK,EAAGC,KAAM,gBACpB/I,GAAI,CAAE8I,IAAK,EAAGC,KAAM,yBAExB,IAAK,IAAIh+D,EAAI,EAAGA,EAAIukC,EAAIrkC,OAAQF,IACZmH,SAASC,eAAe,SAASpH,EAAI,KAC7CsuD,WAAW,GAAGhnD,YAAcs1C,EAAI58C,EAAI,GAAGg+D,KAC/C72D,SAASC,eAAe,MAAMpH,EAAI,KAAKsH,YAAc,IAAIq6B,GAAO4C,EAAIvkC,GAAI48C,EAAI58C,EAAI,GAAG+9D,KAAK,KAE5F52D,SAASC,eAAe,QAAQE,YAAc,IAAIq6B,GAAOsnB,KAA2B,MEkd5EiV,GACKR,EAAS91D,UAAUkzD,SAAS,iBAC7Bpd,GAASpqC,IAEXA,EAAKqqC,GAASmgB,EAAc,KAClCA,SAEC,GAAe,kBAAXT,EAA4B,CACjC,MAAMc,EAAUh3D,SAASC,eAAe,cAClCg3D,EAAUj3D,SAASC,eAAe,cACxC,GAAI+2D,EAAQ52D,kBAAoB,GAAK62D,EAAQ72D,kBAAoB,EAC7D,OACJ,IACI,MAAMmhC,QAAU21B,MAAM,0EAA2E,CAC7FC,QAAS,CACL,OAAU,oCAGZp9D,QAAUwnC,EAAE61B,OAClB,IAAK,MAAMC,KAAet9D,EAAG,CACzB,MAAMmI,EAAMlC,SAASQ,cAAc,OACnC0B,EAAIzB,UAAUC,IAAI,UAClB,MAAM42D,EAAM,IAAIC,MAAM,GAAI,IAC1BD,EAAI5gB,IAAM2gB,EAAYG,WACtBF,EAAIG,IAAMJ,EAAYK,MACtB,MAAMr8D,EAAI2E,SAASQ,cAAc,KACjCnF,EAAEs8D,KAAO,sEAAsEN,EAAYK,QAC3Fr8D,EAAE8E,YAAck3D,EAAYK,MAC5Bx1D,EAAIvB,YAAY22D,GAChBp1D,EAAIvB,YAAYtF,GAChB27D,EAAQr2D,YAAYuB,IAG5B,MAAOO,GACHu0D,EAAQr2D,YAAYX,SAAS43D,eAAen1D,EAAEoG,aAElD,IACI,MAAM04B,QAAU21B,MAAM,gEAAiE,CACnFC,QAAS,CACL,OAAU,oCAGZp9D,QAAUwnC,EAAE61B,OACZ78D,EAAIs9D,KAAKC,MAAM/9D,EAAEg+D,MAAM,0BAA0BC,SACvD,IAAK,MAAMC,KAAQ19D,EAAG,CAClB,MAAM22C,EAAIlxC,SAASQ,cAAc,KACjC0wC,EAAE/wC,YAAc83D,EAChBhB,EAAQt2D,YAAYuwC,IAG5B,MAAOzuC,GACHu0D,EAAQr2D,YAAYX,SAAS43D,eAAen1D,EAAEoG,gBAvkB/C,KAFgEqvD,OAogBS,KAlgB9DA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUv7D,GAAS,IAAMw7D,EAAKjC,EAAUkC,KAAKz7D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACpF,SAASg2D,EAAS17D,GAAS,IAAMw7D,EAAKjC,EAAiB,MAAEv5D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACvF,SAAS81D,EAAKj8D,GAJlB,IAAeS,EAIaT,EAAOo8D,KAAON,EAAQ97D,EAAOS,QAJ1CA,EAIyDT,EAAOS,MAJhDA,aAAiBm7D,EAAIn7D,EAAQ,IAAIm7D,GAAE,SAAUE,GAAWA,EAAQr7D,OAIT47D,KAAKL,EAAWG,GAClGF,GAAMjC,EAAYA,EAAUx8D,MAAM8F,EAASy2D,GAAc,KAAKmC,WAN1B,IAAU54D,EAASy2D,EAAY6B,EAAG5B,GAolBjEsC,GAAkB,KAChB54D,SAASC,eAAe,gBAChCE,YAAc80B,GAAO0xB,OAClB,eACA,cACN1xB,GAAO0xB,QAAU1xB,GAAO0xB,QAEfkS,GAAyB,CAAC3I,EAAO,KAC1C,GAAa,IAATA,EAAY,CACZ,MAAM71B,EAAKr6B,SAASC,eAAe,0BAC/Bg1B,GAAO6jC,kBACP7jC,GAAO6jC,kBAAmB,EAC1Bz+B,EAAGl6B,YAAc,wBAGjB80B,GAAO6jC,kBAAmB,EAC1Bz+B,EAAGl6B,YAAc,2BAGpB,GAAa,IAAT+vD,EAAY,CACjB,MAAM71B,EAAKr6B,SAASC,eAAe,wBACC,IAAhCg1B,GAAOk7B,sBAA8D,IAAhCl7B,GAAOk7B,sBAC5Cl7B,GAAOk7B,qBAAuB,EAC9B91B,EAAGl6B,YAAc,oBAGjB80B,GAAOk7B,qBAAuB,EAC9B91B,EAAGl6B,YAAc,wBAehBy0D,GAAoB/7D,IAC7B,MAAMw8D,EAAa9B,GAAiB,GAAGD,WAAWv6D,OAClD,IAAK,IAAIgB,EAAI,EAAGA,GAAKs7D,EAAYt7D,IAAK,CAClC,MAAMg/D,EAAU/4D,SAASC,eAAe,UAAUlG,KACpB,UAA1Bg/D,EAAQxgC,MAAM8C,SAAuBthC,IAAMlB,IAC3CkgE,EAAQxgC,MAAM8C,QAAU,QAEE,SAA1B09B,EAAQxgC,MAAM8C,SAAsBthC,IAAMlB,IAC1CkgE,EAAQxgC,MAAM8C,QAAU,QACxBpG,GAAOy0B,aAAe3vD,EAAI,GAE9BiG,SAASC,eAAe,mBAAqBlG,GAAGw+B,MAAMM,gBAAkBhgC,IAAMkB,EAAI,UAAY,UAElGsvD,MAES2P,GAAuBngE,IAChC,OAAQA,GACJ,KAAK,EAAG,CACJ,MAAM0sC,EAAIn9B,WAAWpI,SAASC,eAAe,gCAAgClD,QAAU,EAGvF,OAFAk4B,GAAOgkC,mBAAmBC,MAAQt7D,KAAKqH,IAAIsgC,EAAG,QAC9CvlC,SAASC,eAAe,mBAAmBE,YAAcq6B,GAAOvF,GAAOgkC,mBAAmBC,MAAO,GAAG,GAAQ,KAGhH,KAAK,EAAG,CACJ,MAAMn2B,EAAI36B,WAAWpI,SAASC,eAAe,+BAA+BlD,QAAU,EAGtF,OAFAk4B,GAAOgkC,mBAAmBE,KAAOv7D,KAAKqH,IAAI89B,EAAG,QAC7C/iC,SAASC,eAAe,kBAAkBE,YAAcq6B,GAAOvF,GAAOgkC,mBAAmBE,KAAM,GAAG,GAAQ,KAG9G,KAAK,EAAG,CACJ,MAAMnhB,EAAI5vC,WAAWpI,SAASC,eAAe,gCAAgClD,QAAU,EAGvF,OAFAk4B,GAAOgkC,mBAAmBG,MAAQx7D,KAAKqH,IAAI+yC,EAAG,QAC9Ch4C,SAASC,eAAe,mBAAmBE,YAAcq6B,GAAOvF,GAAOgkC,mBAAmBG,MAAO,GAAG,GAAQ,QAiB3GrF,GAAyB,KAClC,MAAM15B,EAAKr6B,SAASC,eAAe,4BAC/Bg1B,GAAO6+B,sBACPz5B,EAAG9B,MAAM0D,OAAS,gBAClB5B,EAAGl6B,YAAc,6BACjB80B,GAAO6nB,mBAAqB,EAC5B,8BAAmC,IAGnCziB,EAAG9B,MAAM0D,OAAS,iBAClB5B,EAAGl6B,YAAc,6BAErB80B,GAAO6+B,sBAAwB7+B,GAAO6+B,sBAE7BuF,GAAiCxgE,IAC1C,MAAMwC,EAAI2E,SAASC,eAAe,2BAC5BkH,EAAInH,SAASC,eAAe,0BAC5BzD,EAAIwD,SAASC,eAAe,2BAClC5E,EAAEk9B,MAAMC,MAAc,IAAN3/B,EAAU,OAAS,QACnCsO,EAAEoxB,MAAMC,MAAc,IAAN3/B,EAAU,OAAS,QACnC2D,EAAE+7B,MAAMC,MAAc,IAAN3/B,EAAU,OAAS,SAc1BygE,GAA+BzgE,IACxC,OAAQA,GACJ,KAAK,EAAG,CACJ,MAAM0sC,EAAI3nC,KAAKqE,MAAMmG,WAAWpI,SAASC,eAAe,wBAAwBlD,SAAW,EAG3F,OAFAk4B,GAAOiQ,sBAAwBtnC,KAAKqH,IAAIsgC,EAAG,QAC3CvlC,SAASC,eAAe,8BAA8BE,YAAcq6B,GAAOvF,GAAOiQ,sBAAuB,GAAG,IAGhH,KAAK,EAAG,CACJ,MAAMnC,EAAInlC,KAAKqE,MAAMmG,WAAWpI,SAASC,eAAe,sBAAsBlD,SAAW,EAGzF,OAFAk4B,GAAO+P,oBAAsBpnC,KAAKqH,IAAI89B,EAAG,QACzC/iC,SAASC,eAAe,4BAA4BE,YAAcq6B,GAAOvF,GAAO+P,oBAAqB,GAAG,OAKvGu0B,GAAwB1gE,IACjC,MAAMwhC,EAAKr6B,SAASC,eAAe,sBAAwBpH,GACvDo8B,GAAOukC,eAAe3gE,IACtBwhC,EAAGl6B,YAAc,aACjBk6B,EAAG9B,MAAM0D,OAAS,kBAGlB5B,EAAGl6B,YAAc,YACjBk6B,EAAG9B,MAAM0D,OAAS,mBAEtBhH,GAAOukC,eAAe3gE,IAAMo8B,GAAOukC,eAAe3gE,IAEzC4gE,GAAwB,CAACj+D,EAAOuB,KACzC,MAAMu1D,EAAUr9B,GAAO+oB,qBAAqBxiD,GAS5C,GAPIuB,EAAQ,GAAKu1D,EADK,IACsB,EAAI92D,GAASA,GAAS,IAC9Dy5B,GAAO+oB,qBAAqBxiD,IAAUoC,KAAKsH,IAFzB,GAE6CotD,EAASv1D,IAExEA,EAAQ,GAAKu1D,EAAU,GAAK,EAAI92D,GAASA,GAAS,IAClDy5B,GAAO+oB,qBAAqBxiD,IAAUoC,KAAKsH,IAAIotD,GAAUv1D,IAE7Dk4B,GAAO+oB,qBAAqBxiD,GAASoC,KAAKsH,IAPpB,GAOuCtH,KAAKqH,IAAI,EAAGgwB,GAAO+oB,qBAAqBxiD,KACvF,MAAVuB,GAAuD,KAAtCk4B,GAAOyK,iBAAiB7jB,UAAkB,CAC3D,IAAK,IAAIhjB,EAAI,EAAGA,GAAK,EAAGA,IACpBo8B,GAAOikB,gBAAgBrgD,GAAK,EAC5Bo8B,GAAO+oB,qBAAqBnlD,GAAK,EAC7BA,EAAI,GACJu5D,GAAkBv5D,GAE1Bu5D,GAAkB,qBAClBpyD,SAASC,eAAe,4BAA4Bs4B,MAAMo0B,WAAa,SAC7B,KAAtC13B,GAAOyK,iBAAiB7jB,WACxB69C,GAAW,sBAAsB,GAAO,GAGhDtH,GAAkB52D,GAClBk3D,MAESmC,GAAiC8E,IAC1C1kC,GAAOm8B,oBAAsBuI,EAC7BxI,MAESyI,GAA0BztD,IACnC,MAAMkuB,EAAKr6B,SAASC,eAAe,OAAOkM,KACrCkuB,GAILA,EAAGl6B,YAAc80B,GAAO08B,eAAexlD,GAAM,KAAO,GACpD8oB,GAAO08B,eAAexlD,IAAO8oB,GAAO08B,eAAexlD,IAJ/C1M,QAAQ0G,IAAIgG,EAAI,0BCzwBX0tD,GAAmB,CAAChhE,EAAGihE,KAEhC,IAAIC,EAAmB,GADvBD,EAAc,MAACA,GAA4DA,KAGvE,iBAAsBjhE,EACtBmH,SAASC,eAAe,uBAAuBs4B,MAAM8C,QAAU,QAC/Dr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC1Dr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC1D,mBAAwBxiC,GAE5B,IAAIq4D,EAAgB,EAChBr4D,GAAK,GAAKihE,IACN7kC,GAAO4B,qBAAqBh+B,IAAM,IAClCmH,SAASC,eAAe,qBAAqBE,YAAc,uDAAyDs8B,GAAQ,YAAaxH,GAAO4B,qBAAqBh+B,IAGrKmH,SAASC,eAAe,qBAAqBE,YAAc,IAG/DtH,EAAI,GAAKA,GAAK,KACdq4D,EAAgB,GAAK,EAAIj8B,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,mBAAqB,EAAIzzB,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,GAAKxnB,GAAOwnB,iBAAiB,IAChMsd,EAAmB,GACf9kC,GAAO4B,qBAAqBh+B,IAAM,IAAMihE,EACxC95D,SAASC,eAAe,qBAAqBE,YAAc,sDAAwDq6B,GAAOiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqBh+B,IAAK,GAAG,GAGvLmH,SAASC,eAAe,qBAAqBE,YAAc,IAG/DtH,EAAI,KACJq4D,EAAgB,GAAK,EAAIj8B,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,EAAIxnB,GAAOwnB,iBAAiB,IAChHxnB,GAAO4B,qBAAqBh+B,IAAM,GAClCmH,SAASC,eAAe,qBAAqBE,YAAc,sDAAwDq6B,GAAOiC,GAAQ,YAAaxH,GAAO4B,qBAAqBh+B,IAAK,GAAG,GAGnLmH,SAASC,eAAe,qBAAqBE,YAAc,IAGnE,IAAI65D,EAAa,GACjB,MAAM3+D,EAAI2E,SAASC,eAAe,iBAC5BkH,EAAInH,SAASC,eAAe,mBAC5BzD,EAAIwD,SAASC,eAAe,yBAC5Bq7B,EAAIt7B,SAASC,eAAe,iBAC5BwC,EAAIzC,SAASC,eAAe,iBAAiBknD,WAAW,GACxD5sD,EAAIyF,SAASC,eAAe,iBAAiBknD,WAAW,GACxD5rB,EAAIv7B,SAASC,eAAe,iBAAiBknD,WAAW,GACxD3rB,EAAIx7B,SAASC,eAAe,mBAC5BlG,EAAIiG,SAASC,eAAe,uBAC5Bq4B,EAAIt4B,SAASC,eAAe,kBAC5BnH,EAAIkH,SAASC,eAAe,qBAC5BuC,EAAIxC,SAASC,eAAe,qBAC5BiK,EAAIlK,SAASC,eAAe,qBACxB,IAANpH,GAAmC,IAAxB,mBACXq4D,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzErhC,EAAE8E,YAAc,+BAAiC80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eAChH/pD,EAAEhH,YAAc,oEAChB3D,EAAE2D,YAAc,iHAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,0DAChB5F,EAAE4F,YAAc,0CAChBo7B,EAAEp7B,YAAc,8CAChBq7B,EAAEr7B,YAAc,qDAChBm4B,EAAEn4B,YAAc,yBAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAAO,UAC1Fr0B,EAAErC,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAAO,gBAC1F3sB,EAAE/J,YAAc,IAAMq6B,GAAO,IAAOiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,kCAE/F,IAANh+B,GAAmC,IAAxB,mBACXq4D,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzErhC,EAAE8E,YAAc,gCAAkC80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eACjH/pD,EAAEhH,YAAc,yDAChB3D,EAAE2D,YAAc,qGAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,kCAChB5F,EAAE4F,YAAc,yCAChBo7B,EAAEp7B,YAAc,sCAChBq7B,EAAEr7B,YAAc,mDAChBm4B,EAAEn4B,YAAc,0BAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAAO,gBACzFr0B,EAAErC,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAAO,kBACzF3sB,EAAE/J,YAAc,IAAMq6B,GAAO,IAAOiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,uBAE/F,IAANh+B,GAAmC,IAAxB,mBACXq4D,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzErhC,EAAE8E,YAAc,0BAA4B80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eAC3G/pD,EAAEhH,YAAc,qEAChB3D,EAAE2D,YAAc,oFAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,2DAChB5F,EAAE4F,YAAc,wEAChBo7B,EAAEp7B,YAAc,iEAChBq7B,EAAEr7B,YAAc,kDAChBm4B,EAAEn4B,YAAc,oBAChBrH,EAAEqH,YAAc,aAAeq6B,GAAO,IAAOvF,GAAO4B,qBAAqB,GAAI,GAAG,GAChFr0B,EAAErC,YAAc,IAAMq6B,GAAO,GAAMiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,IACpG3sB,EAAE/J,YAAc,IAAMq6B,GAAO,IAAOiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,QAE/F,IAANh+B,GAAmC,IAAxB,mBACXq4D,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzErhC,EAAE8E,YAAc,sBAAwB80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eACvG/pD,EAAEhH,YAAc,gFAChB3D,EAAE2D,YAAc,+HAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,+DAChB5F,EAAE4F,YAAc,8DAChBo7B,EAAEp7B,YAAc,uCAChBq7B,EAAEr7B,YAAc,OAChBm4B,EAAEn4B,YAAc,gBAChBrH,EAAEqH,YAAc,sBAAwBq6B,GAAO,EAAIiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KACpGr0B,EAAErC,YAAc,qBAAuBq6B,GAAO,EAAIiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,KACnG3sB,EAAE/J,YAAc,wBAA0Bq6B,GAAO,GAAMiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,KAElH,IAANh+B,GAAmC,IAAxB,mBACXq4D,EAAgB,GAAK,EAAIj8B,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,KACzErhC,EAAE8E,YAAc,iCAAmC80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eAClH/pD,EAAEhH,YAAc,gDAChB3D,EAAE2D,YAAc,4GAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,uEAChB5F,EAAE4F,YAAc,+CAChBo7B,EAAEp7B,YAAc,GAChBq7B,EAAEr7B,YAAc,OAChBm4B,EAAEn4B,YAAc,2BAChBrH,EAAEqH,YAAc,eAAiBq6B,GAAO,GAAMiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,IAAK,GAAG,GAC7Gr0B,EAAErC,YAAc,uBAAyBq6B,GAAO58B,KAAKC,IAAI,GAAI4+B,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAC9G3sB,EAAE/J,YAAc,IAEV,IAANtH,GAAmC,IAAxB,mBACXwC,EAAE8E,YAAc,2BAA6B80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eAC5G/pD,EAAEhH,YAAc,4DAChB3D,EAAE2D,YAAc,sGAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,GAAI,IAAM,+BACrG4J,EAAEtC,YAAc,0CAChB5F,EAAE4F,YAAc,kCAChBo7B,EAAEp7B,YAAc,oCAChBq7B,EAAEr7B,YAAc,eAChBm4B,EAAEn4B,YAAc,qBAChBrH,EAAEqH,YAAc,mBAAqBq6B,GAAO58B,KAAKC,IAAI,KAAO4+B,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAM,GAAG,GAC1Hr0B,EAAErC,YAAc,QAAUq6B,GAAO,GAAKiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAO,IAClG3sB,EAAE/J,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAO,8BAEvF,IAANh+B,GAAmC,IAAxB,mBACXwC,EAAE8E,YAAc,4CAA8C80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eAC7H/pD,EAAEhH,YAAc,wCAChB3D,EAAE2D,YAAc,wHAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,GAAI,IAAM,+BACrG4J,EAAEtC,YAAc,+DAChB5F,EAAE4F,YAAc,iCAChBo7B,EAAEp7B,YAAc,uCAChBq7B,EAAEr7B,YAAc,iFAChBm4B,EAAEn4B,YAAc,sCAChBrH,EAAEqH,YAAc,eAAiBq6B,GAAO,EAAI,IAAOiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAK,GAAG,GAChHr0B,EAAErC,YAAc,QAAUq6B,GAAO,GAAKiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAO,IAClG3sB,EAAE/J,YAAc,QAAUq6B,GAAO,GAAKiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAO,KAE5F,IAANh+B,GAAmC,IAAxB,mBACXwC,EAAE8E,YAAc,uBAAyB80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eACxG/pD,EAAEhH,YAAc,4DAChB3D,EAAE2D,YAAc,yHAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,GAAI,IAAM,+BACrG4J,EAAEtC,YAAc,uCAChB5F,EAAE4F,YAAc,iCAChBo7B,EAAEp7B,YAAc,qCAChBq7B,EAAEr7B,YAAc,oFAChBm4B,EAAEn4B,YAAc,iBAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,IAAOiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAK,GAAG,GACjGr0B,EAAErC,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,QACvG3sB,EAAE/J,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,+BAEhG,IAANh+B,GAAmC,IAAxB,mBACXwC,EAAE8E,YAAc,yBAA2B80B,GAAO4B,qBAAqB,GAAK,IAAM2D,GAAO02B,GAAiB,eAC1G/pD,EAAEhH,YAAc,qDAChB3D,EAAE2D,YAAc,yHAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,+BAChB5F,EAAE4F,YAAc,6CAChBo7B,EAAEp7B,YAAc,8BAChBq7B,EAAEr7B,YAAc,0EAChBm4B,EAAEn4B,YAAc,mBAChBrH,EAAEqH,YAAc,IAAMq6B,GAAOiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAO,eACzFr0B,EAAErC,YAAc,IAAMq6B,GAAO58B,KAAKC,IAAI,IAAK4+B,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAM,GAAG,GAAQ,aACjH3sB,EAAE/J,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IAAK,GAAG,GAAQ,SAEjG,KAANh+B,GAAoC,KAAxB,mBACZwC,EAAE8E,YAAc,2BAA6B80B,GAAO4B,qBAAqB,IAAM,IAAM2D,GAAO02B,GAAiB,eAC7G/pD,EAAEhH,YAAc,oDAChB3D,EAAE2D,YAAc,sHAChBm7B,EAAEn7B,YAAc,cAAgBq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,uBAClG4J,EAAEtC,YAAc,gDAChB5F,EAAE4F,YAAc,sCAChBo7B,EAAEp7B,YAAc,0CAChBq7B,EAAEr7B,YAAc,mCAChBm4B,EAAEn4B,YAAc,qBAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,IAAMiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,MAAQ,WAChGr0B,EAAErC,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,MAAQ,yBAC9F3sB,EAAE/J,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KAAM,GAAG,GAAQ,iCAElG,KAANh+B,GAAoC,KAAxB,mBACZwC,EAAE8E,YAAc,6BAA+B80B,GAAO4B,qBAAqB,IAAM,IAAM2D,GAAO02B,GAAiB,eAC/G/pD,EAAEhH,YAAc,8DAChB3D,EAAE2D,YAAc,oKAChBm7B,EAAEn7B,YAAc,sDAAwDq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,UAC1I4J,EAAEtC,YAAc,iCAChB5F,EAAE4F,YAAc,0CAChBo7B,EAAEp7B,YAAc,8BAChBq7B,EAAEr7B,YAAc,mEAChBm4B,EAAEn4B,YAAc,2BAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,mBAC3Fr0B,EAAErC,YAAc,cAAgBq6B,GAAO,MAAY,IAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,OACzG3sB,EAAE/J,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,iBAErF,KAANh+B,GAAoC,KAAxB,mBACZwC,EAAE8E,YAAc,iCAAmC80B,GAAO4B,qBAAqB,IAAM,IAAM2D,GAAO02B,GAAiB,eACnH/pD,EAAEhH,YAAc,yCAChB3D,EAAE2D,YAAc,kHAChBm7B,EAAEn7B,YAAc,sDAAwDq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,UAC1I4J,EAAEtC,YAAc,4BAChB5F,EAAE4F,YAAc,4BAChBo7B,EAAEp7B,YAAc,yCAChBq7B,EAAEr7B,YAAc,2FAChBm4B,EAAEn4B,YAAc,+BAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,cAC3Fr0B,EAAErC,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,cAC3F3sB,EAAE/J,YAAc,IAAMq6B,GAAOiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,6BAEhF,KAANh+B,GAAoC,KAAxB,mBACZwC,EAAE8E,YAAc,uBAAyB80B,GAAO4B,qBAAqB,IAAM,IAAM2D,GAAO02B,GAAiB,eACzG/pD,EAAEhH,YAAc,iCAChB3D,EAAE2D,YAAc,iHAChBm7B,EAAEn7B,YAAc,sDAAwDq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,UAC1I4J,EAAEtC,YAAc,0CAChB5F,EAAE4F,YAAc,8CAChBo7B,EAAEp7B,YAAc,4CAChBq7B,EAAEr7B,YAAc,+DAChBm4B,EAAEn4B,YAAc,qBAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,IAAM,IAAM58B,KAAKC,IAAI,KAAO4+B,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAO,GAAG,GAAQ,mBAC5Hr0B,EAAErC,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,sBAC1F3sB,EAAE/J,YAAc,IAAMq6B,GAAO,EAAIiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,mBAEpF,KAANh+B,GAAoC,KAAxB,mBACZwC,EAAE8E,YAAc,4BAA8B80B,GAAO4B,qBAAqB,IAAM,IAAM2D,GAAO02B,GAAiB,eAC9G/pD,EAAEhH,YAAc,uFAChB3D,EAAE2D,YAAc,mHAChBm7B,EAAEn7B,YAAc,sDAAwDq6B,GAAOid,GAAqB5+C,EAAGo8B,GAAO4B,qBAAqBh+B,KAAO,UAC1I4J,EAAEtC,YAAc,gEAChB5F,EAAE4F,YAAc,mDAChBo7B,EAAEp7B,YAAc,+BAChBq7B,EAAEr7B,YAAc,+EAChBm4B,EAAEn4B,YAAc,0BAChBrH,EAAEqH,YAAc,IAAMq6B,GAAO,GAAKiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,UAC3Fr0B,EAAErC,YAAc,IAAMq6B,GAAO,EAAIvF,GAAO4B,qBAAqB,KAAO,YACpE3sB,EAAE/J,YAAc,IAAMq6B,GAAO,IAAMiC,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAAQ,iBAEtF,KAANh+B,GAAoC,KAAxB,mBACZwC,EAAE8E,YAAc,4BAA8B80B,GAAO4B,qBAAqB,IAAM,oBAChF1vB,EAAEhH,YAAc,sDAChB3D,EAAE2D,YAAc,6EAChBm7B,EAAEn7B,YAAc,gEAChBsC,EAAEtC,YAAc,oBAChB5F,EAAE4F,YAAc,2BAChBo7B,EAAEp7B,YAAc,wCAChBq7B,EAAEr7B,YAAc,yBAChBm4B,EAAEn4B,YAAc,oCAChBrH,EAAEqH,YAAc,GAChBqC,EAAErC,YAAc,GAChB+J,EAAE/J,YAAc,IAEpB,MAAM85D,EAAc,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KACvDC,EAAc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACzDC,EAAc,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClE,IAAIC,EAAe,EACfvhE,GAAK,IAEDuhE,EADAnlC,GAAO2nB,4BAA4B/jD,IAAM,IAC1BshE,EAAYthE,GAEtBo8B,GAAO2nB,4BAA4B/jD,IAAM,GAC/BqhE,EAAYrhE,GAGZohE,EAAYphE,IAG/BA,EAAI,GAAKA,GAAK,KAEVuhE,EADAnlC,GAAO2nB,4BAA4B/jD,IAAM,GAC1BshE,EAAYthE,GAEtBo8B,GAAO2nB,4BAA4B/jD,IAAM,GAC/BqhE,EAAYrhE,GAGZohE,EAAYphE,IAG/BihE,IACA//D,EAAEoG,YAAc,IAEU,IAA1B80B,GAAO8C,iBACPiiC,EAAa,SACbjgE,EAAEw+B,MAAMC,MAAQ,QAEhBvD,GAAO4B,qBAAqBh+B,IAAMo8B,GAAO2nB,4BAA4B/jD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAKq4D,GAAiB4I,GAAe7kC,GAAO8C,eAAiB,IAC3Kh+B,EAAEoG,YAAc,QAAUvC,KAAKqE,MAAM83D,EAAmB9kC,GAAO2nB,4BAA4B/jD,GAAK,GAAK,EAAIo8B,GAAOmR,aAAa,GAAKnR,GAAOmR,aAAa,IAAMnR,GAAOmR,aAAa,IAAMnR,GAAOmR,aAAa,IAAMnR,GAAOmR,aAAa,KAAO,IAAM4zB,EAAa,sDAE9P/kC,GAAO4B,qBAAqBh+B,IAAMo8B,GAAO2nB,4BAA4B/jD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAKq4D,GAAiB4I,GAAe7kC,GAAO8C,gBAAkB,IAC5Kh+B,EAAEoG,YAAc,kCAAqCtH,EAAI,EAAK,EAAI,GAAK,iDAAmDuhE,EAAe,KAEzInlC,GAAO4B,qBAAqBh+B,IAAMo8B,GAAO2nB,4BAA4B/jD,IAAMo8B,GAAO2nB,4BAA4B/jD,GAAK,IAAMA,EAAI,KAC7HkB,EAAEoG,YAAc,0EAEnBtH,GAAK,IAAMo8B,GAAOyH,WAAW,KAAO,GAChC18B,SAASC,eAAe,6BAA6Bs4B,MAAM8C,QAAU,QAASr7B,SAASC,eAAe,6BAA6Bs4B,MAAM0D,OAAS,mBACnJj8B,SAASC,eAAe,6BAA6Bs4B,MAAM8C,QAAU,OACzE,IAAIg/B,EAAc,KACbplC,GAAOqlC,qBAAqBzhE,KAC7BwhE,EAAc,MACdr6D,SAASC,eAAe,6BAA6Bs4B,MAAM0D,OAAS,iBAExEj8B,SAASC,eAAe,6BAA6BE,YAAc,0BAA4BtH,EAAI,KAAOwhE,EAAc,IACxH,MAAME,EAAOv6D,SAASC,eAAe,4BACpCg1B,GAA2B,sBACvBslC,EAAKp6D,YAAc,4BAA6Bo6D,EAAKhiC,MAAM0D,OAAS,mBACpEs+B,EAAKp6D,YAAc,6BAA8Bo6D,EAAKhiC,MAAM0D,OAAS,kBAEjE43B,GAA0Bh7D,IACW,IAA1Co8B,GAAOyK,iBAAiB9jB,gBACxB,aAAkB,EAClB,aAAkB,EAClB,aAAkB,EAClB,aAAkB,EAClB,aAAkB,EAClBqZ,GAAOkO,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEnD,oBAAyB,IAAI,EAAQ,KACjCtqC,GAAK,IACL,qBAA0B,IAAI,EAAQ,MAEtCA,GAAK,KACL,yBAA8B,IAAI,EAAQ,MAE9C8jC,MAQS69B,GAA0B,CAACC,EAASC,KAC7C,IAAIjgD,EAAa,GACbggD,GAAW,IACXhgD,EAAa,GAEa,IAA1Bwa,GAAO8C,iBACP9C,GAAO0D,QAAW,EAA4C,IAAxC/6B,KAAKqE,MAAMy4D,EAAejgD,GAAoB,MAGtEkgD,GAA0C,CAACnhC,EAAMohC,EAAaC,EAAU,KAC1E,IAAIC,EAAwBl9D,KAAKqH,IAAI,EAAG,4BAA+BgwB,GAAOikB,gBAAgB,KAAO,EAAIjkB,GAAOwnB,iBAAiB,GAAK,MACtI,OAAQjjB,GACJ,IAAK,YAKD,OAHIshC,GADHF,GAAe,GACah9D,KAAKC,IAAI,EAAI+8D,EAAa,IAAMh9D,KAAKC,IAAI,GAAI,GAC7CD,KAAKC,IAAI,EAAI+8D,EAAa,GACvDE,GAAyB,iDAClB,EACX,IAAK,gBAsBD,OArBIF,GAAe,KAEXE,GADY,IAAZD,EACyBj9D,KAAKC,IAAI,EAAI+8D,EAAa,GAAK,GAEvC,IAAZC,EACoBj9D,KAAKC,IAAI,EAAI+8D,EAAa,GAAK,GAEvC,IAAZC,EACoBj9D,KAAKC,IAAI,EAAI+8D,EAAa,GAAK,IAG/Bh9D,KAAKC,IAAI,EAAI+8D,EAAa,GAAK,MAG5DA,GAAe,KACfE,GAAyBl9D,KAAKC,IAAI,EAAI+8D,EAAa,GAAK,KAExDA,EAAc,KACdE,GAAyBl9D,KAAKsH,IAAItH,KAAKC,IAAI,EAAI+8D,EAAa,GAAIh9D,KAAKC,IAAI,OAAQ+8D,KAErFE,GAAyB,qDAClBA,EACX,IAAK,YAID,OAFIA,GADHF,GAAe,GACc,GAAK,EAAIA,GAAe,GACxB,EAAIA,EAC3B,IAGNn+B,GAAU,CAACjD,EAAMohC,KAC1B,IAAIG,EAAY,EAChB,OAAQvhC,GACJ,IAAK,YAGD,OAFAuhC,GAAan9D,KAAKsH,IAAI,IAAK01D,GAC3BG,GAAa,KAAUn9D,KAAKqH,IAAI,IAAK21D,GAAe,KAC7C,EACX,IAAK,gBAGD,OAFAG,GAAan9D,KAAKsH,IAAI,GAAI01D,GAC1BG,GAAa,IAASn9D,KAAKqH,IAAI,GAAI21D,GAAe,IAC3C,EACX,IAAK,YAGD,OAFAG,GAAan9D,KAAKsH,IAAI,GAAI01D,GAC1BG,GAAa,IAASn9D,KAAKqH,IAAI,GAAI21D,GAAe,IAC3C,IAGNnjB,GAAuB,CAACujB,EAAWC,EAAYJ,EAAU,KAClE,MAAMz0D,EAAO,4BAA+B40D,EAAY,GACxD,GAAIA,GAAa,EACb,OAAO,MAAY,GAAI50D,EAAOu0D,GAAwC,YAAaM,EAAYJ,IAE9F,GAAIG,GAAa,GAAI,CACtB,IAAIE,EAAe,EAInB,OAHkB,KAAdF,IACAE,EAAgB,KAAOjmC,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,MAAQ,IAAMzH,GAAO6I,aAAa6qB,eAEnJ,MAAY,IAAKviD,EAAO80D,GAAgBP,GAAwC,gBAAiBM,EAAYJ,IAEnH,OAAIG,GAAa,GACXL,GAAwC,YAAaM,EAAYJ,GAErD,KAAdG,EACE,MAAY,GAAI,EAAIp9D,KAAKC,IAAI,GAAI,UADvC,GC5aHs9D,GAAuBC,GAClB5gC,GAA2B,iBAAb4gC,EAAwB,IAAI,EAAQA,GAAYA,GAEnEC,GAA6B,CAACD,EAAU18D,IAClB,iBAAb08D,EACAD,GAAoBC,GAEL,iBAAf,GAA2BnmC,GAAOqmC,sBAAyC,IAAjB58D,EAAK85C,QACrD,IAAb4iB,EACO,UAEJ5gC,GAAO4gC,EAAW18D,EAAK85C,QAAS,EAAG4iB,EAAW,KAAQ,KAE1D5gC,GAAO4gC,GAEZG,GAAe,CACjBviC,UAAW,CACPs+B,IAAK,wBACLkE,UAAWL,GACXM,SAAU,aAEdnhD,UAAW,CACPg9C,IAAK,yBACLkE,UAAWL,GACXM,SAAU,aAEd1iB,UAAW,CACPue,IAAK,wBACLkE,UAAWL,GACXM,SAAU,aAEd5iB,SAAU,CACNye,IAAK,uBACLkE,UAAWL,GACXM,SAAU,YAEd3iB,OAAQ,CACJwe,IAAK,sBACLkE,UAAWL,GACXM,SAAU,UAEdl3B,cAAe,CACX+yB,IAAK,4BACLkE,UAAWH,GACXI,SAAU,mBAEd3lB,cAAe,CACXwhB,IAAK,4BACLkE,UAAWH,GACXI,SAAU,kBACVC,OAAQ,IAAMzmC,GAAO4B,qBAAqB,IAAM,GAEpD2b,SAAU,CACN8kB,IAAK,uBACLkE,UAAWH,GACXI,SAAU,cAEdriB,iBAAkB,CACdke,IAAK,6BACLkE,UAAWH,GACXI,SAAU,iBACVC,OAAQ,IAAMzmC,GAAO4B,qBAAqB,IAAM,IAGlD8kC,GAAoB,CACtB,YAAa,YACb,YAAa,WAAY,SACzB,WAAY,gBAAiB,gBAAiB,oBAE5CC,GAAe,CACjB,aAAgB,CAAEtE,IAAK,6BACvB,SAAY,CAAEA,IAAK,0CACnB,UAAa,CAAEA,IAAK,2CACpB,YAAe,CAAEA,IAAK,6CACtB,OAAU,CAAEA,IAAK,8BAEfuE,GAA2B,CAC7B,KAAQ,mBACR,MAAS,oBACT,OAAU,sBAERC,GAA+B,CACjC,oCACA,iCACA,8BACA,qCACA,2CACA,+BACA,gCACA,6BACA,yCAEEC,GAA+B,CACjC,6BACA,6BACA,0BACA,2CACA,oCACA,8BACA,oBACA,yBACA,+BAgBJ7/C,EAAUliB,GAAG,cAVW,CAACgiE,EAAUt9D,KAI/B,SAHiC7E,IAA7Bo7B,GAAOgnC,QAAQD,KACf/mC,GAAOgnC,QAAQD,GAAY,IAExB/mC,GAAOgnC,QAAQD,GAAUjjE,OAAUk8B,GAAOinC,gBAAkB,GAC/DjnC,GAAOgnC,QAAQD,GAAUzvD,QAE7B0oB,GAAOgnC,QAAQD,GAAUnkE,KAAK6G,GAC9By9D,GAAuBH,EAAUt9D,MAGrC,MAAMy9D,GAAyB,CAACH,EAAUt9D,KACtC,MAAMk0D,EAAMwJ,GAAsBJ,EAAUt9D,GAEtC29D,EADQr8D,SAASC,eAAe47D,GAAyBG,IAC3CM,cAAc,SAElC,IADAD,EAAME,aAAa3J,EAAKyJ,EAAMlV,WAAW,IAClCkV,EAAMlV,WAAWpuD,OAASk8B,GAAOinC,iBACpCG,EAAMh8D,YAAYg8D,EAAMn8D,YAG1Bk8D,GAAwB,CAACI,EAAW99D,KACtC,IAAI+9D,EAAW,EACf,MAAM7J,EAAM5yD,SAASQ,cAAc,MACnC,IAAIk8D,EAAiB,GACrB,MAAMC,EAAWf,GAAal9D,EAAKk6C,MAEnC8jB,GAAkB,sCADA,IAAIhkB,KAAKh6C,EAAK+5C,MAAMmkB,+BAC0CD,EAASrF,QAAQjH,GAAgB3xD,EAAK85C,QAAS,WAC/H,MAAMqkB,EAAQ,GACRC,EAAmBp+D,EACzBi9D,GAAkBp/D,SAASwgE,IACvB,GAAInmE,OAAOC,UAAUC,eAAeyB,KAAKmG,EAAMq+D,GAAW,CACtD,MAAMC,EAAWzB,GAAawB,GAC9B,GAAIC,EAAStB,SAAWsB,EAAStB,OAAOh9D,GACpC,OAEJ,MAAM88D,EAAYwB,EAASxB,WAAa,SAClCyB,EAAM,aAAaD,EAASvB,kBAAkBuB,EAAS1F,eAAe0F,EAASvB,aAAaD,EAAUsB,EAAiBC,GAAWr+D,KACxIm+D,EAAMhlE,KAAKolE,OAGnB,MAAMr7B,EAAQ,GACd,GAAkB,iBAAdljC,EAAKk6C,KAAyB,CAC9B,MAAMskB,EAAWxW,GAA+BhoD,EAAK6oD,0BAC/C4V,EAAWzW,GAA+BhoD,EAAK+oD,yBAC/C2V,EAAOD,EAAWD,EACxBt7B,EAAM/pC,KAAK,gCAAgC2iC,GAAO0iC,EAAU,GAAG,WAAe1iC,GAAO2iC,EAAU,GAAG,gEAAoE3iC,GAAO4iC,EAAM,GAAG,YAAiB,iBAAiBjC,GAAoBz8D,EAAKkpD,kFAjD3N,CAACqV,IAC3B,IAAIz6D,EACJ,OAAuC,QAA/BA,EAAIy6D,EAAII,MAAM,aAAwB,IAAI76D,EAAE,KAAOy6D,GA+C4QK,CAAsBnC,GAAoBz8D,EAAKipD,kBAAmB,gBAAgBntB,GAAO97B,EAAKgpD,yEAAyEltB,GAAO97B,EAAKmY,6BAErf,GAAkB,WAAdnY,EAAKk6C,KAAmB,CAC7BhX,EAAM/pC,KAAK,oGAAoG6G,EAAKu6C,kBACpH,MAAMskB,EAAcC,GAA8B9+D,GAC9B,OAAhB6+D,IACA37B,EAAM/pC,KAAK0lE,EAAY,IACvB37B,EAAM/pC,KAAK0lE,EAAY,KAa/B,OAVAd,GAAYI,EAAM9jE,OAClB2jE,GAAkBG,EAAM5wD,QAAO,CAAC2qD,EAAK75D,IAC1B,GAAG65D,6BAA+B75D,UAC1C,IACH2/D,GAAkB,uCAAuC,EAAID,WAC7DC,GAAkB96B,EAAM31B,QAAO,CAAC2qD,EAAK75D,IAC1B,GAAG65D,8BAAgC75D,UAC3C,IACH2/D,GAAkB,uCAAuC,EAAI96B,EAAM7oC,gBACnE65D,EAAI6K,UAAYf,EACT9J,GAeE8K,GAA8B,KACvC9mE,OAAO8U,KAAKmwD,IAA0Bt/D,SAAQ0nC,GAdd,EAAC05B,EAAkBC,KACnD,MAAMvB,EAAQuB,EAAYtB,cAAc,SAExC,GADAD,EAAMoB,UAAY,GACbxoC,GAAOgnC,QAAQ0B,IAGhB1oC,GAAOgnC,QAAQ0B,GAAkB5kE,OAAS,EAC1C,IAAK,IAAIF,EAAIo8B,GAAOgnC,QAAQ0B,GAAkB5kE,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACnE,MAAM+5D,EAAMwJ,GAAsBuB,EAAkB1oC,GAAOgnC,QAAQ0B,GAAkB9kE,IACrFwjE,EAAM17D,YAAYiyD,KAK2BiL,CAA4B55B,EAAKjkC,SAASC,eAAe47D,GAAyB53B,QASrIu5B,GAAiC9+D,IACnC,IAAI8c,EAAQ,UAAYgf,GAAO97B,EAAKy6C,gBAAiB,GAAG,GACpDokB,EAAc,GAClB,IAAK,IAAI1kE,EAAI,EAAGA,EAAIijE,GAA6B/iE,SAAUF,EAAG,CAC1D,MAAMilE,EAAgBjlE,EAAI,EACtBilE,KAAiBp/D,EAAKw6C,iBAA2D,IAAxCx6C,EAAKw6C,gBAAgB4kB,KAC9DP,GAAe,cAAcxB,GAA6BljE,YAAYijE,GAA6BjjE,cAAckjE,GAA6BljE,OAAO6F,EAAKw6C,gBAAgB4kB,MAMlL,YAH8BjkE,IAA1B6E,EAAKghC,mBACLlkB,GAAS,OAAO9c,EAAKghC,oBAElB,CAAClkB,EAAO+hD,IClNNQ,GAAe,CAAChhE,EAAOkI,GAAM,KACtC,MAAM05B,EAAU15B,EACVgwB,GAAOmkB,iBACPx7C,KAAKsH,IAAI+vB,GAAOmkB,iBAAkBr8C,GACxCk4B,GAAOmkB,kBAAoBza,EAC3B,IAAIkU,EAAgBlU,EAAU,IAC9B,MAAMq/B,EAAkBpgE,KAAKqE,MAAM08B,EAAU,KACvCoU,EAAY,CACdgX,MAAO,CAAE/W,OAAQ,MAAOC,IAAM3oC,GAAM,GAAKA,GAAKA,GAAK,IACnD0/C,WAAY,CAAEhX,OAAQ,MAAOC,IAAM3oC,GAAM,GAASA,GAAKA,GAAK,IAC5D2/C,WAAY,CAAEjX,OAAQ,MAAOC,IAAM3oC,GAAM,GAASA,GAAKA,GAAK,IAC5D4/C,UAAW,CAAElX,OAAQ,IAAKC,IAAM3oC,GAAM,GAASA,GAAKA,GAAK,OACzD6/C,eAAgB,CAAEnX,OAAQ,EAAGC,IAAM3oC,GAAM,MAASA,GAAKA,GAAK,SAC5D+P,MAAO,CAAE24B,OAAQ,EAAGC,IAAM3oC,GAAM,QAAUA,GAAKA,GAAK,QACpD8/C,WAAY,CAAEpX,OAAQ,EAAGC,IAAM3oC,GAAM,OAASA,GAAKA,GAAK,SACxD6Q,YAAa,CAAE63B,OAAQ,EAAGC,IAAM3oC,GAAM,QAAUA,GAAKA,GAAK,MAE9D,IAAK,MAAM25B,KAAOhP,GAAO60B,kBACrB70B,GAAO60B,kBAAkB7lB,IAAQ8O,EAAU9O,GAAK+O,OAASgrB,EAE7D,MAAMC,EAAU,CAAC,iBAAkB,QAAS,aAAc,eAC1D,IAAK,IAAIplE,EAAI,EAAGA,EAAIolE,EAAQllE,OAAQF,IAE5Bg6C,EAAgB,KADRj1C,KAAKgK,UACqC,IAAlBirC,IAChC5d,GAAO60B,kBAAkBmU,EAAQplE,KAAO,EACxCg6C,GAAiB,GAGzB,MAAMqrB,EAAa,CAACtgE,KAAKqE,MAAM,GAAK4wC,EAAgB,KAAMj1C,KAAKqE,MAAM,GAAK4wC,EAAgB,KAAMj1C,KAAKqE,MAAM,GAAK4wC,EAAgB,KAAMj1C,KAAKqE,MAAM,IAAM4wC,EAAgB,MACjKsrB,EAAc,CAAC,QAAS,aAAc,aAAc,aAC1D,IAAK,IAAItlE,EAAI,EAAGA,EAAIslE,EAAYplE,OAAQF,IACpCo8B,GAAO60B,kBAAkBqU,EAAYtlE,KAAOqlE,EAAWrlE,GACvDg6C,GAAiBqrB,EAAWrlE,GAEhC,IAAK,IAAIA,EAAI,EAAGA,EAAIg6C,EAAeh6C,IAAK,CACpC,MAAM4/B,EAAM,IAAM76B,KAAKgK,SACvB,IAAK,MAAMq8B,KAAOhP,GAAO60B,kBACjB/W,EAAU9O,GAAKgP,IAAIxa,KACnBxD,GAAO60B,kBAAkB7lB,IAAQ,GAG7Cm6B,KACAliD,EAAU/iB,KAAK,eAAgBwlC,IAEtBy/B,GAA6B,KACtC,MAAMvU,EAAgB,CAAC50B,GAAO60B,kBAAkBC,MAAO90B,GAAO60B,kBAAkBE,WAAY/0B,GAAO60B,kBAAkBG,WAAYh1B,GAAO60B,kBAAkBI,UAAWj1B,GAAO60B,kBAAkBK,eAAgBl1B,GAAO60B,kBAAkBzvC,MAAO4a,GAAO60B,kBAAkBM,WAAYn1B,GAAO60B,kBAAkB3uC,aACtSkvC,EAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,IAAK,IAAIxxD,EAAI,EAAGA,EAAIgxD,EAAc9wD,OAAQF,IAAK,CAC3C,IAAIuF,EAAQ,EACRmgC,EAAO,EACPsrB,EAAchxD,IAAMwxD,EAAYxxD,KAChCuF,EAAQ,kBAAqBvF,GAC7B0lC,GAAQ3gC,KAAKC,IAAIwsD,EAAYxxD,GAAK,EAAI,kBAAqBA,KAE/D,0BAA6BA,GAAK,EAAI0lC,EAAO,mBAAsB1lC,GAAK+E,KAAKC,IAAIgsD,EAAchxD,GAAIuF,KCvDrGigE,GAAsB,CACxBnoC,EAAG,iDACHC,EAAG,qDACHC,EAAG,qDACHwb,EAAG,4DACHvb,EAAG,0KACHwb,EAAG,oFACHC,EAAG,yDACHC,EAAG,6FACHC,EAAG,gFACHC,GAAI,yPACJ6a,GAAI,oEACJC,GAAI,6FACJC,GAAI,mDACJC,GAAI,2EACJC,GAAI,wEAEKoR,GAAuB,CAChCpoC,EAAG,CACC5b,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,KAEdhI,EAAG,CACC7b,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,KAEd/H,EAAG,CACC9b,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,KAEdyT,EAAG,CACCt3B,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,KAEd9H,EAAG,CACC/b,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,GAEd0T,EAAG,CACCv3B,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,IAEd2T,EAAG,CACCx3B,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,KACXqU,SAAU,EACVpgC,SAAU,IAEd4T,EAAG,CACCz3B,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,IACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,GAEd6T,EAAG,CACC13B,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,IACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,GAEd8T,GAAI,CACA33B,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,KACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,GAEd2uB,GAAI,CACAxyC,UAAW,KACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,KACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,GAEd4uB,GAAI,CACAzyC,UAAW,MACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,KACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,IAEd6uB,GAAI,CACA1yC,UAAW,MACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,KACZC,UAAW,IACXqU,SAAU,EACVpgC,SAAU,GAEd8uB,GAAI,CACA3yC,UAAW,MACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,KACZC,UAAW,KACXqU,SAAU,EACVpgC,SAAU,GAEd+uB,GAAI,CACA5yC,UAAW,MACX0e,UAAW,KACX+wB,MAAO,KACPC,WAAY,KACZC,WAAY,KACZC,UAAW,KACXqU,SAAU,EACVpgC,SAAU,IAGZqgC,GAAwBhjE,IAC1B,IAAIijE,EAAW,EACf,MAAMC,EAAY,CAAC,YAAa,YAAa,QAAS,aAAc,aAAc,YAAa,YACzFC,EAAgB,CAAC,iBAAkB,aAAc,WAAY,gBAAiB,gBAAiB,mBAAoB,eACnHC,EAAS,CACXtkD,WAAW,EACX0e,WAAW,EACX+wB,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXqU,UAAU,EACVrkC,QAAQ,GAEZ,IAAK,IAAIrhC,EAAI,EAAGA,EAAI6lE,EAAU3lE,OAAQF,IAC9BylE,GAAqB9iE,GAAOkjE,EAAU7lE,KAAOo8B,GAAO0pC,EAAc9lE,MAClE4lE,IACAG,EAAOF,EAAU7lE,KAAM,GAM/B,OAHI4lE,IAAaC,EAAU3lE,QAAUk8B,GAAOwnB,iBAAiBjhD,GAAS8iE,GAAqB9iE,GAAO2iC,WAC9FygC,EAAO1kC,QAAS,GAEb0kC,GAEEC,GAA6BrjE,IACtC,IAAIsjE,EAAiB,GACjB7pC,GAAOwnB,iBAAiBjhD,KAAW8iE,GAAqB9iE,GAAO2iC,WAC/D2gC,EAAiB,UAErB,MAAMC,EAAgBP,GAAqBhjE,GAC3CwE,SAASC,eAAe,8BAA8BE,YAAck+D,GAAoB7iE,GACxFwE,SAASC,eAAe,wBAAwBE,YAAc,UAAYq6B,GAAOvF,GAAOwnB,iBAAiBjhD,IAAU,IAAMg/B,GAAO8jC,GAAqB9iE,GAAO2iC,UAAY2gC,EACxK9+D,SAASC,eAAe,wBAAwBE,YAAcq6B,GAAOvF,GAAO+E,YAAc,IAAMQ,GAAO8jC,GAAqB9iE,GAAOw9B,WAAa,aAChJh5B,SAASC,eAAe,yBAAyBE,YAAcq6B,GAAOvF,GAAO6E,gBAAkB,IAAMU,GAAO8jC,GAAqB9iE,GAAO8e,WAAa,aACrJta,SAASC,eAAe,oBAAoBE,YAAcq6B,GAAOvF,GAAOud,UAAY,IAAMhY,GAAO8jC,GAAqB9iE,GAAOuuD,OAAS,cACtI/pD,SAASC,eAAe,yBAAyBE,YAAcq6B,GAAOvF,GAAOsP,eAAiB,IAAM/J,GAAO8jC,GAAqB9iE,GAAOwuD,YAAc,mBACrJhqD,SAASC,eAAe,yBAAyBE,YAAcq6B,GAAOvF,GAAO6gB,eAAiB,IAAMtb,GAAO8jC,GAAqB9iE,GAAOyuD,YAAc,mBACrJjqD,SAASC,eAAe,wBAAwBE,YAAcq6B,GAAOvF,GAAOmkB,kBAAoB,IAAM5e,GAAO8jC,GAAqB9iE,GAAO0uD,WAAa,mBACtJlqD,SAASC,eAAe,yBAAyBE,YAAcq6B,GAAOvF,GAAO+pC,aAAe,IAAMxkC,GAAO8jC,GAAqB9iE,GAAO+iE,UAAY,2BACjJQ,EAAc/lC,UACVh5B,SAASC,eAAe,wBAAwBs4B,MAAMC,MAAQ,OAC9Dx4B,SAASC,eAAe,wBAAwBs4B,MAAMC,MAAQ,UAClEumC,EAAczkD,UACVta,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,OAC/Dx4B,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,UACnEumC,EAAchV,MACV/pD,SAASC,eAAe,oBAAoBs4B,MAAMC,MAAQ,OAC1Dx4B,SAASC,eAAe,oBAAoBs4B,MAAMC,MAAQ,UAC9DumC,EAAc/U,WACVhqD,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,OAC/Dx4B,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,UACnEumC,EAAc9U,WACVjqD,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,OAC/Dx4B,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,UACnEumC,EAAc7U,UACVlqD,SAASC,eAAe,wBAAwBs4B,MAAMC,MAAQ,OAC9Dx4B,SAASC,eAAe,wBAAwBs4B,MAAMC,MAAQ,UAClEumC,EAAcR,SACVv+D,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,OAC/Dx4B,SAASC,eAAe,yBAAyBs4B,MAAMC,MAAQ,UAC/DvD,GAAOwnB,iBAAiBjhD,GAAS8iE,GAAqB9iE,GAAO2iC,WAC7Dn+B,SAASC,eAAe,wBAAwBs4B,MAAMC,MAAQ,OAC9DumC,EAAc7kC,QACTl6B,SAASC,eAAe,kBAAkBs4B,MAAMC,MAAQ,OAAQx4B,SAASC,eAAe,kBAAkBE,YAAc,oCACxHH,SAASC,eAAe,kBAAkBs4B,MAAMC,MAAQ,UAAWx4B,SAASC,eAAe,kBAAkBE,YAAc,kCAEhI80B,GAAOwnB,iBAAiBjhD,KAAW8iE,GAAqB9iE,GAAO2iC,WAC/Dn+B,SAASC,eAAe,wBAAwBs4B,MAAMC,MAAQ,OAC9Dx4B,SAASC,eAAe,kBAAkBs4B,MAAMC,MAAQ,SACxDx4B,SAASC,eAAe,kBAAkBE,YAAc,gBAGnD8+D,GAAuBzjE,IACVgjE,GAAqBhjE,GACzB0+B,SACdjF,GAAOwnB,iBAAiBjhD,IAAU,EAClCy5B,GAAO6E,gBAAkBwkC,GAAqB9iE,GAAO8e,UACrD2a,GAAO+E,YAAcskC,GAAqB9iE,GAAOw9B,UACjD/D,GAAOud,UAAY8rB,GAAqB9iE,GAAOuuD,MAC/C90B,GAAOsP,eAAiB+5B,GAAqB9iE,GAAOwuD,WACpD/0B,GAAO6gB,eAAiBwoB,GAAqB9iE,GAAOyuD,WACpDh1B,GAAOmkB,kBAAoBklB,GAAqB9iE,GAAO0uD,UACvDj1B,GAAO+pC,aAAeV,GAAqB9iE,GAAO+iE,SAClDriD,EAAU/iB,KAAK,wBAAyBmlE,GAAqB9iE,KAEjEqjE,GAA0BrjE,IClP9B,MAAM0jE,GAAW,IAAIC,KAAKC,eAAe,QAAS,CAC9CC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,QAAQ,EACRC,OAAQ,UACRrmD,OAAQ,YAENsmD,GAAW,IAAIR,KAAKC,eAAe,QAAS,CAC9CC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,QAAQ,EACRC,OAAQ,UACRrmD,OAAQ,YAENumD,GAAc,CAACC,GAAQ,KACzB,MAAMrlC,EAASqlC,EAAQF,GAAWT,GAC5BY,EAAYlpE,OAAOqlB,OAAO,MAAOue,EAClCulC,cAAc,IAAIrnB,MAClB9hB,QAAQtsB,GAAiB,YAAXA,EAAEkvB,OAChBic,KAAIvE,IAAK,CAAG,CAACA,EAAE1X,MAAO0X,EAAEn0C,WACvBijE,EAASH,EAAQ,IAAIC,EAAUG,UAAUC,gBAAkB,GACjE,MAAO,GAAGJ,EAAUT,QAAQS,EAAUR,SAASQ,EAAUP,OAAOO,EAAUN,QAAQM,EAAUJ,UAAUI,EAAUzmD,SAAS2mD,KAgBhHG,GAAkB,KAAM,OAxDiBvgE,OAwDP,EAxDgBy2D,OAwDR,EAxDuBC,EAwDP,YACnErhC,GAAOmrC,YAAc1nB,KAAKC,MACtB1jB,GAAO46B,aAAe,OACtB56B,GAAO0D,QAAW/6B,KAAKqE,MAAMgzB,GAAO46B,YAAc,OAAS,EAAI56B,GAAOyH,WAAW,IAAMzH,GAAOyH,WAAW,KAAO,kBAAuBzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,KAAOzH,GAAOyH,WAAW,MAC3MzH,GAAO46B,YAAe56B,GAAO46B,YAAc,MAE/C7vD,SAASC,eAAe,eAAe8vD,aAAa,OAAQ,KAC5DsQ,KACA,MAAMC,EAAcrgE,EAAe,YAAYsgE,QACzCtN,EAAOuN,aAAaC,QAAQ,gBAClC,GAAI,cAAeC,WAAaJ,QACtBI,UAAUC,UAAUC,UAAU3N,GAC/B4N,OAAMp+D,GAAKhD,QAAQqhE,MAAMr+D,UAE7B,GAAI69D,EAAa,CAClB,MAAMS,EAAW/gE,SAASQ,cAAc,YACxCugE,EAAShkE,MAAQk2D,EACjB8N,EAAShR,aAAa,QAAS,qCAC/B/vD,SAASghE,KAAKrgE,YAAYogE,GAC1BA,EAASE,QACTF,EAASG,SACT,IACIlhE,SAASmhE,YAAY,QAEzB,MAAOxhB,GACHlgD,QAAQqhE,MAAM,yCAElB9gE,SAASghE,KAAK3gE,YAAY0gE,OAEzB,CACD,MAAM1lE,EAAI2E,SAASQ,cAAc,KACjCnF,EAAE00D,aAAa,OAAQ,iCAAmCkD,GAC1D53D,EAAE00D,aAAa,WA1CT96B,GAAOy6B,WACL9yD,QAAQ,cAAc,CAAC+iD,EAAGx4C,KAClC,OAAQA,GACJ,IAAK,UAAW,MAAO,IAAI8tB,GAAO06B,UAClC,IAAK,OAAQ,OAAOiQ,KACpB,IAAK,SAAU,OAAOA,IAAY,QAsCtCvkE,EAAE00D,aAAa,KAAM,gBACrB/vD,SAASghE,KAAKrgE,YAAYtF,GAC1BA,EAAE+lE,QACFphE,SAASghE,KAAK3gE,YAAYhF,GAE9B2E,SAASC,eAAe,cAAcE,YAAcmgE,EAC9C,iCACA,4BA9FC,KAFgEpI,OAwDZ,KAtDzCA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUv7D,GAAS,IAAMw7D,EAAKjC,EAAUkC,KAAKz7D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACpF,SAASg2D,EAAS17D,GAAS,IAAMw7D,EAAKjC,EAAiB,MAAEv5D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACvF,SAAS81D,EAAKj8D,GAJlB,IAAeS,EAIaT,EAAOo8D,KAAON,EAAQ97D,EAAOS,QAJ1CA,EAIyDT,EAAOS,MAJhDA,aAAiBm7D,EAAIn7D,EAAQ,IAAIm7D,GAAE,SAAUE,GAAWA,EAAQr7D,OAIT47D,KAAKL,EAAWG,GAClGF,GAAMjC,EAAYA,EAAUx8D,MAAM8F,EAASy2D,GAAc,KAAKmC,WAN1B,IAAU54D,EAASy2D,EAAY6B,EAAG5B,GAkGjE+K,GAAY,KACrB,MAAMhmE,EAAIimE,OAAOC,OAAOC,gBAAgB,IAAIC,YAAY,IAAI,GAAK,GAC3Dt6D,EAAIm6D,OAAOC,OAAOC,gBAAgB,IAAIC,YAAY,IAAI,GAAK,GACjE,IAAKC,OAAO,+DAA+DrmE,KAAK8L,aAAa9L,EAAI8L,QAAU9L,EAAI8L,EAC3G,OAEJ,MAAMw6D,EAAO/qE,OAAOqlB,OAAO,GAAI2lD,GAAW,CACtCC,MAAO5oE,MAAMm/C,KAAKwpB,GAAUC,SAEhCC,GAAgBC,KAAKlK,KAAKmK,UAAUL,MAE3BG,GAAmB5mE,IAC5B,MAAMogC,EAAI,yBAA8BpgC,GAClCX,EAAI+gC,EAAIu8B,KAAKC,MAAMx8B,GAAKu8B,KAAKC,MAAMmK,KAAK/mE,KACxB,SAAjBX,EAAE2nE,aAA0C,IAAjB3nE,EAAE2nE,aACZ,IAAjB3nE,EAAE2nE,YAAwBC,MAC3BC,GAAa7lE,QAAQg6C,IACrB6rB,GAAarpE,OAAS,EACtBynE,aAAa6B,QAAQ,eAAgBN,KAAKlK,KAAKmK,UAAUznE,KACzD+nE,KACAC,KACAC,OCtFD,MAAMC,GAAwB,KACjC,MAAMhxD,EAAW,CAAC,OAAQ,QAAS,SAAU,QAAS,SAAU,QAAS,QAAS,UAAW,UAC7FzR,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAM9I,GAAuB,KAC/F55D,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAM9I,GAAuB,KAC/F55D,SAASC,eAAe,iBAAiByiE,iBAAiB,SAAS,IAAM9I,GAAuB,KAChG55D,SAASC,eAAe,oBAAoByiE,iBAAiB,SAAS,IAAM9I,GAAuB,KACnG55D,SAASC,eAAe,eAAeyiE,iBAAiB,aAAa,IAAMpsB,GAAY,cACvFt2C,SAASC,eAAe,gBAAgByiE,iBAAiB,aAAa,IAAMpsB,GAAY,kBACxFt2C,SAASC,eAAe,kBAAkByiE,iBAAiB,aAAa,IAAMpsB,GAAY,mBAC1Ft2C,SAASC,eAAe,uBAAuByiE,iBAAiB,aAAa,IAAMpsB,GAAY,sBAC/Ft2C,SAASC,eAAe,gBAAgByiE,iBAAiB,aAAa,IAAMpsB,GAAY,2BACxFt2C,SAASC,eAAe,2BAA2ByiE,iBAAiB,aAAa,IAAMpsB,GAAY,4BACnGt2C,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAMpsB,GAAY,wBAC9Ft2C,SAASC,eAAe,aAAayiE,iBAAiB,aAAa,IAAMpsB,GAAY,eACrFt2C,SAASC,eAAe,eAAeyiE,iBAAiB,SAAS,IAAMhJ,GAAW,cAClF15D,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMhJ,GAAW,eACnF15D,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAMhJ,GAAW,iBACrF15D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMr/B,OAC/ErjC,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMhJ,GAAW,iBAAa7/D,GAAW,KAC3GmG,SAASC,eAAe,2BAA2ByiE,iBAAiB,SAAS,IAAMhJ,GAAW,8BAA0B7/D,GAAW,KACnImG,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMhJ,GAAW,wBACzF15D,SAASC,eAAe,aAAayiE,iBAAiB,SAAS,IAAMhJ,GAAW,YAChF15D,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMtP,GAAW,eACnFpzD,SAASC,eAAe,eAAeyiE,iBAAiB,SAAS,IAAMtP,GAAW,cAClFpzD,SAASC,eAAe,eAAeyiE,iBAAiB,SAAS,IAAMtP,GAAW,cAClFpzD,SAASC,eAAe,mBAAmByiE,iBAAiB,SAAS,IAAMtP,GAAW,kBACtFpzD,SAASC,eAAe,YAAYyiE,iBAAiB,SAAS,IAAMtP,GAAW,WAC/EpzD,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMtP,GAAW,gBACnFpzD,SAASC,eAAe,eAAeyiE,iBAAiB,SAAS,IAAMtP,GAAW,gBAClFpzD,SAASC,eAAe,WAAWyiE,iBAAiB,SAAS,IAAMtP,GAAW,UAC9EpzD,SAASC,eAAe,UAAUyiE,iBAAiB,SAAS,IAAMtP,GAAW,UAC7EpzD,SAASC,eAAe,WAAWyiE,iBAAiB,SAAS,IAAMtP,GAAW,WAC9EpzD,SAASC,eAAe,aAAayiE,iBAAiB,SAAS,IAAMtP,GAAW,YAChF,MAAMuP,EAAgB,CAAC,OAAQ,UAAW,SAAU,WAAY,aAChE,IAAK,IAAInnE,EAAQ,EAAGA,EAAQmnE,EAAc5pE,OAAQyC,IAC9CwE,SAASC,eAAe,WAAW0iE,EAAcnnE,cAAkBknE,iBAAiB,SAAS,IAAMpN,GAAa,EAAG95D,KAEvH,MAAMonE,EAAyB,CAAC,OAAQ,UAAW,SAAU,WAAY,YAAa,YAChFC,EAAe,CAAC,MAAO,MAAO,UAAW,YACzCC,EAAoB,CAAC,EAAG,GAAI,IAAK,KACvC,IAAK,IAAItnE,EAAQ,EAAGA,EAAQqnE,EAAa9pE,OAAQyC,IAC7C,IAAK,IAAIunE,EAAS,EAAGA,EAASH,EAAuB7pE,OAAQgqE,IACzD/iE,SAASC,eAAe2iE,EAAuBG,GAAUF,EAAarnE,IAAQknE,iBAAiB,SAAS,IAAM1O,GAAgB8O,EAAkBtnE,GAAQonE,EAAuBG,MAGvL/iE,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAM/iC,OAC1E3/B,SAASC,eAAe,iBAAiByiE,iBAAiB,SAAS,IAAMliC,OACzExgC,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMr/B,OAC/E,MAAM2/B,EAA0B,CAAC,OAAQ,UAAW,UAC9CC,EAA0B,CAAC,OAAQ,WAAY,UACrD,IAAK,IAAIznE,EAAQ,EAAGA,EAAQ,EAAGA,IAC3B,IAAK,IAAIunE,EAAS,EAAGA,GAAU,EAAGA,IAC9B/iE,SAASC,eAAe,MAAM+iE,EAAwBxnE,KAASunE,KAAUL,iBAAiB,SAAS,IAAMngC,GAAY9wB,EAASsxD,GAASE,EAAwBznE,GAAkB,IAAVA,EAAcunE,EAASA,GAAUA,EAAS,GAAK,KAG9N,IAAK,IAAIvnE,EAAQ,EAAGA,GAAS,EAAGA,IAC5BwE,SAASC,eAAe,oBAAoBzE,KAASknE,iBAAiB,aAAa,IAAMt/B,GAA2B5nC,KACpHwE,SAASC,eAAe,oBAAoBzE,KAASknE,iBAAiB,SAAS,IAAM5/B,GAAmBtnC,KAE5G,MAAM0nE,EAAwB,CAAC,EAAG,IAAK,IAAK,IAAK,MAC3CC,EAAU,CAAC,QAAS,SAAU,QAAS,SAAU,SACvD,IAAK,IAAI3nE,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,eAAezE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM1+B,GAAoBm/B,EAAQ3nE,GAAQ0nE,EAAsB1nE,MAElJ,MAAM4nE,EAAyB,CAAC,EAAG,GAAI,IAAK,IAAM,KAClD,IAAK,IAAI5nE,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,gBAAgBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMj+B,GAAqB2+B,EAAuB5nE,GAAQA,EAAQ,KACjJwE,SAASC,eAAe,sBAAsBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMnJ,GAAqB/9D,EAAQ,KAE5H,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BwE,SAASC,eAAe,qBAAqBzE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAMvwB,GAA4B32C,EAAQ,KAClIwE,SAASC,eAAe,qBAAqBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMrwB,GAAoB72C,EAAQ,KAE1H,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BwE,SAASC,eAAe,SAASzE,EAAQ,KAAKknE,iBAAiB,SAAS,KAAMW,ON5CvDxqE,EM4CsE2C,EN3CjG3C,KAC0B,IAAtBo8B,GAAO8b,QAAQl4C,GACfo8B,GAAO8b,QAAQl4C,IAAK,EAGpBo8B,GAAO8b,QAAQl4C,IAAK,OAExB68D,KAR0B,IAAC78D,KM8C3BmH,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMjN,GAAgB,KAC9Fz1D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMjN,GAAgB,KAC/Fz1D,SAASC,eAAe,yBAAyByiE,iBAAiB,SAAS,IAAMjN,GAAgB,KACjGz1D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMjN,GAAgB,KAC/Fz1D,SAASC,eAAe,kBAAkByiE,iBAAiB,QAAQ,IAAM5qB,GAAgB,KACzF93C,SAASC,eAAe,mBAAmByiE,iBAAiB,QAAQ,IAAM5qB,GAAgB,KAC1F93C,SAASC,eAAe,uBAAuByiE,iBAAiB,QAAQ,IAAM5qB,GAAgB,KAC9F93C,SAASC,eAAe,mBAAmByiE,iBAAiB,QAAQ,IAAM5qB,GAAgB,KAC1F93C,SAASC,eAAe,0BAA0ByiE,iBAAiB,QAAQ,IAAM5qB,GAAgB,KACjG93C,SAASC,eAAe,0BAA0ByiE,iBAAiB,SAAS,KNqOpC,IAApCztC,GAAOquC,0BAAsE,IAApCruC,GAAOquC,0BAChDruC,GAAOquC,yBAA2B,EAClCtjE,SAASC,eAAe,0BAA0BE,YAAc,gBAChEH,SAASC,eAAe,0BAA0Bs4B,MAAM0D,OAAS,kBAGjEhH,GAAOquC,yBAA2B,EAClCtjE,SAASC,eAAe,0BAA0BE,YAAc,eAChEH,SAASC,eAAe,0BAA0Bs4B,MAAM0D,OAAS,sBM5OrEj8B,SAASC,eAAe,mBAAmByiE,iBAAiB,QAAQ,Id+B5B,MACxC,IAAI1qB,EAAI5vC,WAAWnI,EAAe,mBAAmBlD,OACrDi7C,EAAIp6C,KAAKqE,MAAM+1C,GAEX/iB,GAAOm6B,yBADPpX,GAAK,EAC6BA,EAGA,GctCoCurB,KAC1E,IAAK,IAAI/nE,EAAQ,EAAGA,GAAS,IAAKA,IAC9BwE,SAASC,eAAe,MAAMzE,KAASknE,iBAAiB,aAAa,IAAM5xB,GAAoBt1C,KAC/FiE,QAAQ0G,IAAI,6DAEhB,MAAMq9D,EAAgB,CAAC,OAAQ,WAAY,YAAa,iBACxD,IAAK,IAAIhoE,EAAQ,EAAGA,GAAS,GAAIA,IAAS,CACtC,MAAMioE,EAAeD,EAAc5lE,KAAKqE,OAAOzG,EAAQ,GAAK,KAC5DwE,SAASC,eAAe,MAAMzE,KAASknE,iBAAiB,SAAS,IAAMhgC,GAAY+gC,EAAcjoE,KACjGiE,QAAQ0G,IAAI,6DAEhB,IAAK,IAAI3K,EAAQ,EAAGA,GAAS,GAAIA,IAC7BwE,SAASC,eAAe,MAAMzE,EAAQ,MAAMknE,iBAAiB,SAAS,IAAM58B,GAActqC,KAC1FiE,QAAQ0G,IAAI,4DAEhB,IAAK,IAAI3K,EAAQ,EAAGA,GAAS,GAAIA,IAC7BwE,SAASC,eAAe,MAAMzE,EAAQ,OAAOknE,iBAAiB,SAAS,IAAMj9B,GAAajqC,KAC1FiE,QAAQ0G,IAAI,4DAEhB,IAAK,IAAI3K,EAAQ,EAAGA,GAAS,EAAGA,IAC5BwE,SAASC,eAAe,MAAMzE,EAAQ,OAAOknE,iBAAiB,SAAS,IAAMhgC,GAAY,OAAQlnC,KACjGiE,QAAQ0G,IAAI,4DAEhBnG,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAMxO,GAAY,KACtFl0D,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMxO,GAAY,KAC1Fl0D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMxO,GAAY,KAC3Fl0D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMxO,GAAY,KAC3Fl0D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMxO,GAAY,KAC3F,IAAK,IAAI14D,EAAQ,EAAGA,GAAS,IAAKA,IAC9BwE,SAASC,eAAe,MAAMzE,KAASknE,iBAAiB,aAAa,IAAMvqC,EAAwB38B,KAEvGwE,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAM3M,GAAoB,KACnG,IAAK,IAAIv6D,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,mBAAmBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMpN,GAAa,EAAG95D,KAE5G,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,OAAOzE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAM7lC,GAAuBrhC,EAAQ,KAC/GwE,SAASC,eAAe,OAAOzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM3M,GAAoBv6D,EAAQ,KACxGwE,SAASC,eAAe,eAAezE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAM7lC,GAAuBrhC,EAAQ,KACvHwE,SAASC,eAAe,eAAezE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMllC,GAAahiC,EAAQ,KAE7G,MAAMkoE,EAAsB,CAAC,GAAI,GAAI,GAAI,KACnCC,EAAyB,CAAC,MAAO,aAAc,QAAS,WAC9D,IAAK,IAAInoE,EAAQ,EAAGA,EAAQkoE,EAAoB3qE,OAAQyC,IACpDwE,SAASC,eAAe,WAAW0jE,EAAuBnoE,MAAUknE,iBAAiB,SAAS,IAAMjoC,EAAkBj/B,KAE1HwE,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,INmV1C,MAC7B,MAAMroC,EAAKr6B,SAASC,eAAe,sBACF,IAA7Bg1B,GAAO2uC,mBAAyD,GAA1B3uC,GAAOyH,WAAW,MACxDrC,EAAGl6B,YAAc,mBACjBk6B,EAAG9B,MAAM0D,OAAS,oBAGlB5B,EAAGl6B,YAAc,oBACjBk6B,EAAG9B,MAAM0D,OAAS,iBAEtBhH,GAAO2uC,mBAAqB3uC,GAAO2uC,mBM7V0CC,KAC7E7jE,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,INsU1C,MAC7B,MAAMroC,EAAKr6B,SAASC,eAAe,sBACF,IAA7Bg1B,GAAO6uC,mBAAyD,GAA1B7uC,GAAOyH,WAAW,MACxDrC,EAAGl6B,YAAc,mBACjBk6B,EAAG9B,MAAM0D,OAAS,oBAGlB5B,EAAGl6B,YAAc,oBACjBk6B,EAAG9B,MAAM0D,OAAS,iBAEtBhH,GAAO6uC,mBAAqB7uC,GAAO6uC,mBMhV0CC,KAC7E,MAAMC,EAAoB,CAAC,QAAS,iBAAkB,mBAAoB,eAAgB,eAAgB,oBAAqB,oBAC/H,IAAK,IAAIxoE,EAAQ,EAAGA,EAAQwoE,EAAkBjrE,OAAQyC,IAClDwE,SAASC,eAAe,kBAAkBzE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAMtoC,EAA0B4pC,EAAkBxoE,MACvIwE,SAASC,eAAe,kBAAkBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMxnC,GAAqB8oC,EAAkBxoE,MAElI,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,WAAWzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMtnC,GAAmB5/B,EAAQ,KAC3GwE,SAASC,eAAe,kBAAkBzE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAMhnC,GAAmBlgC,EAAQ,KACtHwE,SAASC,eAAe,kBAAkBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMnmC,GAAkB/gC,EAAQ,KACjHwE,SAASC,eAAe,kBAAkBzE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAM9mC,GAA0BpgC,EAAQ,KAC7HwE,SAASC,eAAe,kBAAkBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM9lC,GAAmBphC,EAAQ,KAClHwE,SAASC,eAAe,iBAAiBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM5mC,GAAsBtgC,EAAQ,KAExHwE,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAM5mC,GAAsB,KACpG97B,SAASC,eAAe,yBAAyByiE,iBAAiB,SAAS,IxBoI1C,CAAC7pE,IAClC,MAAM4/B,EAAM,CAAC,KAAM,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,SACjE,GAAIxD,GAAO+E,YAAc,KAAUnhC,GAAK,EAAG,CACvC,IAAK,IAAIkB,EAAI,EAAGA,GAAK,EAAGA,IACpBk7B,GAAO,WAAawD,EAAI5/B,IAAIkB,GAAK,sBAAyBA,GAE9Dk7B,GAAO+E,YAAc,IACrBh6B,SAASC,eAAe,yBAAyBs4B,MAAM8C,QAAU,OACjEr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,OAC1Dr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC1DD,GAAmBviC,QAElB,GAAIo8B,GAAO+E,YAAc,KAAgB,IAANnhC,EAAS,CAC7Co8B,GAAO+E,YAAc,IACrB,IAAK,IAAIjgC,EAAI,EAAGA,GAAK,EAAGA,IACpB,IAAK,IAAIu+B,EAAI,EAAGA,GAAK,EAAGA,IACpBrD,GAAO,WAAawD,EAAI1+B,IAAIu+B,GAAK,sBAAyBA,GAGlEt4B,SAASC,eAAe,yBAAyBs4B,MAAM8C,QAAU,OAErEsB,MwBzJiFsnC,CAAsB,oBACvGjkE,SAASC,eAAe,wBAAwByiE,iBAAiB,SAAS,KAAMwB,OxB0J/CrrE,EwB1JoE,iBxB2JrGmH,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,YACtDxiC,GAAK,IACLmH,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,QAC1DD,GAAmBviC,KAJS,IAACA,KwBzJjC,IAAK,IAAI2C,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,uBAAuBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMxmC,GAAuB1gC,EAAQ,KAE/H,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,uBAAuBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM/9B,GAAmB,YAAanpC,EAAQ,KACpIwE,SAASC,eAAe,qBAAqBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM/9B,GAAmB,UAAWnpC,EAAQ,KAEpIwE,SAASC,eAAe,wBAAwByiE,iBAAiB,QAAQ,IAAMpJ,GAA4B,KAC3Gt5D,SAASC,eAAe,sBAAsByiE,iBAAiB,QAAQ,IAAMpJ,GAA4B,KACzG,IAAK,IAAI99D,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BwE,SAASC,eAAe,YAAYzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM7I,GAAiBr+D,EAAQ,KAE9GwE,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAM9O,GAAiB,oBAAuB,KAClH5zD,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,KLuJpE1iE,SAASC,eAAe,kBAAkBE,YAAc80B,GAAO+7B,gBACzD,wBACA,4BACN/7B,GAAO+7B,iBAAmB/7B,GAAO+7B,oBKzJjChxD,SAASC,eAAe,6BAA6ByiE,iBAAiB,SAAS,IN8dzC,CAAC7pE,IACvC,MAAMwhC,EAAKr6B,SAASC,eAAe,6BAC/Bg1B,GAAOqlC,qBAAqBzhE,IAC5BwhC,EAAG9B,MAAM0D,OAAS,gBAClB5B,EAAGl6B,YAAc,0BAA4BtH,EAAI,WAGjDwhC,EAAG9B,MAAM0D,OAAS,kBAClB5B,EAAGl6B,YAAc,0BAA4BtH,EAAI,SAErDo8B,GAAOqlC,qBAAqBzhE,IAAMo8B,GAAOqlC,qBAAqBzhE,IMxeuBsrE,CAA2B,sBAChHnkE,SAASC,eAAe,4BAA4ByiE,iBAAiB,SAAS,IAAM3O,OACpF/zD,SAASC,eAAe,gCAAgCyiE,iBAAiB,QAAQ,IAAM1J,GAAoB,KAC3Gh5D,SAASC,eAAe,+BAA+ByiE,iBAAiB,QAAQ,IAAM1J,GAAoB,KAC1Gh5D,SAASC,eAAe,gCAAgCyiE,iBAAiB,QAAQ,IAAM1J,GAAoB,KAC3G,IAAK,IAAIx9D,EAAQ,EAAGA,EAAQ,IAAKA,IAC7BwE,SAASC,eAAe,MAAMzE,KAASknE,iBAAiB,SAAS,IAAMluB,GAAYh5C,KACnFwE,SAASC,eAAe,MAAMzE,KAASknE,iBAAiB,aAAa,IAAM3tB,GAAqBv5C,KAChGiE,QAAQ0G,IAAI,8EAEhBnG,SAASC,eAAe,UAAUyiE,iBAAiB,SAAS,IAAMluB,GAAY,KAAK,EAAO,OAC1Fx0C,SAASC,eAAe,UAAUyiE,iBAAiB,aAAa,IAAM3tB,GAAqB,KAAK,EAAO,OACvGt1C,QAAQ0G,IAAI,0EACZnG,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,KNkKnE,kBACA,kBAAsB,EACtB1iE,SAASC,eAAe,qBAAqBE,YAAc,qBAG3D,kBAAsB,EACtBH,SAASC,eAAe,qBAAqBE,YAAc,iCMvK/DH,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAM5M,OAC9E,MAAMsO,EAAsB,CAAC,OAAQ,QAAS,IAAK,MAAO,QAAS,OAAQ,OAAQ,QAAS,SAC5F,IAAK,IAAI5oE,EAAQ,EAAGA,GAAS,EAAGA,IAC5BwE,SAASC,eAAe,UAAUzE,KAASknE,iBAAiB,aAAa,IAAMzc,GAAqBzqD,KACpGwE,SAASC,eAAe,UAAUzE,KAASknE,iBAAiB,aAAa,KAAM2B,OZjJ7DxrE,EYiJuE2C,EZhJ7F+6C,GAASyP,SACTA,GAAYxP,IAAS,IAAMyP,GAAqBptD,IAAI,KAF/B,IAACA,KYkJlBmH,SAASC,eAAe,UAAUzE,KAASknE,iBAAiB,SAAS,IAAMlc,GAAgB/0C,EAASjW,GAAQ,OAAQ4oE,EAAoB5oE,GAAQA,KAEpJ,MAAM8oE,EAAqB,CAAC,OAAQ,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SACvH,IAAK,IAAI9oE,EAAQ,EAAGA,GAAS,GAAIA,IAC7BwE,SAASC,eAAe,aAAazE,KAASknE,iBAAiB,aAAa,IAAM5b,GAAsBtrD,KACxGwE,SAASC,eAAe,aAAazE,KAASknE,iBAAiB,SAAS,IAAM7b,GAAcyd,EAAmB9oE,IAAQ,EAAOA,KAElIwE,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMrb,OACxErnD,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAM9J,OACxE54D,SAASC,eAAe,0BAA0ByiE,iBAAiB,SAAS,IAAM7J,GAAuB,KACzG74D,SAASC,eAAe,wBAAwByiE,iBAAiB,SAAS,IAAM7J,GAAuB,KACvG,IAAK,IAAIr9D,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,SAASC,eAAe,mBAAmBzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAMpN,GAAa,EAAG95D,KAE5G,IAAK,IAAIA,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BwE,SAASC,eAAe,UAAUzE,EAAQ,KAAKknE,iBAAiB,aAAa,IAAM9uB,GAAgBp4C,EAAQ,KAC3GwE,SAASC,eAAe,UAAUzE,EAAQ,KAAKknE,iBAAiB,SAAS,IAAM5uB,GAAgBt4C,EAAQ,KAE3GwE,SAASC,eAAe,aAAayiE,iBAAiB,aAAa,IAAM9uB,GAAgB,GAAI,OAC7F5zC,SAASC,eAAe,aAAayiE,iBAAiB,SAAS,IAAM5uB,GAAgB,GAAI,OACzF9zC,SAASC,eAAe,iBAAiByiE,iBAAiB,SAAS,INuYvC,MAC5B,MAAMroC,EAAKr6B,SAASC,eAAe,iBAC/B,sBACA,sBAA0B,EAC1Bo6B,EAAGl6B,YAAc,yBAGjB,sBAA0B,EAC1Bk6B,EAAGl6B,YAAc,mCM/YoDokE,KACzEvkE,SAASC,eAAe,aAAayiE,iBAAiB,SAAS,IAAMnwB,GAAS,GAAG,KACjFvyC,SAASC,eAAe,cAAcyiE,iBAAiB,SAAS,IAAMnwB,GAAS,IAAI,KACnFvyC,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMnwB,GAAS,KAAM,KACvFvyC,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMnwB,GAAS,GAAG,KACpFvyC,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAM3uB,GAAc,GAAG,KAC3F/zC,SAASC,eAAe,mBAAmByiE,iBAAiB,SAAS,IAAM3uB,GAAc,IAAI,KAC7F/zC,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAM3uB,GAAc,KAAM,KACjG/zC,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAM3uB,GAAc,GAAG,KAC9F/zC,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAM7sB,GAAc,GAAG,KAC3F71C,SAASC,eAAe,mBAAmByiE,iBAAiB,SAAS,IAAM7sB,GAAc,IAAI,KAC7F71C,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAM7sB,GAAc,KAAM,KACjG71C,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAM7sB,GAAc,GAAG,KAC9F71C,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAM3E,GAAa,GAAG,KAC7F/9D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAM3E,GAAa,KAAK,KACjG/9D,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAM3E,GAAa,KAAK,KAChG/9D,SAASC,eAAe,wBAAwByiE,iBAAiB,SAAS,IAAM3E,GAAa,GAAG,KAChG,MAAMthB,EAAmBz8C,SAASuqD,uBAAuB,wBACzD,IAAK,IAAI/uD,EAAQ,EAAGA,EAAQihD,EAAiB1jD,OAAQyC,IACjDihD,EAAiBjhD,GAAOknE,iBAAiB,aAAa,IAAM7D,GAA0BrjE,EAAQ,KAC9FihD,EAAiBjhD,GAAOknE,iBAAiB,SAAS,IAAMzD,GAAoBzjE,EAAQ,KAExFwE,SAASC,eAAe,gBAAgByiE,iBAAiB,SAAS,IAAMpN,GAAa,EAAG,KACxFt1D,SAASC,eAAe,mBAAmByiE,iBAAiB,SAAS,IAAMpN,GAAa,EAAG,KAC3Ft1D,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMtQ,GAAkB,MAChGpyD,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IPrDnC,MACpC,MAAM8B,EAAUxkE,SAASC,eAAe,4BACxCukE,EAAQjsC,MAAMo0B,WAAa,UAC3B8X,YAAW,IAAMD,EAAQjsC,MAAMo0B,WAAa,UAAU,MOkDuB+X,KAC7E1kE,SAASC,eAAe,4BAA4ByiE,iBAAiB,SAAS,IAAMjJ,GAAsB,GAAI,OAC9Gz5D,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IN8b7C,MAC5B,MAAMrnE,EAAI2E,SAASC,eAAe,uBAC9Bg1B,GAAO0vC,YACPtpE,EAAEk9B,MAAM0D,OAAS,gBACjB5gC,EAAE8E,YAAc,sBAGhB9E,EAAEk9B,MAAM0D,OAAS,kBACjB5gC,EAAE8E,YAAc,oBAEpB80B,GAAO0vC,YAAc1vC,GAAO0vC,YMxcmDC,KAC/E,MAAMC,EAAiB5rE,MAAMm/C,KAAKp4C,SAASy2D,iBAAiB,sCAC5D,IAAK,MAAMP,KAAU2O,EACjB3O,EAAOwM,iBAAiB,SAAS,IAAMpN,IAAc,EAAGuP,EAAe58D,QAAQiuD,MAEnFl2D,SAASC,eAAe,cAAcyiE,iBAAiB,SAAS,IAAMvC,OACtEngE,SAASC,eAAe,mBAAmByiE,iBAAiB,QAAQ,KDlOpEztC,GAAOy6B,WAAazvD,EAAe,mBAAmBlD,SCmOtDiD,SAASC,eAAe,YAAYyiE,iBAAiB,SAAS,IAAMrC,IAAY,KAChFrgE,SAASC,eAAe,cAAcyiE,iBAAiB,SAAS,IAAMrB,OACtErhE,SAASC,eAAe,cAAcyiE,iBAAiB,SAAS,IDtJ1C,MACtB,MAAMxnE,EAAQwmE,OAAO,oDACfrnC,EAAKr6B,SAASC,eAAe,iBACnC,GAAc,kBAAV/E,GAA8B+5B,GAAO4sC,MAAM/+D,IAAI,GAM9C,GAAc,cAAV5H,GAAyB+5B,GAAOkC,aAAa,KAAO,EACzDhC,EAAiB,KACjBkF,EAAGl6B,YAAc,wDAEhB,GAAc,gBAAVjF,GAA2B+5B,GAAOkC,aAAa,KAAO,EAC3DhC,EAAiB,KACjBkF,EAAGl6B,YAAc,mGAEhB,GAAc,WAAVjF,GAAuB+5B,GAAO4sC,MAAM/+D,IAAI,IAM5C,GAAc,eAAV5H,GAA2B+5B,GAAO4sC,MAAM/+D,IAAI,IAKhD,GAAc,aAAV5H,GAAyB+5B,GAAO4sC,MAAM/+D,IAAI,IAK9C,GAAc,iBAAV5H,GAA6B+5B,GAAO4sC,MAAM/+D,IAAI,IAwBlD,GAAc,QAAV5H,EAAiB,CACtB,GAAI+5B,GAAO6vC,SAAYpsB,KAAKC,MAAQ,KAEhC,YADAte,EAAGl6B,YAAc,qDAGrB,MAAM6+B,EAASsiC,OAAOC,OAAOC,gBAAgB,IAAIC,YAAY,IAAI,GAAK,GAChEroD,EAAQkoD,OAAOC,OAAOC,gBAAgB,IAAIvlE,WAAW,IAAI,GACzDod,EAASioD,OAAOC,OAAOC,gBAAgB,IAAIvlE,WAAW,IAAI,GAC1D8oE,EAAYrD,OAAO,WAAWtoD,OAAWC,MAC3CD,EAAQC,KAAY0rD,GACpB9vC,GAAO0D,QAAUqG,EACjB3E,EAAGl6B,YAAc,oBAAoB6+B,kDAGrC3E,EAAGl6B,YAAc,eAAe4kE,yBAAiC3rD,EAAQC,2BAE7E4b,GAAO6vC,QAAUpsB,KAAKC,WAErB,GAAc,YAAVz9C,GAAwB+5B,GAAO4sC,MAAM/+D,IAAI,IAU9Cu3B,EAAGl6B,YAAc,8DAVkC,CACnD80B,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrB,IAAIiiE,EAAe,KACf/vC,GAAOwnB,iBAAiB,GAAK,IAC7BuoB,GAAgB,GAEpB/vC,GAAO0D,QAAUqsC,EACjB3qC,EAAGl6B,YAAc,6DAA+Dq6B,GAAOwqC,GAAgB,6BAjD/C,CACxD/vC,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrB,IAAIiiE,EAAe,KACf/vC,GAAO4B,qBAAqB,IAAM,GAAK5B,GAAO2nB,4BAA4B,IAAM,KAChFooB,GAAgB,MAEhB/vC,GAAO4B,qBAAqB,IAAM,GAAK5B,GAAO2nB,4BAA4B,IAAM,KAChFooB,GAAgB,MAEhB/vC,GAAO4B,qBAAqB,IAAM,GAAK5B,GAAO2nB,4BAA4B,IAAM,KAChFooB,GAAgB,MAEhB/vC,GAAO4B,qBAAqB,IAAM,GAAK5B,GAAO2nB,4BAA4B,IAAM,KAChFooB,GAAgB,MAEhB/vC,GAAO4B,qBAAqB,KAAO,IAAM5B,GAAO2nB,4BAA4B,KAAO,MACnFooB,GAAgB,MAEhB/vC,GAAO4B,qBAAqB,KAAO,IAAM5B,GAAO2nB,4BAA4B,KAAO,MACnFooB,GAAgB,GAEpB/vC,GAAO0D,QAAUqsC,EACjB3qC,EAAGl6B,YAAc,4DAA8Dq6B,GAAOwqC,GAAgB,gBA1BtG/vC,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrBkyB,GAAO0D,QAAU,IACjB0B,EAAGl6B,YAAc,oDAPjB80B,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrBkyB,GAAO0D,QAAU,IACjB0B,EAAGl6B,YAAc,0DATiC,CAClD80B,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrB,MAAMkiE,EAASrnE,KAAKqE,MAAsB,IAAhBrE,KAAKgK,SAA6B,KAC5DqtB,GAAO0D,QAAUssC,EACjB5qC,EAAGl6B,YAAc,+BAAiC8kE,EAAS,gBAjB3DhwC,GAAO4sC,MAAM9+D,IAAI,GAAG,GACpBkyB,GAAO+E,YAAc,GACrB/E,GAAO0D,QAAU,GACjB0B,EAAGl6B,YAAc,gEAgFrBkgE,KACAnkD,EAAU/iB,KAAK,YAAa+B,GAC5BupE,YAAW,WACPpqC,EAAGl6B,YAAc,KAClB,OC2DmE+kE,KACtEllE,SAASC,eAAe,gCAAgCyiE,iBAAiB,SAAS,IJ/E3C,MACvCztC,GAAOqmC,sBAAwBrmC,GAAOqmC,qBACtCoC,KACA,MAAMlK,EAASxzD,SAASC,eAAe,gCACvCuzD,EAAOrzD,YAAc,gBAAkB80B,GAAOqmC,qBAAuB,KAAO,OAC5E9H,EAAOj7B,MAAM84B,YAAcp8B,GAAOqmC,qBAAuB,QAAU,OI0EqB6J,KACxFnlE,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IXpB1C,MAI7B,IAHU,oBACJpb,QAAQ,uHAEP,CACHryB,GAAO0D,QAAU,GACjB,IAAIysC,EAAgBnwC,GAAO0D,OAC3B,IAAK,MAAM0sC,KAAYpd,GAAU,CAC7B,MAAMhkB,EAAMohC,EACZ,GAAIpd,GAAShkB,GAAKokB,YAAcpzB,GAAO6I,aAAamG,GAAOgkB,GAAShkB,GAAKqkB,mBAAoB,CACzF,IAAIgd,EAAcrd,GAAShkB,GAAKkkB,MAAQF,GAAShkB,GAAKqkB,mBAClDL,GAAShkB,GAAKmkB,cAAiBH,GAAShkB,GAAuB,oBAAKgkB,GAAShkB,GAAKqkB,mBAAqB,GAAK,EAChHrzB,GAAO0D,QAAUsvB,GAAShkB,GAAKkkB,MAAQlzB,GAAO6I,aAAamG,GACvDgkB,GAAShkB,GAAKmkB,cAAiBnzB,GAAO6I,aAAamG,IAAShP,GAAO6I,aAAamG,GAAO,GAAK,EAC1FqhC,EACN7lE,QAAQ0G,IAAI,yBAA2Bq0B,GAAOvF,GAAO0D,OAASysC,GAAiB,iBAAmBC,EAAW,mBAAqB7qC,GAAOvF,GAAO0D,QAAU,YAC1J1D,GAAO6I,aAAamG,GAAOgkB,GAAShkB,GAAKqkB,mBACzC8c,EAAgBnwC,GAAO0D,WWG0C4sC,KAC7EvlE,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,KN2T5D1iE,SAASC,eAAe,qBAChCE,YAAc,mBACX,0BACA,8BACN,oBAAyB,uBM9TzBH,SAASC,eAAe,mBAAmByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,oBAChG9oD,SAASC,eAAe,uBAAuByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,oBACpG9oD,SAASC,eAAe,qBAAqByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,oBAClG9oD,SAASC,eAAe,qBAAqByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,oBAClG9oD,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,oBAC7FlpD,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAMvZ,GAAc,oBAC3FnpD,SAASC,eAAe,oBAAoByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,qBACjG9oD,SAASC,eAAe,wBAAwByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,qBACrG9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,qBACnG9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,qBACnG9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,qBAC9FlpD,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMvZ,GAAc,qBAC5FnpD,SAASC,eAAe,cAAcyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,gBAC3F9oD,SAASC,eAAe,gBAAgByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,kBAC7F9oD,SAASC,eAAe,eAAeyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,iBAC5F9oD,SAASC,eAAe,iBAAiByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,mBAC9F9oD,SAASC,eAAe,iBAAiByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBAC9F9oD,SAASC,eAAe,UAAUyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,cACvF9oD,SAASC,eAAe,eAAeyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,cAC5F9oD,SAASC,eAAe,gBAAgByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,kBAC7F9oD,SAASC,eAAe,cAAcyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,gBAC3F9oD,SAASC,eAAe,iBAAiByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,wBAC9F9oD,SAASC,eAAe,YAAYyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,mBACzF9oD,SAASC,eAAe,aAAayiE,iBAAiB,aAAa,IAAM5Z,GAAiB,iBAC1F9oD,SAASC,eAAe,kBAAkByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBAC/F9oD,SAASC,eAAe,kBAAkByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBAC/F9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,gBACnG9oD,SAASC,eAAe,qBAAqByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,kBAClG9oD,SAASC,eAAe,uBAAuByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,iBACpG9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,mBACnG9oD,SAASC,eAAe,oBAAoByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBACjG9oD,SAASC,eAAe,YAAYyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,cACzF9oD,SAASC,eAAe,YAAYyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,cACzF9oD,SAASC,eAAe,gBAAgByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,kBAC7F9oD,SAASC,eAAe,mBAAmByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,gBAChG9oD,SAASC,eAAe,yBAAyByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,wBACtG9oD,SAASC,eAAe,wBAAwByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,mBACrG9oD,SAASC,eAAe,eAAeyiE,iBAAiB,aAAa,IAAM5Z,GAAiB,iBAC5F9oD,SAASC,eAAe,oBAAoByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBACjG9oD,SAASC,eAAe,oBAAoByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBACjG9oD,SAASC,eAAe,uBAAuByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,gBACpG9oD,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,gBAC/FlpD,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,kBACnG9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,kBAC9FlpD,SAASC,eAAe,wBAAwByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,iBACrG9oD,SAASC,eAAe,wBAAwByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,iBAChGlpD,SAASC,eAAe,uBAAuByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,mBACpG9oD,SAASC,eAAe,uBAAuByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,mBAC/FlpD,SAASC,eAAe,0BAA0ByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBACvG9oD,SAASC,eAAe,0BAA0ByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,sBAClGlpD,SAASC,eAAe,kBAAkByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,cAC/F9oD,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,cAC1FlpD,SAASC,eAAe,kBAAkByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,cAC/F9oD,SAASC,eAAe,kBAAkByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,cAC1FlpD,SAASC,eAAe,sBAAsByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,kBACnG9oD,SAASC,eAAe,sBAAsByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,kBAC9FlpD,SAASC,eAAe,oBAAoByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,gBACjG9oD,SAASC,eAAe,oBAAoByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,gBAC5FlpD,SAASC,eAAe,0BAA0ByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,wBACvG9oD,SAASC,eAAe,0BAA0ByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,wBAClGlpD,SAASC,eAAe,yBAAyByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,mBACtG9oD,SAASC,eAAe,yBAAyByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,mBACjGlpD,SAASC,eAAe,qBAAqByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,iBAClG9oD,SAASC,eAAe,qBAAqByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,iBAC7FlpD,SAASC,eAAe,0BAA0ByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBACvG9oD,SAASC,eAAe,0BAA0ByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,sBAClGlpD,SAASC,eAAe,0BAA0ByiE,iBAAiB,aAAa,IAAM5Z,GAAiB,sBACvG9oD,SAASC,eAAe,0BAA0ByiE,iBAAiB,SAAS,IAAMxZ,GAAgB,sBACrFlpD,SAASy2D,iBAAiB,gBAClCl6D,SAAQ4K,GAAKA,EAAEu7D,iBAAiB,SAAS,IAAM7Q,SACpD7xD,SAASC,eAAe,cAAcyiE,iBAAiB,UAAWjgE,IAAM,OA1VtB7C,OA0VgC,EA1VvBy2D,OA0V+B,EA1VhBC,EA0VgC,YACtG,MAAM,MAAEyB,GAAUt1D,EAAE9C,OACd6lE,EAAWzN,EAAM3Y,KAAK,GACtB6T,QAAauS,EAASjlE,OAC5B,OAAOuhE,GAAgB7O,IA5VpB,KAFgEiF,OA0V2B,KAxVhFA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUv7D,GAAS,IAAMw7D,EAAKjC,EAAUkC,KAAKz7D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACpF,SAASg2D,EAAS17D,GAAS,IAAMw7D,EAAKjC,EAAiB,MAAEv5D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACvF,SAAS81D,EAAKj8D,GAJlB,IAAeS,EAIaT,EAAOo8D,KAAON,EAAQ97D,EAAOS,QAJ1CA,EAIyDT,EAAOS,MAJhDA,aAAiBm7D,EAAIn7D,EAAQ,IAAIm7D,GAAE,SAAUE,GAAWA,EAAQr7D,OAIT47D,KAAKL,EAAWG,GAClGF,GAAMjC,EAAYA,EAAUx8D,MAAM8F,EAASy2D,GAAc,KAAKmC,WAN1B,IAAU54D,EAASy2D,EAAY6B,EAAG5B,MCOxEmP,GAAaC,IACf,MAAMC,EAAO/nE,KAAKqE,MAAMyjE,EAAgB,IAClCE,EAAYF,EAAgB,GAC5BG,EAAQjoE,KAAKqE,MAAM2jE,GAEzB,MAAO,CAAGD,OAAME,QAAOC,QADPloE,KAAKqE,MAAM,IAAM2jE,EAAYC,MA0C3CE,GAAa,CACflZ,EAAGxyB,GAAMA,EAAGl6B,YAAcq6B,GAAOvF,GAAOgD,cACxC/B,EAAGmE,GAAMA,EAAGl6B,YAAcH,SAASC,eAAe,2BAA2BE,YAC7Eg2B,EAAGkE,GAAMA,EAAGl6B,YAAcH,SAASC,eAAe,gCAAgCE,YAClFi2B,EAAGiE,GAAMA,EAAGl6B,YAAcH,SAASC,eAAe,gCAAgCE,YAClFyxC,EAAGvX,GAAMA,EAAGl6B,YAAcH,SAASC,eAAe,+BAA+BE,YACjFk2B,EAAGgE,GAAMA,EAAGl6B,YAAc80B,GAAO4B,qBAAqBr+B,MAAM,GAAI,IAAIiE,KAAK,OACzEo1C,EAAGxX,GAAMA,EAAGl6B,YAAcq6B,GAAOvF,GAAOg9B,oBAAqB,GAC7DngB,EAAGzX,GAAMA,EAAGl6B,YAAc80B,GAAOgQ,mBAAmBzsC,MAAM,EAAG,GAAGi9C,KAAInrC,GAAKkwB,GAAOlwB,KAAI7N,KAAK,OACzFs1C,EAAG1X,GAAMA,EAAGl6B,YAAc80B,GAAO8P,iBAAiBvsC,MAAM,EAAG,GAAGi9C,KAAInrC,GAAKkwB,GAAOlwB,KAAI7N,KAAK,OACvFu1C,EAAG3X,GAAMA,EAAGl6B,YAAc80B,GAAOikB,gBAAgB1gD,MAAM,EAAG,IAAIiE,KAAK,OACnEw1C,GAAI5X,GAAMA,EAAGl6B,YAAc80B,GAAO4B,qBAAqBr+B,MAAM,EAAG,GAAGiE,KAAK,OACxEqwD,GAAIzyB,GAAMA,EAAGl6B,YAAc80B,GAAO4B,qBAAqBr+B,MAAM,EAAG,IAAIiE,KAAK,OACzEswD,GAAI1yB,GAAMA,EAAGl6B,YAAc80B,GAAOkI,WAAW1gC,KAAK,OAClDuwD,GAAI3yB,IACA,MAAM2rC,EAAiB,CAAC,QAAS,YAAa,YAAa,OAAQ,SAAU,WAC7E3rC,EAAGo8B,iBAAiB,QAAQl6D,SAAQ,CAAC0pE,EAAMptE,KACvCotE,EAAK1tC,MAAMC,MAAQwtC,EAAe/wC,GAAOwG,eAAe5iC,GAAK,GAC7DotE,EAAK9lE,YAAc80B,GAAO0G,eAAe9iC,GAAK,OAGtDo0D,GAAI5yB,IACA,MAAM6rC,EAASjxC,GAAOwf,mBACtBpa,EAAG9B,MAAMC,MAAQ0tC,EAAS,QAAU,MACpC7rC,EAAGl6B,YAAc+lE,EAAS,KAAO,OAErChZ,GAAI7yB,IACA,MAAM8rC,EAAWlxC,GAAO4yB,oBACxBxtB,EAAG9B,MAAMC,MAAQ2tC,EAAW,QAAU,MACtC9rC,EAAGl6B,YAAcgmE,EAAW,KAAO,OAEvChZ,GAAI9yB,IACA,MAAM+rC,EAASnxC,GAAO6+B,qBACtBz5B,EAAG9B,MAAMC,MAAQ4tC,EAAS,QAAU,MACpC/rC,EAAGl6B,YAAcimE,EAAS,KAAO,OAErChZ,GAAI/yB,IACA,MAAMgsC,EAAUpxC,GAAO6jC,iBACjBwN,EAA2C,IAAhCrxC,GAAOk7B,qBAClB3X,EAAUvjB,GAAOkjB,gBACV9d,EAAGksC,WACXpmE,YAAc,IAAIq4C,KAAW8tB,EAAW,OAAS,kBACtD,MAAM9S,EAASn5B,EAAGmsC,iBAClBhT,EAAOj7B,MAAMC,MAAQ6tC,EAAU,QAAU,MACzC7S,EAAOrzD,YAAckmE,EAAU,KAAO,QA2BxCvU,GAAM9xD,SAASQ,cAAc,OACnCsxD,GAAI3lD,GAAK,kBACT2lD,GAAIv5B,MAAM8C,QAAU,OACpBy2B,GAAI2L,UAAY,ktFAqChB,MAAMjP,GAAcxuD,SAASC,eAAe,YACtC,GAASD,SAASQ,cAAc,UACtC,GAAOimE,UAAY,iBACnB,GAAOluC,MAAM0D,OAAS,oBACtB,GAAO1D,MAAMmuC,MAAQ,QACrB,GAAOnuC,MAAMouC,OAAS,OACtB,GAAOpuC,MAAMquC,MAAQ,QACrB,GAAOruC,MAAMsuC,OAAS,QACtB,IAAIC,GAAuB,KACvBC,GAAuB,KACvBC,GAAY,KACZ,IAAO,EACX,MAAMC,GAAsB,KACxB,MAAMC,EAAUjmE,OAAOhB,EAAe,kBAAkBlD,OAClD+hC,EAAS79B,OAAOhB,EAAe,kBAAkBlD,OACvD+0D,GAAIwK,cAAc,cAAcn8D,YArKf,EAACtH,EAAI,EAAGimC,EAAS,KAClC,MAAO,CAAE,CAAE,CAAE,CAAE,CAAEwyB,EAAMC,EAAO4V,GAAQvvB,KAChCwvB,EAAW9I,GAAqBzlE,GAChCwuE,EAAWD,EAASpd,WAAalrB,EACjCwoC,EAAYF,EAASnd,WAAanrB,EAClCyoC,EAAWH,EAASld,UAAYprB,EAChC0oC,EAAOvyC,GAAO4iB,iBAAmB,KACjC4vB,EAAWN,EAAOK,EAClBE,EAAYnW,EAAQiW,EACpBG,EAAWrW,EAAOkW,EAClBI,GAAkBL,EAAWtyC,GAAOmkB,iBAAmB+tB,GAAQM,EAC/DI,GAAmBP,EAAYryC,GAAO6gB,cAAgByb,GAASmW,EAC/DI,GAAkBT,EAAWpyC,GAAOsP,cAAgB+sB,GAAQqW,EAC5DI,EAAQtC,GAAU7nE,KAAKqH,IAAI,EAAG2iE,IAC9BI,EAASvC,GAAU7nE,KAAKqH,IAAI,EAAG4iE,IAC/BI,EAAOxC,GAAU7nE,KAAKqH,IAAI,EAAG6iE,IAC7BI,EAAkBtqE,KAAKqH,IAAI,EAAG2iE,EAAgBC,EAAiBC,GAC/DK,EAAiC,GAAlBD,EACfE,EAAa,IAAI1vB,KAAKA,KAAKC,MAAuB,IAAfwvB,GACzC,OAAO/7D,CAAa;+BACO0yB,kCAAuCjmC;iBACrDkvE,EAAMpC,cAAcoC,EAAMlC,gBAAgBkC,EAAMjC;kBAC/CkC,EAAOrC,cAAcqC,EAAOnC,gBAAgBmC,EAAOlC;gBACrDmC,EAAKtC,cAAcsC,EAAKpC,gBAAgBoC,EAAKnC;;;UAGnDsC;;2BAEiBF,EAAkB,IAAIl/D,YAAY;sBACvCy+D,GAAYS,EAAkBN,IAAiB5+D,YAAY;mBAC9D0+D,GAAaQ,EAAkBL,IAAkB7+D,YAAY;uBACzD2+D,GAAYO,EAAkBJ,IAAiB9+D,YAAY;OAsIhCq/D,CAAanB,EAASpoC,IAElEwpC,GAAsB,KACxB,GAAwB,aAApB,aAEA,OADA,IAAO,EACAC,KAEXzW,GAAI2E,iBAAiB,kBAAkBl6D,SAAQ,CAACisE,EAAM3vE,KAAQ,IAAIiH,EAAI,OAAgC,QAAxBA,EAAKimE,GAAWltE,UAAuB,IAAPiH,OAAgB,EAASA,EAAGvH,KAAKwtE,GAAYyC,OAuBzJD,GAAgB,KAClBE,cAAc3B,IACd2B,cAAc1B,IACdjV,GAAIv5B,MAAM8C,QAAU,OACpB2rC,GAAUzuC,MAAM8C,QAAU,KAC1B,GAAOqtC,UAAY,YACnB,GAAOnwC,MAAMowC,WAAa,KACVna,GAAYjE,uBAAuB,kBAAkB,GAC7DhyB,MAAM8C,QAAU,MAEtButC,GAAS,KACXnpE,QAAQ0G,IAAI,4DA5KI,CAAC0iE,IACjB,MAAMtwC,EAAQv4B,SAASQ,cAAc,SACrC+3B,EAAM53B,YAAYX,SAAS43D,eAkDnB,qeAjDR53D,SAAS8oE,KAAKnoE,YAAY43B,IA0K1BwwC,GACAjX,GAAIwK,cAAc,0BAA0BoG,iBAAiB,SAAS,IAAM5M,OAC5EhE,GAAIwK,cAAc,uBAAuBoG,iBAAiB,SAAS,IAAM3M,GAAoB,KAC7FjE,GAAIwK,cAAc,2BAA2BoG,iBAAiB,SAAS,IAAM3O,OAC7EjC,GAAIwK,cAAc,qBAAqBoG,iBAAiB,SAAS,IAAM7J,GAAuB,KAC9FrK,GAAY7tD,YAAYmxD,IACxB,GAAO4Q,iBAAiB,SAAS,KAC7B,IAAQ,GACJ,GAzCU,MAClB,MAAMx4D,EAAI+qB,GAAOy0B,aACjB,aAAkB,QAClB,CAAC,EAAG,EAAG,EAAG,GAAGntD,SAAQ1D,IACjBo8B,GAAOy0B,aAAe7wD,EACtBwwD,QAEJ,aAAkB,WAClBp0B,GAAOy0B,aAAex/C,EACtBo+D,KACArB,KACAH,GAAuBkC,YAAYV,GAAqB,KACxDvB,GAAuBiC,YAAY/B,GAAqB,KACxDD,GAAYxY,GAAYjE,uBAAuB,gBAAgB,GAC/Dyc,GAAUzuC,MAAM8C,QAAU,OAC1By2B,GAAIv5B,MAAM8C,QAAU,QACpB,GAAOqtC,UAAY,iBACnB,GAAOnwC,MAAMowC,WAAa,OACVna,GAAYjE,uBAAuB,kBAAkB,GAC7DhyB,MAAM8C,QAAU,QAuBhB4tC,GAGAV,QAGR,GAAOG,UAAY,YACnBla,GAAY0a,kBAAkBC,sBAAsB,cAAe,KAE1DnU,GAAO,KAChBp+D,OAAOiM,eAAey+D,OAAQ,YAAa,CACvCvkE,MAAO6rE,MChPF,GAAO,KAChBhyE,OAAOiM,eAAey+D,OAAQ,YAAa,CACvCvkE,MAAOskE,MCCF,GAAO,KAChBzqE,OAAOwyE,iBAAiB9H,OAAQ,CAC5B,cAAiB,CACbvkE,MAAO84C,IAEX,aAAgB,CACZ94C,MAAOghE,IAEX,aAAgB,CACZhhE,MAAOg3C,IAEX,SAAY,CACRh3C,MAAOw1C,OCLN82B,GAAY,CAACnuE,EAAOssE,KAC7B,MAAM1rD,EAA4B,cAAV5gB,GAAmC,WAAVA,EAAsB,EAAI8mD,KAC3E,OAAQ9mD,GACJ,IAAK,WACD+5B,GAAOqiB,iBAAmBkwB,EAAO1rD,EACjC,MACJ,IAAK,eACDmZ,GAAOsiB,kBAAoBiwB,EAAO1rD,EAClC,MACJ,IAAK,gBACDmZ,GAAOuiB,sBAAwBgwB,EAAO1rD,EACtC,MACJ,IAAK,YACDmZ,GAAO4iB,kBAAoB2vB,EAAO1rD,EAClC,MACJ,IAAK,SAAU,CACX,MAAMwtD,EArBa,MAC3B,IAAI9B,EAAO,IAEX,OADAA,GAAQ,KAAQvyC,GAAOyH,WAAW,KAC3B8qC,GAkBuB+B,GACtBt0C,GAAO46B,aAAe2X,EAAO1rD,EAC7BmZ,GAAO46B,YAAe56B,GAAO46B,YAAcyZ,EAAiBA,EAAgBr0C,GAAO46B,YACnF,SAYC2Z,GAAiB,CAACtuE,EAAOssE,KAClC,MAAM1rD,EAA4B,kBAAV5gB,GAAuC,iBAAVA,EAA4B,EAAI8mD,KACrF,OAAQ9mD,GACJ,IAAK,eAAgB,CACjB6iD,KACA,MAAMrnC,EAAgBypC,KACtBlrB,GAAO6E,gBAAkBpjB,EAAgB8wD,EAAO1rD,EACxB,eAApB,cACAstC,KAEJ,MAEJ,IAAK,eACD,uBAA4Boe,EAC5BvyC,GAAO+E,YAAcp8B,KAAKqE,MAAM,uBAChC,uBAA4B,EAC5B,MACJ,IAAK,gBAED,GADAgzB,GAAO+yB,gBAAkBwf,EACrBvyC,GAAO+yB,gBAAkB,EAAG,CAC5B,GAAgC,IAA5B/yB,GAAOmR,aAAa,IAAW,CAC/B,MAAMqjC,EAAY,EA7BT,MACzB,IAAIC,EAAS,EACb,IAAK,IAAI7wE,EAAI,EAAGA,GAAK,EAAGA,IAChBo8B,GAAOkI,WAAWtkC,EAAI,IAAMmlC,GAAkBnlC,IAC9C6wE,IAER,OAAOA,GAuB+BC,GACtB,GAAIF,EAAW,EAAG,CACd,MAAM1hB,EAAanqD,KAAKqE,MAAMgzB,GAAO+E,WAAayvC,GAClD,IAAK,IAAI5wE,EAAI,EAAGA,EAAI,EAAGA,IACnB2kC,GAAa3kC,EAAI,GAAG,EAAMkvD,QAIjC,CACD,MAAM6hB,EAAO30C,GAAO+gC,cACpBx4B,GAAaosC,GAAM,EAAM,GAE7B30C,GAAO+yB,gBAAkB,EAE7B,MACJ,IAAK,eACD/yB,GAAOooB,mBAAqBmqB,EAAO1rD,EACnCmZ,GAAOqoB,uBAAyBkqB,GAC2B,IAAhCvyC,GAAOk7B,qBAC9Bl7B,GAAOqoB,sBAAwBroB,GAAOooB,oBACjBpoB,GAAOkjB,iBAA8C,IAA3BljB,GAAOyH,WAAW,MAC9DzH,GAAO6jC,kBAAoB7jC,GAAOiqB,UAAUl6C,IAAI,SACnDqiD,IAAc,K,OC9CvB,MAAM8a,IAAY,EACZC,GAAe,GACf5rB,GAAW,IAAI92C,MAAMspE,YAAa,CAC3C,MAAMrpE,EAAQC,EAASnG,GACnB,MAAMsJ,EAAMpD,EAAO7F,MAAM8F,EAASnG,GAElC,OADA2oE,GAAavqE,KAAKkL,GACXA,KAGFwzC,GAAW,IAAI72C,MAAM+oE,cAAe,CAC7C,MAAM9oE,EAAQC,EAASnG,GACnB,MAAM0S,EAAK1S,EAAK,GAEhB,OADA2oE,GAAa3Q,OAAO2Q,GAAan6D,QAAQkE,GAAK,GACvCxM,EAAO7F,MAAM8F,EAASnG,MAGxBw7B,GAAS,CAClB0D,OAAQ,EACRoH,MAAO,IAAI,EAAQ,OACnBsX,kBAAmB,IAAI,EAAQ,OAC/BtgB,sBAAuB,IAAI,EAAQ,OACnC0kB,uBAAwB,IAAI,EAAQ,OACpCouB,WAAY,IAAI,EAAQ,OACxBxyC,eAAgB,EAChBmiB,mBAAoB,IAAI,EAAQ,KAChCC,cAAe,IAAI,EAAQ,OAC3BqwB,iBAAkB,IAClBxyC,gBAAiB,EACjBoiB,oBAAqB,IAAI,EAAQ,KACjCC,eAAgB,IAAI,EAAQ,OAC5BowB,kBAAmB,IACnBxyC,eAAgB,EAChBqiB,mBAAoB,IAAI,EAAQ,KAChCC,cAAe,IAAI,EAAQ,OAC3BmwB,iBAAkB,GAClBxyC,gBAAiB,EACjBsiB,oBAAqB,IAAI,EAAQ,KACjCC,eAAgB,IAAI,EAAQ,OAC5BkwB,kBAAmB,IACnBxyC,eAAgB,EAChBuiB,mBAAoB,IAAI,EAAQ,KAChCC,cAAe,IAAI,EAAQ,QAC3BiwB,iBAAkB,KAClB1vB,mBAAoB,EACpBN,uBAAwB,IAAI,EAAQ,KACpCO,kBAAmB,IAAI,EAAQ,OAC/B0vB,qBAAsB,IACtBzvB,oBAAqB,EACrBP,wBAAyB,IAAI,EAAQ,KACrCQ,mBAAoB,IAAI,EAAQ,OAChCyvB,sBAAuB,KACvBxvB,mBAAoB,EACpBR,uBAAwB,IAAI,EAAQ,KACpCS,kBAAmB,IAAI,EAAQ,QAC/BwvB,qBAAsB,KACtBvvB,oBAAqB,EACrBT,wBAAyB,IAAI,EAAQ,KACrCU,mBAAoB,IAAI,EAAQ,QAChCuvB,sBAAuB,KACvBtvB,mBAAoB,EACpBV,uBAAwB,IAAI,EAAQ,KACpCW,kBAAmB,IAAI,EAAQ,SAC/BsvB,qBAAsB,KACtB36B,iBAAkB,EAClBD,qBAAsB,IAAI,EAAQ,KAClC+L,gBAAiB,IAAI,EAAQ,KAC7B8uB,mBAAoB,EACpB7uB,kBAAmB,EACnBT,sBAAuB,IAAI,EAAQ,KACnCU,iBAAkB,IAAI,EAAQ,OAC9B6uB,oBAAqB,IACrB5uB,iBAAkB,EAClBV,qBAAsB,IAAI,EAAQ,KAClCW,gBAAiB,IAAI,EAAQ,OAC7B4uB,mBAAoB,KACpB3uB,kBAAmB,EACnBX,sBAAuB,IAAI,EAAQ,KACnCY,iBAAkB,IAAI,EAAQ,OAC9B2uB,oBAAqB,KACrB1uB,iBAAkB,EAClBZ,qBAAsB,IAAI,EAAQ,KAClCa,gBAAiB,IAAI,EAAQ,QAC7B0uB,mBAAoB,KACpB76B,oBAAqB,EACrBoM,wBAAyB,IAAI,EAAQ,KACrCoB,mBAAoB,IAAI,EAAQ,KAChCstB,sBAAuB,IACvB76B,qBAAsB,EACtBoM,yBAA0B,IAAI,EAAQ,KACtCoB,oBAAqB,IAAI,EAAQ,OACjCstB,uBAAwB,GACxB76B,oBAAqB,EACrBoM,wBAAyB,IAAI,EAAQ,KACrCoB,mBAAoB,IAAI,EAAQ,OAChCstB,sBAAuB,IACvB76B,qBAAsB,EACtBoM,yBAA0B,IAAI,EAAQ,KACtCoB,oBAAqB,IAAI,EAAQ,OACjCstB,uBAAwB,GACxB76B,oBAAqB,EACrBoM,wBAAyB,IAAI,EAAQ,KACrCoB,mBAAoB,IAAI,EAAQ,QAChCstB,sBAAuB,GACvB36B,eAAgB,EAChB2N,mBAAoB,IAAI,EAAQ,KAChCQ,cAAe,IAAI,EAAQ,SAC3BysB,iBAAkB,KAClB36B,gBAAiB,EACjB2N,oBAAqB,IAAI,EAAQ,KACjCQ,eAAgB,IAAI,EAAQ,KAC5BysB,kBAAmB,KACnB36B,eAAgB,EAChB2N,mBAAoB,IAAI,EAAQ,KAChCQ,cAAe,IAAI,EAAQ,OAC3BysB,iBAAkB,KAClB36B,gBAAiB,EACjB2N,oBAAqB,IAAI,EAAQ,KACjCQ,eAAgB,IAAI,EAAQ,OAC5BysB,kBAAmB,KACnB36B,eAAgB,EAChB2N,mBAAoB,IAAI,EAAQ,KAChCQ,cAAe,IAAI,EAAQ,QAC3BysB,iBAAkB,KAClB36B,eAAgB,EAChB2N,mBAAoB,IAAI,EAAQ,KAChCQ,cAAe,IAAI,EAAQ,QAC3BysB,iBAAkB,KAClB36B,iBAAkB,EAClB2N,qBAAsB,IAAI,EAAQ,KAClCQ,gBAAiB,IAAI,EAAQ,SAC7BysB,mBAAoB,KACpB36B,gBAAiB,EACjB2N,oBAAqB,IAAI,EAAQ,KACjCQ,eAAgB,IAAI,EAAQ,SAC5BysB,kBAAmB,KACnBn6B,gBAAiB,CACb/pC,KAAM,EACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhB+2B,gBAAiB,CACbjqC,KAAM,GACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBg3B,gBAAiB,CACblqC,KAAM,IACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBi3B,gBAAiB,CACbnqC,KAAM,IACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBk3B,gBAAiB,CACbpqC,KAAM,IACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBimB,eAAgB,IAAI,EAAQ,OAC5BD,iBAAkB,EAClBL,gBAAiB,IAAI,EAAQ,OAC7BpJ,kBAAmB,EACnBC,uBAAwB,EACxBwM,qBAAsB,IAAI,EAAQ,OAClChN,SAAUx9B,MAAM,KAAK0yE,KAAK,GAC1Bj8B,cAAe,EACfI,eAAgB,EAChB0M,mBAAoB,EACpBhZ,eAAgB,IAAI,EAAQ,KAC5B0C,gBAAiB,IAAI,EAAQ,KAC7BhC,oBAAqB,IAAI,EAAQ,KACjCjB,eAAgB,IAAI,EAAQ,KAC5B4M,gBAAiB,IAAI,EAAQ,KAC7B6M,oBAAqB,IAAI,EAAQ,KACjC3L,QAAS,CACL7a,GAAG,EACHC,GAAG,EACHC,GAAG,EACHwb,GAAG,EACHvb,GAAG,EACHwb,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,IAAI,EACJ6a,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,GAERv3B,qBAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpE+lB,4BAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3EqV,oBAAqB,EACrB2Z,2BAA4B,EAC5B5a,iBAAiB,EACjBtxB,iBAAkB,CACd/jB,aAAc,EACdC,cAAe,EACfC,UAAW,GAEfie,eAAgB,EAChB+xC,eAAgB,EAChBrwB,mBAAoB,EACpB0B,sBAAuB,EACvB9M,aAAc,EACd1T,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACpF,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5EgJ,QAAS,CACL8kB,SAAS,EACTE,SAAS,EACTE,WAAW,EACXE,UAAU,EACVpvC,UAAU,EACViqB,YAAY,EACZU,WAAW,EACXC,aAAa,EACb0O,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,GAEXhe,aAAcl+B,MAAM,KAAK0yE,KAAK,GAC9BjzC,kBAAmB,EACnBtD,sBAAsB,EACtBF,uBAAuB,EACvBK,uBAAuB,EACvBD,wBAAwB,EACxBK,yBAAyB,EACzBD,0BAA0B,EAC1BL,wBAAwB,EACxBG,yBAAyB,EACzBC,mCAAmC,EACnCG,2BAA2B,EAC3BC,qCAAqC,EACrCC,8CAA8C,EAC9CC,uDAAuD,EACvDoN,gBAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvCt2B,oBAAqB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACpDswB,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBsB,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GACtBzE,WAAY,EACZqW,aAAc,EACd8M,kBAAmB,EACnB7F,gBAAiB,EACjBC,iBAAkB,EAClBC,qBAAsB,EACtB4oB,YAAa,EACbxuD,eAAgB,EAChBmmC,gBAAiB,EACjBE,oBAAqB,EACrBsC,gBAAiB,WACjBe,iBAAkB,YAClBuB,mBAAoB,aACpBoS,aAAc,EACdC,aAAc,EACdC,aAAc,EACdmU,yBAA0B,EAC1BlU,yBAA0B,EAC1BnvB,cAAe,EACf6rC,iBAAkB,EAClBC,gBAAiB,EACjB5nC,kBAAmB,EACnB7G,kBAAmB,EACnBkH,mBAAoB,EACpBwB,YAAa,CACTG,MAAM,EACNzqB,UAAU,EACV2qB,WAAW,EACXJ,YAAY,EACZK,aAAa,GAEjB+sB,UAAW,EACX3J,aAAc,EACdmY,MAAO,IAAImK,IAAI/yE,MAAMm/C,KAAK,CAAEr/C,OAAQ,KAAM,CAAC4mD,EAAG9mD,IAAM,CAACA,EAAI,GAAG,MAC5DozE,YAAY,EACZC,mBAAmB,EACnBC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbvuC,aAAc,CACVoqB,eAAgB,EAChBM,gBAAiB,EACjBzI,WAAY,EACZhiB,aAAc,EACdmiB,YAAa,EACbvL,cAAe,EACfgI,iBAAkB,EAClB5hC,SAAU,EACVilC,SAAU,EACVyI,aAAc,EACd1G,WAAY,EACZ2G,mBAAoB,EACpBC,cAAe,EACf/V,YAAa,EACbsB,iBAAkB,EAClB+B,iBAAkB,GAEtB4R,qBAAqB,EACrBic,mBAAmB,EACnBF,mBAAmB,EACnBnvB,oBAAoB,EACpBC,aAAc,EACdshB,cAAe,EACfhO,eAAgB,EAChB6H,YAAa,IACb3Q,UAAW,IAAI,EAAQ,KACvB/f,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/Cie,mBAAoB,EACpBC,kBAAmB,IACnBC,sBAAuB,IACvB3hB,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCF,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC6kB,YAAa,CAAC,MAAO,EAAG,EAAG,EAAG,GAAI,GAClCC,YAAa,CAAC,KAAM,EAAG,GAAI,GAAI,EAAG,GAClCC,cAAe,CAAC,KAAM,GAAI,EAAG,EAAG,GAAI,GACpCC,aAAc,CAAC,MAAO,GAAI,EAAG,EAAG,EAAG,GACnCC,aAAc,CAAC,KAAM,EAAG,GAAI,GAAI,EAAG,GACnCC,YAAa,CAAC,KAAM,EAAG,EAAG,GAAI,GAAI,GAClCC,cAAe,CAAC,MAAO,EAAG,GAAI,EAAG,EAAG,GACpCjmB,eAAgB,EAChBC,gBAAiB,EACjBC,kBAAmB,EACnBC,cAAe,EACfC,cAAe,EACfC,mBAAoB,EACpBC,kBAAmB,EACnBvB,wBAAyB,GACzBo/B,kBAAkB,EAClB3gB,gBAAiB,IACjBgY,qBAAsB,EACtBxJ,QAAQ,EACR5uB,eAAgB,EAChB8f,iBAAkB,EAClBzR,aAAc,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BqW,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChEjK,SAAU,EACVjO,cAAe,EACfuR,cAAe,EACfsD,iBAAkB,EAClB4lB,YAAa,EACbvsB,cAAe,CACXj4B,YAAa,EACbC,WAAY,EACZF,SAAU,EACVG,QAAS,EACTJ,UAAW,EACXS,SAAU,EACVm4B,aAAc,EACdt8B,OAAQ,EACRsE,cAAe,EACfC,YAAa,GAEjBg5B,mBAAoB,CAChB35B,YAAa,EACbC,WAAY,EACZF,SAAU,EACVG,QAAS,EACTJ,UAAW,EACXS,SAAU,EACVm4B,aAAc,EACdt8B,OAAQ,EACRsE,cAAe,EACfC,YAAa,GAEjB+6B,mBAAoB,CAChB17B,YAAa,EACbC,WAAY,EACZF,SAAU,EACVG,QAAS,EACTJ,UAAW,EACXS,SAAU,EACVm4B,aAAc,EACdt8B,OAAQ,EACRsE,cAAe,EACfC,YAAa,GAEjB2uC,kBAAmB,CACfC,MAAO,EACPC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,eAAgB,EAChB9vC,MAAO,EACP+vC,WAAY,EACZjvC,YAAa,GAEjB8c,aAAc,IAAI,EAAQ,KAC1B0sC,YAAY,EACZ2H,eAAgB,iBAChBp0B,oBAAqB,EACrB9C,oBAAqB,EACrBuc,eAAgB,CACZz7B,GAAG,EACHC,GAAG,EACHC,GAAG,EACHwb,GAAG,GAEPoM,qBAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3D9E,gBAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtD6Z,mBAAoB,CAChB78B,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxCC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxCC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5Cg7B,qBAAqB,EACrB/f,iBAAkB,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD4qB,QAAS,CAAEhM,KAAM,GAAIsc,OAAQ,GAAIC,MAAO,IACxCtQ,gBAAiB,GACjBZ,sBAAsB,EACtBxH,sBAAsB,EACtBhX,mBAAoB,EACpBwd,qBAAsB,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GACtHmS,2BAA4B,GAC5BxT,mBAAoB,CAChBC,MAAO,GACPC,KAAM,EACNC,MAAO,GAEXn0B,mBAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpCF,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAClCG,sBAAuB,EACvBF,oBAAqB,EACrBw0B,eAAgB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GACpD9J,WAAY,iCACZwS,YAAY,EACZwK,SAAU,KACVpjB,SAAU,EACV5W,gBAAiB,EACjBC,eAAgB,EAChBqB,qBAAsB,EACtBC,oBAAqB,EACrB8B,qBAAsB,EACtBC,oBAAqB,EACrB22B,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBld,QAAS,gBACTmV,QAAS,GAEAlD,GAAYhrE,OAAOqlB,OAAO,GAAIgZ,GAAQ,CAC/C4sC,MAAO,IAAImK,IAAI/yE,MAAMm/C,KAAK,CAAEr/C,OAAQ,KAAM,CAAC4mD,EAAG9mD,IAAM,CAACA,EAAI,GAAG,QAEnDwnE,GAAe7M,IACxBv+B,GAAOmrC,YAAc1nB,KAAKC,MAC1B1jB,GAAOg3C,YAAa,EACpBh3C,GAAOi3C,mBAAoB,EAC3B,MAAMh7B,EAAIt6C,OAAOqlB,OAAO,GAAIgZ,GAAQ,CAChC4sC,MAAO5oE,MAAMm/C,KAAKnjB,GAAO4sC,SAG7B,GADArB,aAAa6B,QAAQ,eAAgBN,KAAKlK,KAAKmK,UAAU9wB,KACrDsiB,EAAQ,CACR,MAAMn5B,EAAKr6B,SAASC,eAAe,YACnCo6B,EAAGl6B,YAAc,2BACjBskE,YAAW,IAAMpqC,EAAGl6B,YAAc,IAAI,OAGjCqiE,GAAc,KACvB,MAAMvP,EAAOuN,aAAaC,QAAQ,gBAC5B/hE,EAAOu0D,EAAO4E,KAAKC,MAAMmK,KAAKhP,IAAS,KAO7C,GANIkP,IACAvrE,OAAOiM,eAAey+D,OAAQ,SAAU,CACpCvkE,MAAOk4B,KAGfr+B,OAAOqlB,OAAO,EAAGrlB,OAAOqlB,OAAO,GAAID,IAC/Btd,EAAM,CACN,MAAM5H,EAAiB,GAAGA,eACpBg2E,EAAe7zE,MAAMm/C,KAAK,CAAEr/C,OAAQ,KAAM,CAAC4mD,EAAG9mD,IAAM,cAAgBA,EAAI,GAAK,SAC7Ek0E,EAAO93C,GAAO4sC,MAAMkL,KACpBC,EAAep2E,OAAO8U,KAAKhN,GAAMk4B,QAAO0B,GAAKA,EAAExB,SAAS,gBA+B9D,GA9BIk2C,EAAaj0E,OAAS,GACtBi0E,EAAazwE,SAAQ+7B,IACjB,MAAMv7B,EAAQ2B,EAAK45B,GACbG,GAAOH,EAAE17B,QAAQ,SAAU,IACjCq4B,GAAO4sC,MAAM9+D,IAAI01B,EAAKw0C,QAAQlwE,OAGtCnG,OAAO8U,KAAKhN,GAAMnC,SAAQ,SAAU2wE,GAChC,GAAKp2E,EAAeyB,KAAK08B,GAAQi4C,GAAjC,CAGA,GAAI1hE,EAAUypB,GAAOi4C,IACjB,OAAQj4C,GAAOi4C,GAAQ,IAAI,EAAQxuE,EAAKwuE,IAEvC,GAAa,UAATA,EACL,OAAQj4C,GAAO4sC,MAAQ,IAAImK,IAAIttE,EAAKwuE,IAEnC,IAAIJ,EAAah2C,SAASo2C,GAG1B,OAAIj0E,MAAM8S,QAAQrN,EAAKwuE,KACpBj4C,GAAOi4C,GAAMn0E,OAAS2F,EAAKwuE,GAAMn0E,OAC1Bk8B,GAAOi4C,GAAQxuE,EAAKwuE,GAAM10E,MAAMkG,EAAKwuE,GAAMn0E,OAASk8B,GAAOi4C,GAAMn0E,QAGxEk8B,GAAOi4C,GAAQxuE,EAAKwuE,YAEFrzE,IAA1B6E,EAAKyuE,kBACLl4C,GAAO4sC,MAAM9+D,IAAI,IAAI,GAErBkyB,GAAO4sC,MAAMkL,KAAOA,EACpB,IAAK,IAAIl0E,EAAIo8B,GAAO4sC,MAAMkL,KAAO,EAAGl0E,GAAKk0E,EAAMl0E,IACtCo8B,GAAO4sC,MAAMlrE,IAAIkC,IAClBo8B,GAAO4sC,MAAM9+D,IAAIlK,GAAG,GAIhC,GAAIo8B,GAAO4sC,MAAMkL,KAAOA,EACpB,IAAK,IAAIl0E,EAAIo8B,GAAO4sC,MAAMkL,KAAO,EAAGl0E,GAAKk0E,EAAMl0E,IACtCo8B,GAAO4sC,MAAMlrE,IAAIkC,IAClBo8B,GAAO4sC,MAAM9+D,IAAIlK,GAAG,GAI1B,YAAa6F,IACfu2B,GAAO6vC,QAAU,QAEGjrE,IAApB6E,EAAKutE,YAA6BvtE,EAAKutE,aACvCh3C,GAAOg3C,YAAa,QAEOpyE,IAA3B6E,EAAKwtE,mBAAoCxtE,EAAKwtE,oBAC9Cj3C,GAAOi3C,mBAAoB,QAENryE,IAArB6E,EAAKytE,cACLl3C,GAAOk3C,aAAc,QAEDtyE,IAApB6E,EAAK0tE,aACLn3C,GAAOm3C,YAAa,QAECvyE,IAArB6E,EAAK2tE,cACLp3C,GAAOo3C,aAAc,QAEKxyE,IAA1Bo7B,GAAOyH,WAAW,MAClBzH,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrBkyB,GAAOyH,WAAW7kC,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/Fo9B,GAAOkC,aAAat/B,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrFo9B,GAAOob,aAAepb,GAAO+E,WAC7B/E,GAAOmb,aAAenb,GAAO6E,eAC7B7E,GAAO6E,gBAAkB,MAAQ7E,GAAOyH,WAAW,IACnDzH,GAAOyH,WAAW,IAAM,GAE5BzH,GAAOob,aAAepb,GAAOob,cAAgB,EAC7Cpb,GAAOmb,aAAenb,GAAOmb,cAAgB,EAC7Cnb,GAAO+E,WAAa/E,GAAO+E,YAAc,EACzC/E,GAAO6E,eAAiB7E,GAAO6E,gBAAkB,EAC5Cp7B,EAAKutE,YAAyC,OAA3BvtE,EAAKwtE,wBAAmEryE,IAArC6E,EAAKo/B,aAAaoqB,iBACzEjzB,GAAO8a,oBAAsB,EAC7B9a,GAAO+a,qBAAuB,EAC9B/a,GAAOgb,oBAAsB,EAC7Bhb,GAAOib,qBAAuB,EAC9Bjb,GAAOkb,oBAAsB,EAC7Blb,GAAOsoB,mBAAqB,IAAI,EAAQ,KACxCtoB,GAAOuoB,oBAAsB,IAAI,EAAQ,OACzCvoB,GAAOwoB,mBAAqB,IAAI,EAAQ,OACxCxoB,GAAOyoB,oBAAsB,IAAI,EAAQ,OACzCzoB,GAAO0oB,mBAAqB,IAAI,EAAQ,QACxC1oB,GAAO4yB,qBAAsB,EAC7B5yB,GAAOwf,oBAAqB,EAC5Bxf,GAAOyf,aAAe,EACtBzf,GAAO+gC,cAAgB,EACvB/gC,GAAO+yB,eAAiB,EACxB/yB,GAAOg3C,YAAa,EACpBh3C,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrBkyB,GAAO6I,aAAelnC,OAAOqlB,OAAO,GAAI2lD,GAAU9jC,eAEjDp/B,EAAKwtE,oBACNj3C,GAAOi3C,mBAAoB,EAC3Bj3C,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrBkyB,GAAO8a,oBAAsB,EAC7B9a,GAAO+a,qBAAuB,EAC9B/a,GAAOgb,oBAAsB,EAC7Bhb,GAAOib,qBAAuB,EAC9Bjb,GAAOkb,oBAAsB,EAC7Blb,GAAOsoB,mBAAqB,IAAI,EAAQ,KACxCtoB,GAAOuoB,oBAAsB,IAAI,EAAQ,OACzCvoB,GAAOwoB,mBAAqB,IAAI,EAAQ,OACxCxoB,GAAOyoB,oBAAsB,IAAI,EAAQ,OACzCzoB,GAAO0oB,mBAAqB,IAAI,EAAQ,eAEnB9jD,IAArB6E,EAAKytE,cAA8BztE,EAAKytE,aAAel3C,GAAOyH,WAAW,IAAM,KAAOzH,GAAOyH,WAAW,IAAM,KAAOzH,GAAOyH,WAAW,IAAM,KAAOzH,GAAOyH,WAAW,IAAM,KAAOzH,GAAOyH,WAAW,IAAM,MAC3MzH,GAAOk3C,aAAc,EACrBl3C,GAAO6E,gBAAkB,KAAQ7E,GAAOyH,WAAW,IACnDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,KAAQ7E,GAAOyH,WAAW,IACnDzH,GAAO6E,gBAAkB,KAAQ7E,GAAOyH,WAAW,IACnDzH,GAAO6E,gBAAkB,KAAQ7E,GAAOyH,WAAW,IACnDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,KAAQ7E,GAAOyH,WAAW,IACnDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,MAAU7E,GAAOyH,WAAW,IACrDzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,GAE5B,MAAMszB,EAAOtxD,EAAKo/B,aAsFlB,SArF+BjkC,IAA3B6E,EAAKy4B,aAAa,WACWt9B,IAA7Bo7B,GAAOkC,aAAa,WACDt9B,IAAlBm2D,EAAKj1C,eAAiDlhB,IAAvBm2D,EAAKod,oBAClBvzE,IAAlBm2D,EAAKj1C,eAAwD,IAAvBi1C,EAAKod,oBACxBvzE,IAApB6E,EAAK0tE,aACe,IAApB1tE,EAAK0tE,cACLn3C,GAAOm3C,YAAa,EACpBn3C,GAAO4sC,MAAM9+D,IAAI,IAAI,GACrBkyB,GAAOqb,eAAiB,EACxBrb,GAAOgpB,mBAAqB,IAAI,EAAQ,KACxChpB,GAAOwpB,cAAgB,IAAI,EAAQ,SACnCxpB,GAAOi2C,iBAAmB,KAC1Bj2C,GAAOsb,gBAAkB,EACzBtb,GAAOipB,oBAAsB,IAAI,EAAQ,KACzCjpB,GAAOypB,eAAiB,IAAI,EAAQ,KACpCzpB,GAAOk2C,kBAAoB,KAC3Bl2C,GAAOub,eAAiB,EACxBvb,GAAOkpB,mBAAqB,IAAI,EAAQ,KACxClpB,GAAO0pB,cAAgB,IAAI,EAAQ,OACnC1pB,GAAOm2C,iBAAmB,KAC1Bn2C,GAAOwb,gBAAkB,EACzBxb,GAAOmpB,oBAAsB,IAAI,EAAQ,KACzCnpB,GAAO2pB,eAAiB,IAAI,EAAQ,OACpC3pB,GAAOo2C,kBAAoB,KAC3Bp2C,GAAOyb,eAAiB,EACxBzb,GAAOopB,mBAAqB,IAAI,EAAQ,KACxCppB,GAAO4pB,cAAgB,IAAI,EAAQ,QACnC5pB,GAAOq2C,iBAAmB,KAC1Br2C,GAAO0b,eAAiB,EACxB1b,GAAOqpB,mBAAqB,IAAI,EAAQ,KACxCrpB,GAAO6pB,cAAgB,IAAI,EAAQ,QACnC7pB,GAAOs2C,iBAAmB,KAC1Bt2C,GAAO2b,iBAAmB,EAC1B3b,GAAOspB,qBAAuB,IAAI,EAAQ,KAC1CtpB,GAAO8pB,gBAAkB,IAAI,EAAQ,SACrC9pB,GAAOu2C,mBAAqB,KAC5Bv2C,GAAO4b,gBAAkB,EACzB5b,GAAOupB,oBAAsB,IAAI,EAAQ,KACzCvpB,GAAO+pB,eAAiB,IAAI,EAAQ,SACpC/pB,GAAOw2C,kBAAoB,KAC3Bx2C,GAAOkC,aAAat/B,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChEo9B,GAAOiqB,UAAY,IAAI,EAAQ,KAC/BjqB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAOwB,SAAS,IAAM,EACtBxB,GAAO6I,aAAa/iB,SAAW,EAC/Bka,GAAO6I,aAAa2qB,aAAe,EACnCxzB,GAAOkK,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvDlK,GAAOyQ,QAAQyP,OAAQ,EACvBlgB,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,IAAM7E,GAAOyH,WAAW,IACjDzH,GAAO6E,gBAAkB,KAAO7E,GAAOyH,WAAW,IAClDzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW,IAAM,EACxBzH,GAAOyH,WAAW7kC,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/Fo9B,GAAO0G,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C1G,GAAOwG,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3CxG,GAAO0F,eAAiB,EACxB1F,GAAO2F,gBAAkB,EACzB3F,GAAO4F,kBAAoB,EAC3B5F,GAAO6F,cAAgB,EACvB7F,GAAO8F,cAAgB,EACvB9F,GAAO+F,mBAAqB,EAC5B/F,GAAOgG,kBAAoB,EAC3BhG,GAAOyE,wBAA0B,GACjCzE,GAAOqrB,YAAc,CAAC,MAAO,EAAG,EAAG,EAAG,GAAI,GAC1CrrB,GAAOsrB,YAAc,CAAC,KAAM,EAAG,GAAI,GAAI,EAAG,GAC1CtrB,GAAOurB,cAAgB,CAAC,KAAM,GAAI,EAAG,EAAG,GAAI,GAC5CvrB,GAAOwrB,aAAe,CAAC,MAAO,GAAI,EAAG,EAAG,EAAG,GAC3CxrB,GAAOyrB,aAAe,CAAC,KAAM,EAAG,GAAI,GAAI,EAAG,GAC3CzrB,GAAO0rB,YAAc,CAAC,KAAM,EAAG,EAAG,GAAI,GAAI,GAC1C1rB,GAAO2rB,cAAgB,CAAC,MAAO,EAAG,GAAI,EAAG,EAAG,GAC5C3rB,GAAOmoB,mBAAqB,EAC5BnoB,GAAOooB,kBAAoB,EAC3BpoB,GAAOumB,mBAAqB,EAC5BvmB,GAAOioB,sBAAwB,QAEVrjD,IAArB6E,EAAK2tE,cAAkD,IAArB3tE,EAAK2tE,YAAuB,CAC9Dp3C,GAAOo3C,aAAc,EACrB,MAAMgB,EAAc,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC5B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjCC,EAAe,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAChE,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9C,IAAK,IAAIz0E,EAAI,EAAGA,EAAIw0E,EAAYt0E,OAAQF,IACpCo8B,GAAO6E,gBAAkB7E,GAAOyH,WAAW2wC,EAAYx0E,IAAMy0E,EAAaz0E,GAC1Eo8B,GAAOyH,WAAW2wC,EAAYx0E,IAAM,EAExCo8B,GAAO6jC,kBAAmB,EAC1B7jC,GAAO0xB,QAAS,EAuCpB,GArCI1xB,GAAOqb,eAAiB,GAAKrb,GAAOwpB,cAAcz5C,IAAI,YACtDiwB,GAAOwpB,cAAgB,IAAI,EAAQ,SACnCxpB,GAAOqb,eAAiB,GCxwBA,CAAC5xC,IACjC,IAAIoB,OACkBjG,IAAlB6E,EAAK8zC,WACLvd,GAAOud,SAAW,EAClBvd,GAAOsP,cAAgB,EACvBtP,GAAO6gB,cAAgB,EACvB7gB,GAAOmR,aAAe,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAE/IvsC,IAAjC6E,EAAKsnC,YAAYM,cACjBrR,GAAO+Q,YAAYM,aAAc,QAERzsC,IAAzB6E,EAAK4yC,kBACLrc,GAAOqc,gBAAkB,CACrB/pC,KAAM,EACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBwa,GAAOuc,gBAAkB,CACrBjqC,KAAM,GACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBwa,GAAOwc,gBAAkB,CACrBlqC,KAAM,IACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBwa,GAAOyc,gBAAkB,CACrBnqC,KAAM,IACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,KAEhBwa,GAAO0c,gBAAkB,CACrBpqC,KAAM,IACNgqC,MAAO,EACPm6B,UAAW,IAAI,EAAQ,KACvBjxD,WAAY,WAGY5gB,IAA5B6E,EAAK8lC,qBACLvP,GAAOuP,mBAAqB,QAEA3qC,IAA5B6E,EAAKy1C,qBACLlf,GAAOkf,mBAAqB,CACxB35B,YAAa,EACbC,WAAY,EACZF,SAAU,EACVG,QAAS,EACTJ,UAAW,EACXS,SAAU,EACVm4B,aAAc,EACdt8B,OAAQ,EACRsE,cAAe,EACfC,YAAa,GAEjB8Z,GAAOihB,mBAAqB,CACxB17B,YAAa,EACbC,WAAY,EACZF,SAAU,EACVG,QAAS,EACTJ,UAAW,EACXS,SAAU,EACVm4B,aAAc,EACdt8B,OAAQ,EACRsE,cAAe,EACfC,YAAa,SAGathB,IAA9B6E,EAAKs/C,uBACL/oB,GAAO+oB,qBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnE/oB,GAAOikB,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAEpCr/C,IAA1B6E,EAAK2yC,mBACLpc,GAAOgD,aAAe,IAAI,EAAQ,KAClChD,GAAOoc,iBAAmB,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAE/Bx3C,IAA7B6E,EAAK02C,sBACLngB,GAAOmgB,oBAAsB,QAEZv7C,IAAjB6E,EAAKu9D,UACLhnC,GAAOgnC,QAAU,CAAEhM,KAAM,GAAIsc,OAAQ,GAAIC,MAAO,IAChDv3C,GAAOinC,gBAAkB,SAEKriE,IAA9B6E,EAAKo1D,uBACL7+B,GAAO6+B,sBAAuB,EAC9B7+B,GAAO6nB,mBAAqB,EAC5B7nB,GAAOqlC,qBAAuB,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAO,GAAO,GAAO,GAC9HrlC,GAAOw3C,2BAA6B,GACpCx3C,GAAOgkC,mBAAqB,CACxBC,MAAO,GACPC,KAAM,EACNC,MAAO,SAGSv/D,IAApB6E,EAAKimE,aACL1vC,GAAO0vC,YAAa,EACpB1vC,GAAOq3C,eAAiB,iBACxBr3C,GAAOijB,oBAAsB,QAEDr+C,IAA5B6E,EAAKumC,qBACLhQ,GAAOgQ,mBAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5ChQ,GAAO8P,iBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1C9P,GAAOiQ,sBAAwB,EAC/BjQ,GAAO+P,oBAAsB,GAE7B/P,GAAOyH,WAAW,KAAO,IACzBzH,GAAOyH,WAAW,KAAO,QAED7iC,IAAxB6E,EAAK86D,iBACLvkC,GAAOukC,eAAiB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,IAEzB,OAAnCvkC,GAAO+oB,qBAAqB,SAAkDnkD,IAAnCo7B,GAAO+oB,qBAAqB,KACvE/oB,GAAOikB,gBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9DjkB,GAAO+oB,qBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SAErCnkD,IAA9Bo7B,GAAO89B,qBACP99B,GAAO89B,mBAAqB,CACxB78B,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxCC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxCC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CnB,GAAOm8B,qBAAsB,GAEjC,IAAK,IAAIv4D,EAAI,EAAGA,GAAK,EAAGA,IAChBo8B,GAAOkI,WAAWtkC,GAAKmlC,GAAkBnlC,EAAI,KAC7Co8B,GAAOkI,WAAWtkC,GAAK,GAW/B,QAR8FgB,KAA5D,QAA5BiG,EAAKpB,EAAKo/B,oBAAiC,IAAPh+B,OAAgB,EAASA,EAAG4oD,sBAClEzzB,GAAO6I,aAAa4qB,mBAAqB,EACzCzzB,GAAO6I,aAAa6qB,cAAgB,EACpC1zB,GAAO6I,aAAaikB,WAAa,EACjC9sB,GAAO6I,aAAa8U,YAAc,EAClC3d,GAAO6I,aAAaoW,iBAAmB,EACvCjf,GAAO6I,aAAamY,iBAAmB,QAEjBp8C,IAAtB6E,EAAK0nC,cAAwD,IAA1B1nC,EAAK0nC,aAAa,KAAyC,IAA5BnR,GAAOmR,aAAa,IACtF,IAAK,IAAIvtC,EAAI,IAAKA,GAAK,IAAKA,IACxBo8B,GAAOwB,SAAS59B,GAAK,EA4D7B,GAzDAjC,OAAOqlB,OAAOgZ,GAAO8b,QAASryC,EAAKqyC,SACP,IAAxBryC,EAAKq5B,iBACL9C,GAAO8b,QAAQ,KAAM,EACrB9b,GAAO8b,QAAQ,KAAM,QAEHl3C,IAAlB6E,EAAKguE,WACLz3C,GAAOy3C,SAAW,KAClBz3C,GAAOq0B,SAAW,EAClBr0B,GAAO0d,eAAiB,EACxB1d,GAAOgf,oBAAsB,EAC7Bhf,GAAO+gB,oBAAsB,EAC7B/gB,GAAOyd,gBAAkB,EACzBzd,GAAO+e,qBAAuB,EAC9B/e,GAAO8gB,qBAAuB,QAEJl8C,IAA1B6E,EAAKiuE,mBAA8D,IAA5B13C,GAAO03C,mBAC9C13C,GAAO03C,kBAAmB,EACtB13C,GAAOyH,WAAW3jC,OAAS,MAC3Bk8B,GAAO6E,gBAA2C,KAAzB7E,GAAOyH,WAAW,KAC3CzH,GAAOyH,WAAW,KAAO,EACzB8X,GAAY,KAAK,EAAM,KACvB/0C,QAAQ0G,IAAI,+BAAiCq0B,GAAOvF,GAAOyH,WAAW,MAAQ,oCAC9EzH,GAAO6E,gBAA2C,KAAzB7E,GAAOyH,WAAW,KAC3CzH,GAAO0D,QAAU,IAAM1D,GAAOyH,WAAW,KACzCzH,GAAOyH,WAAW,KAAO,EACzBj9B,QAAQ0G,IAAI,0FACZ8uB,GAAOud,UAAsC,KAA1Bvd,GAAOmR,aAAa,IACvCnR,GAAOmR,aAAa,IAAM,EAC1B3mC,QAAQ0G,IAAI,iCAGUtM,IAA1Bo7B,GAAO08B,qBAAwD93D,IAAxB6E,EAAKizD,iBAC5C18B,GAAO08B,eAAiB,CACpBz7B,GAAG,EACHC,GAAG,EACHC,GAAG,EACHwb,GAAG,SAGsB/3C,IAA7Bo7B,GAAO08B,eAAe,IAAsB,mBAAoBjzD,QAAoC7E,IAA3B6E,EAAKizD,eAAe,KAC7F18B,GAAO08B,eAAe,IAAK,IAE3B18B,GAAOikB,gBAAgB,GAAK,GAC3BjgD,MAAM8S,QAAQrN,EAAKw6C,kBAAoBx6C,EAAKw6C,gBAAgB,GAAK,KAClEjkB,GAAO+oB,qBAAqB,GAAK,EACjC/oB,GAAOikB,gBAAgB,GAAK,QAEKr/C,IAAjCo7B,GAAOqoB,wBACProB,GAAOqoB,sBAAwBroB,GAAOooB,kBAAoB2E,WAElCnoD,IAAxBo7B,GAAOy0B,mBAAoD7vD,IAAtB6E,EAAKgrD,eAC1Cz0B,GAAOy0B,aAAe,QAEI7vD,IAA1B6E,EAAK06C,mBACLnkB,GAAOmkB,iBAAmB,EAC1BnkB,GAAO+pC,YAAc,QAEMnlE,IAA3B6E,EAAKorD,kBAAiC,CACtC,MAAMlM,EAAW3oB,GAAO8C,eACkB,IAAtC9C,GAAOyK,iBAAiB7jB,WAAyD,KAAtCoZ,GAAOyK,iBAAiB7jB,WACnE69C,GAAW,sBAAsB,GAAO,GAEF,KAAtCzkC,GAAOyK,iBAAiB7jB,YACxB69C,GAAW,sBAAsB,GAAO,GACxCzkC,GAAOg9B,oBAAsB,EAC7BF,MAEJ98B,GAAO8C,eAAiB6lB,EACxB3oB,GAAO4B,qBAAqB,IAAM,EAClC5B,GAAO2nB,4BAA4B,IAAM,EACzC3nB,GAAO60B,kBAAoB,CACvBC,MAAO,EACPC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,eAAgB,EAChB9vC,MAAO,EACP+vC,WAAY,EACZjvC,YAAa,GAEjB8Z,GAAOwnB,iBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxExnB,GAAOg9B,oBAAsB,EAC7Bh9B,GAAO23C,iBAAkB,EAE7B,GAAI33C,GAAOyH,WAAW5F,SAAS,MAC3B,IAAK,IAAIj+B,EAAI,EAAGA,EAAI,IAAKA,IACrBo8B,GAAOyH,WAAW7jC,EAAI,GAAKo8B,GAAOyH,WAAW7jC,EAAI,IAAM,GAGlC,IAAzB6F,EAAKmuE,sBAAsDhzE,IAAzB6E,EAAKmuE,kBACG,KAAtC53C,GAAOyK,iBAAiB7jB,YACxB69C,GAAW,sBAAsB,GAAO,GACxCzkC,GAAOg9B,oBAAsB,EAC7BF,MAEJ98B,GAAOg9B,oBAAsB,EAC7BF,KACA98B,GAAO43C,iBAAkB,GAEE,iBAApBnuE,EAAKwjE,aACZjtC,GAAOitC,YAAcC,IAEzB,MAAMnS,EAAOtxD,EAAKo/B,aAClB,GAAI,uBAAwBkyB,QAA2C,IAA5BA,EAAKud,mBAAoC,CAChFt4C,GAAO6I,aAAe,CAClBoqB,eAAgB8H,EAAK9H,eACrBM,gBAAiBwH,EAAKxH,gBACtBzI,WAAY,EACZhiB,aAAc,EACdmiB,YAAa,EACbvL,cAAe,EACfgI,iBAAkB17C,OAAO+uD,EAAKwd,wBAC9BzyD,SAAU,EACVilC,SAAU,EACVyI,aAAcxnD,OAAO+uD,EAAKyd,gBAC1B1rB,WAAY,EACZ2G,mBAAoBsH,EAAKtH,mBACzBC,cAAeqH,EAAK0d,iBACpB96B,YAAa3xC,OAAO+uD,EAAK2d,mBACzBz5B,iBAAkBjzC,OAAO+uD,EAAK4d,wBAC9B33B,iBAAkBh1C,OAAO+uD,EAAK6d,yBAElC,MAAMzI,EAAgBnwC,GAAO0D,OAC7B1D,GAAO0D,QAAU,IAAMq3B,EAAKud,mBAAqB,MAAUvd,EAAKud,mBAAqB,GAAMvd,EAAuB,mBAClH/6B,GAAO0D,QAAU,IAAMq3B,EAAK8d,oBAAsB,MAAU9d,EAAK8d,oBAAsB,GAAM9d,EAAwB,oBACrH/6B,GAAO0D,QAAU,IAAMq3B,EAAK+d,kBAAoB,MAAU/d,EAAK+d,kBAAoB,GAAM/d,EAAsB,kBAC/G/6B,GAAO0D,QAAU,IAAMq3B,EAAKge,mBAAqB,MAAUhe,EAAKge,mBAAqB,GAAMhe,EAAuB,mBAClH/6B,GAAO0D,QAAU,IAAMq3B,EAAKie,cAAgB,IAAWje,EAAKie,cAAgB,GAAMje,EAAkB,cACpG/6B,GAAO0D,QAAU,IAAMq3B,EAAKod,cAAgB,IAAUpd,EAAKod,cAAgB,GAAMpd,EAAkB,cACnG/6B,GAAO0D,QAAU,IAAMq3B,EAAKke,gBAAkB,KAAWle,EAAKke,gBAAkB,GAAMle,EAAoB,gBAC1GvwD,QAAQ0G,IAAI,wDAA0Dq0B,GAAOvF,GAAO0D,OAASysC,GAAiB,yDDuf9G+I,CAAqBzvE,QACO7E,IAAxB6E,EAAKq5B,gBAA0D,IAA1B9C,GAAO8C,iBAC5C9C,GAAO8C,eAAiB,QACQl+B,IAA5Bo7B,GAAO4iB,kBAA+D,IAA5B5iB,GAAO4iB,kBAA0B5iB,GAAOya,cAAgB,KAClGza,GAAO4iB,iBAAmB,QAE9B5iB,GAAOmR,aAAe,CAAC,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BnR,GAAOud,SAAW,EAClBvd,GAAOsP,cAAgB,EACvBtP,GAAO6gB,cAAgB,EACvB7gB,GAAOwd,cAAgB,CACnBj4B,YAAa,EACbC,WAAY,EACZF,SAAU,EACVG,QAAS,EACTJ,UAAW,EACXS,SAAU,EACVm4B,aAAc,EACdt8B,OAAQ,EACRsE,cAAe,EACfC,YAAa,SAGQthB,IAAzB6E,EAAKy5C,kBACLljB,GAAOkjB,gBAAkB,UAEKt+C,IAA9B6E,EAAKyxD,uBACLl7B,GAAOk7B,qBAAuB,GAEH,IAA3Bl7B,GAAOmR,aAAa,IAAYnR,GAAO8b,QAAQ,IAC/C,IAAK,IAAIl4C,EAAI,GAAIA,GAAK,GAAIA,IACtBo8B,GAAO8b,QAAQl4C,IAAK,EAGxBo8B,GAAO6a,eAAiB,IACxB7a,GAAO6a,eAAiB,GAExB7a,GAAOunB,mBAAqB,IAC5BvnB,GAAOunB,mBAAqB,GAE5BvnB,GAAO+E,WAAa,IACpB/E,GAAO+E,WAAa,GAEpB/E,GAAO6E,eAAiB,IACxB7E,GAAO6E,eAAiB,GAEA,IAAxB7E,GAAOg6B,eACPh6B,GAAOg6B,aAAe,EACtBh6B,GAAOi6B,aAAe,EACtBj6B,GAAOk6B,aAAe,GAEc,IAApCl6B,GAAOquC,2BACPruC,GAAOquC,yBAA2B,GAElCruC,GAAOunB,mBAAqB,KAAgC,IAAzBvnB,GAAOyQ,QAAQyP,QAClDlgB,GAAOyQ,QAAU,CACb8kB,SAAS,EACTE,SAAS,EACTE,WAAW,EACXE,UAAU,EACVpvC,UAAU,EACViqB,YAAY,EACZU,WAAW,EACXC,aAAa,EACb0O,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,OAAO,SAGMt7C,IAAjB6E,EAAKu9D,cAA4CpiE,IAAnBo7B,GAAOgnC,UACrChnC,GAAOgnC,QAAU,CAAEhM,KAAM,GAAIsc,OAAQ,GAAIC,MAAO,UAElB3yE,IAA9B6E,EAAK48D,2BAAsEzhE,IAAhCo7B,GAAOqmC,uBAClDrmC,GAAOqmC,sBAAuB,EAC9BrmC,GAAOinC,gBAAkB,SAEgBriE,IAAzCo7B,GAAOyK,iBAAiB/jB,eACxBsZ,GAAOyK,iBAAmB,CACtB/jB,aAAc,EACdC,cAAe,EACfC,UAAW,IAGd5a,OAAOwF,UAAUwuB,GAAOqc,gBAAgB/pC,QACzC0tB,GAAOqc,gBAAgB/pC,KAAO,EAC9B0tB,GAAOqc,gBAAgBC,MAAQ,EAC/Btc,GAAOuc,gBAAgBjqC,KAAO,GAC9B0tB,GAAOuc,gBAAgBD,MAAQ,EAC/Btc,GAAOwc,gBAAgBlqC,KAAO,IAC9B0tB,GAAOwc,gBAAgBF,MAAQ,EAC/Btc,GAAOyc,gBAAgBnqC,KAAO,IAC9B0tB,GAAOyc,gBAAgBH,MAAQ,EAC/Btc,GAAO0c,gBAAgBpqC,KAAO,IAC9B0tB,GAAO0c,gBAAgBJ,MAAQ,GAE9Btc,GAAOy3C,WACRz3C,GAAOy3C,SAAW,IAAIh0B,KAAKzjB,GAAOy3C,WAEtC,IAAK,IAAI7zE,EAAI,EAAGA,GAAK,EAAGA,IACpBo8B,GAAO,iBAAmBp8B,GAAG6yE,UAAY,IAAI,EAAQz2C,GAAO,iBAAmBp8B,GAAG6yE,WAEtF,UAAoC7xE,IAA7Bo7B,GAAOkC,aAAa,MACvBlC,GAAOkC,aAAat/B,KAAK,GAE7B,UAAkCgC,IAA3Bo7B,GAAOyH,WAAW,MACrBzH,GAAOyH,WAAW7kC,KAAK,GAE3B,UAAgCgC,IAAzBo7B,GAAOwB,SAAS,MACnBxB,GAAOwB,SAAS5+B,KAAK,QAECgC,IAAtBo7B,GAAOy6B,YAAkD,KAAtBz6B,GAAOy6B,YAA2C,4BAAtBz6B,GAAOy6B,aACtEz6B,GAAOy6B,WAAa,kCAExBzvD,EAAe,mBAAmBlD,MAAQk4B,GAAOy6B,WACjDz6B,GAAOud,SAAWvd,GAAOud,UAAY,EACrC,IAAK,IAAIz4C,EAAI,EAAGA,EAAI,IAAKA,IACrB8oC,GAAc9oC,GAElB,IAAK,IAAIA,EAAI,EAAGA,GAAK,IAAOA,IACxB67C,GAAiB77C,GAErB,IAAK,IAAIA,EAAI,EAAGA,GAAK,GAAIA,IACrB85C,GAAoB95C,GAExBk7B,GAAOy0B,aAAe,EACtB,aAAkB,QAClB1pD,SAASC,eAAe,qBAAqBs4B,MAAMM,gBAAkB,UACrE74B,SAASC,eAAe,qBAAqBs4B,MAAM0D,OAAS,iBAC5D,MAAM2J,EAAI,CAAC,OAAQ,UAAW,SAAU,WAAY,WAAY,aACnC,IAAzB3Q,GAAOgL,eAAgD,KAAzBhL,GAAOgL,eAAiD,MAAzBhL,GAAOgL,eAAkD,MAAzBhL,GAAOgL,gBACpGhL,GAAOgL,cAAgB,GAEK,IAA5BhL,GAAO62C,kBAAsD,KAA5B72C,GAAO62C,kBAAuD,MAA5B72C,GAAO62C,kBAAwD,MAA5B72C,GAAO62C,mBAC7G72C,GAAO62C,iBAAmB,GAEC,IAA3B72C,GAAO82C,iBAAoD,KAA3B92C,GAAO82C,iBAAqD,MAA3B92C,GAAO82C,iBAAsD,MAA3B92C,GAAO82C,kBAC1G92C,GAAO82C,gBAAkB,GAEI,IAA7B92C,GAAOkP,mBAAwD,KAA7BlP,GAAOkP,mBAAyD,MAA7BlP,GAAOkP,mBAA0D,MAA7BlP,GAAOkP,oBAChHlP,GAAOkP,kBAAoB,GAEE,IAA7BlP,GAAOqI,mBAAwD,KAA7BrI,GAAOqI,mBAAyD,MAA7BrI,GAAOqI,mBAA0D,MAA7BrI,GAAOqI,oBAChHrI,GAAOqI,kBAAoB,GAEG,IAA9BrI,GAAOuP,oBAA0D,KAA9BvP,GAAOuP,oBAA2D,MAA9BvP,GAAOuP,oBAA4D,MAA9BvP,GAAOuP,qBACnHvP,GAAOuP,mBAAqB,GAEhC,IAAK,IAAIzqC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAK,IAAIu+B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIgD,EACM,IAANhD,IACAgD,EAAI,OAEE,IAANhD,IACAgD,EAAI,OAEE,IAANhD,IACAgD,EAAI,WAEE,IAANhD,IACAgD,EAAI,YAER,MAAM74B,EAAImjC,EAAE7rC,GAAKuhC,EACjBt7B,SAASC,eAAewC,GAAG81B,MAAMM,gBAAkB,UAEvD,IAAIr8B,EAC+B,IAA/By4B,GAAO2Q,EAAE7rC,GAAK,eACdyC,EAAI,OAE2B,KAA/By4B,GAAO2Q,EAAE7rC,GAAK,eACdyC,EAAI,OAE2B,MAA/By4B,GAAO2Q,EAAE7rC,GAAK,eACdyC,EAAI,WAE2B,MAA/By4B,GAAO2Q,EAAE7rC,GAAK,eACdyC,EAAI,YAER,MAAM2K,EAAIy+B,EAAE7rC,GAAKyC,EACjBwD,SAASC,eAAekH,GAAGoxB,MAAMM,gBAAkB,QAEvD,MAAMu1C,EAAY,GAClB,IAAK,IAAIv1E,EAAI,EAAGA,EAAI,2BAA+BA,IAC/Cu1E,EAAUv2E,KAAK,oBAAuBgB,IAE1C,uBjCv7BwBw1E,EiCu7BmBD,EjCt7BxCn1E,MACFm/C,KAAK,IAAIi2B,EAAO3iE,SAChB4iE,MAAK,CAACjzE,EAAG8L,IAAMknE,EAAOhzE,GAAKgzE,EAAOlnE,IAAM,IAAMknE,EAAOlnE,GAAKknE,EAAOhzE,OiCq7BlE45B,GAAOmgB,oBAAsB,GACG,IAA5BngB,GAAO+Q,YAAYG,OACnBnmC,SAASC,eAAe,kBAAkBE,YAAc,cAExB,IAAhC80B,GAAO+Q,YAAYtqB,WACnB1b,SAASC,eAAe,sBAAsBE,YAAc,cAE3B,IAAjC80B,GAAO+Q,YAAYK,YACnBrmC,SAASC,eAAe,uBAAuBE,YAAc,cAE3B,IAAlC80B,GAAO+Q,YAAYC,aACnBjmC,SAASC,eAAe,uBAAuBE,YAAc,aAE5D80B,GAAO+Q,YAAYM,cACpBtmC,SAASC,eAAe,uBAAuBE,YAAc,aAEjE0zD,KACA9C,KACAn4B,KACA88B,KACA11D,SAASC,eAAe,mBAAmBE,YAAcq6B,GAAOvF,GAAOgkC,mBAAmBC,MAAO,GAAG,GAAQ,IAC5Gj5D,EAAe,gCAAgClD,MAAQk4B,GAAOgkC,mBAAmBC,MAAQ,GACzFl5D,SAASC,eAAe,kBAAkBE,YAAcq6B,GAAOvF,GAAOgkC,mBAAmBE,KAAM,GAAG,GAAQ,IAC1Gl5D,EAAe,+BAA+BlD,MAAQk4B,GAAOgkC,mBAAmBE,KAAO,GACvFn5D,SAASC,eAAe,mBAAmBE,YAAcq6B,GAAOvF,GAAOgkC,mBAAmBG,MAAO,GAAG,GAAQ,IAC5Gn5D,EAAe,gCAAgClD,MAAQk4B,GAAOgkC,mBAAmBG,MAAQ,GACzF,IAAK,IAAIvgE,EAAI,EAAGA,EAAI,EAAGA,IACnB65D,GAA6B75D,GAEjCs4D,KACA,IAAK,IAAIp3D,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMw0E,EAAOvuE,SAASC,eAAe,sBAAwBlG,GAC5Dk7B,GAAOukC,eAAez/D,IAClBw0E,EAAKpuE,YAAc,YAAaouE,EAAKh2C,MAAM0D,OAAS,oBACpDsyC,EAAKpuE,YAAc,aAAcouE,EAAKh2C,MAAM0D,OAAS,iBAE9Dj8B,SAASC,eAAe,8BAA8BE,YAAcq6B,GAAOvF,GAAOiQ,sBAAuB,GAAG,GAC5GllC,SAASC,eAAe,4BAA4BE,YAAcq6B,GAAOvF,GAAO+P,oBAAqB,GAAG,GACxGhlC,SAASC,eAAe,qBAAqBE,YAAc,iEAAmE,IAAM,qBAA0B,KAAK6I,YAAY,GAAK,IACpLhJ,SAASC,eAAe,mBAAmBs4B,MAAM8C,QAAU,OAC3Dr7B,SAASC,eAAe,kBAAkBs4B,MAAM8C,QAAU,OAC1D+iC,KACAjoB,KACA/B,KACAjB,KACA/W,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzBA,GAAyB,GACzB,IAAK,MAAMjwB,KAAM8oB,GAAO08B,eACpBiI,IAAwBztD,GACxBytD,IAAwBztD,GAEA,IAAxB8oB,GAAOg6B,eACPjvD,SAASC,eAAe,sBAAsBE,YAAc,gBAEpC,IAAxB80B,GAAOi6B,eACPlvD,SAASC,eAAe,uBAAuBE,YAAc,gBAErC,IAAxB80B,GAAOk6B,eACPnvD,SAASC,eAAe,yBAAyBE,YAAc,gBAEvC,IAAxB80B,GAAOg6B,eACPjvD,SAASC,eAAe,sBAAsBE,YAAc,cAEpC,IAAxB80B,GAAOi6B,eACPlvD,SAASC,eAAe,uBAAuBE,YAAc,cAErC,IAAxB80B,GAAOk6B,eACPnvD,SAASC,eAAe,yBAAyBE,YAAc,cAE3B,IAApC80B,GAAOquC,2BACPtjE,SAASC,eAAe,0BAA0BE,YAAc,eAChEH,SAASC,eAAe,0BAA0Bs4B,MAAM0D,OAAS,mBAE7B,IAApChH,GAAOquC,2BACPtjE,SAASC,eAAe,0BAA0BE,YAAc,gBAChEH,SAASC,eAAe,0BAA0Bs4B,MAAM0D,OAAS,iBAEjEhH,GAAOwf,qBACPz0C,SAASC,eAAe,sBAAsBE,YAAc,iBAE3D80B,GAAOwf,qBACRz0C,SAASC,eAAe,sBAAsBE,YAAc,kBAE9B,GAA9B80B,GAAO4yB,sBACP7nD,SAASC,eAAe,uBAAuBE,YAAc,gBAC7DH,SAASC,eAAe,uBAAuBs4B,MAAM0D,OAAS,mBAEhC,GAA9BhH,GAAO4yB,sBACP7nD,SAASC,eAAe,uBAAuBE,YAAc,iBAC7DH,SAASC,eAAe,uBAAuBs4B,MAAM0D,OAAS,iBAElC,GAA5BhH,GAAO6uC,oBACP9jE,SAASC,eAAe,qBAAqBE,YAAc,mBAC3DH,SAASC,eAAe,qBAAqBs4B,MAAM0D,OAAS,mBAEhC,GAA5BhH,GAAO6uC,oBACP9jE,SAASC,eAAe,qBAAqBE,YAAc,oBAC3DH,SAASC,eAAe,qBAAqBs4B,MAAM0D,OAAS,iBAEhC,GAA5BhH,GAAO2uC,oBACP5jE,SAASC,eAAe,qBAAqBE,YAAc,mBAC3DH,SAASC,eAAe,qBAAqBs4B,MAAM0D,OAAS,mBAEhC,GAA5BhH,GAAO2uC,oBACP5jE,SAASC,eAAe,qBAAqBE,YAAc,oBAC3DH,SAASC,eAAe,qBAAqBs4B,MAAM0D,OAAS,iBAE3DhH,GAAO0vC,aACR3kE,SAASC,eAAe,uBAAuBE,YAAc,oBAC7DH,SAASC,eAAe,uBAAuBs4B,MAAM0D,OAAS,iBAElE,IAAK,IAAIpjC,EAAI,EAAGA,GAAK,EAAGA,IACpB+/D,KACAC,GAAuB,GACvBA,GAAuB,GAE3B74D,SAASC,eAAe,gCAAgCE,YAAc,gBAAkB80B,GAAOqmC,qBAAuB,KAAO,OAC7Ht7D,SAASC,eAAe,gCAAgCs4B,MAAM84B,YAAep8B,GAAOqmC,qBAAuB,QAAU,MAChHrmC,GAAO0vC,aACR3kE,SAASC,eAAe,uBAAuBE,YAAc,oBAC7DH,SAASC,eAAe,uBAAuBs4B,MAAM0D,OAAS,iBAElEhH,GAAOyf,aAAe92C,KAAKsH,IAAI,IAAK+vB,GAAOyf,cAC3Czf,GAAO+gC,cAAgBp4D,KAAKsH,IAAI,EAAG+vB,GAAO+gC,eACZ,IAA1B/gC,GAAOyH,WAAW,MAClB18B,SAASC,eAAe,sBAAsBE,YAAc,gCAE5D80B,GAAOwf,oBAAsBxf,GAAOyf,aAAe,KACnD10C,SAASC,eAAe,MAAQg1B,GAAOyf,cAAcnc,MAAMM,gBAAkB,UAE7E5D,GAAO4yB,qBAAuB5yB,GAAO+gC,cAAgB,KACrDh2D,SAASC,eAAe,OAASg1B,GAAO+gC,eAAez9B,MAAMM,gBAAkB,UlBhc3D,EAAC21C,EAAY,KACzC,YAAgB,EAChB,MAAMC,EAAe,MAAQ,KAAOx5C,GAAOyH,WAAW,IAAM,KAAOzH,GAAOyH,WAAW,IAC/EgyC,EAAch2B,KAAKC,MACnBg2B,EAAU/wE,KAAKsH,IAAIupE,EAAc7wE,KAAKqH,IAAIupE,GAAYE,EAAcz5C,GAAOmrC,aAAe,MAChGpgE,SAASC,eAAe,gBAAgBE,YAAc,YAAcq6B,GAAOm0C,EAAS,GAAK,0CACzF,IAAIC,EAAkBD,EAAU,IAAQ,IAAM,EAAI/wE,KAAKqE,MAAM0sE,EAAU,GACvE,MAAME,EAAaF,EAAU,IAAQA,EAAU,IAAM/wE,KAAKsH,IAAI,EAAGypE,GACjE,IAAI7yD,EAAiB,EACrB,MAAMgzD,EAAoBF,EAC1B,IAAIG,EAAmB,EACnBC,EAAqB,EACzBv0C,EAAkBxF,GAAOyE,yBACzBgB,IACAzF,GAAO46B,aAAe8e,EACtB15C,GAAO46B,YAAcjyD,KAAKsH,IAAI,IAAQ,KAAQ+vB,GAAOyH,WAAW,KAAMzH,GAAO46B,aAC7E56B,GAAO4iB,kBAAoB82B,EAC3B15C,GAAO+E,YAAc20C,GAAW,GAAQ/wE,KAAKsH,IAAI,EAAG+vB,GAAO2nB,4BAA4B,IAAM3nB,GAAOmR,aAAa,IACjHpmC,SAASC,eAAe,WAAWs4B,MAAM8C,QAAWmzC,EAAY,EAAK,OAAS,QAC9ExuE,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,QAC9DpG,GAAOmrC,YAAenrC,GAAOmrC,YAAc,MAAW1nB,KAAKC,MAAS1jB,GAAOmrC,YAC3E,MAAM6O,EAAaz4B,IACnB,WAgBI,GAfA16B,EAAiBkmC,KACjBjE,KACA9oB,GAAOqiB,iBAAmBu3B,EAAY/yD,EACtCmZ,GAAOsiB,kBAAoBs3B,EAAY/yD,EACvCmZ,GAAOuiB,sBAAwBq3B,EAAY/yD,EAC3CozD,GAAaL,EAAY,kBACrB55C,GAAOyH,WAAW,IAAM,GAA2C,KAAtCzH,GAAOyK,iBAAiB7jB,YACrDkiC,KACAixB,EAAqB7uB,KACrBlrB,GAAO6E,gBAAkB+0C,EAAY/yD,EAAiBkzD,GAEtD/5C,GAAOkC,aAAa,KAAO,IAC3BlC,GAAOooB,mBAAqBwxB,EAAY/yD,EACxCmZ,GAAOqoB,uBAAyBuxB,GAEhC55C,GAAO6I,aAAaC,aAAe,GAAK9I,GAAO4yB,sBAC/C5yB,GAAO+yB,gBAAkB6mB,EACrB55C,GAAO+yB,gBAAkB,GAAG,CAC5B,MAAM4hB,EAAO30C,GAAO+gC,cACpBx4B,GAAaosC,GAAM,GACnB30C,GAAO+yB,eAAiB/yB,GAAO+yB,eAAiB,EAGxDmnB,KACAP,GAAkB,EAClBG,EAAmB,KAAO,EAAIH,EAAiBE,GAC/C9uE,SAASC,eAAe,uBAAuBs4B,MAAMquC,MAAQmI,EAAmB,KAC5EH,EAAiB,IACjBr4B,GAAS04B,GACT,YAAgB,EAChBjvE,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,OAC9Dr7B,SAASC,eAAe,WAAWs4B,MAAM8C,QAAU,UAjCjB,GAqC1C,GADApG,GAAOmrC,YAAcsO,GAChBz5C,GAAO23C,gBAAiB,CACzB,GAAI33C,GAAO4B,qBAAqB,IAAM,GAAK5B,GAAO2nB,4BAA4B,IAAM,EAAG,CACnF,MAAMgB,EAAW3oB,GAAO8C,eACxB,GAAM,sBACN9C,GAAO8C,eAAkB6lB,EAAW,EAExC3oB,GAAO23C,iBAAkB,EAE7BvM,KACA3lC,IACAqjB,KACAzL,KACA3V,MkB4XIyyC,GACA30C,EAAkBxF,GAAOyE,yBACzBgB,IACAqjB,KACAzL,KACA3V,KACA+gC,KACA3L,KjCzkCuB,IAACsc,EmB8mBP,MACrB,IAAK,IAAIx1E,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMwC,EAAI2E,SAASC,eAAe,aAAepH,GAC3CsO,EAAInH,SAASC,eAAe,cAAgB,EAAIpH,IAChD2D,EAAIwD,SAASC,eAAe,aAAepH,GAC3CyiC,EAAIt7B,SAASC,eAAe,gBAAkBpH,GAC9C4J,EAAIzC,SAASC,eAAe,sBAAwBpH,GAC1DwC,EAAEk9B,MAAM82C,IAAO,EAAI,GAAKx2E,EAAK,KAC7BsO,EAAEoxB,MAAM82C,IAAO,EAAI,GAAKx2E,EAAK,KAC7B2D,EAAE+7B,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC9ByiC,EAAE/C,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC9B4J,EAAE81B,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC9BwC,EAAEk9B,MAAM+2C,KAAO,MACfnoE,EAAEoxB,MAAM+2C,KAAO,QACf9yE,EAAE+7B,MAAM+2C,KAAO,MAEnB,IAAK,IAAIz2E,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMwC,EAAI2E,SAASC,eAAe,mBAAqBpH,GACvDwC,EAAEk9B,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC9BwC,EAAEk9B,MAAM+2C,KAAO,Oc0cnBC,Gdvc4B,MAC5B,IAAK,IAAI12E,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMwC,EAAI2E,SAASC,eAAe,mBAAqBpH,GACjDsO,EAAInH,SAASC,eAAe,iBAAmBpH,GAC/C2D,EAAIwD,SAASC,eAAe,oBAAsBpH,GAClDyiC,EAAIt7B,SAASC,eAAe,kBAAoBpH,GAChD4J,EAAIzC,SAASC,eAAe,uBAAyBpH,GACrD0B,EAAIyF,SAASC,eAAe,qBAAuBpH,GACnD0iC,EAAIv7B,SAASC,eAAe,oBAAsBpH,GAClD2iC,EAAIx7B,SAASC,eAAe,kBAAoBpH,GACtDwC,EAAEk9B,MAAM82C,IAAMloE,EAAEoxB,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC5CwC,EAAEk9B,MAAM+2C,KAAOnoE,EAAEoxB,MAAM+2C,KAAO,MAC9B9yE,EAAE+7B,MAAM82C,IAAM/zC,EAAE/C,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC5C2D,EAAE+7B,MAAM+2C,KAAOh0C,EAAE/C,MAAM+2C,KAAO,MAC9B7sE,EAAE81B,MAAM82C,IAAM90E,EAAEg+B,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC5C4J,EAAE81B,MAAM+2C,KAAO/0E,EAAEg+B,MAAM+2C,KAAO,MAC9B/zC,EAAEhD,MAAM82C,IAAM7zC,EAAEjD,MAAM82C,IAAO,GAAK,GAAKx2E,EAAK,KAC5C0iC,EAAEhD,MAAM+2C,KAAO9zC,EAAEjD,MAAM+2C,KAAO,QcublCE,Gdhf+B,MAC/B,IAAK,IAAI32E,EAAI,EAAGA,GAAK,IAAKA,IACtBmH,SAASC,eAAe,MAAQpH,GAAG0/B,MAAMM,gBAAkB,QAE/D,MAAM42C,EAAczvE,SAASuqD,uBAAuB,aAC9CmlB,EAAc1vE,SAASuqD,uBAAuB,UACpD,IAAK,IAAI1xD,EAAI,EAAGA,EAAI42E,EAAY12E,OAAQF,IACpC42E,EAAY52E,GAAG0/B,MAAMM,gBAAkB,SAE3C,IAAK,IAAIhgC,EAAI,EAAGA,EAAI62E,EAAY32E,OAAQF,IACpC62E,EAAY72E,GAAG0/B,MAAMM,gBAAkB,SAE3C,IAAK,IAAIhgC,EAAI,EAAGA,EAAIo8B,GAAOkC,aAAap+B,OAAQF,IACxCo8B,GAAOkC,aAAat+B,GAAK,SAAkCgB,IAA3Bo7B,GAAOkC,aAAat+B,IACpDs8B,EAAiBt8B,IcmezB82E,GACA,MAAMr0C,EAAI,IAAIod,KACRld,EAAIF,EAAEs0C,WACNptE,EAAI84B,EAAEu0C,aACNxjE,EAAIivB,EAAEw0C,aACZ76C,GAAOq0B,SAAY,OAAgBj9C,EAAI,GAAK7J,EAAI,KAAUg5B,IAEjDhB,GAAS,CAACt/B,EAAOuuD,EAAW,EAAGsmB,GAAO,KAC/C,KAAM70E,aAAiB,IAA6B,iBAAVA,EACtC,MAAO,WAEX,IAAIkD,EACAiD,EACJ,GAAImK,EAAUtQ,GACVkD,EAAQlD,EAAMuH,EACdpB,EAAWnG,EAAMmG,cAEhB,GAAqB,iBAAVnG,EAAoB,CAChC,GAAc,IAAVA,EACA,MAAO,IAEXkD,EAAQR,KAAKqE,MAAMrE,KAAKwE,MAAMxE,KAAK0F,IAAIpI,KACvCmG,EAAWnG,EAAQ0C,KAAKC,IAAI,GAAIO,GASpC,GAPIiD,EAAW,YACXA,EAAW,IACTjD,GAEFiD,EAAW,GAAKA,EAAW,WAC3BA,EAAW,GAEXjD,GAAS,GACT,MAAO,IAEN,GAAIA,EAAQ,GAAM2xE,GAAQ3xE,EAAQ,GAAK,CACxC,IACI4xE,EADAC,EAAW5uE,EAAWzD,KAAKC,IAAI,GAAIO,GAEnC6xE,EAAWryE,KAAKqE,MAAMguE,GAAY,WAClCA,EAAWryE,KAAK+F,KAAKssE,KAEpB7xE,EAAQ,GAAM2xE,GAAQ3xE,EAAQ,IAAOqrD,EAAW,EACjDumB,EAAiBC,EAASrnE,QAAQ6gD,IAGlCwmB,EAAWryE,KAAKqE,MAAMguE,GACtBD,EAAiBC,EAASpnE,YAE9B,MAAOqnE,EAAOC,GAAQH,EAAe7nE,MAAM,KACrCioE,EAAmC,mBAAXC,OACxBA,OAAOH,GAAOtT,iBACdsT,EAAMtzE,QAAQ,qBAAsB,OAC1C,OAAQuzE,EAEF,GAAGC,KAAkBD,IADrBC,EAGL,GAAIhyE,EAAQ,IAKb,MAAO,IAJeR,KAAKqE,MAAiB,IAAXZ,GAAkB,KAAKuH,QAAQ,MAC5B,mBAAXynE,OACnBA,OAAOjyE,GAAOw+D,iBACdx+D,EAAMyK,WAAWjM,QAAQ,qBAAsB,SAGpD,GAAIwB,GAAS,IAAK,CACnB,IAAIkyE,GAAgB1yE,KAAKqE,MAAiB,IAAXZ,GAAkB,KAAKuH,QAAQ,GAC1Du5D,KACAmO,EAAe,IAEnB,MAAMC,EAAc3yE,KAAK+F,KAAK/F,KAAKwE,MAAMhE,IACzC,IAAIoyE,GAAeD,EAAc,GAAK,EAAK,EACvCE,EAAYryE,EAAQR,KAAKC,IAAI,GAAI0yE,EAAcC,GACjC,MAAdC,IACAA,EAAY,EACZD,EAAa,GAEjB,MAAME,EAAaD,EAAU7nE,QAAQ,EAAI4nE,GACzC,OAAIpyE,EAAQ,IACD,GAAGkyE,KAAgBI,KAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,KAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,KAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,MAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,OAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,OAE1BtyE,EAAQ,KACD,GAAGkyE,KAAgBI,OAE1BtyE,EAAQ,MAGRA,EAAQ,KAFD,GAAGkyE,KAAgBI,QAKvB,GAAGrvE,KAAYjD,IAGtB,MAAO,YAGFiyD,GAAkB,CAAC7X,EAASm4B,KAC5Bn4B,GAAW,MACdhe,GAAO58B,KAAKqE,MAAMu2C,EAAU,QAAU,IACtC,KACAA,GAAW,KACPhe,GAAO58B,KAAKqE,MAAMu2C,EAAU,MAAQ,IAAM,IAC1C,KACJA,GAAW,GACPhe,GAAO58B,KAAKqE,MAAMu2C,EAAU,IAAM,IAAM,IACxC,IACNhe,GAAO58B,KAAKqE,MAAMu2C,GAAW,KAC3Bm4B,GAAgBn4B,EAAUm4B,EACtB,IAAO/yE,KAAKqE,MAAOu2C,EAAU,EAAK,KAAM3vC,WAAW+nE,SAAS,EAAG,KAC/D,IAAM,IAEPvwC,GAAgB,KACzB,IAAIhlC,EAAI,EACR,mBAAwB45B,GAAO+B,kBAC/B,cAAmB,EACQ,IAAvB/B,GAAOwB,SAAS,KAChBp7B,GAAKuC,KAAKqE,MAAMgzB,GAAOwL,iBAAmB,IAElB,IAAxBxL,GAAOwB,SAAS,MAChBp7B,GAAK,GAEmB,IAAxB45B,GAAOwB,SAAS,MAChBp7B,GAAK,GAEmB,IAAxB45B,GAAOwB,SAAS,MAChBp7B,GAAK,GAEmB,IAAxB45B,GAAOwB,SAAS,MAChBp7B,GAAK,GAEmB,IAAxB45B,GAAOwB,SAAS,MAChBp7B,GAAK,GAEmB,IAAxB45B,GAAOwB,SAAS,MAChBp7B,GAAKuC,KAAKsH,IAAI,IAAKtH,KAAKqE,MAAM,MAAYgzB,GAAO8K,MAAMr/B,IAAI,GAAI,OAAS9C,KAAKsH,IAAI,KAAMtH,KAAKqH,IAAI,EAAGrH,KAAKqE,MAAM,MAAYgzB,GAAO8K,MAAMr/B,IAAI,GAAI,OAAS,MAEhI,IAAxBu0B,GAAOwB,SAAS,MAChBp7B,GAAKuC,KAAKqE,MAAMrE,KAAKsH,IAAI,KAAO+vB,GAAOoC,eAAiBpC,GAAOqC,gBAAkBrC,GAAOsC,eAAiBtC,GAAOuC,gBAAkBvC,GAAOwC,gBAAkB,MAEnI,IAAxBxC,GAAOwB,SAAS,MAChBp7B,GAAKuC,KAAKsH,IAAI,IAAKtH,KAAKqE,MAAM,MAAYgzB,GAAOuO,eAAe9iC,IAAI,GAAI,SAEhD,IAAxBu0B,GAAOwB,SAAS,MAChBp7B,GAAKuC,KAAKsH,IAAI,KAAMtH,KAAKqE,MAAM,MAAYgzB,GAAO4a,gBAAgBnvC,IAAI,GAAI,OAE/C,IAA3Bu0B,GAAOkC,aAAa,KACpB97B,GAAKuC,KAAKqE,MAAMgzB,GAAOoC,eAAiB,MAEZ,IAA5BpC,GAAOkC,aAAa,MACpB97B,GAAKuC,KAAKqE,MAAMgzB,GAAOqC,gBAAkB,MAEb,IAA5BrC,GAAOkC,aAAa,MACpB97B,GAAKuC,KAAKqE,MAAMgzB,GAAOsC,eAAiB,MAEZ,IAA5BtC,GAAOkC,aAAa,MACpB97B,GAAKuC,KAAKqE,MAAMgzB,GAAOuC,gBAAkB,MAEb,IAA5BvC,GAAOkC,aAAa,MACpB97B,GAAKuC,KAAKqE,MAAMgzB,GAAOwC,eAAiB,MAEZ,IAA5BxC,GAAOkC,aAAa,MACpB97B,GAAK,GAEuB,IAA5B45B,GAAOkC,aAAa,MACpB97B,GAAK,GAEuB,IAA5B45B,GAAOkC,aAAa,MACpB97B,GAAK,GAETA,GAAK,EAAIohC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAC1D,yBAA8Bx7B,EAC9BA,GAAK,yBAA8B,EAAI,EAAI45B,GAAOyH,WAAW,IAAM,EAAIzH,GAAOyH,WAAW,IAAM,EAAIzH,GAAOyH,WAAW,IAAM,2BAC3F,IAA5BzH,GAAOyQ,QAAQhqB,WACfrgB,GAAKuC,KAAKqE,MAAMrE,KAAKC,IAAI,aAAkB,qBAA0B,EAAG,OACxExC,GAAM,EAAsB,EAAlB,aAAsB,IAAM,sBlBlvC1C,wBAA6B,EAC7B,yBAA+B,EAAI45B,GAAOkC,aAAa,IAAM,IAC7D,yBAA+B,EAAIlC,GAAOkC,aAAa,IAAM,IAC7D,yBAA+B,EAAIlC,GAAOkC,aAAa,IAAM,IAC7D,yBAA+B,EAAI,GAAQlC,GAAOyH,WAAW,IAAM,EAAI,GAAQD,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAChI,yBAA+B,EAAI,IAAS5B,GAAOyH,WAAW,GAAK,IAASzH,GAAOyH,WAAW,GAAK,EAAI,GAAKzH,GAAOyH,WAAW,GAAK,KAAUzH,GAAOyH,WAAW,GAAK,KAAUzH,GAAOyH,WAAW,IAChM,yBAA+B,EAAI,IAASzH,GAAOyH,WAAW,IAC9D,yBAA+B,EAAI,IAAUzH,GAAOyH,WAAW,KAC/D,yBAA+B,EAAI,KAAYzH,GAAOyH,WAAW,KACjE,yBAA+B,EAAI,KAAYzH,GAAOyH,WAAW,KACjE,yBAA+B,EAAI,KAAYzH,GAAOyH,WAAW,KACjE,yBAA+B,EAAI,KAAYzH,GAAOyH,WAAW,KACjE,yBAA+B,EAAI,KAAazH,GAAOyH,WAAW,KAClE,yBAA+B,EAAI,KAAazH,GAAOmR,aAAa,IACpE,yBAA8BxoC,KAAKC,IAAI,KAAMo3B,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,MACvG,IAAzCxB,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,gBAAwBqZ,GAAOwB,SAAS,IAAM,KACrH,yBAA8B,MkBquClCp7B,GAAK,wBACLA,EAAIuC,KAAKC,IAAIxC,EAAGuC,KAAKsH,IAAI,GAAI,EAAI+vB,GAAOwnB,iBAAiB,GAAK,IAAM,mBAAsBxnB,GAAOikB,gBAAgB,KAAO,EAAIt7C,KAAK0F,IAAI2xB,GAAOikB,gBAAgB,GAAKjkB,GAAOikB,gBAAgB,OACxL79C,GAAK,iCACLA,EAAIuC,KAAKqE,MAAM5G,GACf,kBAAuBA,EACvB,oBAAyB,kBACzB,eAAoB,EAChB45B,GAAOwB,SAAS,IAAM,KACtB,eAAoB,MAExB,mBAAwB74B,KAAKC,IAAI,IAAM,gBAClC,wBAA6B,MAC3B,EAAI4+B,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,IAAK,EAAI,IAAO4F,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KACvI,oBAAyB,KAAUj5B,KAAKqE,MAAMw6B,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,GAAK,IAAM,IAChH,IAAK,IAAIh+B,EAAI,EAAGA,GAAK,EAAGA,IAChBo8B,GAAOkC,aAAa,EAAIt+B,EAAI,GAAK,IACjC,oBAAyB,KAASA,GAGI,IAA1Co8B,GAAOyK,iBAAiB9jB,eAAiE,KAA1CqZ,GAAOyK,iBAAiB9jB,gBAC1B,IAAzCqZ,GAAOyK,iBAAiB/jB,eACxB,oBAAyB,IAAM,GAAKsZ,GAAO4B,qBAAqB,IAChE,oBAAyB,IACzB,mBAAwBj5B,KAAKqH,IAAI,EAAG,qBAEK,IAAzCgwB,GAAOyK,iBAAiB/jB,eACxB,mBAAwB,GAEiB,IAAzCsZ,GAAOyK,iBAAiB/jB,eACxB,mBACI,KACI,EAAI,gBACC,wBAA6B,MAC7B,EAAI8gB,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,MAGlC,IAA1C5B,GAAOyK,iBAAiB9jB,gBACxB,mBAAwB,GAEkB,KAA1CqZ,GAAOyK,iBAAiB9jB,gBACxB,mBAAwB,GAEiB,IAAzCqZ,GAAOyK,iBAAiB/jB,eACxB,oBAAyB,MAAY,mBAAuB,qBAEnB,IAAzCsZ,GAAOyK,iBAAiB/jB,eACxB,oBAAyB,MAAY,mBAAuB,mBAAwB,oBAExF,2BAAgC,IAAI,EAAgC,IAAxB,mBAA8B,KAC5B,KAA1CsZ,GAAOyK,iBAAiB9jB,gBACxB,oBAAyB,IAAI,EAAQ,IAEzC,iBAAsB,IAAI,EAAQ,GAC9BqZ,GAAOwB,SAAS,IAAM,IAAiD,IAA1CxB,GAAOyK,iBAAiB9jB,gBACrD,iBAAsB,MAAY,KAAM,sBAGnC+kB,GAAsB,KAC/B,IAAItlC,EAAI,EACJ45B,GAAOwB,SAAS,GAAK,IACrBp7B,GAAKuC,KAAKsH,IAAI,EAAG,EAAItH,KAAKqE,MAAM,MAAYgzB,GAAOwC,eAAiB,EAAG,OAEvExC,GAAOwB,SAAS,GAAK,IACrBp7B,GAAKuC,KAAKqE,MAAMgzB,GAAO+B,kBAAoB,KAE3C/B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAK,GAEL45B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAK,GAEL45B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAK,GAEL45B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAK,GAEL45B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAK,GAEL45B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAKuC,KAAKsH,IAAI,IAAMtH,KAAKqE,OAAOgzB,GAAOoC,eAAiBpC,GAAOqC,gBAAkBrC,GAAOsC,eAAiBtC,GAAOuC,gBAAkBvC,GAAOwC,gBAAkB,OAE3JxC,GAAOwB,SAAS,IAAM,IACtBp7B,GAAKuC,KAAKsH,IAAI,GAAItH,KAAKqE,MAAM,MAAYgzB,GAAO8K,MAAMr/B,IAAI,GAAI,QAAU9C,KAAKsH,IAAI,IAAKtH,KAAKqE,MAAM,MAAYgzB,GAAO8K,MAAMr/B,IAAI,GAAI,SAElIu0B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAK,yBAEL45B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAKuC,KAAKsH,IAAI,GAAItH,KAAKqE,MAAM,MAAYgzB,GAAOiR,gBAAgBxlC,IAAI,GAAI,SAExEu0B,GAAOwB,SAAS,IAAM,IACtBp7B,GAAKuC,KAAKsH,IAAI,KAAMtH,KAAKqE,MAAyC,EAAnC,MAAY,aAAiB,IAAU,OAEtEgzB,GAAO4B,qBAAqB,GAAK,IACjCx7B,GAAK,GAEL45B,GAAOkC,aAAa,GAAK,KACzB97B,GAAKuC,KAAKqE,MAAMgzB,GAAOoC,eAAiB,MAExCpC,GAAOkC,aAAa,IAAM,KAC1B97B,GAAKuC,KAAKqE,MAAMgzB,GAAOqC,gBAAkB,MAEzCrC,GAAOkC,aAAa,IAAM,KAC1B97B,GAAKuC,KAAKqE,MAAMgzB,GAAOsC,eAAiB,MAExCtC,GAAOkC,aAAa,IAAM,KAC1B97B,GAAKuC,KAAKqE,MAAMgzB,GAAOuC,gBAAkB,MAEzCvC,GAAOkC,aAAa,IAAM,KAC1B97B,GAAKuC,KAAKqE,MAAMgzB,GAAOwC,eAAiB,MAExCxC,GAAOkC,aAAa,IAAM,KAC1B97B,GAAK,GAEL45B,GAAOkC,aAAa,IAAM,KAC1B97B,GAAK,GAEL45B,GAAOkC,aAAa,IAAM,KAC1B97B,GAAK,GAETA,GAAK,GAAK45B,GAAOyH,WAAW,IAAM9+B,KAAKqE,OAAO,aAAkB,aAAkB,aAAkB,aAAkB,cAAmB,GACzI,wBAA6B5G,EACzB45B,GAAOkC,aAAa,IAAM,KAC1B97B,GAC0E,IADrEuC,KAAKqE,MAAMrE,KAAKqE,MAAM,aAAkB,GAAK,sBAC9CrE,KAAKqE,MAAM,EAAI,aAAkB,GAAK,sBAA2B,GAAW,KAEpF5G,GAAM,EAAI45B,GAAOkC,aAAa,IAAM,IACpC97B,GAAM,EAAI45B,GAAOkC,aAAa,IAAM,IACpC97B,GAAM,EAAI45B,GAAOkC,aAAa,IAAM,IACpC97B,GAAKuC,KAAKC,IAAI,KAAMo3B,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,IAAMxB,GAAOwB,SAAS,KACxHxB,GAAOwB,SAAS,IAAM,KACtBp7B,GAAK,MAEL45B,GAAOwB,SAAS,IAAM,KACtBp7B,GAAK,KAAO,KAAO,IAAM,KAE7BA,GAAM,EAAI,GAAQ45B,GAAOyH,WAAW,IAAM,EAAI,GAAQD,GAAQ,YAAaxH,GAAO4B,qBAAqB,MACvGx7B,GAAM,EAAI,IAAS45B,GAAOyH,WAAW,IAAM,IAASzH,GAAOyH,WAAW,IAAM,EAAI,GAAKzH,GAAOyH,WAAW,IAAM,KAAUzH,GAAOyH,WAAW,IAAM,KAAUzH,GAAOyH,WAAW,IAC3KrhC,GAAM,EAAI,aAAkB,IAAM,qBAClCA,GAAM,EAAI,IAAS45B,GAAOyH,WAAW,IACrCrhC,GAAM,EAAI,IAAU45B,GAAOyH,WAAW,KACtCrhC,GAAM,EAAI,KAAY45B,GAAOyH,WAAW,KACxCrhC,GAAM,EAAI,KAAY45B,GAAOyH,WAAW,KACxCrhC,GAAM,EAAI,KAAY45B,GAAOyH,WAAW,KACxCrhC,GAAM,EAAI,KAAY45B,GAAOyH,WAAW,KACxCrhC,GAAM,EAAI,KAAa45B,GAAOyH,WAAW,KACzCrhC,GAAM,EAAI,KAAa45B,GAAOmR,aAAa,IAC3C/qC,GAAKokD,GAA4B,IAAKxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,GAAK,IAChG9jC,GAAK,0BACyC,IAAzC45B,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,gBAAwBqZ,GAAOwB,SAAS,IAAM,KACrHp7B,GAAK,MAETA,EAAIuC,KAAKC,IAAIxC,EAAGuC,KAAKsH,IAAI,GAAI,EAAI+vB,GAAOwnB,iBAAiB,GAAK,IAAM,oBAAuBxnB,GAAOikB,gBAAgB,KAAO,EAAIt7C,KAAK0F,IAAI2xB,GAAOikB,gBAAgB,GAAKjkB,GAAOikB,gBAAgB,OACzL79C,GAAK,gCACLA,EAAIuC,KAAKqE,MAAM5G,GACf,iBAAsBA,EACtB,kBAAuB,iBAAsB45B,GAAOwL,iBACpD,kBAAuB,EACvB,IAAIt5B,EAAI,EACJ3K,EAAI,EACR2K,GAAK,MAAY8tB,GAAO4a,gBAAgBnvC,IAAI,GAAI,GAChDyG,GAAM,EAAI,GAAK8tB,GAAOyH,WAAW,IAAM,IACvCv1B,GAAM,EAAI,GAAK8tB,GAAOyH,WAAW,IAAM,IACvCv1B,GAAM,EAAI,GAAK8tB,GAAOyH,WAAW,IAAM,IACvCv1B,GAAM,EAAI8tB,GAAOyH,WAAW,IAAM,EAClCv1B,GAAM,EAAI,GAAK,gCACf3K,GAAKoB,KAAKqE,MAAO,GAAMkF,EAAIs1B,GAAQ,YAAaxH,GAAO4B,qBAAqB,KAC5Er6B,GAA6D,GAAvDigC,GAAQ,YAAaxH,GAAO4B,qBAAqB,IACvD,sBAA2Br6B,EAC3B,uBAA4BoB,KAAKC,IAAID,KAAKqE,MAAMkF,GAAK3K,EAAG,EAA+D,IAA3DigC,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KACjH,IAAIg6C,EAAK,EACL57C,GAAO4B,qBAAqB,GAAK,KACjCg6C,EAAK,MAET,kBAAuB,EAAI,KAAQ,uBAA4BA,EACjB,IAA1C57C,GAAOyK,iBAAiB9jB,eAAiE,KAA1CqZ,GAAOyK,iBAAiB9jB,gBAC1B,IAAzCqZ,GAAOyK,iBAAiB/jB,eACxB,kBAAuB,GAEkB,IAAzCsZ,GAAOyK,iBAAiB/jB,eACxB,kBAAwB,KAAO,OAAUxU,EAAI3K,GAAKq0E,IAGZ,IAA1C57C,GAAOyK,iBAAiB9jB,gBACxB,kBAAuB,GAEmB,KAA1CqZ,GAAOyK,iBAAiB9jB,gBACxB,kBAAuB,GAE3B,mBAAwB,MAAY,kBAAsB,oBA4QjDszD,GAAgB4B,IAOzB,GlB1vDA,iBACI77C,GAAOoC,eACHpC,GAAOqC,gBACPrC,GAAOsC,eACPtC,GAAOuC,gBACPvC,GAAOwC,eAE2B,MAC1C,IAAItwB,EAAI,EACJ8tB,GAAOwB,SAAS,IAAM,KACtBtvB,GAAK,GAEL8tB,GAAOwB,SAAS,IAAM,KACtBtvB,GAA8C,IAAzCvJ,KAAKqE,MAAM,iBAAsB,KAAc,KAEpDgzB,GAAOkC,aAAa,GAAK,KACzBhwB,GAAKvJ,KAAKqE,MAAMgzB,GAAOoC,eAAiB,MAExCpC,GAAOkC,aAAa,IAAM,KAC1BhwB,GAAKvJ,KAAKqE,MAAMgzB,GAAOqC,gBAAkB,MAEzCrC,GAAOkC,aAAa,IAAM,KAC1BhwB,GAAKvJ,KAAKqE,MAAMgzB,GAAOsC,eAAiB,MAExCtC,GAAOkC,aAAa,IAAM,KAC1BhwB,GAAKvJ,KAAKqE,MAAMgzB,GAAOuC,gBAAkB,MAEzCvC,GAAOkC,aAAa,IAAM,KAC1BhwB,GAAKvJ,KAAKqE,MAAMgzB,GAAOwC,eAAiB,MAE5CtwB,GAAK8tB,GAAOyH,WAAW,IAAM9+B,KAAKqE,MAAM,KAAU,aAAkB,aAAkB,aAAkB,aAAkB,eAC1HkF,GAAKvJ,KAAKqE,OAAO,IAAO,cAAmB,qBAA0B,IACrEkF,GAAM,EAAI,GAAQ8tB,GAAOyH,WAAW,IAAM,EAAI,GAAQD,GAAQ,YAAaxH,GAAO4B,qBAAqB,MACvG1vB,GAAM,EAAI,IAAS8tB,GAAOyH,WAAW,IAAM,IAASzH,GAAOyH,WAAW,IACtEv1B,GAAM,EAAI,IAAS8tB,GAAOyH,WAAW,IACrCv1B,GAAKs4C,GAA4B,IAAKxqB,GAAOkK,YAAY,GAAS,aAAkB,IAAO,GAAK,IAChGh4B,GAAM,EAAI,IAAU8tB,GAAOyH,WAAW,KACtCv1B,GAAM,EAAI,KAAY8tB,GAAOyH,WAAW,KACxCv1B,GAAM,EAAI,KAAY8tB,GAAOyH,WAAW,KACxCv1B,GAAM,EAAI,KAAY8tB,GAAOyH,WAAW,KACxCv1B,GAAM,EAAI,KAAY8tB,GAAOyH,WAAW,KACxCv1B,GAAM,EAAI,KAAa8tB,GAAOyH,WAAW,KACzCv1B,GAAM,EAAI,KAAa8tB,GAAOmR,aAAa,IACvCnR,GAAOwB,SAAS,IAAM,IAAiD,IAA1CxB,GAAOyK,iBAAiB9jB,gBACrDzU,GAAK,GAETA,EAAIvJ,KAAKqE,MAAMkF,GACf,uBAA4BA,EAC5B,wBAAqG,IAAxEvJ,KAAKqE,MAAMgzB,GAAOgC,uBAAyB,wBAAmC,KkBqsD3G85C,GACA1wC,KACAM,KA9QuB,MACvB,IAAIt0B,EAAI,IAAI,EAAQ,GAChB7P,EAAI,IAAI,EAAQ,GAChBw0E,EAAkB,EAAI,EAC1BA,GAAmBpzE,KAAKsH,IAAI,GAAK,IAAO+vB,GAAOyH,WAAW,KAAO9+B,KAAKuI,IAAI8uB,GAAO2F,gBAAkB,GAAKh9B,KAAKuI,IAAI,GAAK,GAAK62B,KAA8B,IAAM,8BAAkC,IAAO/H,GAAOkO,gBAAgB,IAC/N6tC,GAAmB,IAAOv0C,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAC3Em6C,GAAmB,IAAO/7C,GAAOyH,WAAW,IAC5Cs0C,GAAmB,IAAO/7C,GAAOyH,WAAW,IAC5Cs0C,GAAmB,IAAO/7C,GAAOyH,WAAW,IAC5Cs0C,GAAmB,EAAI/7C,GAAOmR,aAAa,IAC3C,qBAA0B,MAAYnR,GAAOgO,eAAgB+tC,GAAiBtwE,IAAI,GAClF,IAAImwE,EAAK,EACqC,IAA1C57C,GAAOyK,iBAAiB9jB,gBACxBi1D,EAAK,KAEqC,IAA1C57C,GAAOyK,iBAAiB9jB,gBACxBi1D,EAAK,GAET,gBACI,GAAK,EAAIjzE,KAAKC,IAAI,GAAI,EAAI,MAAQgzE,EAAK,MAAY57C,GAAOynB,oBAAoBh8C,IAAI,GAAI,KACjF,EAAI,IAASu0B,GAAOyH,WAAW,IAC5B,EAAI,GAAKzH,GAAOyH,WAAW,IAAM,EAAI,GACrCzH,GAAOyH,WAAW,KACT,KAAZm0C,EAAK,IAAc,IAChBp0C,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,IACjE,gBAAqBj5B,KAAKC,IAAI,gBAAoB,EAA8B,IAA1Bo3B,GAAOmR,aAAa,KAC1E,gBAAqBxoC,KAAKC,IAAI,gBAAoB,EAA8B,IAA1Bo3B,GAAOmR,aAAa,KAC1E,0BAA+B,MAAY,gBAAoB,kBAC/D,gBAAqB,MAAY,MAAY,EAAGnR,GAAOiqB,WAAY4G,MACnEz5C,EAAIA,EAAEnI,MAAM,oBACZmI,EAAIA,EAAEnI,MAAM,qBACZmI,EAAIA,EAAEnI,MAAM,sBACZmI,EAAIA,EAAEnI,MAAM,2BACZmI,EAAIA,EAAEnI,MAAM,iBACZ,MAAM+sE,EAAe,IAAI,EAAQ,iBAAsB,GAAG/sE,MAAM,MAAY,KAAM,MAAY,MAAO,oBACjG+wB,GAAOwB,SAAS,GAAK,KACrBpqB,EAAIA,EAAEnI,MAAM+sE,IAEZh8C,GAAOwB,SAAS,IAAM,KACtBpqB,EAAIA,EAAEnI,MAAM,MAAY,IAAK,MAAY,KAAM+wB,GAAOya,kBAEtDza,GAAOwB,SAAS,IAAM,KACtBpqB,EAAIA,EAAEnI,MAAMtG,KAAKC,IAAI,iBAAsB,EAAI,EAAG,MAElDo3B,GAAOwB,SAAS,IAAM,KACtBpqB,EAAIA,EAAEnI,MAAM,MAAY,KAAM,MAAY+wB,GAAOiR,gBAAgBxlC,IAAI,GAAI,OAEzEu0B,GAAOwB,SAAS,IAAM,KACtBpqB,EAAIA,EAAEnI,MAAM,MAAY,KAAM,MAAY,KAAM+wB,GAAO6a,mBAEvD7a,GAAOwB,SAAS,IAAM,KACtBpqB,EAAIA,EAAEnI,MAAM,MAAa,kBAAuB,mBAAwB,IAAO,EAAI,KAEzC,IAA1C+wB,GAAOyK,iBAAiB9jB,gBACxBvP,EAAIA,EAAE7C,UAAU,QAE0B,IAA1CyrB,GAAOyK,iBAAiB9jB,gBACxBvP,EAAIA,EAAE7C,UAAU,WAE0B,IAA1CyrB,GAAOyK,iBAAiB9jB,gBACxBvP,EAAIA,EAAE7C,UAAU,cAE0B,KAA1CyrB,GAAOyK,iBAAiB9jB,gBACxBvP,EAAIA,EAAE7C,UAAU,eAEpBhN,EAAI,MAAY6P,EAAG,EAAI,KAAQ4oB,GAAOyH,WAAW,KACjD,IAAIusB,EAAM,MAAYzsD,EAAG,EAAI,KAAQy4B,GAAOwB,SAAS,MACX,KAAtCxB,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAOwnB,iBAAiB,GAAK,IACzEwM,EAAM,MAAYA,EAAK,MAEe,KAAtCh0B,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAOwnB,iBAAiB,IAAM,IAC1EwM,EAAM,MAAYA,EAAK,EAAI,IAASh0B,GAAOikB,gBAAgB,GAAK,MAAYjkB,GAAO8K,MAAMr/B,IAAI,GAAI,KAAO,IAAM,MAAYu0B,GAAO8K,MAAMr/B,IAAI,GAAI,OAEnJuoD,EAAM,MAAYA,EAAK,mCACvB,uBAA4BA,EAC5B,uBAA4B,MAAY,uBAA2B,yBAA4Bh0B,GAAOikB,gBAAgB,KACtH,eAAoB,IAAI,EAAQ,GAC5BjkB,GAAOwB,SAAS,GAAK,KACrB,eAAoB,qBAAwBw6C,IAE5Ch8C,GAAOwB,SAAS,IAAM,KACtB,eAAoB,qBAAwB,MAAY,EAAG74B,KAAKsH,IAAI,GAAI+vB,GAAOqC,gBAAkB,OAEjGrC,GAAOwB,SAAS,IAAM,KACtB,eAAoB,qBAAwB,WAEhD,eAAoB,IAAI,EAAQ,GAC5BxB,GAAOwB,SAAS,GAAK,KACrB,eAAoB,qBAAwBw6C,IAE5Ch8C,GAAOwB,SAAS,IAAM,KACtB,eAAoB,qBAAwB,MAAY,KAAM,MAAYxB,GAAO0a,qBAAqBjvC,IAAIu0B,GAAO2a,kBAAkBlvC,IAAI,GAAI,EAAI,GAAGwD,MAAM,SAExJ+wB,GAAOwB,SAAS,IAAM,KACtB,eAAoB,qBAAwB,MAAY,MAAOxB,GAAOiR,gBAAgBhiC,MAAM,MAAMxD,IAAI,MAEtGu0B,GAAOwB,SAAS,IAAM,KACtB,eAAoB,qBAAwB,WAEhD,iBAAsB,IAAI,EAAQ,GAC9BxB,GAAOwB,SAAS,GAAK,KACrB,iBAAsB,uBAA0Bw6C,IAEhDh8C,GAAOwB,SAAS,IAAM,KACtB,iBAAsB,uBAA0B,MAAY,MAAOxB,GAAO4a,gBAAgBnvC,IAAI,MAE9Fu0B,GAAOwB,SAAS,IAAM,KACtB,iBAAsB,uBAA0B,YAEpD,gBAAqB,IAAI,EAAQ,GAC7BxB,GAAOwB,SAAS,GAAK,KACrB,gBAAqB,sBAAyBw6C,IAE9Ch8C,GAAOwB,SAAS,IAAM,KACtB,gBAAqB,sBAAyB,QAE9CxB,GAAOwB,SAAS,IAAM,KACtB,gBAAqB,sBAAyB,YAElD,gBAAqB,IAAI,EAAQ,GAC7BxB,GAAOwB,SAAS,GAAK,KACrB,gBAAqB,sBAAyBw6C,IAE9Ch8C,GAAOwB,SAAS,IAAM,KACtB,gBAAqB,sBAAyB,YAElD,0BAA+B,IAAI,EAAQ,GACvCxB,GAAOkC,aAAa,IAAM,KAC1B,0BAA+B,gCAAmC,IAElElC,GAAOkC,aAAa,IAAM,IAAOlC,GAAOuO,eAAex+B,IAAI,MAC3D,0BAA+B,gCAAmC,MAAYiwB,GAAOuO,eAAe9iC,IAAI,GAAI,MAE5Gu0B,GAAOkC,aAAa,IAAM,KAC1B,0BAA+B,gCACpB,MAAY,aAAkB,EAAI,qBAAyB,GACjEjzB,MAAM,MAAY,EAAG,aAAkB,qBAA0B,EAAI,IACrExD,IAAI,KAETu0B,GAAOwB,SAAS,IAAM,KACtB,0BAA+B,gCAAmC,MAAY,SAAU,MAAYxB,GAAOuO,eAAgB,SAE3HvO,GAAOwB,SAAS,IAAM,KACtB,0BAA+B,gCAAmC,MAAY,SAAU,MAAYxB,GAAOiP,oBAAoBxjC,IAAI,GAAI,MAEvIu0B,GAAOyH,WAAW,IAAM,KACxB,0BAA+B,gCAAmC,MAAY,0BAA8B,OAEhH,0BAA+B,gCAAmC,MAAY,MAAY,GAAI,GAAK,EAAIzH,GAAOkO,gBAAgB,IAAK,MAAY,KAAMlO,GAAOyD,kBAAoBzD,GAAOkO,gBAAgB,MACvM,0BAA+B,gCAAmC,MAAY,MAAY,GAAI,IAAM,EAAIlO,GAAOkO,gBAAgB,IAAK,MAAY,MAAYlO,GAAO8K,MAAMr/B,IAAI,GAAI,IAAKu0B,GAAOkO,gBAAgB,GAAK,KAClN,0BAA+B,gCAAmC,MAAY,EAAIvlC,KAAKsH,IAAI,IAAO,IAAO+vB,GAAOwB,SAAS,KAAO,KAAQxB,GAAOyH,WAAW,KAAO9+B,KAAKuI,IAAI8uB,GAAO2F,gBAAkB,GAAKh9B,KAAKuI,IAAI,GAAI,KAAQ8uB,GAAOkO,gBAAgB,IAAKlO,GAAOulB,mBAAqBvlB,GAAOylB,oBAAsBzlB,GAAO2lB,mBAAqB3lB,GAAO6lB,oBAAsB7lB,GAAO+lB,qBAClX,0BAA+B,gCAAmC,MAAY,MAAO/lB,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,IAAM5B,GAAOkO,gBAAgB,KAClR,0BAA+B,gCAAmC,MAAY,GAAI1G,GAAQ,YAAaxH,GAAO4B,qBAAqB,MACnI,0BAA+B,gCAAmC,MAAY,IAAK5B,GAAOyH,WAAW,IAAM,EAAI,GAAQD,GAAQ,YAAaxH,GAAO4B,qBAAqB,QACxK,0BAA+B,gCAAmC,MAAY,IAAK5B,GAAOyH,WAAW,MACrG,0BAA+B,gCAAmC,MAAY,IAAKzH,GAAOyH,WAAW,MACrG,yBAA8B,IAAI,EAAQ,GACtCzH,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC,MAAY,MAAYxB,GAAOuO,eAAe9iC,IAAI,IAAK,IAAK,KAE5Hu0B,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC,MAAY,KAAM,MAAYxB,GAAOuO,eAAe9iC,IAAI,GAAI,KAAQ8I,UAAU,KAAK9I,IAAI,MAEvJu0B,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC74B,KAAKC,IAAI,KAAMo3B,GAAOyD,oBAAoBx0B,MAAM+wB,GAAOyD,kBAAoB,IAE3IzD,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC,MAAY,wBAA4B,KAExGxB,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC,MAAY,yBAA6B,QAEzGxB,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC,MAAYxB,GAAOiP,oBAAoBxjC,IAAI,GAAI,KAE/Gu0B,GAAOyH,WAAW,IAAM,KACxB,yBAA8B,+BAAkC,MAAY,0BAA8B,QAE9G,wBAA6B,IAAI,EAAQ,GACzC,mBAAwBzH,GAAO2a,iBAAmB3a,GAAO0mB,kBAAoB1mB,GAAO4mB,iBAAmB5mB,GAAO8mB,kBAAoB9mB,GAAOgnB,iBACzI,sBAA2B,EAAKxf,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,IACvF,2BAAgC,MAAY,sBAA0B,oBACtE,wBAA6B,8BAAiC,4BAC9D,kBAAuB,IAAI,EAAQ,GACnC,kBAAuB,IAAI,EAAQ,GACnC,kBAAuB,IAAI,EAAQ,GACP,IAAxB5B,GAAOwB,SAAS,MAChB,kBAAuB,wBAA2B,MAAY,SAAU,MAAY,oBAAwB,SAEpF,IAAxBxB,GAAOwB,SAAS,MAChB,kBAAuB,wBAA2B,MAAY,SAAU,MAAY,mBAAuB,EAAI,QAEvF,IAAxBxB,GAAOwB,SAAS,MAChB,kBAAuB,wBAA2B,MAAY,SAAU74B,KAAKsH,IAAI,IAAM,gBAAqB,MAEhH,gBAAqB,IAAI,EAAQ,GACjC,gBAAqB,sBAAyB,EAAI,KAAWtH,KAAKC,IAAI,aAAkB,sBAA2B,EAAIo3B,GAAOyH,WAAW,IAAM,KAAO,EAAI,EAAI,8BAAmCM,KAA8B,MAAO,IAC1M,IAAxB/H,GAAOwB,SAAS,MAChB,gBAAqB,sBAAyB,IAElD,gBAAqB,sBAAyB,MAAY,EAAIxB,GAAOwB,SAAS,IAAM,IAAMxB,GAAOyH,WAAW,IAAM,IAAMzH,GAAOqb,eAAiBrb,GAAOsb,gBAAkBtb,GAAOub,eAAiBvb,GAAOwb,gBAAkBxb,GAAOyb,eAAiBzb,GAAO0b,eAAiB1b,GAAO2b,iBAAmB3b,GAAO4b,kBAC3S,gBAAqB,sBAAyB,EAA0B,KAAtB5b,GAAOwB,SAAS,IAAc74B,KAAKC,IAAID,KAAKuI,IAAI8uB,GAAOob,aAAe,GAAKzyC,KAAKuI,IAAI,IAAK,IAC3I,gBAAqB,sBAAyBvI,KAAKC,IAAI,MAAOo3B,GAAO6I,aAAa/iB,WAClF,gBAAqB,sBAAyB,MAAY,KAAOka,GAAOyH,WAAW,KAAO,IAAOzH,GAAOyH,WAAW,KAAO,IAAOzH,GAAOkK,YAAY,GAAS,cAC7J,gBAAqB,sBAAyBunB,GAA+BzxB,GAAOmoB,qBACpF,gBAAqB,sBAAyB,MAAYx/C,KAAKqH,IAAI,EAAGgwB,GAAO6E,gBAAiB,kCAC9F,gBAAqB,sBAAyBl8B,KAAKC,IAAI,EAAI,UAAe,IAAK,mBAC/E,gBAAqB,sBAAyBD,KAAKC,IAAI,IAAK4+B,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,MACjH,gBAAqB,sBAAyB,0BACb,IAA7B5B,GAAOkC,aAAa,OACpB,gBAAqB,sBAAyB,MAAYlC,GAAOiqB,UAAUx+C,IAAI,IAAK,MAEvD,IAA7Bu0B,GAAOkC,aAAa,OACpB,gBAAqB,sBAAyB,UAEjB,IAA7BlC,GAAOkC,aAAa,OACpB,gBAAqB,sBAAyB,EAAI,GAAK,EAAIv5B,KAAKC,IAAI,GAAID,KAAKsH,IAAI,EAAG+vB,GAAOuiB,qBAAuB,UAE1F,IAAxBviB,GAAOwB,SAAS,MAChB,gBAAqB,sBAAyB,MAElD,gBAAqB,sBAAyB,MAAY,EAAI,GAAM,MAAYxB,GAAOgD,aAAav3B,IAAI,GAAI,IAAKu0B,GAAOoc,iBAAiB,KACzI,gBAAqB,sBAAyB,MAAY,IAAK5U,GAAQ,YAAaxH,GAAO4B,qBAAqB,OAC5G5B,GAAOyH,WAAW,KAAO,IACzB,gBAAqB,sBAAyB,MAAYzH,GAAOiqB,UAAUx+C,IAAI,IAAK,MAEpFu0B,GAAOyH,WAAW,KAAO,IACzB,gBAAqB,sBAAyB,MAAY,MAAYzH,GAAOiqB,UAAUx+C,IAAI,IAAK,IAAKu0B,GAAOyH,WAAW,QAEjF,KAAtCzH,GAAOyK,iBAAiB7jB,YACxB,gBAAqB,MAAY,gBAAoB,KAEf,KAAtCoZ,GAAOyK,iBAAiB7jB,YACxB,gBAAqB,MAAY,gBAAoB,MAEf,KAAtCoZ,GAAOyK,iBAAiB7jB,YACxB,gBAAqB,MAAY,gBAAoB,KAEzD,gBAAqB,MAAY,gBAAoB,EAAI,IAAWje,KAAKsH,IAAI,GAAI2G,EAAYopB,GAAOikB,mBACpG,gBAAqB,MAAY,gBAAoB,uBAA0BjkB,GAAOikB,gBAAgB,KACtG,gBAAqB,sBAAyB,+BAC1CjkB,GAAOwnB,iBAAiB,IAAM,IAC9B,gBAAqB,sBAAyB,MAAY,EAAI,IAAUxnB,GAAOwnB,iBAAiB,IAAK5wC,EAAYopB,GAAO2nB,gCAElF,KAAtC3nB,GAAOyK,iBAAiB7jB,WAAoBoZ,GAAOwnB,iBAAiB,IAAM,IAC1E,gBAAqB,MAAY,gBAAoB,OAEzD,qBAA0B,IAAI,EAAQ,KACtC,qBAA0B,2BAA8B,MAAY,KAAMxnB,GAAOoc,iBAAiB,KAClG,qBAA0B,2BAA8B,MAAY,EAAI,KAAQzzC,KAAKsH,IAAI,IAAK+vB,GAAOoc,iBAAiB,IAAKpc,GAAOqc,gBAAgBC,MAAQtc,GAAOuc,gBAAgBD,MAAQtc,GAAOwc,gBAAgBF,MAAQtc,GAAOyc,gBAAgBH,MAAQtc,GAAO0c,gBAAgBJ,QAC9Q,qBAA0B,2BAA8B,EAAI,IAAUtc,GAAOyH,WAAW,MACxF,qBAA0B,2BAA8B,EAAI,IAAUzH,GAAOyH,WAAW,MACxF,qBAA0B,2BAA8B,EAAI,IAAUzH,GAAOyH,WAAW,MACxF,qBAA0B,2BAA8B,EAAI,IAAUzH,GAAOyH,WAAW,MACxF,qBAA0B,2BAA8B,EAAI,GAAWzH,GAAOyH,WAAW,MACzF,qBAA0B,2BAA8B,oCACpDzH,GAAOwnB,iBAAiB,GAAK,IAC7B,qBAA0B,2BAA8B,IAExDxnB,GAAOwnB,iBAAiB,IAAM,IAC9B,qBAA0B,2BAA8B,KAExDxnB,GAAOwnB,iBAAiB,IAAM,IAC9B,qBAA0B,2BAA8B,OAQ5D+M,GE5vDwB,MACxB,IAAIhtD,EAAI,EACJiG,EAAI,EACJlI,EAAI,EACJ22E,EAAW,EACf,eAAqBj8C,GAAOukB,mBAAmB94C,IAAIu0B,GAAOoC,gBAAiBnzB,MAAM,wBAA2BA,MAAM,gBAAmBA,MAAM+wB,GAAO60C,kBAClJ,gBAAsB70C,GAAOykB,oBAAoBh5C,IAAIu0B,GAAOqC,iBAAkBpzB,MAAM,wBAA2BA,MAAM,gBAAmBA,MAAM+wB,GAAO80C,mBACrJ,eAAqB90C,GAAO2kB,mBAAmBl5C,IAAIu0B,GAAOsC,gBAAiBrzB,MAAM,wBAA2BA,MAAM,kBAAqBA,MAAM+wB,GAAO+0C,kBACpJ,gBAAsB/0C,GAAO6kB,oBAAoBp5C,IAAIu0B,GAAOuC,iBAAkBtzB,MAAM,wBAA2BA,MAAM,iBAAoBA,MAAM+wB,GAAOg1C,mBACtJ,eAAqBh1C,GAAO+kB,mBAAmBt5C,IAAIu0B,GAAOwC,gBAAiBvzB,MAAM,wBAA2BA,MAAM,iBAAoBA,MAAM+wB,GAAOi1C,kBACnJ,eAAoB,mBAAsB,iBAAoBxpE,IAAI,gBAAmBA,IAAI,iBAAoBA,IAAI,gBAC7G,mBAAsB,QACtB,eAAoB,IAAI,EAAQ,IAEhC,oBAAuB,QACvB,gBAAqB,IAAI,EAAQ,IAEjC,mBAAsB,QACtB,eAAoB,IAAI,EAAQ,IAEhC,oBAAuB,QACvB,gBAAqB,IAAI,EAAQ,IAEjC,mBAAsB,QACtB,eAAoB,IAAI,EAAQ,IAEpC,mBAAwB,qBAAwB,IACF,IAA1Cu0B,GAAOyK,iBAAiB9jB,gBACxBnZ,EAAI,EAAI7E,KAAKC,IAAK,EAAIo3B,GAAO4B,qBAAqB,GAAK,GAAK,IAElB,IAA1C5B,GAAOyK,iBAAiB9jB,gBACxBnZ,EAAI,MAEkC,KAAtCwyB,GAAOyK,iBAAiB7jB,YACxBpZ,EAAI,MAEkC,KAAtCwyB,GAAOyK,iBAAiB7jB,YACxBpZ,GAAK,KAAO,EAAI,EAAI,EAAIwyB,GAAO4B,qBAAqB,KACpDp0B,GAAK7E,KAAKC,IAAI,KAAMD,KAAKqH,IAAI,EAAG4G,EAAYopB,GAAO4B,sBAAwB5B,GAAO4B,qBAAqB,IAAM5B,GAAO4B,qBAAqB,IAAM5B,GAAO4B,qBAAqB,IAAM5B,GAAO4B,qBAAqB,IAAM5B,GAAO4B,qBAAqB,IAAM,EAAI5B,GAAOmR,aAAa,OAE7QnR,GAAO4B,qBAAqB,GAAK,IACjCt8B,GAAK,OAET,IAAI+G,EAAW,EACfA,GAAYmB,EACZnB,GAAa,EAAI,IAAS2zB,GAAOyH,WAAW,IAAM,EAAI,GAAKzH,GAAOyH,WAAW,IAAM,EAAI,GAAKzH,GAAOyH,WAAW,IAAM,EAAI,IAAMzH,GAAOyH,WAAW,IAAM,EAAI,IAAMzH,GAAOyH,WAAW,IAClLp7B,GAAa,EAAI,IAAO,MAAQ2zB,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAM,EAAIlC,GAAOkC,aAAa,KAAOv5B,KAAKsH,IAAI+vB,GAAOqiB,gBAAiB,MACpJh2C,GAAY1D,KAAKC,IAAI,KAAO4+B,GAAQ,gBAAiBxH,GAAO4B,qBAAqB,KACjFv1B,GAAa,KAAQ,KAAQ1D,KAAKC,IAAI,GAAK,aAAkB,qBAA2B,KACxFyD,GAAa,IAAO,IAAO1D,KAAKC,IAAI,EAAGD,KAAKsH,IAAI,GAAI,IAAM,cAAmB,OAC7E5D,GAAa,EAAI,IAAO2zB,GAAOkC,aAAa,IAAM,IAAOlC,GAAOkC,aAAa,IAAM,IAAOlC,GAAOkC,aAAa,IAAM,IAAOlC,GAAOkC,aAAa,KAAO,IAAOlC,GAAOkC,aAAa,KAAO,MAASlC,GAAOkC,aAAa,KAAO,MAASlC,GAAOkC,aAAa,KAAO,MAASlC,GAAOkC,aAAa,KAC7R71B,GAAY/G,EACZ+G,GAAY1D,KAAKC,IAAI,MAAQo3B,GAAOkC,aAAa,MAAQlC,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,GAAK5B,GAAO4B,qBAAqB,MACzNv1B,GAAa,KAAQ,KAAQ1D,KAAKC,IAAI,IAAMo3B,GAAOkK,YAAY,GAAS,aACxE79B,GAAY,EAAI1D,KAAKC,IAAK,EAAI,MAAYo3B,GAAOgD,aAAav3B,IAAI,GAAI,IAAM,EAAI,GAAK,GAAKu0B,GAAO4B,qBAAqB,IAAM5B,GAAOwB,SAAS,KAAO,GAAMxB,GAAOwnB,iBAAiB,GAAK,GAAMxnB,GAAOwnB,iBAAiB,IAAM,GAAMxnB,GAAOwnB,iBAAiB,KAAO,6BAAkC,IACjSn7C,GAAa,EAAI,IAAQ2zB,GAAOwG,eAAe,GAAS,GACxDn6B,GAAY1D,KAAKC,IAAI,IAAM,GAAQD,KAAKuI,IAAI,EAAI8uB,GAAO6F,eAAiBl9B,KAAKuI,IAAI,IAAM8uB,GAAOyH,WAAW,MACzGp7B,GAAY1D,KAAKC,IAAI,KAAO4+B,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAC7Ev1B,GAAa,EAAI,KAAQ2zB,GAAOyH,WAAW,KAAO,IAClDp7B,GAAa,EAAI,KAAQ2zB,GAAOmR,aAAa,IAAM,IACnD9kC,GAAY,2BACR2zB,GAAOwB,SAAS,KAAO,IACvBn1B,GAAY,IAEhB,cAAmB1D,KAAKqE,MAAM,KAAO,MAAY,KAAM,IAAMX,IAAa,EAC1E,MAAMjI,EAAKuE,KAAKsH,IAAI,cAAkBtH,KAAKqE,MAAM,MAAY,mBAAsB,GAAI,MAC7C,KAAtCgzB,GAAOyK,iBAAiB7jB,WAAoB,eAAoB,OAASoZ,GAAOkC,aAAa,KAAO,GACpGhC,EAAiB,KAEjB97B,GAAM,IACNmD,EAAIoB,KAAKC,IAAIxE,EAAI,GAAK,KAE1B63E,EAAWtzE,KAAKC,IAAI,cAAkB,GAAK,IAC3C,aAAkB,MAAY,KAAM,EAAM,GAC1C,kBAAuB,MAAY,KAAM,EAAa,IFmrDtDszE,GACI,mBAAsB,MAAQ,CAC9B,MAAMC,EAAU,MAAY,yBAA4B,cAAkB,MAAY,GAAI,cAAmB,MAAY,kBAAsB,MAC/In8C,GAAO8K,MAAQ9K,GAAO8K,MAAMr/B,IAAI0wE,EAAQltE,MAAM4sE,EAAK,OACnD77C,GAAOoiB,kBAAoBpiB,GAAOoiB,kBAAkB32C,IAAI0wE,EAAQltE,MAAM4sE,EAAK,OAC3E77C,GAAO8B,sBAAwB9B,GAAO8B,sBAAsBr2B,IAAI0wE,EAAQltE,MAAM4sE,EAAK,OACnF77C,GAAOwmB,uBAAyBxmB,GAAOwmB,uBAAuB/6C,IAAI0wE,EAAQltE,MAAM4sE,EAAK,OACrF77C,GAAO40C,WAAa50C,GAAO40C,WAAWnpE,IAAI0wE,EAAQltE,MAAM4sE,EAAK,OAEjEO,KAC4B,IAAxBp8C,GAAOwB,SAAS,KAAaxB,GAAOoiB,kBAAkBryC,IAAI,QAC1DiwB,GAAOuO,eAAiBvO,GAAOuO,eAAe9iC,IAAI,QAAc,8BAAiC,KAAMwD,MAAM4sE,EAAK,SAEzF,IAAzB77C,GAAOwB,SAAS,MAAcxB,GAAO8B,sBAAsB/xB,IAAI,SAC/DiwB,GAAOiR,gBAAkBjR,GAAOiR,gBAAgBxlC,IAAI,QAAc,+BAAkC,KAAMwD,MAAM4sE,EAAK,SAErH77C,GAAOmR,aAAa,IAAM,GAAKnR,GAAO4a,gBAAgB7qC,IAAI,SAC1DiwB,GAAOiP,oBAAsBjP,GAAOiP,oBAAoBxjC,IAAI,QAAc,mCAAsC,KAAMwD,MAAM4sE,EAAK,SAErI,uBAA4B77C,GAAOilB,uBAAuBx5C,IAAIu0B,GAAOulB,oBAAoBt2C,MAAM+wB,GAAOk1C,sBAAsBjmE,MAAM,2BAClI,wBAA6B+wB,GAAOklB,wBAAwBz5C,IAAIu0B,GAAOylB,qBAAqBx2C,MAAM+wB,GAAOm1C,uBAAuBlmE,MAAM,2BACtI,uBAA4B+wB,GAAOmlB,uBAAuB15C,IAAIu0B,GAAO2lB,oBAAoB12C,MAAM+wB,GAAOo1C,sBAAsBnmE,MAAM,2BAClI,wBAA6B+wB,GAAOolB,wBAAwB35C,IAAIu0B,GAAO6lB,qBAAqB52C,MAAM+wB,GAAOq1C,uBAAuBpmE,MAAM,2BACtI,uBAA4B+wB,GAAOqlB,uBAAuB55C,IAAIu0B,GAAO+lB,oBAAoB92C,MAAM+wB,GAAOs1C,sBAAsBrmE,MAAM,2BAClI+wB,GAAOolB,wBAA0BplB,GAAOolB,wBAAwB35C,IAAI,6BAAgCowE,EAAK,OACzG77C,GAAOmlB,uBAAyBnlB,GAAOmlB,uBAAuB15C,IAAI,8BAAiCowE,EAAK,OACxG77C,GAAOklB,wBAA0BllB,GAAOklB,wBAAwBz5C,IAAI,6BAAgCowE,EAAK,OACzG77C,GAAOilB,uBAAyBjlB,GAAOilB,uBAAuBx5C,IAAI,8BAAiCowE,EAAK,OACxG,kBAAuB,uBACsB,IAAzC77C,GAAOyK,iBAAiB/jB,cAAgE,KAA1CsZ,GAAOyK,iBAAiB9jB,gBACtEqZ,GAAOgO,eAAiBhO,GAAOgO,eAAeviC,IAAI,wBAA2BowE,EAAK,QAEtF,qBAA0B77C,GAAOomB,qBAAqB36C,IAAIu0B,GAAOgnB,kBAAkB/3C,MAAM+wB,GAAO21C,oBAAoB1mE,MAAM,0BAA6BA,MAAM,yBAA4BA,MAAM,mBAC/L,sBAA2B+wB,GAAOmmB,sBAAsB16C,IAAIu0B,GAAO8mB,mBAAmB73C,MAAM+wB,GAAO01C,qBAAqBzmE,MAAM,0BAC9H,qBAA0B+wB,GAAOkmB,qBAAqBz6C,IAAIu0B,GAAO4mB,kBAAkB33C,MAAM+wB,GAAOy1C,oBAAoBxmE,MAAM,0BAA6BA,MAAM,mBAC7J,sBAA2B+wB,GAAOimB,sBAAsBx6C,IAAIu0B,GAAO0mB,mBAAmBz3C,MAAM+wB,GAAOw1C,qBAAqBvmE,MAAM,0BAC9H,qBAA0B+wB,GAAO0a,qBAAqBjvC,IAAIu0B,GAAO2a,kBAAkB1rC,MAAM+wB,GAAOu1C,oBAAoBtmE,MAAM,0BAA6BA,MAAM,mBAC7J+wB,GAAOmmB,sBAAwBnmB,GAAOmmB,sBAAsB16C,IAAI,2BAA8BowE,EAAK,OACnG77C,GAAOkmB,qBAAuBlmB,GAAOkmB,qBAAqBz6C,IAAI,4BAA+BowE,EAAK,OAClG77C,GAAOimB,sBAAwBjmB,GAAOimB,sBAAsBx6C,IAAI,2BAA8BowE,EAAK,OACnG77C,GAAO0a,qBAAuB1a,GAAO0a,qBAAqBjvC,IAAI,4BAA+BowE,EAAK,OAClG,gBAAqB,IAAI,EAAQ,KACjC,gBAAsB77C,GAAO0a,qBAAqBjvC,IAAIu0B,GAAO2a,kBAAmB1rC,MAAM+wB,GAAOu1C,oBAAoBtmE,MAAM,0BAA6BA,MAAM,mBAC1J,yBAA8B,sBAAyB,IACvD,IAAIotE,EAAK,IAAI,EAAQ,KACjBr8C,GAAOwB,SAAS,IAAM,KACtB66C,EAAKA,EAAGptE,MAAM,MAAY,KAAM+wB,GAAO8a,oBAAsB9a,GAAO+a,qBAAuB/a,GAAOgb,oBAAsBhb,GAAOib,qBAAuBjb,GAAOkb,uBAEjK,wBAA6Blb,GAAOsnB,wBAAwB77C,IAAIu0B,GAAOkb,qBAAqBjsC,MAAM+wB,GAAOg2C,uBACzG,yBAA8Bh2C,GAAOqnB,yBAAyB57C,IAAIu0B,GAAOib,sBAAsBhsC,MAAM+wB,GAAO+1C,wBAC5G,wBAA6B/1C,GAAOonB,wBAAwB37C,IAAIu0B,GAAOgb,qBAAqB/rC,MAAM+wB,GAAO81C,uBACzG,yBAA8B91C,GAAOmnB,yBAAyB17C,IAAIu0B,GAAO+a,sBAAsB9rC,MAAM+wB,GAAO61C,wBAC5G,wBAA6B71C,GAAOknB,wBAAwBz7C,IAAIu0B,GAAO8a,qBAAqB7rC,MAAM+wB,GAAO41C,uBAAuB3mE,MAAMotE,GACtIr8C,GAAOqnB,yBAA2BrnB,GAAOqnB,yBAAyB57C,IAAI,8BAAiCowE,EAAK,OAC5G77C,GAAOonB,wBAA0BpnB,GAAOonB,wBAAwB37C,IAAI,+BAAkCowE,EAAK,OAC3G77C,GAAOmnB,yBAA2BnnB,GAAOmnB,yBAAyB17C,IAAI,8BAAiCowE,EAAK,OAC5G77C,GAAOknB,wBAA0BlnB,GAAOknB,wBAAwBz7C,IAAI,+BAAkCowE,EAAK,OAC3G,mBAAwB,IAAI,EAAQ,KACpC,mBAAyB77C,GAAOknB,wBAAwBz7C,IAAIu0B,GAAO8a,qBAAsB7rC,MAAM+wB,GAAO41C,uBAAuB3mE,MAAMotE,GACnI,4BAAiC,yBAA4B,IAChB,IAAzCr8C,GAAOyK,iBAAiB/jB,cAAgE,KAA1CsZ,GAAOyK,iBAAiB9jB,gBACtEqZ,GAAO4a,gBAAkB5a,GAAO4a,gBAAgBnvC,IAAI,sBAAyBowE,EAAK,QAExC,KAA1C77C,GAAOyK,iBAAiB9jB,gBACxBqZ,GAAOynB,oBAAsBznB,GAAOynB,oBAAoBh8C,IAAI,yBAA4BowE,EAAK,QAEjG,kBAAuB77C,GAAOupB,oBAAoB99C,IAAIu0B,GAAO4b,iBAAiB3sC,MAAM+wB,GAAOw2C,mBAAmBvnE,MAAM,iBACpH,kBAAuB+wB,GAAOspB,qBAAqB79C,IAAIu0B,GAAO2b,kBAAkB1sC,MAAM+wB,GAAOu2C,oBAAoBtnE,MAAM,iBACvH,gBAAqB+wB,GAAOqpB,mBAAmB59C,IAAIu0B,GAAO0b,gBAAgBzsC,MAAM+wB,GAAOs2C,kBAAkBrnE,MAAM,iBAC/G,iBAAsB+wB,GAAOopB,mBAAmB39C,IAAIu0B,GAAOyb,gBAAgBxsC,MAAM+wB,GAAOq2C,kBAAkBpnE,MAAM,iBAChH,iBAAsB+wB,GAAOmpB,oBAAoB19C,IAAIu0B,GAAOwb,iBAAiBvsC,MAAM+wB,GAAOo2C,mBAAmBnnE,MAAM,iBACnH,kBAAuB+wB,GAAOkpB,mBAAmBz9C,IAAIu0B,GAAOub,gBAAgBtsC,MAAM+wB,GAAOm2C,kBAAkBlnE,MAAM,iBACjH,gBAAqB+wB,GAAOipB,oBAAoBx9C,IAAIu0B,GAAOsb,iBAAiBrsC,MAAM+wB,GAAOk2C,mBAAmBjnE,MAAM,iBAClH,gBAAqB+wB,GAAOgpB,mBAAmBv9C,IAAIu0B,GAAOqb,gBAAgBpsC,MAAM+wB,GAAOi2C,kBAAkBhnE,MAAM,iBAC/G+wB,GAAOspB,qBAAuBtpB,GAAOspB,qBAAqB79C,IAAI,wBAA2BowE,EAAK,IAC9F77C,GAAOqpB,mBAAqBrpB,GAAOqpB,mBAAmB59C,IAAI,wBAA2BowE,EAAK,IAC1F77C,GAAOopB,mBAAqBppB,GAAOopB,mBAAmB39C,IAAI,sBAAyBowE,EAAK,IACxF77C,GAAOmpB,oBAAsBnpB,GAAOmpB,oBAAoB19C,IAAI,uBAA0BowE,EAAK,IAC3F77C,GAAOkpB,mBAAqBlpB,GAAOkpB,mBAAmBz9C,IAAI,uBAA0BowE,EAAK,IACzF77C,GAAOipB,oBAAsBjpB,GAAOipB,oBAAoBx9C,IAAI,wBAA2BowE,EAAK,IAC5F77C,GAAOgpB,mBAAqBhpB,GAAOgpB,mBAAmBv9C,IAAI,sBAAyBowE,EAAK,IACxF77C,GAAOiqB,UAAYjqB,GAAOiqB,UAAUx+C,IAAI,sBAAyBowE,EAAK,IACtE,IAAK,IAAIj4E,EAAI,EAAGA,GAAK,EAAGA,IACpB,2BAA8B,WAAc,EAAIA,IAAOo8B,GAAO,kBAAoB,EAAIp8B,IAAgB,UAAE6H,IAAIu0B,GAAO,kBAAoB,EAAIp8B,IAAW,OAAGqL,MAAM+wB,GAAO,iBAAmBp8B,GAAe,YAAGqL,MAAM,sBACvM,IAANrL,IACAo8B,GAAO,kBAAoB,EAAIp8B,IAAe,UAAIo8B,GAAO,kBAAoB,EAAIp8B,IAAe,UAC3F6H,IAAI,2BAA8B,WAAc,EAAI7H,IAAIqL,MAAM4sE,KAG3E77C,GAAOgD,aAAehD,GAAOgD,aAAav3B,IAAI,uCAA0CowE,IACpF77C,GAAO8C,eAAiB,GACxBF,EAA0B,GAE1B5C,GAAOyH,WAAW,IAAM,IAAOzH,GAAO4B,qBAAqB,GAAMj5B,KAAKsH,IAAI+vB,GAAO2nB,4BAA4B,GAAI,GAAK,EAAI3nB,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,OAAUzH,GAAO8K,MAAM/6B,IAAI,MAAY,GAAI,KAAO,+BAAoCpH,KAAKC,IAAI,EAAIo3B,GAAO4B,qBAAqB,GAAI,OAC7S5B,GAAO4B,qBAAqB,IAAM,EAClCgjC,GAAiB,GAAG,GACpBvjC,EAA0B,GAAG,IAE7BrB,GAAOyH,WAAW,IAAM,IAAOzH,GAAO4B,qBAAqB,GAAMj5B,KAAKsH,IAAI+vB,GAAO2nB,4BAA4B,GAAI,GAAK,EAAI3nB,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,OAAUzH,GAAO8K,MAAM/6B,IAAI,MAAY,GAAI,IAAM,+BAAoCpH,KAAKC,IAAI,EAAIo3B,GAAO4B,qBAAqB,GAAI,OAC5S5B,GAAO4B,qBAAqB,IAAM,EAClCgjC,GAAiB,GAAG,GACpBvjC,EAA0B,GAAG,IAE7BrB,GAAOyH,WAAW,IAAM,IAAOzH,GAAO4B,qBAAqB,GAAMj5B,KAAKsH,IAAI+vB,GAAO2nB,4BAA4B,GAAI,GAAK,EAAI3nB,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,OAAUzH,GAAO8K,MAAM/6B,IAAI,MAAY,GAAI,IAAM,+BAAoCpH,KAAKC,IAAI,EAAIo3B,GAAO4B,qBAAqB,GAAI,OAC5S5B,GAAO4B,qBAAqB,IAAM,EAClCgjC,GAAiB,GAAG,GACpBvjC,EAA0B,GAAG,IAE7BrB,GAAOyH,WAAW,IAAM,IAAOzH,GAAO4B,qBAAqB,GAAMj5B,KAAKsH,IAAI+vB,GAAO2nB,4BAA4B,GAAI,GAAK,EAAI3nB,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,OAAUzH,GAAO8K,MAAM/6B,IAAI,MAAY,GAAI,KAAO,+BAAoCpH,KAAKC,IAAI,EAAIo3B,GAAO4B,qBAAqB,GAAI,OAC7S5B,GAAO4B,qBAAqB,IAAM,EAClCgjC,GAAiB,GAAG,GACpBvjC,EAA0B,GAAG,IAE7BrB,GAAOyH,WAAW,IAAM,IAAOzH,GAAO4B,qBAAqB,GAAMj5B,KAAKsH,IAAI+vB,GAAO2nB,4BAA4B,GAAI,GAAK,EAAI3nB,GAAOyH,WAAW,IAAM,IAAMzH,GAAOyH,WAAW,OAAUzH,GAAO8K,MAAM/6B,IAAI,MAAY,GAAI,EAAI,+BAAoCpH,KAAKC,IAAI,EAAIo3B,GAAO4B,qBAAqB,GAAI,OAC1S5B,GAAO4B,qBAAqB,IAAM,EAClCgjC,GAAiB,GAAG,GACpBvjC,EAA0B,GAAG,IAE7BrB,GAAO8K,MAAM/6B,IAAI,OAAoC,IAA3BiwB,GAAOyQ,QAAQ8kB,UACzCv1B,GAAOyQ,QAAQ8kB,SAAU,EACzB5xB,MAEA3D,GAAO8K,MAAM/6B,IAAI,OAAqC,IAA3BiwB,GAAOyQ,QAAQglB,UAC1Cz1B,GAAOyQ,QAAQglB,SAAU,EACzB9xB,MAEA3D,GAAO8K,MAAM/6B,IAAI,OAAwC,IAA7BiwB,GAAOyQ,QAAQklB,YAC3C31B,GAAOyQ,QAAQklB,WAAY,EAC3BhyB,MAEA3D,GAAO8K,MAAM/6B,IAAI,OAAoC,IAA5BiwB,GAAOyQ,QAAQolB,WACxC71B,GAAOyQ,QAAQolB,UAAW,EAC1BlyB,MAEA3D,GAAOiqB,UAAUl6C,IAAI,IAAmC,IAA7BiwB,GAAOkC,aAAa,MAC/ChC,EAAiB,KAEjBF,GAAOiqB,UAAUl6C,IAAI,MAAqC,IAA7BiwB,GAAOkC,aAAa,MACjDhC,EAAiB,KAEjBF,GAAOiqB,UAAUl6C,IAAI,YAA2C,IAA7BiwB,GAAOkC,aAAa,MACvDhC,EAAiB,KAEjBF,GAAOiqB,UAAUl6C,IAAI,OAAsC,IAA7BiwB,GAAOkC,aAAa,MAClDhC,EAAiB,KAEjBF,GAAOiqB,UAAUl6C,IAAI,OAAsC,IAA7BiwB,GAAOkC,aAAa,MAClDhC,EAAiB,KAEjBF,GAAOiqB,UAAUl6C,IAAI,UAAyC,IAA7BiwB,GAAOkC,aAAa,MACrDhC,EAAiB,KAEjBF,GAAOiqB,UAAUl6C,IAAI,WAA0C,IAA7BiwB,GAAOkC,aAAa,MACtDhC,EAAiB,KAErB,MAAMo8C,EAAOt8C,GAAOyK,iBAAiB/jB,aAC/B61D,EAAWv8C,GAAOyK,iBAAiB9jB,cACnC61D,EAAax8C,GAAOyK,iBAAiB7jB,UAC9B,IAAT01D,GACIt8C,GAAO8B,sBAAsB/xB,IAAIyyC,GAAqB85B,EAAMt8C,GAAO4B,qBAAqB06C,GAAOA,MAC/F7X,GAAW,aAAa,GACxB,8BAAmC,GAGvC8X,EAAW,GAAkB,IAAbA,GACZv8C,GAAO4a,gBAAgB7qC,IAAIyyC,GAAqB+5B,EAAUv8C,GAAO4B,qBAAqB26C,GAAWA,MACjG9X,GAAW,0BAA0B,GACrC,8BAAmC,EAC/BzkC,GAAO4B,qBAAqB26C,IAAc,GAAK,EAAIv8C,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,qBACrGzzB,GAAO6nB,oBAAsB,IAIrC00B,GAAY,GACRv8C,GAAO8K,MAAM/6B,IAAIyyC,GAAqB+5B,EAAUv8C,GAAO4B,qBAAqB26C,GAAWA,MACvF9X,GAAW,0BAA0B,GACrC,8BAAmC,EAC/BzkC,GAAO4B,qBAAqB26C,IAAc,GAAK,EAAIv8C,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,qBACrGzzB,GAAO6nB,oBAAsB,EACzB7nB,GAAO6nB,mBAAqB,KAC5B7nB,GAAO6nB,mBAAqB,KAKzB,IAAf20B,GAAoBA,EAAa,IAC7Bx8C,GAAO4B,qBAAqB,KAAO4gB,GAAqBg6B,EAAYx8C,GAAO4B,qBAAqB46C,GAAaA,KAC7G/X,GAAW,sBAAsB,GACjCpjC,EAA0Bm7C,GAAY,IAG3B,KAAfA,GACIx8C,GAAO8K,MAAM/6B,IAAIyyC,GAAqBg6B,EAAYx8C,GAAO4B,qBAAqB46C,GAAaA,KAC3F/X,GAAW,sBAAsB,IAIhC2X,GAAgB,KACzB,IAAIK,EAAc,GAAMj1C,GAAQ,YAAaxH,GAAO4B,qBAAqB,IAAM,IAC3E86C,EAAe,IAC0B,IAAzC18C,GAAOyK,iBAAiB/jB,eACxB+1D,EAAc,KAAQ,EAAIz8C,GAAO4B,qBAAqB,IACtD86C,EAAe,MAE2B,KAA1C18C,GAAOyK,iBAAiB9jB,gBACxB81D,EAAc,MAAU,EAAIz8C,GAAO4B,qBAAqB,KACxD86C,EAAe,MAEnBD,GAAe,sBAAyBz8C,GAAOikB,gBAAgB,IAC/D,oBAAyB,QAAc,MAAYjkB,GAAOoiB,kBAAkB7tC,UAAU,MAAOkoE,IACzFz8C,GAAOwB,SAAS,IAAM,IAAgD,IAAzCxB,GAAOyK,iBAAiB/jB,cAAgE,KAA1CsZ,GAAOyK,iBAAiB9jB,gBACnG,oBAAyB,0BAA6B,MAAY,MAAY,GAAI,MAAO,MAAY,oBAAwB,EAAI,EAAI,sBAAyBqZ,GAAOikB,gBAAgB,QAEzL,qBAA0B,QAAc,MAAYjkB,GAAO8B,sBAAsBvtB,UAAU,OAAQmoE,IAC/F18C,GAAOwB,SAAS,IAAM,IAAgD,IAAzCxB,GAAOyK,iBAAiB/jB,cAAgE,KAA1CsZ,GAAOyK,iBAAiB9jB,gBACnG,qBAA0B,2BAA8B,MAAY,IAAK,MAAY,KAAMqZ,GAAO6a,mBAEtG,yBAA8B,QAAc,MAAY7a,GAAO4a,gBAAgBrmC,UAAU,OAAQ,MACnD,IAA1CyrB,GAAOyK,iBAAiB9jB,gBACxB,yBAA8B,MAAY,yBAA6B,MAE3C,IAA5BqZ,GAAOkC,aAAa,MACpB,yBAA8B,+BAAkC,IAEhElC,GAAOwB,SAAS,IAAM,KACtB,yBAA8B,+BAAkC,IAE1B,KAAtCxB,GAAOyK,iBAAiB7jB,YACxB,yBAA8B,IAAI,EAAQ,OAGrC69C,GAAa,CAAC7gE,EAAG+4E,GAAS,EAAMC,GAAU,KAuBnD,GAtBU,aAANh5E,IACIo8B,GAAOoiB,kBAAkBryC,IAAI,OAAS,wBAA2B,QAC7D4sE,EACAE,GAAkB,aAGlB98C,EAAsB,GACtB,GAAM,cAIR,cAANn8B,IACKo8B,GAAO8B,sBAAsB/xB,IAAI,QAAU,yBAA4B,MAAkD,IAAzCiwB,GAAOyK,iBAAiB/jB,eACrGi2D,GACAE,GAAkB,aAEjBF,IACD58C,EAAsB,GACtB,GAAM,kBAIR,cAANn8B,EAAmB,CACnB,MAAM+sC,EAAI3Q,GAAOyK,iBAAiB/jB,aAC5BrR,EAAIs7B,EAAI,GACd,GAA6C,IAAzC3Q,GAAOyK,iBAAiB/jB,aAAoB,CAC5C,MAAMo2D,EAAYC,GAAS/8C,GAAO8B,sBAAsB/xB,IAAIyyC,GAAqB7R,EAAGosC,EAAMpsC,IACpFqsC,EAAiB,GAAK,EAAIh9C,GAAOyH,WAAWpyB,GAAK,IAAM2qB,GAAOyH,WAAW,KAC/E,GAAIq1C,EAAS98C,GAAO4B,qBAAqB+O,KAAO3Q,GAAO4B,qBAAqB+O,GAAKqsC,EAAgB,CAC7F,MAAMC,EAASj9C,GAAO6I,aAAa6e,iBAAmB,GAA2C,KAAtC1nB,GAAOyK,iBAAiB7jB,UAAmB,GAAK,EAC3G,IAAIs2D,EAAU,EACVH,EAAO/8C,GAAO4B,qBAAqB+O,GACvC,KAAOusC,EAAUD,GACTH,EAASC,IAASA,EAAOC,GACzBD,IAEJG,IAEJl9C,GAAO4B,qBAAqB+O,GAAKosC,EACjC,MAAM55C,EAAI9tB,EAAI,GACduvD,GAAiBzhC,GAAG,GACpB64B,GAAqB74B,GAEzB,GAAInD,GAAO4B,qBAAqB+O,GAAK3Q,GAAO2nB,4BAA4BhX,GACpE,KAAO3Q,GAAO4B,qBAAqB+O,GAAK3Q,GAAO2nB,4BAA4BhX,IAAI,CAC3E3Q,GAAO2nB,4BAA4BhX,IAAM,EACzC,MAAMxN,EAAI9tB,EAAI,GACduvD,GAAiBzhC,GAAG,GACpB64B,GAAqB74B,GACrBoiC,GAAwB50B,EAAG3Q,GAAO2nB,4BAA4BhX,IAC9DuN,KAGR7c,EAA0BsP,IACmB,IAAzC3Q,GAAO6I,aAAa6e,kBAA0Bk1B,KAC9C,GAAM,yBAAyB,EAAO,kBACtC58C,GAAO6a,gBAAkB,KAG5B7a,GAAO+7B,iBAAmB4gB,GAAU38C,GAAO4B,qBAAqB+O,IAAO,GAAK,EAAI3Q,GAAOyH,WAAWpyB,GAAK,IAAM2qB,GAAOyH,WAAW,QAChIzH,GAAOyK,iBAAiB/jB,aAAe,EACvCo1C,MAcR,GAXU,gBAANl4D,GACI,4BAA+B,KAAiD,IAAzCo8B,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,gBACzGg2D,GACAE,GAAkB,eAEjBF,IACD58C,EAAsB,GACtB,GAAM,mBAIR,2BAANn8B,GAA4E,IAA1Co8B,GAAOyK,iBAAiB9jB,cAAqB,CAC/E,MAAMgqB,EAAI3Q,GAAOyK,iBAAiB9jB,cACW,IAAzCqZ,GAAOyK,iBAAiB/jB,eACxBsZ,GAAOyK,iBAAiB/jB,aAAe,GAE3C,MAAMo2D,EAAYC,GACVpsC,GAAK,EACE3Q,GAAO4a,gBAAgB7qC,IAAIyyC,GAAqB7R,EAAGosC,EAAMpsC,IAGzD3Q,GAAO8K,MAAM/6B,IAAIyyC,GAAqB7R,EAAGosC,EAAMpsC,IAGxDqsC,EAAiB,GAAK,EAAIh9C,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,mBAAqB,EAAIzzB,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,GAAKxnB,GAAOwnB,iBAAiB,IACvM,GAAIs1B,EAAS98C,GAAO4B,qBAAqB+O,KAAO3Q,GAAO4B,qBAAqB+O,GAAKqsC,EAAgB,CAC7F,MAAMC,EAASj9C,GAAO6I,aAAa6e,iBAAmB,GAA2C,KAAtC1nB,GAAOyK,iBAAiB7jB,UAAmB,GAAK,EAC3G,IAAIs2D,EAAU,EACVH,EAAO/8C,GAAO4B,qBAAqB+O,GACvC,KAAOusC,EAAUD,GACTH,EAASC,IAASA,EAAOC,GACzBD,IAEJG,IAEJl9C,GAAO4B,qBAAqB+O,GAAKosC,EACjCnY,GAAiBj0B,GAAG,GACpBqrB,GAAqBrrB,GAOzB,IAL6C,IAAzC3Q,GAAO6I,aAAa6e,kBAA0Bk1B,KAC9C,GAAM,0BAA0B,EAAO,kBACvC58C,GAAOunB,oBAAsB,GAEjClmB,EAA0BsP,GACtB3Q,GAAO4B,qBAAqB+O,GAAK3Q,GAAO2nB,4BAA4BhX,GACpE,KAAO3Q,GAAO4B,qBAAqB+O,GAAK3Q,GAAO2nB,4BAA4BhX,IACvE3Q,GAAO2nB,4BAA4BhX,IAAM,EACzC40B,GAAwB50B,EAAG3Q,GAAO2nB,4BAA4BhX,IAC9DuQ,KACA/B,KACAjB,KAGR,IAAKle,GAAO+7B,iBAAmB4gB,GAAU38C,GAAO4B,qBAAqB+O,GAAK,GAAK,EAAI3Q,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,mBAAqB,EAAIzzB,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,GAAKxnB,GAAOwnB,iBAAiB,IAAK,CAG3P,GAFA,GAAM,0BAA0B,EAAO,kBACvCxnB,GAAOyK,iBAAiB9jB,cAAgB,EACpCqZ,GAAO6I,aAAa6e,iBAAmB,EACvC,IAAK,IAAI9jD,EAAI,EAAGA,GAAK,EAAGA,IACpBo8B,GAAO4B,qBAAqBh+B,GAAKo8B,GAAO2nB,4BAA4B/jD,GAG5Ek4D,KACAp0B,KACA2V,MAUR,GAPU,WAANz5C,GACIo8B,GAAO4B,qBAAqB,IAAM,GAC9B+6C,GACAE,GAAkB,UAIpB,uBAANj5E,GAAoE,IAAtCo8B,GAAOyK,iBAAiB7jB,UAAiB,CACvE,IAAIu2D,GAAO,EAIX,GAHIR,IACAQ,EAAO9qB,QAAQ,kKAEd8qB,EACD,OAEJ,MAAM/2E,EAAI45B,GAAOyK,iBAAiB7jB,UAC5B0lB,EAAItM,GAAOyK,iBAAiB9jB,cAC5B2pB,EAAItQ,GAAOyK,iBAAiB/jB,aAC9BsZ,GAAO4B,qBAAqB,KAAO,IAAY,KAANx7B,GAAY45B,GAAOikB,gBAAgB,IAAM,GAAKjkB,GAAOkC,aAAa,KAAO,GAClHhC,EAAiB,KAErB,MAAM88C,EAAiB52E,EAAI,GAAK,GAAK,EAAI45B,GAAOwnB,iBAAiB,GAAK,EAAIxnB,GAAOwnB,iBAAiB,IAAM,EAAIxnB,GAAOwnB,iBAAiB,IAAM,EAChI,IAANphD,GAAWA,EAAI,IACX45B,GAAO4B,qBAAqB,KAAO4gB,GAAqBp8C,EAAG45B,GAAO4B,qBAAqBx7B,GAAIA,IAAM45B,GAAO4B,qBAAqBx7B,GAAK42E,IAClIh9C,GAAO4B,qBAAqBx7B,IAAM,GAGhC,KAANA,IACI45B,GAAO8K,MAAM/6B,IAAIyyC,GAAqBp8C,EAAG45B,GAAO4B,qBAAqBx7B,GAAIA,KAAO45B,GAAO4B,qBAAqBx7B,GAAK42E,EACjHh9C,GAAO4B,qBAAqBx7B,IAAM,EAG9B45B,GAAO8K,MAAM/6B,IAAI,MAAY,GAAIiwB,GAAOg9B,wBACxCh9B,GAAOg9B,oBAAsB,MAAYh9B,GAAO8K,MAAMr/B,IAAI,GAAI,IAC9DqxD,OAIF,IAANxwB,GACuC,iBAA5BtM,GAAOyK,mBACdzK,GAAOyK,iBAAmB9oC,OAAOqlB,OAAO,GAAI2lD,GAAUliC,mBAGpD,IAAN6F,IACAtQ,GAAOyK,iBAAiB/jB,aAAe,GAE3Ck+C,GAAiBx+D,GAAG,GACpB,GAAM,sBACF45B,GAAO4B,qBAAqBx7B,GAAK45B,GAAO2nB,4BAA4BvhD,KACpE45B,GAAO2nB,4BAA4BvhD,IAAM,EACzC45B,GAAO6gB,eAAiB,KAEvB7gB,GAAO+7B,iBAAmB4gB,GAAU38C,GAAO4B,qBAAqBx7B,IAAM42E,GAAwB,KAAN52E,KACzF45B,GAAOyK,iBAAiB7jB,UAAY,GAExCk1C,KACAz6B,EAA0Bj7B,GAAG,KAGxBy2E,GAAqBj5E,IACpB,aAANA,KAC2B,IAAvBo8B,GAAO8b,QAAQ,KAEL,IADAuW,QAAQ,6KAEdtyB,EAAsB,GACtB,GAAM,cAIVA,EAAsB,GACtB,GAAM,cAGJ,cAANn8B,KAC2B,IAAvBo8B,GAAO8b,QAAQ,KAEL,IADAuW,QAAQ,mNAEdtyB,EAAsB,GACtB,GAAM,kBAIVA,EAAsB,GACtB,GAAM,kBAGJ,gBAANn8B,GAC0C,KAAtCo8B,GAAOyK,iBAAiB7jB,aACG,IAAvBoZ,GAAO8b,QAAQ,KAEL,IADAuW,QAAQ,sOAEdtyB,EAAsB,GACtB,GAAM,mBAIVA,EAAsB,GACtB,GAAM,mBAIR,WAANn8B,KACWo8B,GAAO8b,QAAQ,KAAOuW,QAAQ,iMAErC,GAAM,cAIL6nB,GAAY,KACrB,iBAAsB,IAAI,EAAQ,GAClC,gBAAqB,IAAI,EAAQ,GAC7Bl6C,GAAOwB,SAAS,IAAM,KACtB,iBAAsB,MAAY,KAAM,oBAExCxB,GAAOwB,SAAS,IAAM,KACtB,gBAAqB,MAAY,KAAM,oBAEvCxB,GAAOyH,WAAW,MAAQ,KAAOzH,GAAOkC,aAAa,KAAO,GAC5DhC,EAAiB,KAEjBF,GAAOmR,aAAa,KAAO,KAAOnR,GAAOkC,aAAa,KAAO,GAC7DhC,EAAiB,MAEK,IAAtBF,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOwkB,gBACnF5X,GAAO,QAAS,OAAQ,EAAG,MAEL,IAAtB5M,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAO0kB,iBACnF9X,GAAO,SAAU,OAAQ,EAAG,MAEN,IAAtB5M,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAO4kB,gBACnFhY,GAAO,QAAS,OAAQ,EAAG,MAEL,IAAtB5M,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAO8kB,iBACnFlY,GAAO,SAAU,OAAQ,EAAG,MAEN,IAAtB5M,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOglB,gBACnFpY,GAAO,QAAS,OAAQ,EAAG,OAEL,IAAtB5M,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOmL,kBACnFT,IAAe,IAEO,IAAtB1K,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAO8K,MAAM/6B,IAAIiwB,GAAOyL,iBACnFF,IAAc,IAEQ,IAAtBvL,GAAO8b,QAAQ,IAAuC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAOuO,eAAex+B,IAAIiwB,GAAOwO,uBAC5FJ,IAAiB,IAEM,IAAvBpO,GAAO8b,QAAQ,KAA4C,IAA5B9b,GAAOkC,aAAa,KAAalC,GAAOuO,eAAex+B,IAAIiwB,GAAOwlB,oBACjG5Y,GAAO,QAAS,WAAY,EAAG,MAER,IAAvB5M,GAAO8b,QAAQ,KAA4C,IAA5B9b,GAAOkC,aAAa,KAAalC,GAAOuO,eAAex+B,IAAIiwB,GAAO0lB,qBACjG9Y,GAAO,SAAU,WAAY,EAAG,MAET,IAAvB5M,GAAO8b,QAAQ,KAA4C,IAA5B9b,GAAOkC,aAAa,KAAalC,GAAOuO,eAAex+B,IAAIiwB,GAAO4lB,oBACjGhZ,GAAO,QAAS,WAAY,EAAG,OAER,IAAvB5M,GAAO8b,QAAQ,KAA4C,IAA5B9b,GAAOkC,aAAa,KAAalC,GAAOuO,eAAex+B,IAAIiwB,GAAO8lB,qBACjGlZ,GAAO,SAAU,WAAY,GAAI,OAEV,IAAvB5M,GAAO8b,QAAQ,KAA6C,IAA7B9b,GAAOkC,aAAa,MAAclC,GAAOuO,eAAex+B,IAAIiwB,GAAOgmB,oBAClGpZ,GAAO,QAAS,WAAY,GAAI,OAEpC,IAAIrlC,EAAI,EAkDR,GAjDAA,GAAkE,IAA7DoB,KAAKqE,MAAM,aAAkB,GAAK,sBAAiC,IACpEgzB,GAAOwB,SAAS,IAAM,IAAiD,IAA1CxB,GAAOyK,iBAAiB9jB,gBACrDpf,GAAK,IAELy4B,GAAOkC,aAAa,IAAM,IAAOlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM3mC,EAAG,GAAK,MAC9MsmC,GAAmB,GAAG,GAEtB7N,GAAOkC,aAAa,IAAM,IAAOlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM3mC,EAAG,GAAK,MAC9MsmC,GAAmB,GAAG,GAEtB7N,GAAOkC,aAAa,IAAM,IAAOlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM3mC,EAAG,GAAK,MAC9MsmC,GAAmB,GAAG,GAEtB7N,GAAOkC,aAAa,KAAO,IAAOlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM3mC,EAAG,GAAK,MAC/MsmC,GAAmB,GAAG,GAEtB7N,GAAOkC,aAAa,KAAO,IAAOlC,GAAOgO,eAAej+B,IAAI,MAAY,GAAK,yBAA8B,iCAAsCpH,KAAKqE,MAAMrE,KAAKC,IAAIo3B,GAAOkO,gBAAgB,GAAK,GAAM3mC,EAAG,GAAK,MAC/MsmC,GAAmB,GAAG,IAEC,IAAvB7N,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAOiR,gBAAgBlhC,IAAIiwB,GAAOymB,kBAC9F7Z,GAAO,QAAS,SAAU,EAAG,IAEN,IAAvB5M,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAOiR,gBAAgBlhC,IAAIiwB,GAAO2mB,mBAC9F/Z,GAAO,SAAU,SAAU,EAAG,MAEP,IAAvB5M,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAOiR,gBAAgBlhC,IAAIiwB,GAAO6mB,kBAC9Fja,GAAO,QAAS,SAAU,EAAG,MAEN,IAAvB5M,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAOiR,gBAAgBlhC,IAAIiwB,GAAO+mB,mBAC9Fna,GAAO,SAAU,SAAU,GAAI,MAER,IAAvB5M,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAaxB,GAAOiR,gBAAgBlhC,IAAIiwB,GAAOinB,kBAC9Fra,GAAO,QAAS,SAAU,GAAI,OAEP,IAAvB5M,GAAO8b,QAAQ,KAAgB9b,GAAOiP,oBAAoBl/B,IAAIiwB,GAAOsoB,qBACrEvZ,GAAoB,QAAS,GAAG,IAET,IAAvB/O,GAAO8b,QAAQ,KAAgB9b,GAAOiP,oBAAoBl/B,IAAIiwB,GAAOuoB,sBACrExZ,GAAoB,SAAU,KAAK,IAEZ,IAAvB/O,GAAO8b,QAAQ,KAAgB9b,GAAOiP,oBAAoBl/B,IAAIiwB,GAAOwoB,qBACrEzZ,GAAoB,QAAS,KAAK,IAEX,IAAvB/O,GAAO8b,QAAQ,KAAgB9b,GAAOiP,oBAAoBl/B,IAAIiwB,GAAOyoB,sBACrE1Z,GAAoB,SAAU,KAAK,IAEZ,IAAvB/O,GAAO8b,QAAQ,KAAgB9b,GAAOiP,oBAAoBl/B,IAAIiwB,GAAO0oB,qBACrE3Z,GAAoB,QAAS,MAAM,GAEnC/O,GAAOyH,WAAW,KAAO,EACzB,IAAK,IAAI7jC,EAAI,EAAGA,GAAK,GAAIA,IACjBo8B,GAAOgD,aAAajzB,IAAIktC,GAAwBr5C,GAAGw5E,QACnDhgC,GAAoBx5C,GAAG,GAInC,GAAKo8B,GAAOyH,WAAW,KAAO,GAA0C,GAAnCzH,GAAOquC,yBAAgC,CACxE,MAAMgP,EAA4B,CAAE/qE,KAAM,EAAG88B,QAAS,EAAG7oC,MAAO,EAAG+2E,aAAc,CAAC,EAAG,GAAI,IAAK,IAAM,MACpG,IAAK,IAAI15E,EAAI,EAAGA,EAAIy5E,EAA0BC,aAAax5E,OAAQF,IAC1Do8B,GAAOsP,eAAiB+tC,EAA0BC,aAAa15E,GAAK+E,KAAKC,IAAI,EAAIo3B,GAAO,kBAAoBp8B,EAAI,IAAW,MAAG,GAAKo8B,GAAOm6B,0BAA6Bn6B,GAAOukC,eAAe3gE,EAAI,KAC7LurC,GAAiBkuC,EAA0BC,aAAa15E,GAAIA,EAAI,GAAG,GAAKy5E,EAA0B/qE,MAA4C,GAAlC+qE,EAA0B/qE,QACvI+qE,EAA0B/qE,KAAO68B,GAAiBkuC,EAA0BC,aAAa15E,GAAIA,EAAI,GAAG,GACpGy5E,EAA0BjuC,QAAUiuC,EAA0BC,aAAa15E,GAC3Ey5E,EAA0B92E,MAAQ3C,EAAI,GAI9Cy5E,EAA0B92E,MAAQ,GAClCipC,GAAqB6tC,EAA0BjuC,QAASiuC,EAA0B92E,OAGtFy5B,GAAOwB,SAAS,KAAO,KACvBxB,GAAO6kB,oBAAsB7kB,GAAO6kB,oBAAoBp5C,IAAKu0B,GAAO+kB,mBAAmBt5C,IAAIu0B,GAAOwC,gBAAiBvzB,MAAM,iBAAoBA,MAAM,oBAEnJ+wB,GAAOwB,SAAS,KAAO,KACvBxB,GAAO2kB,mBAAqB3kB,GAAO2kB,mBAAmBl5C,IAAKu0B,GAAO6kB,oBAAoBp5C,IAAIu0B,GAAOuC,iBAAkBtzB,MAAM,kBAAqBA,MAAM,oBAEpJ+wB,GAAOwB,SAAS,KAAO,KACvBxB,GAAOykB,oBAAsBzkB,GAAOykB,oBAAoBh5C,IAAKu0B,GAAO2kB,mBAAmBl5C,IAAIu0B,GAAOsC,gBAAiBrzB,MAAM,oBAEzH+wB,GAAOwB,SAAS,KAAO,KACvBxB,GAAOukB,mBAAqBvkB,GAAOukB,mBAAmB94C,IAAKu0B,GAAOykB,oBAAoBh5C,IAAIu0B,GAAOqC,iBAAkBpzB,MAAM,oBAEzH+wB,GAAOwB,SAAS,KAAO,KACvBxB,GAAO+kB,mBAAqB/kB,GAAO+kB,mBAAmBt5C,IAAIu0B,GAAOoC,iBAErE,IAAI6Z,EAAI,EACRA,GAAK,KAAWjc,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,IAAMlC,GAAOkC,aAAa,KAChM,IAAI97B,EAAI,EACJ45B,GAAOwB,SAAS,KAAO,KACvBp7B,GAAK,IAEL45B,GAAOwB,SAAS,KAAO,KACvBp7B,GAAK,KAEL45B,GAAOwB,SAAS,KAAO,KACvBp7B,GAAK,KAEL45B,GAAOwB,SAAS,KAAO,KACvBp7B,GAAK,KAEL45B,GAAOwB,SAAS,KAAO,KACvBp7B,GAAK,KAETA,GAAK61C,EACL,IAAI/pC,EAAI,EACJ8tB,GAAOwB,SAAS,KAAO,KACvBtvB,GAAK,KAEL8tB,GAAOwB,SAAS,KAAO,KACvBtvB,GAAK,KAEL8tB,GAAOwB,SAAS,KAAO,KACvBtvB,GAAK,KAEL8tB,GAAOwB,SAAS,KAAO,KACvBtvB,GAAK,KAEL8tB,GAAOwB,SAAS,KAAO,KACvBtvB,GAAK,KAETA,GAAK+pC,EACL10C,EAAI,EACAy4B,GAAOwB,SAAS,KAAO,KACvBj6B,GAAK,KAELy4B,GAAOwB,SAAS,KAAO,KACvBj6B,GAAK,KAELy4B,GAAOwB,SAAS,KAAO,KACvBj6B,GAAK,KAELy4B,GAAOwB,SAAS,KAAO,KACvBj6B,GAAK,KAELy4B,GAAOwB,SAAS,KAAO,KACvBj6B,GAAK,KAETA,GAAK00C,EACK,IAAN71C,IACA45B,GAAO+kB,mBAAqB/kB,GAAO+kB,mBAAmBt5C,IAAI,MAAYu0B,GAAOilB,uBAAuBx5C,IAAIu0B,GAAOulB,oBAAoB95C,IAAI,GAAIrF,KAErI,IAAN8L,IACA8tB,GAAOqlB,uBAAyBrlB,GAAOqlB,uBAAuB55C,IAAI,MAAYu0B,GAAO0a,qBAAqBjvC,IAAIu0B,GAAO2a,kBAAkBlvC,IAAI,GAAIyG,KAEzI,IAAN3K,IACAy4B,GAAOomB,qBAAuBpmB,GAAOomB,qBAAqB36C,IAAI,MAAYu0B,GAAOknB,wBAAwBz7C,IAAIu0B,GAAO8a,qBAAqBrvC,IAAI,GAAIlE,KAEjJy4B,GAAO+E,WAAa/E,GAAOob,eAC3Bpb,GAAOob,aAAepb,GAAO+E,YAE7B/E,GAAO6E,eAAiB7E,GAAOmb,eAC/Bnb,GAAOmb,aAAenb,GAAO6E,gBAEjC,qBAA0B,EAC1B,sBAA4B,EAAI7E,GAAOyH,WAAW,GAAK,IAAM,EAAI,GAAQD,GAAQ,YAAaxH,GAAO4B,qBAAqB,MAC1H,sBAA4B,EAAI5B,GAAOyH,WAAW,IAAM,IACxD,sBAA4B,EAAIzH,GAAOyH,WAAW,IAAM,IACxD,sBAA4B,EAAIzH,GAAOyH,WAAW,KAAO,IACzD,sBAA4B,EAAIzH,GAAOyH,WAAW,KAAO,IAAM,EAAI,EACnE,sBAA4B,EAAIzH,GAAOyH,WAAW,KAAO,IAAM,EAAI,EACnE,sBAA4B,EAAIzH,GAAOyH,WAAW,KAAO,IAAM,EAAI,EACnE,sBAA4B,EAAIzH,GAAOyH,WAAW,KAAO,IAAM,EAAI,EACnE,sBAA4B,EAAI,IAAO9+B,KAAKuI,IAAI8uB,GAAO0F,eAAiB,GAAK/8B,KAAKuI,IAAI,GAAKvI,KAAKsH,IAAI,EAAG+vB,GAAOoc,iBAAiB,IAC/H,sBAA2B,+BAC3B,uBAA4B,IAAM,GAAKpc,GAAOyH,WAAW,IAAM,GAAM,aAAkB,IAAMzH,GAAO6I,aAAaiiB,WACjH,wBAA6B,KAAO,IAAM9qB,GAAO6I,aAAaoiB,YjBtmEvC,MACvB,MACMvpB,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9DpvB,EAAO,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SACjG,GAA0C,KAAtC0tB,GAAOyK,iBAAiB7jB,UACxB,IAAK,IAAIhjB,EAAI,EAAGA,GAAK89B,EAAI59B,OAAQF,KACT,KAANA,EAAWo8B,GAAOyH,WAAW/F,EAAI99B,EAAI,IAAMo8B,GAAOkC,aAAaR,EAAI99B,EAAI,OALnEyR,EAMYzR,EAAG,EANNo8B,GAAOiqB,UAAUl6C,IAAIuhD,GAAkB,IAAI,EAAQ,qBAAwBj8C,EAAI,IAAK2qB,GAAOkK,YAAY70B,EAAI,GAAK,EAAGA,GAAGpG,MAMhH,MAC7B2iD,GAAct/C,EAAK1O,EAAI,IAAI,EAAMA,GAPpB,IAACyR,EAW1B,MAAMkoE,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3CC,EAAQ,CAAC,QAAS,IAAK,MAAO,QAAS,OAAQ,OAAQ,QAAS,SACtE,IAAK,IAAI55E,EAAI,EAAGA,GAAK25E,EAAKz5E,OAAQF,IAAK,CACnC,MAAMsC,EAAY,IAANtC,EAAUo8B,GAAOiP,oBAAsBjP,GAAOiqB,UACpD18C,EAAU,IAAN3J,EAAU,EAAI,EACpBo8B,GAAOkC,aAAaq7C,EAAK35E,EAAI,KAAOsC,EAAI6J,IAAIiwB,GAAO,WAAcp8B,EAAI,GAAK,YAAYqL,MAAM1B,KAC5FgkD,GAAgB,WAAc3tD,EAAI,GAAI,OAAQ45E,EAAM55E,EAAI,GAAIA,KiBqlEpE65E,GACIz9C,GAAO0vC,YACuB,mBAA1B1vC,GAAOq3C,gBAAuCr3C,GAAO4B,qBAAqB,KAAOj5B,KAAKqH,IAAI,EAAGgwB,GAAOijB,sBACpG,GAAM,aAAa,GAG3B,IAAIxE,EAAW,KACf,GAAIze,GAAOyH,WAAW,KAAO,EACzB,IAAK,IAAI7jC,EAAI,EAAGA,GAAK,GAAIA,IACrB66C,EAAWxB,GAAwBr5C,GAC/Bo8B,GAAOgD,aAAajzB,IAAI0uC,EAAS,KACjCrB,GAAoBx5C,GAAG,GAInC,MAAM85E,EAAiB1zC,KACvB,GAAI0zC,IAAmB,qBAAyB,CAC5C,qBAA0BA,EAC1B,MAAMjU,EAAY,CAAC,OAAQ,WAAY,UACjCkU,EAAW,CACZ71E,GAAUA,EACVA,GAAUA,GAASA,EAAQ,GAAK,EAChCA,GAAUA,GAASA,EAAQ,GAAK,GAE/B81E,EAAgB,CAClB,CAAC,IAAK,IAAK,IAAK,IAAK,MACrB,CAAC,IAAK,IAAK,KAAM,KAAM,OACvB,CAAC,EAAG,IAAK,IAAK,IAAK,OAEvB,IAAK,IAAI13E,EAAM,EAAGA,EAAMujE,EAAU3lE,SAAUoC,EAAK,CAC7C,MAAM23E,EAAWpU,EAAUvjE,GAC3B,IAAK,IAAI43E,EAAM,EAAGA,EAAM,IAAKA,EAAK,CAC9B,MAAMt6C,EAAM,WAAcs6C,GAC1B99C,GAAOwD,EAAM,OAASq6C,GAAYzxC,GAAQwxC,EAAc13E,GAAK43E,GAAM99C,GAAOwD,EAAM,QAAUq6C,GAAY,EAAGA,EAAUF,EAASz3E,GAAK43E,EAAM,GAAIJ,IAGnJ,IAAK,IAAI95E,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMm6E,EAAuB,CAAC,EAAG,IAAK,IAAK,IAAK,MAC1ClnE,EAAQ,CAAC,QAAS,SAAU,QAAS,SAAU,SAC/C+zB,EAAQ5K,GAAOnpB,EAAMjT,GAAK,kBAAoB,EACpDo8B,GAAOnpB,EAAMjT,GAAK,iBAAmB,IAAI,EAAQ,MAAY,EAAGgnC,EAAQ,GAAG37B,MAAM,MAAY,MAAOtG,KAAKqH,IAAI,EAAI46B,EAAQ,OAAWjiC,KAAKqH,IAAI,EAAI46B,EAAQ,MAAU,GAAK,KAAK37B,MAAM8uE,EAAqBn6E,OAIvMypE,GAAoB,KAC7B9rB,GAAS6pB,GAAa,KACtB7pB,GAASzQ,GAAc,KACvByQ,GAASka,GAAmB,KAC5Bla,GAASga,GAAa,IACtBha,GAAS24B,GAAW,KACpB34B,GAAS9e,EAA0B,KAC9B,aACD13B,SAASC,eAAe,WAAWs4B,MAAM8C,QAAU,OACnDr7B,SAASC,eAAe,sBAAsBs4B,MAAM8C,QAAU,SAGtE,IAAI43C,GAAa,EACV,MAAM1Q,GAAc,KACvB0Q,GAAaC,YAAYv6B,MACzBnC,GAAS28B,GAAM,IAInB,IAAIC,GAAY,EAChB,MAAMD,GAAO,KAET,IAEIE,EAFAC,EADQJ,YAAYv6B,MACNs6B,GAGlB,IAFAG,KAAcE,EAAQF,IALH,GAOZE,EAAQ,GACXD,EATG,EAUHA,GAAeD,GAAY,GAAKx1E,KAAKsH,IAAI,KAAakuE,GAVnD,GAUqE,EACxEC,EAAcz1E,KAAKsH,IAAIouE,EAAOD,GAC9BE,GAAKF,EAAc,KACnBJ,IAAcI,EACdC,GAASD,GAGjB,SAASE,GAAKzC,GACV,IAAK,WAAe,ClB7jDO,MACtB77C,GAAOy3C,SAIwB,iBAApBz3C,GAAOy3C,WACnBz3C,GAAOy3C,SAAW,IAAIh0B,KAAKzjB,GAAOy3C,YAJlCz3C,GAAOy3C,SAAW,IAAIh0B,KACtBj5C,QAAQ0G,IAAI,kCAKhB,MAAMm1B,EAAI,IAAIod,KACRld,EAAIF,EAAEs0C,WACNptE,EAAI84B,EAAEu0C,aACNxjE,EAAIivB,EAAEw0C,aACZ76C,GAAOq0B,SAAW,MAAkB,KAAU9tB,EAAM,GAAKh5B,EAAK6J,EAC1DivB,EAAEk4C,YAAcv+C,GAAOy3C,SAAS8G,WAAal4C,EAAEm4C,aAAex+C,GAAOy3C,SAAS+G,YAAcn4C,EAAEo4C,gBAAkBz+C,GAAOy3C,SAASgH,gBAChIz+C,GAAOy3C,SAAW,IAAIh0B,KACtBzjB,GAAO0d,eAAiB,EACxB1d,GAAOgf,oBAAsB,EAC7Bhf,GAAO+gB,oBAAsB,EAC7B/gB,GAAOyd,gBAAkB,EACzBzd,GAAO+e,qBAAuB,EAC9B/e,GAAO8gB,qBAAuB,EAC9B/1C,SAASC,eAAe,6BAA6Bs4B,MAAM8C,QAAU,QACjEpG,GAAO4B,qBAAqB,IAAM,IAClC72B,SAASC,eAAe,kCAAkCs4B,MAAM8C,QAAU,SAE1EpG,GAAO4B,qBAAqB,IAAM,IAClC72B,SAASC,eAAe,kCAAkCs4B,MAAM8C,QAAU,WkBoiD9Es4C,GACA,MAAM1xB,EAAWD,KAmBjB,GAlBAktB,GAAa4B,EAAK7uB,GAClBonB,GAAU,WAAYyH,GACtBzH,GAAU,eAAgByH,GAC1BzH,GAAU,gBAAiByH,GAC3BzH,GAAU,YAAayH,GACvBzH,GAAU,SAAUyH,GAChB77C,GAAO6I,aAAaC,aAAe,IAAO9I,GAAO4yB,qBACjD2hB,GAAe,gBAAiBsH,GAEH,IAA7B77C,GAAOkC,aAAa,MACpBqyC,GAAe,eAAgBsH,GAEL,IAA1B77C,GAAOyH,WAAW,IAClB8sC,GAAe,eAAgBsH,GAG/B/yB,KAEA9oB,GAAOwf,oBAAsBxf,GAAOyf,cAAgBY,GAAuBrgB,IAAS,CACpF,IAAIk9C,EAAU,EACd,MAAMyB,EAAW,EAAI3+C,GAAO4B,qBAAqB,IACjD,KAAOs7C,EAAUyB,GACT3+C,GAAOyf,aAAe,GADH,CACM,CACzB,MAAMjB,EAAqC,MAAxBxe,GAAOyf,aAAwB,IAAO,EACzD,IAAKF,GAAYvf,GAAOyf,cAAc,EAAMjB,GACxC,MAMR0+B,MAUZ,GANIl9C,GAAO2nB,4BAA4B,GAAK,GACxC4sB,GAAe,eAAgBsH,EAAK,GAEpC77C,GAAOmR,aAAa,GAAK,GACzBojC,GAAe,eAAgBsH,EAAK77C,GAAOmR,aAAa,IAExDnR,GAAOyH,WAAW,KAAO,GAAKzH,GAAOyH,WAAW,KAAO,EAAG,CAC1D,MAAMm3C,EAAoB,CACtB5+C,GAAOkC,aAAa,KAAO,EAC3BlC,GAAOkC,aAAa,KAAO,EAC3BlC,GAAOkC,aAAa,KAAO,EAC3BlC,GAAOkC,aAAa,KAAO,EAC3BlC,GAAOkC,aAAa,KAAO,EAC3BlC,GAAOkK,YAAY,IAAU,GAAKlK,GAAO8C,eAAiB,EAC1D9C,GAAO6I,aAAa2qB,aAAe,GAEvC,IAAIqrB,GAAmB,EACvB,GAAI7+C,GAAO2uC,kBACP,IAAK,IAAI/qE,EAAI,EAAGA,EAAIg7E,EAAkB96E,SAAUF,EACxCg7E,EAAkBh7E,KAClBi7E,EAAmBl3C,GAAmB/jC,EAAI,GAAG,IAASi7E,GAIlE,GAAI7+C,GAAO6uC,kBACP,IAAK,IAAIjrE,EAAI,EAAGA,EAAIg7E,EAAkB96E,SAAUF,EACxCg7E,EAAkBh7E,KAClBi7E,EAAmBv3C,GAAkB1jC,EAAI,GAAG,IAASi7E,GAI7DA,IACAp5C,IACAiC,MAUR,GVnqE6B,CAACm0C,IAC9B,GAAI77C,GAAOyH,WAAW,KAAO,GACzBzH,GAAO6+B,uBACN7+B,GAAOiP,oBAAoBl/B,IAAI,MAA8C,KAAtCiwB,GAAOyK,iBAAiB7jB,WAAmB,CA0BnF,GAzBA,+BAAoCi1D,EAChC,+BAAoC77C,GAAOgkC,mBAAmBE,OACjB,IAAzClkC,GAAOyK,iBAAiB/jB,cAAsBsZ,GAAO6nB,oBAAsB,IAC3E4c,GAAW,iBAAa7/D,GAAW,GACnC,8BAAmC,EACnCo7B,GAAO6nB,oBAAsB,EACzB7nB,GAAOgkC,mBAAmBG,OAAS,GACnCC,GAA8B,IAGQ,IAA1CpkC,GAAOyK,iBAAiB9jB,eAAuBqZ,GAAO6nB,mBAAqB,IAC3E4c,GAAW,8BAA0B7/D,GAAW,GAChD,8BAAmC,EACnCo7B,GAAO6nB,oBAAsB,EACzB7nB,GAAOgkC,mBAAmBG,OAAS,GACnCC,GAA8B,IAGlCpkC,GAAO6nB,mBAAqB,KAC5B7nB,GAAO6nB,mBAAqB,EACxB7nB,GAAOgkC,mBAAmBC,OAAS,GACnCG,GAA8B,KAIR,IAA9BpkC,GAAO6nB,oBAA4B,+BAAoC7nB,GAAOgkC,mBAAmBC,MAAO,CACxG,MAAQjkC,GAAOqlC,qBAAqBrlC,GAAO6nB,sBACvC7nB,GAAO6nB,oBAAwB7nB,GAAOqlC,qBAAqBrlC,GAAO6nB,oBAA2B,EAAJ,EACvD,KAA9B7nB,GAAO6nB,sBAI8B,IAAzC7nB,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,gBACtE,8BAAmC,GAEvCg4C,GAAiB3+B,GAAO6nB,oBAAoB,GACxC7nB,GAAOgkC,mBAAmBE,MAAQ,GAClCE,GAA8B,GAGtC,GAAkC,IAA9BpkC,GAAO6nB,oBAA4B,+BAAoC7nB,GAAOgkC,mBAAmBG,MAAO,CACxG,GAA6C,IAAzCnkC,GAAOyK,iBAAiB/jB,cAAsBsZ,GAAO6nB,oBAAsB,EAAG,CAC9E,MAAQ7nB,GAAOqlC,qBAAqBrlC,GAAO6nB,qBAEvC,GADA7nB,GAAO6nB,oBAAsB,EACzB7nB,GAAO6nB,mBAAqB,GAAI,CAChC7nB,GAAO6nB,mBAAqB,EACxB7nB,GAAOgkC,mBAAmBC,OAAS,GACnCG,GAA8B,GAElC,MAG0B,IAA9BpkC,GAAO6nB,qBACP8W,GAAiB3+B,GAAO6nB,oBAAoB,GACxC7nB,GAAOgkC,mBAAmBE,MAAQ,GAClCE,GAA8B,IAGtC,8BAAmC,EAEvC,GAA8C,IAA1CpkC,GAAOyK,iBAAiB9jB,eAAuBqZ,GAAO6nB,mBAAqB,EAAG,CAC9E,KAAO7nB,GAAO4B,qBAAqB5B,GAAO6nB,qBAAwB,GAAK,EAAI7nB,GAAOmR,aAAa,IAAM,EAAInR,GAAO6I,aAAa4qB,mBAAqB,EAAIzzB,GAAOwnB,iBAAiB,KAAQxnB,GAAOqlC,qBAAqBrlC,GAAO6nB,qBAErN,GADA7nB,GAAO6nB,oBAAsB,EACzB7nB,GAAO6nB,mBAAqB,GAAI,CAChC7nB,GAAO6nB,mBAAqB,EACxB7nB,GAAOgkC,mBAAmBC,OAAS,GACnCG,GAA8B,GAElC,MAG0B,IAA9BpkC,GAAO6nB,qBACP8W,GAAiB3+B,GAAO6nB,oBAAoB,GACxC7nB,GAAOgkC,mBAAmBE,MAAQ,GAClCE,GAA8B,IAGtC,8BAAmC,MU2kE/C0a,CAAkBjD,GACU,IAAxB77C,GAAOg6B,cAA8C,IAAxBh6B,GAAOg6B,eACT,IAAvBh6B,GAAO8b,QAAQ,KAA4C,IAA5B9b,GAAOkC,aAAa,KAAa,wBAA2BlC,GAAOuO,eAAet/B,MAAM,MAAY,GAAI+wB,GAAOrjB,mBAAqBqjB,GAAOoiB,kBAAkBryC,IAAI,QAChMgwB,EAAsB,GACtB,GAAM,YAAY,IAGE,IAAxBC,GAAOg6B,aAAoB,CAC3B,4BAAiC6hB,EACjC,MAAMtJ,EAAO5pE,KAAKqH,IAAI,IAAMgwB,GAAOrjB,iBACR,IAAvBqjB,GAAO8b,QAAQ,KAA4C,IAA5B9b,GAAOkC,aAAa,KAAa,4BAAiCqwC,GAAQvyC,GAAOoiB,kBAAkBryC,IAAI,QACtIgwB,EAAsB,GACtB,GAAM,YAAY,IAS1B,GAN4B,IAAxBC,GAAOi6B,cAA8C,IAAxBj6B,GAAOi6B,eACT,IAAvBj6B,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAa,yBAA4BxB,GAAOiR,gBAAgBhiC,MAAM,MAAY,GAAI+wB,GAAO8iB,oBAAsB9iB,GAAO8B,sBAAsB/xB,IAAI,QAAmD,IAAzCiwB,GAAOyK,iBAAiB/jB,eACrOqZ,EAAsB,GACtB,GAAM,gBAAgB,IAGF,IAAxBC,GAAOi6B,aAAoB,CAC3B,gCAAqC4hB,EACrC,MAAMtJ,EAAO5pE,KAAKqH,IAAI,IAAMgwB,GAAO8iB,kBACR,IAAvB9iB,GAAO8b,QAAQ,KAAwC,IAAxB9b,GAAOwB,SAAS,KAAa,gCAAqC+wC,GAAQvyC,GAAO8B,sBAAsB/xB,IAAI,QAAmD,IAAzCiwB,GAAOyK,iBAAiB/jB,eAC5KqZ,EAAsB,GACtB,GAAM,gBAAgB,IAG9B,GAA0C,KAAtCC,GAAOyK,iBAAiB7jB,UAAkB,CAE1C,GADA,iCAAsCi1D,EACV,IAAxB77C,GAAOk6B,aAAoB,CAC3B,MAAMqY,EAAO5pE,KAAKqH,IAAI,IAAMgwB,GAAOgjB,sBACR,IAAvBhjB,GAAO8b,QAAQ,KAAgB9b,GAAOyH,WAAW,IAAM,IAAOzH,GAAO4a,gBAAgB7qC,IAAI,UAAY,iCAAsCwiE,GAAiD,IAAzCvyC,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,gBACzNoZ,EAAsB,GACtB,GAAM,iBAAiB,IAGH,IAAxBC,GAAOk6B,cAA8C,IAAxBl6B,GAAOk6B,eACT,IAAvBl6B,GAAO8b,QAAQ,KAAgB9b,GAAOyH,WAAW,IAAM,IAAO,6BAAgCzH,GAAOiP,oBAAoBhgC,MAAM,MAAY,GAAI+wB,GAAOgjB,wBAA0BhjB,GAAO4a,gBAAgB7qC,IAAI,QAAmD,IAAzCiwB,GAAOyK,iBAAiB/jB,cAAgE,IAA1CsZ,GAAOyK,iBAAiB9jB,gBAC3RoZ,EAAsB,GACtB,GAAM,iBAAiB,IAInC6hB,GAAmB,iBAQvB72C,SAAS0iE,iBAAiB,WAAYlrE,IAClC,GAAIwI,SAASg0E,eAAsD,UAArCh0E,SAASg0E,cAAcC,UAEjD,YADAz8E,EAAM08E,kBAGV,IAAI16C,EAAO,GACPf,EAAM,EACNlxB,EAAO,CAAC,KAAM,EAAG,IAAK,IAAK,IAAK,MAapC,OAZ4B,SAAxB,mBACAA,EAAO,CAAC,KAAM,IAAK,IAAM,IAAK,IAAK,MACnCiyB,EAAO,QAEiB,YAAxB,mBACAjyB,EAAO,CAAC,KAAM,IAAK,IAAK,KAAM,KAAM,OACpCiyB,EAAO,YAEiB,WAAxB,mBACAA,EAAO,UAEChiC,EAAMysC,IAAIi8B,eAElB,IAAK,IACDznC,EAAM,EACkB,cAApB,eACwB,aAAxB,iBAAqCuL,GAAoB,QAASz8B,EAAK,IAAMs6B,GAAO,QAASrI,EAAMf,EAAKlxB,EAAK,KAEzF,UAApB,eACwB,UAApB,cACAi2B,GAAa,GAEO,cAApB,cACAmH,GAAmB,YAAa,GAEZ,YAApB,cACAA,GAAmB,UAAW,IAGd,eAApB,eACAivB,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACgCphC,EAAT,SAAxB,iBAAuC,EAAU,EACzB,cAApB,eACwB,aAAxB,iBAAqCuL,GAAoB,SAAUz8B,EAAK,IAAMs6B,GAAO,SAAUrI,EAAMf,EAAKlxB,EAAK,KAE3F,UAApB,eACwB,UAApB,cACAi2B,GAAa,GAEO,cAApB,cACAmH,GAAmB,YAAa,GAEZ,YAApB,cACAA,GAAmB,UAAW,IAGd,eAApB,eACAivB,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACgCphC,EAAT,SAAxB,iBAAuC,EAAU,EACzB,cAApB,eACwB,aAAxB,iBAAqCuL,GAAoB,QAASz8B,EAAK,IAAMs6B,GAAO,QAASrI,EAAMf,EAAKlxB,EAAK,KAEzF,UAApB,eACwB,UAApB,cACAi2B,GAAa,GAEO,cAApB,cACAmH,GAAmB,YAAa,GAEZ,YAApB,cACAA,GAAmB,UAAW,IAGd,eAApB,eACAivB,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACgCphC,EAAT,SAAxB,iBAAuC,EAAU,GACzB,cAApB,eACwB,aAAxB,iBAAqCuL,GAAoB,SAAUz8B,EAAK,IAAMs6B,GAAO,SAAUrI,EAAMf,EAAKlxB,EAAK,KAE3F,UAApB,eACwB,UAApB,cACAi2B,GAAa,GAEO,cAApB,cACAmH,GAAmB,YAAa,GAEZ,YAApB,cACAA,GAAmB,UAAW,IAGd,eAApB,eACAivB,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACgCphC,EAAT,SAAxB,iBAAuC,EAAU,GACzB,cAApB,eACwB,aAAxB,iBAAqCuL,GAAoB,QAASz8B,EAAK,IAAMs6B,GAAO,QAASrI,EAAMf,EAAKlxB,EAAK,KAEzF,UAApB,eACwB,UAApB,cACAi2B,GAAa,GAEO,cAApB,cACAmH,GAAmB,YAAa,GAEZ,YAApB,cACAA,GAAmB,UAAW,IAGd,eAApB,eACAivB,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACuB,cAApB,cAA2D,YAAxB,kBACnC/2B,GAAmB,GAEC,eAApB,cAAoC7N,GAAOunB,mBAAqB,IAChEoX,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACuB,cAApB,cAA2D,YAAxB,kBACnC/2B,GAAmB,GAEC,eAApB,cAAiE,IAA7B7N,GAAOkC,aAAa,OACxDy8B,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACuB,cAApB,cAA2D,YAAxB,kBACnC/2B,GAAmB,GAEC,eAApB,cAAiE,IAA7B7N,GAAOkC,aAAa,OACxDy8B,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACuB,cAApB,cAA2D,YAAxB,kBACnC/2B,GAAmB,GAEC,eAApB,cAAiE,IAA7B7N,GAAOkC,aAAa,OACxDy8B,GAAiB,GACjBiG,GAAiB,IAErB,MACJ,IAAK,IACuB,cAApB,cAA2D,YAAxB,kBACnC/2B,GAAmB,GAEC,eAApB,cAAiE,IAA7B7N,GAAOkC,aAAa,OACxDy8B,GAAiB,IACjBiG,GAAiB,KAErB,MACJ,IAAK,IACDl6B,KACA,MACJ,IAAK,IACD0D,KACA,MACJ,IAAK,IAC6C,IAA1CpO,GAAOyK,iBAAiB9jB,eACxB89C,GAAW,8BAA0B7/D,GAAW,GAEP,IAAzCo7B,GAAOyK,iBAAiB/jB,cACxB+9C,GAAW,iBAAa7/D,GAAW,GAEvC,MACJ,IAAK,IACD2mC,KACA,MACJ,IAAK,IACDk5B,GAAW,YACX,MACJ,IAAK,IACDA,GAAW,eACX,MACJ,IAAK,IACDrS,KACA,MACJ,IAAK,IACDqS,GAAW,aACX,MACJ,IAAK,YACDliE,EAAM28E,iBACNrf,IAAmB,GACnB,MACJ,IAAK,aACDt9D,EAAM28E,iBACNrf,GAAkB,GAClB,MACJ,IAAK,UACDt9D,EAAM28E,iBACNrf,IAAmB,GAAG,GACtB,MACJ,IAAK,YACDt9D,EAAM28E,iBACNrf,GAAkB,GAAG,OAIjCwM,OAAOoB,iBAAiB,QAAQ,KAC5B,GAAI0R,SAASzc,KAAK7gC,SAAS,QAAS,CAChC,MAAMu9C,EAASr0E,SAASQ,cAAc,UACtC6zE,EAAOtkB,aAAa,MAAO,6DAC3B/vD,SAAS8oE,KAAKnoE,YAAY0zE,GAE9B,MAAMC,EAAMt0E,SAASC,eAAe,iBACpCq0E,IAAQA,EAAIn0E,YAAc,mBAAmB80B,GAAO06B,6GACpD3vD,SAASu0E,MAAQ,cAAgBt/C,GAAO06B,QACxC,MAAM6kB,EAAM,yBAA8BhU,aAAaC,QAAQ,iBACpC,KAAR+T,IAEfhU,aAAaiU,QACbjU,aAAa6B,QAAQ,eAAgBN,KAAKyS,IAC1CE,MAAM,iDZzvFsB,MAChC,MAAM7hB,EAAO7yD,SAASuqD,uBAAuB,qBAC7C,IAAK,IAAI1xD,EAAI,EAAGA,EAAIg6D,EAAK95D,OAAQF,IAAK,CAClC,MAAM+5D,EAAMC,EAAKh6D,GACXq4C,EAAIlxC,SAASQ,cAAc,KACjC0wC,EAAEu1B,UAAY,WACd,IAAIlmE,EAAOP,SAAS43D,eAAe,aACnC1mB,EAAEvwC,YAAYJ,GACd,IAWIi1D,EAXAyQ,EAAOjmE,SAASQ,cAAc,QAClCylE,EAAK95D,GAAK,cAActT,EAAI,IAC5BotE,EAAK9lE,YAAc80B,GAAOikB,gBAAgBrgD,EAAI,GAAK,GACnDq4C,EAAEvwC,YAAYslE,GACd1lE,EAAOP,SAAS43D,eAAe,aAC/B1mB,EAAEvwC,YAAYJ,GACd0lE,EAAOjmE,SAASQ,cAAc,QAC9BylE,EAAK95D,GAAK,WAAWtT,EAAI,IACzBotE,EAAK9lE,YAAc80B,GAAO+oB,qBAAqBnlD,EAAI,GAAK,GACxDq4C,EAAEvwC,YAAYslE,GACdrT,EAAIjyD,YAAYuwC,GAEhBskB,EAAMx1D,SAASQ,cAAc,UAC7Bg1D,EAAIiR,UAAY,wBAChBjR,EAAIr1D,YAAc,MAClBq1D,EAAImf,QAAU,IAAMlb,GAAsB5gE,EAAI,EAAG,IACjD+5D,EAAIjyD,YAAY60D,GAChBA,EAAMx1D,SAASQ,cAAc,UAC7Bg1D,EAAIiR,UAAY,uBAChBjR,EAAIr1D,YAAc,KAClBq1D,EAAImf,QAAU,IAAMlb,GAAsB5gE,EAAI,EAAG,GACjD+5D,EAAIjyD,YAAY60D,GAChBA,EAAMx1D,SAASQ,cAAc,UAC7Bg1D,EAAIiR,UAAY,yBAChBjR,EAAIr1D,YAAc,KAClBq1D,EAAImf,QAAU,IAAMlb,GAAsB5gE,EAAI,GAAI,GAClD+5D,EAAIjyD,YAAY60D,GAChBA,EAAMx1D,SAASQ,cAAc,UAC7Bg1D,EAAIiR,UAAY,0BAChBjR,EAAIr1D,YAAc,MAClBq1D,EAAIkN,iBAAiB,SAAS,IAAMjJ,GAAsB5gE,EAAI,GAAI,MAClE+5D,EAAIjyD,YAAY60D,GAChB5C,EAAI8P,iBAAiB,SAAS,IAAMtQ,GAAkBv5D,EAAI,OYmtF9D+7E,GZhtFwC,MACxC,MACMC,EAAQ50E,EAAe,0BAC7B,IAAK,IAAIpH,EAAI,EAAGA,EAAIjC,OAAO8U,KAAKupB,GAAO89B,oBAAoBh6D,OAAS,EAAGF,IAAK,CACxE,MAAM+5D,EAAMiiB,EAAMC,YAClB,IAAK,IAAI/6E,EAAI,EAAGA,GAJF,EAIkBA,IAAK,CACjC,MAAMg7E,EAAOniB,EAAIoiB,aACP,IAANj7E,EACAg7E,EAAK50E,YAAqB,IAANtH,EAAW,QAAU,WAAWA,KAE/CkB,GATC,IAUNg7E,EAAK50E,aAAsB,IAANtH,EAAWo8B,GAAO+oB,qBAAqBjkD,GAAKk7B,GAAO89B,mBAAmBl6D,GAAGkB,IAAI8O,WAClGksE,EAAKx8C,MAAM08C,UAAY,UAG/B,GAAU,IAANp8E,EACA,SACJ,IAAIk8E,EAAOniB,EAAIoiB,aACXxf,EAAMx1D,SAASQ,cAAc,UACjCg1D,EAAIiR,UAAY,WAChBjR,EAAIr1D,YAAc,OAClBq1D,EAAImf,QAAU,IAAM3hB,IAA0B,EAAMn6D,GACpDk8E,EAAKp0E,YAAY60D,GACjBuf,EAAOniB,EAAIoiB,aACXxf,EAAMx1D,SAASQ,cAAc,UAC7Bg1D,EAAIiR,UAAY,WAChBjR,EAAIr1D,YAAc,OAClBq1D,EAAImf,QAAU,IAAM3hB,IAA0B,EAAOn6D,GACrDk8E,EAAKp0E,YAAY60D,KYqrFrB0f,GACAzQ,YAAW,KAj3F6B,IAAU7kE,EAASy2D,EAAY6B,EAAG5B,EAk3FtEmM,KACAD,KACAnC,KACA3K,KACA98B,KACA21B,KACAiC,KACA+R,KACAD,KA13F8C1iE,OA+nFlB,EA/nF2By2D,OA+nFnB,EA/nFkCC,EA+nFlB,YACxD,IAAK,MAAMn1B,KAAOvqC,OAAO8U,KAAK,GACX,EAAQy1B,GAChB6zB,QAhoFJ,KAFgEkD,OA+nFvB,KA7nF9BA,EAAIC,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUv7D,GAAS,IAAMw7D,EAAKjC,EAAUkC,KAAKz7D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACpF,SAASg2D,EAAS17D,GAAS,IAAMw7D,EAAKjC,EAAiB,MAAEv5D,IAAW,MAAO0F,GAAK41D,EAAO51D,IACvF,SAAS81D,EAAKj8D,GAJlB,IAAeS,EAIaT,EAAOo8D,KAAON,EAAQ97D,EAAOS,QAJ1CA,EAIyDT,EAAOS,MAJhDA,aAAiBm7D,EAAIn7D,EAAQ,IAAIm7D,GAAE,SAAUE,GAAWA,EAAQr7D,OAIT47D,KAAKL,EAAWG,GAClGF,GAAMjC,EAAYA,EAAUx8D,MAAM8F,EAASy2D,GAAc,KAAKmC,WAs3F9D3G,OACD,QG53FHsjB,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUh7E,QAG3C,IAAID,EAAS+6E,EAAyBE,GAAY,CAGjDh7E,QAAS,IAOV,OAHAi7E,EAAoBD,GAAUj7E,EAAQA,EAAOC,QAAS+6E,GAG/Ch7E,EAAOC,QCnBf+6E,EAAoBlrE,EAAK9P,IACxB,IAAIm7E,EAASn7E,GAAUA,EAAOo7E,WAC7B,IAAMp7E,EAAgB,QACtB,IAAMA,EAEP,OADAg7E,EAAoB95C,EAAEi6C,EAAQ,CAAEl6E,EAAGk6E,IAC5BA,GCLRH,EAAoB95C,EAAI,CAACjhC,EAASo7E,KACjC,IAAI,IAAIxxC,KAAOwxC,EACXL,EAAoB3pE,EAAEgqE,EAAYxxC,KAASmxC,EAAoB3pE,EAAEpR,EAAS4pC,IAC5ErtC,OAAOiM,eAAexI,EAAS4pC,EAAK,CAAEjhC,YAAY,EAAMF,IAAK2yE,EAAWxxC,MCJ3EmxC,EAAoB3pE,EAAI,CAAC01B,EAAK+rC,IAASt2E,OAAOC,UAAUC,eAAeyB,KAAK4oC,EAAK+rC,GCCjFkI,EAAoB7zC,EAAKlnC,IACH,oBAAXq7E,QAA0BA,OAAOC,aAC1C/+E,OAAOiM,eAAexI,EAASq7E,OAAOC,YAAa,CAAE54E,MAAO,WAE7DnG,OAAOiM,eAAexI,EAAS,aAAc,CAAE0C,OAAO,KCHvDq4E,EAAoB,M","file":"bundle.js","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n","\"use strict\";\nconst patchSettings = ['log', 'info', 'error'];\nfor (const method of patchSettings) {\n    console[method] = new Proxy(console[method], {\n        apply(target, thisArg, args) {\n            addConsoleEntry(args, method);\n            return target.call(thisArg, ...args);\n        }\n    });\n}\nconst addConsoleEntry = (args, method) => {\n    var _a;\n    const logger = document.getElementById('testingLogger');\n    if (((_a = logger.lastChild) === null || _a === void 0 ? void 0 : _a.textContent) === args.join(' '))\n        return;\n    if (logger.childElementCount > 20)\n        logger.removeChild(logger.children[0]);\n    const text = document.createElement('p');\n    text.textContent = args.join(' ');\n    text.classList.add(method);\n    logger.appendChild(text);\n};\n","import padEnd from 'pad-end';\n\n// consider adding them together pointless, just return the larger one\n\nvar MAX_SIGNIFICANT_DIGITS = 17; // Highest value you can safely put here is Number.MAX_SAFE_INTEGER-MAX_SIGNIFICANT_DIGITS\n\nvar EXP_LIMIT = 9e15; // The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MAX = 308; // The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; // Tolerance which is used for Number conversion to compensate floating-point error.\n\nvar ROUND_TOLERANCE = 1e-10;\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}();\n\nvar D = function D(value) {\n  return value instanceof Decimal ? value : new Decimal(value);\n};\n\nvar ME = function ME(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent(mantissa, exponent);\n};\n\nvar ME_NN = function ME_NN(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n};\n\nfunction affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n  var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n  return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10() / priceRatio.log10());\n}\n\nfunction sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n  return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n}\n\nfunction affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n  // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n  // where a is actualStart, d is priceAdd and S is resourcesAvailable\n  // then floor it and you're done!\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n  var b = actualStart.sub(priceAdd.div(2));\n  var b2 = b.pow(2);\n  return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n}\n\nfunction sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n  return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n}\n\nfunction efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n  return cost.div(currentRpS).add(cost.div(deltaRpS));\n}\n/**\n * The Decimal's value is simply mantissa * 10^exponent.\n */\n\n\nvar Decimal =\n/** @class */\nfunction () {\n  function Decimal(value) {\n    /**\n     * A number (double) with absolute value between [1, 10) OR exactly 0.\n     * If mantissa is ever 10 or greater, it should be normalized\n     * (divide by 10 and add 1 to exponent until it is less than 10,\n     * or multiply by 10 and subtract 1 from exponent until it is 1 or greater).\n     * Infinity/-Infinity/NaN will cause bad things to happen.\n     */\n    this.mantissa = NaN;\n    /**\n     * A number (integer) between -EXP_LIMIT and EXP_LIMIT.\n     * Non-integral/out of bounds will cause bad things to happen.\n     */\n\n    this.exponent = NaN;\n\n    if (value === undefined) {\n      this.m = 0;\n      this.e = 0;\n    } else if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else {\n      this.fromString(value);\n    }\n  }\n\n  Object.defineProperty(Decimal.prototype, \"m\", {\n    get: function get() {\n      return this.mantissa;\n    },\n    set: function set(value) {\n      this.mantissa = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"e\", {\n    get: function get() {\n      return this.exponent;\n    },\n    set: function set(value) {\n      this.exponent = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"s\", {\n    get: function get() {\n      return this.sign();\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.e = 0;\n        this.m = 0;\n        return;\n      }\n\n      if (this.sgn() !== value) {\n        this.m = -this.m;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Decimal.fromMantissaExponent = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent(mantissa, exponent);\n  };\n\n  Decimal.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n  };\n\n  Decimal.fromDecimal = function (value) {\n    return new Decimal().fromDecimal(value);\n  };\n\n  Decimal.fromNumber = function (value) {\n    return new Decimal().fromNumber(value);\n  };\n\n  Decimal.fromString = function (value) {\n    return new Decimal().fromString(value);\n  };\n\n  Decimal.fromValue = function (value) {\n    return new Decimal().fromValue(value);\n  };\n\n  Decimal.fromValue_noAlloc = function (value) {\n    return value instanceof Decimal ? value : new Decimal(value);\n  };\n\n  Decimal.abs = function (value) {\n    return D(value).abs();\n  };\n\n  Decimal.neg = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negate = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negated = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.sign = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.sgn = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.round = function (value) {\n    return D(value).round();\n  };\n\n  Decimal.floor = function (value) {\n    return D(value).floor();\n  };\n\n  Decimal.ceil = function (value) {\n    return D(value).ceil();\n  };\n\n  Decimal.trunc = function (value) {\n    return D(value).trunc();\n  };\n\n  Decimal.add = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.plus = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.sub = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.subtract = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.minus = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.mul = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.multiply = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.times = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.div = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.divide = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.recip = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocal = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocate = function (value) {\n    return D(value).reciprocate();\n  };\n\n  Decimal.cmp = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.compare = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.eq = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.equals = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.neq = function (value, other) {\n    return D(value).neq(other);\n  };\n\n  Decimal.notEquals = function (value, other) {\n    return D(value).notEquals(other);\n  };\n\n  Decimal.lt = function (value, other) {\n    return D(value).lt(other);\n  };\n\n  Decimal.lte = function (value, other) {\n    return D(value).lte(other);\n  };\n\n  Decimal.gt = function (value, other) {\n    return D(value).gt(other);\n  };\n\n  Decimal.gte = function (value, other) {\n    return D(value).gte(other);\n  };\n\n  Decimal.max = function (value, other) {\n    return D(value).max(other);\n  };\n\n  Decimal.min = function (value, other) {\n    return D(value).min(other);\n  };\n\n  Decimal.clamp = function (value, min, max) {\n    return D(value).clamp(min, max);\n  };\n\n  Decimal.clampMin = function (value, min) {\n    return D(value).clampMin(min);\n  };\n\n  Decimal.clampMax = function (value, max) {\n    return D(value).clampMax(max);\n  };\n\n  Decimal.cmp_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.compare_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.eq_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.equals_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.neq_tolerance = function (value, other, tolerance) {\n    return D(value).neq_tolerance(other, tolerance);\n  };\n\n  Decimal.notEquals_tolerance = function (value, other, tolerance) {\n    return D(value).notEquals_tolerance(other, tolerance);\n  };\n\n  Decimal.lt_tolerance = function (value, other, tolerance) {\n    return D(value).lt_tolerance(other, tolerance);\n  };\n\n  Decimal.lte_tolerance = function (value, other, tolerance) {\n    return D(value).lte_tolerance(other, tolerance);\n  };\n\n  Decimal.gt_tolerance = function (value, other, tolerance) {\n    return D(value).gt_tolerance(other, tolerance);\n  };\n\n  Decimal.gte_tolerance = function (value, other, tolerance) {\n    return D(value).gte_tolerance(other, tolerance);\n  };\n\n  Decimal.log10 = function (value) {\n    return D(value).log10();\n  };\n\n  Decimal.absLog10 = function (value) {\n    return D(value).absLog10();\n  };\n\n  Decimal.pLog10 = function (value) {\n    return D(value).pLog10();\n  };\n\n  Decimal.log = function (value, base) {\n    return D(value).log(base);\n  };\n\n  Decimal.log2 = function (value) {\n    return D(value).log2();\n  };\n\n  Decimal.ln = function (value) {\n    return D(value).ln();\n  };\n\n  Decimal.logarithm = function (value, base) {\n    return D(value).logarithm(base);\n  };\n\n  Decimal.pow10 = function (value) {\n    if (Number.isInteger(value)) {\n      return ME_NN(1, value);\n    }\n\n    return ME(Math.pow(10, value % 1), Math.trunc(value));\n  };\n\n  Decimal.pow = function (value, other) {\n    // Fast track: 10^integer\n    if (typeof value === \"number\" && value === 10 && typeof other === \"number\" && Number.isInteger(other)) {\n      return ME_NN(1, other);\n    }\n\n    return D(value).pow(other);\n  };\n\n  Decimal.exp = function (value) {\n    return D(value).exp();\n  };\n\n  Decimal.sqr = function (value) {\n    return D(value).sqr();\n  };\n\n  Decimal.sqrt = function (value) {\n    return D(value).sqrt();\n  };\n\n  Decimal.cube = function (value) {\n    return D(value).cube();\n  };\n\n  Decimal.cbrt = function (value) {\n    return D(value).cbrt();\n  };\n\n  Decimal.dp = function (value) {\n    return D(value).dp();\n  };\n\n  Decimal.decimalPlaces = function (value) {\n    return D(value).dp();\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something\n   * with exponentially increasing cost each purchase (start at priceStart,\n   * multiply by priceRatio, already own currentOwned), how much of it can you buy?\n   * Adapted from Trimps source code.\n   */\n\n\n  Decimal.affordGeometricSeries = function (resourcesAvailable, priceStart, priceRatio, currentOwned) {\n    return affordGeometricSeries(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it multiplies by priceRatio each purchase?\n   */\n\n\n  Decimal.sumGeometricSeries = function (numItems, priceStart, priceRatio, currentOwned) {\n    return sumGeometricSeries(numItems, D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\n   * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\n   * how much of it can you buy?\n   */\n\n\n  Decimal.affordArithmeticSeries = function (resourcesAvailable, priceStart, priceAdd, currentOwned) {\n    return affordArithmeticSeries(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it adds priceAdd each purchase?\n   * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\n   */\n\n\n  Decimal.sumArithmeticSeries = function (numItems, priceStart, priceAdd, currentOwned) {\n    return sumArithmeticSeries(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\n   * the lowest efficiency score is the better one to purchase.\n   * From Frozen Cookies:\n   * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\n   */\n\n\n  Decimal.efficiencyOfPurchase = function (cost, currentRpS, deltaRpS) {\n    return efficiencyOfPurchase(D(cost), D(currentRpS), D(deltaRpS));\n  };\n\n  Decimal.randomDecimalForTesting = function (absMaxExponent) {\n    // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n    // 5% of the time, have a mantissa of 0\n    if (Math.random() * 20 < 1) {\n      return ME_NN(0, 0);\n    }\n\n    var mantissa = Math.random() * 10; // 10% of the time, have a simple mantissa\n\n    if (Math.random() * 10 < 1) {\n      mantissa = Math.round(mantissa);\n    }\n\n    mantissa *= Math.sign(Math.random() * 2 - 1);\n    var exponent = Math.floor(Math.random() * absMaxExponent * 2) - absMaxExponent;\n    return ME(mantissa, exponent);\n    /*\n      Examples:\n            randomly test pow:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var pow = Math.random()*20-10;\n      if (Math.random()*2 < 1) { pow = Math.round(pow); }\n      var result = Decimal.pow(a, pow);\n      [\"(\" + a.toString() + \")^\" + pow.toString(), result.toString()]\n            randomly test add:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var b = Decimal.randomDecimalForTesting(17);\n      var c = a.mul(b);\n      var result = a.add(c);\n      [a.toString() + \"+\" + c.toString(), result.toString()]\n    */\n  };\n  /**\n   * When mantissa is very denormalized, use this to normalize much faster.\n   */\n\n\n  Decimal.prototype.normalize = function () {\n    if (this.m >= 1 && this.m < 10) {\n      return this;\n    } // TODO: I'm worried about mantissa being negative 0 here which is why I set it again, but it may never matter\n\n\n    if (this.m === 0) {\n      this.m = 0;\n      this.e = 0;\n      return this;\n    }\n\n    var tempExponent = Math.floor(Math.log10(Math.abs(this.m)));\n    this.m = tempExponent === NUMBER_EXP_MIN ? this.m * 10 / 1e-323 : this.m / powerOf10(tempExponent);\n    this.e += tempExponent;\n    return this;\n  };\n\n  Decimal.prototype.fromMantissaExponent = function (mantissa, exponent) {\n    // SAFETY: don't let in non-numbers\n    if (!isFinite(mantissa) || !isFinite(exponent)) {\n      mantissa = Number.NaN;\n      exponent = Number.NaN;\n      return this;\n    }\n\n    this.m = mantissa;\n    this.e = exponent; // Non-normalized mantissas can easily get here, so this is mandatory.\n\n    this.normalize();\n    return this;\n  };\n  /**\n   * Well, you know what you're doing!\n   */\n\n\n  Decimal.prototype.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    this.m = mantissa;\n    this.e = exponent;\n    return this;\n  };\n\n  Decimal.prototype.fromDecimal = function (value) {\n    this.m = value.m;\n    this.e = value.e;\n    return this;\n  };\n\n  Decimal.prototype.fromNumber = function (value) {\n    // SAFETY: Handle Infinity and NaN in a somewhat meaningful way.\n    if (isNaN(value)) {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else if (value === Number.POSITIVE_INFINITY) {\n      this.m = 1;\n      this.e = EXP_LIMIT;\n    } else if (value === Number.NEGATIVE_INFINITY) {\n      this.m = -1;\n      this.e = EXP_LIMIT;\n    } else if (value === 0) {\n      this.m = 0;\n      this.e = 0;\n    } else {\n      this.e = Math.floor(Math.log10(Math.abs(value))); // SAFETY: handle 5e-324, -5e-324 separately\n\n      this.m = this.e === NUMBER_EXP_MIN ? value * 10 / 1e-323 : value / powerOf10(this.e); // SAFETY: Prevent weirdness.\n\n      this.normalize();\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromString = function (value) {\n    if (value.indexOf(\"e\") !== -1) {\n      var parts = value.split(\"e\");\n      this.m = parseFloat(parts[0]);\n      this.e = parseFloat(parts[1]); // Non-normalized mantissas can easily get here, so this is mandatory.\n\n      this.normalize();\n    } else if (value === \"NaN\") {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else {\n      this.fromNumber(parseFloat(value));\n\n      if (isNaN(this.m)) {\n        throw Error(\"[DecimalError] Invalid argument: \" + value);\n      }\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromValue = function (value) {\n    if (value instanceof Decimal) {\n      return this.fromDecimal(value);\n    }\n\n    if (typeof value === \"number\") {\n      return this.fromNumber(value);\n    }\n\n    if (typeof value === \"string\") {\n      return this.fromString(value);\n    }\n\n    this.m = 0;\n    this.e = 0;\n    return this;\n  };\n\n  Decimal.prototype.toNumber = function () {\n    // Problem: new Decimal(116).toNumber() returns 115.99999999999999.\n    // TODO: How to fix in general case? It's clear that if toNumber() is\n    //  VERY close to an integer, we want exactly the integer.\n    //  But it's not clear how to specifically write that.\n    //  So I'll just settle with 'exponent >= 0 and difference between rounded\n    //  and not rounded < 1e-9' as a quick fix.\n    // var result = this.m*Math.pow(10, this.e);\n    if (!isFinite(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.e > NUMBER_EXP_MAX) {\n      return this.m > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    }\n\n    if (this.e < NUMBER_EXP_MIN) {\n      return 0;\n    } // SAFETY: again, handle 5e-324, -5e-324 separately\n\n\n    if (this.e === NUMBER_EXP_MIN) {\n      return this.m > 0 ? 5e-324 : -5e-324;\n    }\n\n    var result = this.m * powerOf10(this.e);\n\n    if (!isFinite(result) || this.e < 0) {\n      return result;\n    }\n\n    var resultRounded = Math.round(result);\n\n    if (Math.abs(resultRounded - result) < ROUND_TOLERANCE) {\n      return resultRounded;\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.mantissaWithDecimalPlaces = function (places) {\n    // https://stackoverflow.com/a/37425022\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.m === 0) {\n      return 0;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.ceil(Math.log10(Math.abs(this.m)));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n  };\n\n  Decimal.prototype.toString = function () {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\";\n    }\n\n    if (this.e < 21 && this.e > -7) {\n      return this.toNumber().toString();\n    }\n\n    return this.m + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toExponential = function (places) {\n    // https://stackoverflow.com/a/37425022\n    // TODO: Some unfixed cases:\n    //  new Decimal(\"1.2345e-999\").toExponential()\n    //  \"1.23450000000000015e-999\"\n    //  new Decimal(\"1e-999\").toExponential()\n    //  \"1.000000000000000000e-999\"\n    // TBH I'm tempted to just say it's a feature.\n    // If you're doing pretty formatting then why don't you know how many decimal places you want...?\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\") + \"e+0\";\n    } // two cases:\n    // 1) exponent is < 308 and > -324: use basic toFixed\n    // 2) everything else: we have to do it ourselves!\n\n\n    if (this.e > NUMBER_EXP_MIN && this.e < NUMBER_EXP_MAX) {\n      return this.toNumber().toExponential(places);\n    }\n\n    if (!isFinite(places)) {\n      places = MAX_SIGNIFICANT_DIGITS;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.max(1, Math.ceil(Math.log10(Math.abs(this.m))));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return rounded.toFixed(Math.max(len - numDigits, 0)) + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toFixed = function (places) {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    } // two cases:\n    // 1) exponent is 17 or greater: just print out mantissa with the appropriate number of zeroes after it\n    // 2) exponent is 16 or less: use basic toFixed\n\n\n    if (this.e >= MAX_SIGNIFICANT_DIGITS) {\n      return this.m.toString().replace(\".\", \"\").padEnd(this.e + 1, \"0\") + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    }\n\n    return this.toNumber().toFixed(places);\n  };\n\n  Decimal.prototype.toPrecision = function (places) {\n    if (this.e <= -7) {\n      return this.toExponential(places - 1);\n    }\n\n    if (places > this.e) {\n      return this.toFixed(places - this.e - 1);\n    }\n\n    return this.toExponential(places - 1);\n  };\n\n  Decimal.prototype.valueOf = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toStringWithDecimalPlaces = function (places) {\n    return this.toExponential(places);\n  };\n\n  Decimal.prototype.abs = function () {\n    return ME_NN(Math.abs(this.m), this.e);\n  };\n\n  Decimal.prototype.neg = function () {\n    return ME_NN(-this.m, this.e);\n  };\n\n  Decimal.prototype.negate = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.negated = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.sign = function () {\n    return Math.sign(this.m);\n  };\n\n  Decimal.prototype.sgn = function () {\n    return this.sign();\n  };\n\n  Decimal.prototype.round = function () {\n    if (this.e < -1) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.round(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.floor = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) >= 0 ? new Decimal(0) : new Decimal(-1);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.floor(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.ceil = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) > 0 ? new Decimal(1) : new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.ceil(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.trunc = function () {\n    if (this.e < 0) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.trunc(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.add = function (value) {\n    // figure out which is bigger, shrink the mantissa of the smaller\n    // by the difference in exponents, add mantissas, normalize and return\n    // TODO: Optimizations and simplification may be possible, see https://github.com/Patashu/break_infinity.js/issues/8\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal;\n    }\n\n    if (decimal.m === 0) {\n      return this;\n    }\n\n    var biggerDecimal;\n    var smallerDecimal;\n\n    if (this.e >= decimal.e) {\n      biggerDecimal = this;\n      smallerDecimal = decimal;\n    } else {\n      biggerDecimal = decimal;\n      smallerDecimal = this;\n    }\n\n    if (biggerDecimal.e - smallerDecimal.e > MAX_SIGNIFICANT_DIGITS) {\n      return biggerDecimal;\n    } // Have to do this because adding numbers that were once integers but scaled down is imprecise.\n    // Example: 299 + 18\n\n\n    return ME(Math.round(1e14 * biggerDecimal.m + 1e14 * smallerDecimal.m * powerOf10(smallerDecimal.e - biggerDecimal.e)), biggerDecimal.e - 14);\n  };\n\n  Decimal.prototype.plus = function (value) {\n    return this.add(value);\n  };\n\n  Decimal.prototype.sub = function (value) {\n    return this.add(D(value).neg());\n  };\n\n  Decimal.prototype.subtract = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.minus = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.mul = function (value) {\n    // This version avoids an extra conversion to Decimal, if possible. Since the\n    // mantissa is -10...10, any number short of MAX/10 can be safely multiplied in\n    if (typeof value === \"number\") {\n      if (value < 1e307 && value > -1e307) {\n        return ME(this.m * value, this.e);\n      } // If the value is larger than 1e307, we can divide that out of mantissa (since it's\n      // greater than 1, it won't underflow)\n\n\n      return ME(this.m * 1e-307 * value, this.e + 307);\n    }\n\n    var decimal = typeof value === \"string\" ? new Decimal(value) : value;\n    return ME(this.m * decimal.m, this.e + decimal.e);\n  };\n\n  Decimal.prototype.multiply = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.times = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.div = function (value) {\n    return this.mul(D(value).recip());\n  };\n\n  Decimal.prototype.divide = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.divideBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.dividedBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.recip = function () {\n    return ME(1 / this.m, -this.e);\n  };\n\n  Decimal.prototype.reciprocal = function () {\n    return this.recip();\n  };\n\n  Decimal.prototype.reciprocate = function () {\n    return this.recip();\n  };\n  /**\n   * -1 for less than value, 0 for equals value, 1 for greater than value\n   */\n\n\n  Decimal.prototype.cmp = function (value) {\n    var decimal = D(value); // TODO: sign(a-b) might be better? https://github.com/Patashu/break_infinity.js/issues/12\n\n    /*\n    from smallest to largest:\n          -3e100\n    -1e100\n    -3e99\n    -1e99\n    -3e0\n    -1e0\n    -3e-99\n    -1e-99\n    -3e-100\n    -1e-100\n    0\n    1e-100\n    3e-100\n    1e-99\n    3e-99\n    1e0\n    3e0\n    1e99\n    3e99\n    1e100\n    3e100\n          */\n\n    if (this.m === 0) {\n      if (decimal.m === 0) {\n        return 0;\n      }\n\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (decimal.m > 0) {\n        return -1;\n      }\n    }\n\n    if (decimal.m === 0) {\n      if (this.m < 0) {\n        return -1;\n      }\n\n      if (this.m > 0) {\n        return 1;\n      }\n    }\n\n    if (this.m > 0) {\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (this.e > decimal.e) {\n        return 1;\n      }\n\n      if (this.e < decimal.e) {\n        return -1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    if (this.m < 0) {\n      if (decimal.m > 0) {\n        return -1;\n      }\n\n      if (this.e > decimal.e) {\n        return -1;\n      }\n\n      if (this.e < decimal.e) {\n        return 1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    throw Error(\"Unreachable code\");\n  };\n\n  Decimal.prototype.compare = function (value) {\n    return this.cmp(value);\n  };\n\n  Decimal.prototype.eq = function (value) {\n    var decimal = D(value);\n    return this.e === decimal.e && this.m === decimal.m;\n  };\n\n  Decimal.prototype.equals = function (value) {\n    return this.eq(value);\n  };\n\n  Decimal.prototype.neq = function (value) {\n    return !this.eq(value);\n  };\n\n  Decimal.prototype.notEquals = function (value) {\n    return this.neq(value);\n  };\n\n  Decimal.prototype.lt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m > 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m <= 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m < decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m > 0 && this.e < decimal.e;\n    }\n\n    return decimal.m > 0 || this.e > decimal.e;\n  };\n\n  Decimal.prototype.lte = function (value) {\n    return !this.gt(value);\n  };\n\n  Decimal.prototype.gt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m < 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m > 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m > decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m < 0 || this.e > decimal.e;\n    }\n\n    return decimal.m < 0 && this.e < decimal.e;\n  };\n\n  Decimal.prototype.gte = function (value) {\n    return !this.lt(value);\n  };\n\n  Decimal.prototype.max = function (value) {\n    var decimal = D(value);\n    return this.lt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.min = function (value) {\n    var decimal = D(value);\n    return this.gt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.clamp = function (min, max) {\n    return this.max(min).min(max);\n  };\n\n  Decimal.prototype.clampMin = function (min) {\n    return this.max(min);\n  };\n\n  Decimal.prototype.clampMax = function (max) {\n    return this.min(max);\n  };\n\n  Decimal.prototype.cmp_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n  };\n\n  Decimal.prototype.compare_tolerance = function (value, tolerance) {\n    return this.cmp_tolerance(value, tolerance);\n  };\n  /**\n   * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\n   * For example, if you put in 1e-9, then any number closer to the\n   * larger number than (larger number)*1e-9 will be considered equal.\n   */\n\n\n  Decimal.prototype.eq_tolerance = function (value, tolerance) {\n    var decimal = D(value); // https://stackoverflow.com/a/33024979\n    // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n    return Decimal.lte(this.sub(decimal).abs(), Decimal.max(this.abs(), decimal.abs()).mul(tolerance));\n  };\n\n  Decimal.prototype.equals_tolerance = function (value, tolerance) {\n    return this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.neq_tolerance = function (value, tolerance) {\n    return !this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.notEquals_tolerance = function (value, tolerance) {\n    return this.neq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.lt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n  };\n\n  Decimal.prototype.lte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n  };\n\n  Decimal.prototype.gt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n  };\n\n  Decimal.prototype.gte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n  };\n\n  Decimal.prototype.log10 = function () {\n    return this.e + Math.log10(this.m);\n  };\n\n  Decimal.prototype.absLog10 = function () {\n    return this.e + Math.log10(Math.abs(this.m));\n  };\n\n  Decimal.prototype.pLog10 = function () {\n    return this.m <= 0 || this.e < 0 ? 0 : this.log10();\n  };\n\n  Decimal.prototype.log = function (base) {\n    // UN-SAFETY: Most incremental game cases are log(number := 1 or greater, base := 2 or greater).\n    // We assume this to be true and thus only need to return a number, not a Decimal,\n    return Math.LN10 / Math.log(base) * this.log10();\n  };\n\n  Decimal.prototype.log2 = function () {\n    return 3.32192809488736234787 * this.log10();\n  };\n\n  Decimal.prototype.ln = function () {\n    return 2.30258509299404568402 * this.log10();\n  };\n\n  Decimal.prototype.logarithm = function (base) {\n    return this.log(base);\n  };\n\n  Decimal.prototype.pow = function (value) {\n    // UN-SAFETY: Accuracy not guaranteed beyond ~9~11 decimal places.\n    // TODO: Decimal.pow(new Decimal(0.5), 0); or Decimal.pow(new Decimal(1), -1);\n    //  makes an exponent of -0! Is a negative zero ever a problem?\n    var numberValue = value instanceof Decimal ? value.toNumber() : value; // TODO: Fast track seems about neutral for performance.\n    //  It might become faster if an integer pow is implemented,\n    //  or it might not be worth doing (see https://github.com/Patashu/break_infinity.js/issues/4 )\n    // Fast track: If (this.e*value) is an integer and mantissa^value\n    // fits in a Number, we can do a very fast method.\n\n    var temp = this.e * numberValue;\n    var newMantissa;\n\n    if (Number.isSafeInteger(temp)) {\n      newMantissa = Math.pow(this.m, numberValue);\n\n      if (isFinite(newMantissa) && newMantissa !== 0) {\n        return ME(newMantissa, temp);\n      }\n    } // Same speed and usually more accurate.\n\n\n    var newExponent = Math.trunc(temp);\n    var residue = temp - newExponent;\n    newMantissa = Math.pow(10, numberValue * Math.log10(this.m) + residue);\n\n    if (isFinite(newMantissa) && newMantissa !== 0) {\n      return ME(newMantissa, newExponent);\n    } // return Decimal.exp(value*this.ln());\n    // UN-SAFETY: This should return NaN when mantissa is negative and value is non-integer.\n\n\n    var result = Decimal.pow10(numberValue * this.absLog10()); // this is 2x faster and gives same values AFAIK\n\n    if (this.sign() === -1 && numberValue % 2 === 1) {\n      return result.neg();\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.pow_base = function (value) {\n    return D(value).pow(this);\n  };\n\n  Decimal.prototype.factorial = function () {\n    // Using Stirling's Approximation.\n    // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\n    var n = this.toNumber() + 1;\n    return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\n  };\n\n  Decimal.prototype.exp = function () {\n    var x = this.toNumber(); // Fast track: if -706 < this < 709, we can use regular exp.\n\n    if (-706 < x && x < 709) {\n      return Decimal.fromNumber(Math.exp(x));\n    }\n\n    return Decimal.pow(Math.E, x);\n  };\n\n  Decimal.prototype.sqr = function () {\n    return ME(Math.pow(this.m, 2), this.e * 2);\n  };\n\n  Decimal.prototype.sqrt = function () {\n    if (this.m < 0) {\n      return new Decimal(Number.NaN);\n    }\n\n    if (this.e % 2 !== 0) {\n      return ME(Math.sqrt(this.m) * 3.16227766016838, Math.floor(this.e / 2));\n    } // Mod of a negative number is negative, so != means '1 or -1'\n\n\n    return ME(Math.sqrt(this.m), Math.floor(this.e / 2));\n  };\n\n  Decimal.prototype.cube = function () {\n    return ME(Math.pow(this.m, 3), this.e * 3);\n  };\n\n  Decimal.prototype.cbrt = function () {\n    var sign = 1;\n    var mantissa = this.m;\n\n    if (mantissa < 0) {\n      sign = -1;\n      mantissa = -mantissa;\n    }\n\n    var newMantissa = sign * Math.pow(mantissa, 1 / 3);\n    var mod = this.e % 3;\n\n    if (mod === 1 || mod === -1) {\n      return ME(newMantissa * 2.1544346900318837, Math.floor(this.e / 3));\n    }\n\n    if (mod !== 0) {\n      return ME(newMantissa * 4.6415888336127789, Math.floor(this.e / 3));\n    } // mod != 0 at this point means 'mod == 2 || mod == -2'\n\n\n    return ME(newMantissa, Math.floor(this.e / 3));\n  }; // Some hyperbolic trig functions that happen to be easy\n\n\n  Decimal.prototype.sinh = function () {\n    return this.exp().sub(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.cosh = function () {\n    return this.exp().add(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.tanh = function () {\n    return this.sinh().div(this.cosh());\n  };\n\n  Decimal.prototype.asinh = function () {\n    return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n  };\n\n  Decimal.prototype.acosh = function () {\n    return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n  };\n\n  Decimal.prototype.atanh = function () {\n    if (this.abs().gte(1)) {\n      return Number.NaN;\n    }\n\n    return Decimal.ln(this.add(1).div(new Decimal(1).sub(this))) / 2;\n  };\n  /**\n   * Joke function from Realm Grinder\n   */\n\n\n  Decimal.prototype.ascensionPenalty = function (ascensions) {\n    if (ascensions === 0) {\n      return this;\n    }\n\n    return this.pow(Math.pow(10, -ascensions));\n  };\n  /**\n   * Joke function from Cookie Clicker. It's 'egg'\n   */\n\n\n  Decimal.prototype.egg = function () {\n    return this.add(9);\n  };\n\n  Decimal.prototype.lessThanOrEqualTo = function (other) {\n    return this.cmp(other) < 1;\n  };\n\n  Decimal.prototype.lessThan = function (other) {\n    return this.cmp(other) < 0;\n  };\n\n  Decimal.prototype.greaterThanOrEqualTo = function (other) {\n    return this.cmp(other) > -1;\n  };\n\n  Decimal.prototype.greaterThan = function (other) {\n    return this.cmp(other) > 0;\n  };\n\n  Decimal.prototype.decimalPlaces = function () {\n    return this.dp();\n  };\n\n  Decimal.prototype.dp = function () {\n    if (!isFinite(this.mantissa)) {\n      return NaN;\n    }\n\n    if (this.exponent >= MAX_SIGNIFICANT_DIGITS) {\n      return 0;\n    }\n\n    var mantissa = this.mantissa;\n    var places = -this.exponent;\n    var e = 1;\n\n    while (Math.abs(Math.round(mantissa * e) / e - mantissa) > ROUND_TOLERANCE) {\n      e *= 10;\n      places++;\n    }\n\n    return places > 0 ? places : 0;\n  };\n\n  Object.defineProperty(Decimal, \"MAX_VALUE\", {\n    get: function get() {\n      return MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"MIN_VALUE\", {\n    get: function get() {\n      return MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MAX_VALUE\", {\n    get: function get() {\n      return NUMBER_MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MIN_VALUE\", {\n    get: function get() {\n      return NUMBER_MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Decimal;\n}();\nvar MAX_VALUE = ME_NN(1, EXP_LIMIT);\nvar MIN_VALUE = ME_NN(1, -EXP_LIMIT);\nvar NUMBER_MAX_VALUE = D(Number.MAX_VALUE);\nvar NUMBER_MIN_VALUE = D(Number.MIN_VALUE);\n\nexport default Decimal;\n","import Decimal from 'break_infinity.js';\nexport const isDecimal = (o) => o instanceof Decimal ||\n    (typeof o === 'object' &&\n        o !== null &&\n        Object.keys(o).length === 2 &&\n        'mantissa' in o &&\n        'exponent' in o);\nexport const smallestInc = (x = 0) => {\n    if (x <= Number.MAX_SAFE_INTEGER) {\n        return 1;\n    }\n    else {\n        return Math.pow(2, Math.ceil(Math.log2(x) - 53));\n    }\n};\nexport const sumContents = (array) => {\n    array = Array.isArray(array)\n        ? array\n        : Object.values(array);\n    return array.reduce((a, b) => a + b, 0);\n};\nexport const productContents = (array) => array.reduce((a, b) => a * b);\nexport const sortWithIndeces = (toSort) => {\n    return Array\n        .from([...toSort.keys()])\n        .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]));\n};\nexport const getElementById = (id) => document.getElementById(id);\nexport const stripIndents = (temp, ...args) => {\n    var _a;\n    const s = temp.raw;\n    let f = '';\n    for (let i = 0; i < s.length; i++) {\n        f += `${s[i].replace(/\\n +/g, '\\n')}${(_a = args.shift()) !== null && _a !== void 0 ? _a : ''}`;\n    }\n    return f.trim();\n};\n","import Decimal from 'break_infinity.js';\nexport const Globals = {\n    runediv: [1.5, 2, 3, 5, 8],\n    runeexpbase: [1, 4, 9, 16, 1000],\n    upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\n        2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\n        1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\n        0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\n        3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\n        12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\n        1e3, 1e6, 1e9, 1e12, 1e15],\n    crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\n    crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\n    researchBaseCosts: [1e200,\n        1, 1, 1, 1, 1,\n        1, 1e2, 1e4, 1e6, 1e8,\n        2, 2e2, 2e4, 2e6, 2e8,\n        4e4, 4e8, 10, 1e5, 1e9,\n        100, 100, 1e4, 2e3, 2e5,\n        40, 200, 50, 5000, 20000000,\n        777, 7777, 50000, 500000, 5000000,\n        2e3, 2e6, 2e9, 1e5, 1e9,\n        1, 1, 5, 25, 125,\n        2, 5, 320, 1280, 2.5e9,\n        10, 2e3, 4e5, 8e7, 2e9,\n        5, 400, 1e4, 3e6, 9e8,\n        100, 2500, 100, 2000, 2e5,\n        1, 20, 3e3, 4e5, 5e7,\n        10, 40, 160, 1000, 10000,\n        4e9, 7e9, 1e10, 1.2e10, 1.5e10,\n        1e12, 1e13, 3e12, 2e13, 2e13,\n        2e14, 6e14, 2e15, 6e15, 2e16,\n        1e16, 2e16, 2e17, 4e17, 1e18,\n        1e13, 1e14, 1e15, 7.777e18, 7.777e20,\n        1e16, 3e16, 1e17, 3e17, 1e20,\n        1e18, 3e18, 1e19, 3e19, 1e20,\n        1e20, 2e20, 4e20, 8e20, 1e21,\n        2e21, 4e21, 8e21, 2e22, 4e22,\n        3.2e21, 2e23, 4e23, 1e21, 7.777e32,\n        5e8, 5e12, 5e16, 5e20, 5e24,\n        1e25, 2e25, 4e25, 8e25, 1e26,\n        4e26, 8e26, 1e27, 2e27, 1e28,\n        5e9, 5e15, 5e21, 5e27, 1e28,\n        1e29, 2e29, 4e29, 8e29, 1e27,\n        2e30, 4e30, 8e30, 1e31, 2e31,\n        5e31, 1e32, 2e32, 4e32, 8e32,\n        1e33, 2e33, 4e33, 8e33, 1e34,\n        3e34, 1e35, 3e35, 6e35, 1e36,\n        3e36, 1e37, 3e37, 1e38, 3e38,\n        1e39, 3e39, 1e40, 3e40, 1e50,\n        3e41, 1e42, 3e42, 6e42, 1e43,\n        3e43, 1e44, 3e44, 1e45, 3e45,\n        2e46, 6e46, 2e47, 6e47, 1e64,\n        6e48, 2e49, 1e50, 1e51, 4e56\n    ],\n    researchMaxLevels: [0, 1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10,\n        10, 10, 1, 1, 1,\n        25, 25, 25, 20, 20,\n        10, 10, 10, 10, 10,\n        12, 12, 10, 10, 10,\n        10, 10, 10, 1, 1,\n        1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        20, 20, 20, 20, 20,\n        1, 5, 4, 5, 5,\n        10, 10, 10, 10, 10,\n        1, 1, 1, 1, 1,\n        10, 50, 50, 50, 50,\n        10, 1, 20, 20, 20,\n        20, 20, 20, 20, 10,\n        20, 20, 20, 20, 1,\n        20, 5, 5, 2, 1,\n        10, 10, 10, 10, 1,\n        10, 10, 20, 25, 25,\n        50, 50, 50, 50, 100,\n        10, 10, 10, 100, 100,\n        25, 25, 25, 1, 1,\n        10, 10, 10, 10, 1,\n        10, 10, 10, 1, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 10, 1,\n        10, 1, 6, 10, 1,\n        25, 25, 1, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 10, 10, 10, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 3, 6, 10, 1,\n        25, 25, 1, 15, 1,\n        20, 20, 20, 1, 1,\n        20, 1, 50, 50, 2,\n        25, 25, 25, 15, 100000\n    ],\n    ticker: 0,\n    costDivisor: 1,\n    freeAccelerator: 0,\n    totalAccelerator: 0,\n    freeAcceleratorBoost: 0,\n    totalAcceleratorBoost: 0,\n    acceleratorPower: 1.10,\n    acceleratorEffect: new Decimal(1),\n    acceleratorEffectDisplay: new Decimal(1),\n    generatorPower: new Decimal(1),\n    freeMultiplier: 0,\n    totalMultiplier: 0,\n    multiplierPower: 2,\n    multiplierEffect: new Decimal(1),\n    challengeOneLog: 3,\n    freeMultiplierBoost: 0,\n    totalMultiplierBoost: 0,\n    globalCoinMultiplier: new Decimal(1),\n    totalCoinOwned: 0,\n    prestigeMultiplier: new Decimal(1),\n    buildingPower: 1,\n    reincarnationMultiplier: new Decimal(1),\n    coinOneMulti: new Decimal(1),\n    coinTwoMulti: new Decimal(1),\n    coinThreeMulti: new Decimal(1),\n    coinFourMulti: new Decimal(1),\n    coinFiveMulti: new Decimal(1),\n    globalCrystalMultiplier: new Decimal(1),\n    globalMythosMultiplier: new Decimal(0.01),\n    grandmasterMultiplier: new Decimal(1),\n    atomsMultiplier: new Decimal(1),\n    mythosBuildingPower: 1,\n    challengeThreeMultiplier: new Decimal(1),\n    totalMythosOwned: 0,\n    prestigePointGain: new Decimal(0),\n    challengeFivePower: 1 / 3,\n    transcendPointGain: new Decimal(0),\n    reincarnationPointGain: new Decimal(0),\n    produceFirst: new Decimal(0),\n    produceSecond: new Decimal(0),\n    produceThird: new Decimal(0),\n    produceFourth: new Decimal(0),\n    produceFifth: new Decimal(0),\n    produceTotal: new Decimal(0),\n    produceFirstDiamonds: new Decimal(0),\n    produceSecondDiamonds: new Decimal(0),\n    produceThirdDiamonds: new Decimal(0),\n    produceFourthDiamonds: new Decimal(0),\n    produceFifthDiamonds: new Decimal(0),\n    produceDiamonds: new Decimal(0),\n    produceFirstMythos: new Decimal(0),\n    produceSecondMythos: new Decimal(0),\n    produceThirdMythos: new Decimal(0),\n    produceFourthMythos: new Decimal(0),\n    produceFifthMythos: new Decimal(0),\n    produceMythos: new Decimal(0),\n    produceFirstParticles: new Decimal(0),\n    produceSecondParticles: new Decimal(0),\n    produceThirdParticles: new Decimal(0),\n    produceFourthParticles: new Decimal(0),\n    produceFifthParticles: new Decimal(0),\n    produceParticles: new Decimal(0),\n    producePerSecond: new Decimal(0),\n    producePerSecondDiamonds: new Decimal(0),\n    producePerSecondMythos: new Decimal(0),\n    producePerSecondParticles: new Decimal(0),\n    uFourteenMulti: new Decimal(1),\n    uFifteenMulti: new Decimal(1),\n    tuSevenMulti: 1,\n    currentTab: 'buildings',\n    researchfiller1: \"Hover over the grid to get details about researches!\",\n    researchfiller2: \"Level: \",\n    ordinals: [\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\", \"eighteenth\", \"nineteenth\", \"twentieth\"],\n    cardinals: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\", \"twentyone\", \"twentytwo\", \"twentythree\", \"twentyfour\", \"twentyfive\", \"twentysix\", \"twentyseven\", \"twentyeight\", \"twentynine\", \"thirty\", \"thirtyone\", \"thirtytwo\", \"thirtythree\", \"thirtyfour\"],\n    challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 10000, 2.5e8, 3.5e9],\n    prestigeamount: 1,\n    taxdivisor: new Decimal(\"1\"),\n    taxdivisorcheck: new Decimal(\"1\"),\n    runemultiplierincrease: {\n        one: 1,\n        two: 1,\n        three: 1,\n        four: 1,\n        five: 1\n    },\n    mythosupgrade13: new Decimal(\"1\"),\n    mythosupgrade14: new Decimal(\"1\"),\n    mythosupgrade15: new Decimal(\"1\"),\n    challengefocus: 0,\n    maxexponent: 10000,\n    maxbuyresearch: false,\n    effectiveLevelMult: 1,\n    optimalOfferingTimer: 600,\n    optimalObtainiumTimer: 3600,\n    runeSum: 0,\n    shopConfirmation: true,\n    globalAntMult: new Decimal(\"1\"),\n    antMultiplier: new Decimal(\"1\"),\n    antOneProduce: new Decimal(\"1\"),\n    antTwoProduce: new Decimal(\"1\"),\n    antThreeProduce: new Decimal(\"1\"),\n    antFourProduce: new Decimal(\"1\"),\n    antFiveProduce: new Decimal(\"1\"),\n    antSixProduce: new Decimal(\"1\"),\n    antSevenProduce: new Decimal(\"1\"),\n    antEightProduce: new Decimal(\"1\"),\n    antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\n    antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\n    antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\n    bonusant1: 0,\n    bonusant2: 0,\n    bonusant3: 0,\n    bonusant4: 0,\n    bonusant5: 0,\n    bonusant6: 0,\n    bonusant7: 0,\n    bonusant8: 0,\n    bonusant9: 0,\n    bonusant10: 0,\n    bonusant11: 0,\n    bonusant12: 0,\n    rune1level: 1,\n    rune2level: 1,\n    rune3level: 1,\n    rune4level: 1,\n    rune5level: 1,\n    rune1Talisman: 0,\n    rune2Talisman: 0,\n    rune3Talisman: 0,\n    rune4Talisman: 0,\n    rune5Talisman: 0,\n    talisman1Effect: [null, 0, 0, 0, 0, 0],\n    talisman2Effect: [null, 0, 0, 0, 0, 0],\n    talisman3Effect: [null, 0, 0, 0, 0, 0],\n    talisman4Effect: [null, 0, 0, 0, 0, 0],\n    talisman5Effect: [null, 0, 0, 0, 0, 0],\n    talisman6Effect: [null, 0, 0, 0, 0, 0],\n    talisman7Effect: [null, 0, 0, 0, 0, 0],\n    talisman6Power: 0,\n    talisman7Quarks: 0,\n    runescreen: \"runes\",\n    settingscreen: \"settings\",\n    talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\n    talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\n    talismanLevelCostMultiplier: [null, 1, 4, 1e4, 1e8, 1e13, 10, 100],\n    talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\n    talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\n    commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\n    uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\n    rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\n    epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\n    legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\n    mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\n    talismanRespec: 1,\n    obtainiumGain: 0,\n    mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\n    antELO: 0,\n    effectiveELO: 0,\n    timeWarp: false,\n    blessingMultiplier: 1,\n    spiritMultiplier: 1,\n    runeBlessings: [0, 0, 0, 0, 0, 0],\n    runeSpirits: [0, 0, 0, 0, 0, 0],\n    effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\n    effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\n    blessingBaseCost: 1e6,\n    spiritBaseCost: 1e20,\n    triggerChallenge: 0,\n    prevReductionValue: -1,\n    buildingSubTab: \"coin\",\n    blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\n    blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\n    giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\n    benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\n    platonicCubeBase: [2 / 4e6, 1.5 / 4e6, 1 / 4e6, 1 / 8e4, 1 / 1e4, 1 / 1e5, 1 / 1e4, 1 / 1e4],\n    platonicDRPower: [1 / 5, 1 / 5, 1 / 5, 1 / 5, 1 / 16, 1 / 16, 1 / 4, 1 / 8],\n    cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\n    buyMaxCubeUpgrades: false,\n    autoOfferingCounter: 0,\n    researchOrderByCost: [],\n    divisivenessPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1],\n    maladaptivePower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1],\n    lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1 / 1e13, 1 / 1e16, 1 / 1e20, 1 / 1e25, 1 / 1e35],\n    hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400],\n    illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01],\n    deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1 / 1e6, 1 / 1e8, 1 / 1e10, 1 / 1e12, 1 / 1e15, 1 / 1e18, 1 / 1e25, 0],\n    extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0],\n    droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80],\n    financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03],\n    corruptionPointMultipliers: [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10],\n    ascendBuildingProduction: {\n        first: new Decimal('0'),\n        second: new Decimal('0'),\n        third: new Decimal('0'),\n        fourth: new Decimal('0'),\n        fifth: new Decimal('0'),\n    },\n    freeUpgradeAccelerator: 0,\n    freeUpgradeMultiplier: 0,\n    acceleratorMultiplier: 1,\n    multiplierMultiplier: 1,\n    constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\n    globalConstantMult: new Decimal(\"1\"),\n    autoTalismanTimer: 0,\n    autoChallengeTimerIncrement: 0,\n    corruptionTrigger: 1,\n    challenge15Rewards: {\n        cube1: 1,\n        ascensions: 1,\n        coinExponent: 1,\n        taxes: 1,\n        obtainium: 1,\n        offering: 1,\n        accelerator: 1,\n        multiplier: 1,\n        runeExp: 1,\n        runeBonus: 1,\n        cube2: 1,\n        transcendChallengeReduction: 1,\n        reincarnationChallengeReduction: 1,\n        antSpeed: 1,\n        bonusAntLevel: 1,\n        cube3: 1,\n        talismanBonus: 1,\n        globalSpeed: 1,\n        blessingBonus: 1,\n        constantBonus: 1,\n        cube4: 1,\n        spiritBonus: 1,\n        score: 1,\n    },\n    autoResetTimers: {\n        prestige: 0,\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0\n    },\n    timeMultiplier: 1,\n    upgradeMultiplier: 1\n};\nexport const blankGlobals = Object.assign({}, Globals);\n","import EventEmitter from 'eventemitter3';\nexport const Synergism = new EventEmitter();\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { revealStuff } from './UpdateHTML';\nimport { Synergism } from './Events';\nimport { sumContents } from './Utility';\nconst achievementpointvalues = [0,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    2, 8, 10, 2, 8, 10, 10,\n    2, 8, 10, 10, 10, 10, 10,\n    2, 4, 6, 8, 10, 10, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    20, 20, 20, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 40, 40, 40, 60, 60, 100,\n    40, 40, 40, 60, 60, 100, 100,\n    40, 40, 60, 60, 100, 100, 100,\n    20, 40, 40, 60, 60, 100, 100,\n    40, 60, 100, 60, 100, 100, 40,\n    40, 40, 40, 40, 40, 40, 40,\n    40, 40, 40, 40, 100, 100, 0\n];\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0);\nconst adesc = {\n    adesc1: \"A Loyal Employee: Hire your first worker.\",\n    adesc2: \"Small Business: Hire 10 workers.\",\n    adesc3: \"Now we're synergizing!: Hire 100 workers.\",\n    adesc4: \"Gaining Redundancies: Hire 1,000 workers.\",\n    adesc5: \"A cog in the machine: Hire 5,000 workers.\",\n    adesc6: \"A nail in the machine: Hire 10,000 workers.\",\n    adesc7: \"Are we even in the machine anymore?: Hire 20,000 workers.\",\n    adesc8: \"STONKS!!!: Purchase 1 Investment.\",\n    adesc9: \"Planning ahead: Purchase 10 Investments.\",\n    adesc10: \"Inside Trading: Purchase 100 Investments.\",\n    adesc11: \"Outside Trading?: Purchase 1,000 Investments.\",\n    adesc12: \"Market Takeover: Purchase 5,000 Investments.\",\n    adesc13: \"Trickle-Down Economics: Purchase 10,000 Investments.\",\n    adesc14: \"Eliminated Regulation: Purchase 20,000 Investments.\",\n    adesc15: \"Stationery!: Build 1 Printer.\",\n    adesc16: \"Printing Press: Build 10 Printers.\",\n    adesc17: \"It prints free money!: Build 100 Printers.\",\n    adesc18: \"Solving Our Debts: Build 1,000 Printers.\",\n    adesc19: \"Monopolizing the market: Build 5,000 Printers.\",\n    adesc20: \"We're running out of Ink!: Build 10,000 Printers.\",\n    adesc21: \"3D-printing the universe: Build 20,000 Printers.\",\n    adesc22: \"A national treasure: Establish 1 Coin Mint.\",\n    adesc23: \"Now with competition!: Establish 10 Coin Mints.\",\n    adesc24: \"Counterfeiting with Style!: Establish 100 Coin Mints.\",\n    adesc25: \"Why do we need all these?: Establish 1000 Coin Mints.\",\n    adesc26: \"No really, why??: Establish 5,000 Coin Mints.\",\n    adesc27: \"Is no one to stop us???: Establish 10,000 Coin Mints.\",\n    adesc28: \"Oh well, time to mint: Establish 20,000 Coin Mints.\",\n    adesc29: \"Newton's Apprentice: Create 1 Alchemy.\",\n    adesc30: \"Lab Work: Create 10 Alchemies.\",\n    adesc31: \"Satanic Becomings: Create 66 Alchemies.\",\n    adesc32: \"Satan Incarnate: Create 666 Alchemies.\",\n    adesc33: \"Is this more demonic?: Create 6,666 Alchemies.\",\n    adesc34: \"Golden Paradise: Create 17,777 Alchemies.\",\n    adesc35: \"Unlocking secrets to the world: Create 42,777 Alchemies.\",\n    adesc36: \"Leveling up: Prestige for at least 1 Diamond.\",\n    adesc37: \"High-Tiered: Prestige for at least 1e+6 Diamonds.\",\n    adesc38: \"Highly Regarded: Prestige for at least 1e+100 Diamonds.\",\n    adesc39: \"Prestigious: Prestige for at least 1e+1000 Diamonds.\",\n    adesc40: \"Legendary: Prestige for at least 1e+10000 Diamonds.\",\n    adesc41: \"Divine: Prestige for at least 1e+77777 Diamonds.\",\n    adesc42: \"Perfectly Respected: Prestige for at least 1e+250000 Diamonds.\",\n    adesc43: \"A Simple Detour: Transcend for at least 1 Mythos.\",\n    adesc44: \"Tunnel Vision: Transcend for at least 1e+6 Mythos.\",\n    adesc45: \"Risen from the Ashes: Transcend for at least 1e+50 Mythos.\",\n    adesc46: \"Paradigm Shift: Transcend for at least 1e+308 Mythos.\",\n    adesc47: \"Preparation: Transcend for at least 1e+2000 Mythos.\",\n    adesc48: \"Revising the Plan: Transcend for at least 1e+25000 Mythos.\",\n    adesc49: \"Leaving the Universe: Transcend for at least 1e+100000 Mythos.\",\n    adesc50: \"Going Quantum: Reincarnate for at least 1 Particle.\",\n    adesc51: \"Tunneling Vision: Reincarnate for at least 100,000 Particles.\",\n    adesc52: \"Simulating the World: Reincarnate for at least 1e+30 Particles.\",\n    adesc53: \"Multidimensional Creation: Reincarnate for at least 1e+200 Particles.\",\n    adesc54: \"Lepton Dance: Reincarnate for at least 1e+1500 Particles.\",\n    adesc55: \"Do we have enough yet?: Reincarnate for at least 1e+5000 Particles.\",\n    adesc56: \"I Feel Luck in My Cells: Reincarnate for at least 1e+7777 Particles.\",\n    adesc57: \"One Way Only: Prestige without buying multipliers.\",\n    adesc58: \"Authentic Shifting: Transcend without having bought a multiplier.\",\n    adesc59: \"The Singularity: Reincarnate without having bought a multiplier.\",\n    adesc60: \"Gotta go SLOW!: Prestige without buying Accelerators or Accelerator Boosts.\",\n    adesc61: \"I'm really going slow: Transcend without having bought Accelerators or Boosts.\",\n    adesc62: \"Are we there yet?: Reincarnate without having bought Accelerators or Boosts.\",\n    adesc63: \"A careful search for Diamonds: Get 1e120,000 Coins in [Reduced Diamonds] without buying Accelerators or Boosts.\",\n    adesc64: \"Very Based: Prestige without purchasing Coin Upgrades.\",\n    adesc65: \"Miser: Transcend without purchasing Coin Upgrades.\",\n    adesc66: \"True Miser: Transcend without purchasing Coin or Diamond Upgrades.\",\n    adesc67: \"Coinless Pursuit: Reincarnate without purchasing Coin Upgrades.\",\n    adesc68: \"Diamonds don't matter to me!: Reincarnate without purchasing Coin or Diamond Upgrades.\",\n    adesc69: \"Leave nothing behind: Reincarnate without purchasing Coin, Diamond or Mythos Upgrades.\",\n    adesc70: \"Leave NOTHING behind.: Reincarnate without purchasing Coin, Diamond, Mythos, or Generator Upgrades.\",\n    adesc71: \"Out of Order: Buy Generator Upgrade Row 1, #2 first in a transcension (IV -> III)\",\n    adesc72: \"More Out of Order: Buy Generator Upgrade Row 1, #3 first in a transcension (III -> II)\",\n    adesc73: \"Four's a Company: Buy Generator Upgrade Row 1, #4 first in a transcension (II -> I)\",\n    adesc74: \"Five's a Croud: Buy Generator Upgrade Row 1, #5 first in a transcension (I -> V)\",\n    adesc75: \"Vaseline without the Machine: Exit [No Multiplier] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\n    adesc76: \"Rage against the Machine: Exit [No Accelerator] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\n    adesc77: \"Amish Paradise: Exit [No Shards] with at least 1e99,999 coins and without any of the row 1 generator upgrades.\",\n    adesc78: \"Single-Cell: Complete [No Multiplier] once.\",\n    adesc79: \"Solidarity: Complete [No Multiplier] three times.\",\n    adesc80: \"Duplication-Free!: Complete [No Multiplier] five times.\",\n    adesc81: \"Multitasking Challenged: Complete [No Multiplier] ten times.\",\n    adesc82: \"No Deaths: Complete [No Multiplier] twenty times.\",\n    adesc83: \"Population One: Complete [No Multiplier] fifty times.\",\n    adesc84: \"Insert Another Token: Complete [No Multiplier] seventy-five times.\",\n    adesc85: \"Slow Start: Complete [No Accelerator] once\",\n    adesc86: \"Respawn Rate -12%: Complete [No Accelerator] three times.\",\n    adesc87: \"Putting the Breaks On: Complete [No Accelerator] five times.\",\n    adesc88: \"Racing a Sloth...: Complete [No Accelerator] ten times.\",\n    adesc89: \"... and Losing.: Complete [No Accelerator] twenty times.\",\n    adesc90: \"Planck Distance Traveled: Complete [No Accelerator] fifty times.\",\n    adesc91: \"Inverse-Ackermann Growth: Complete [No Accelerator] seventy-five times.\",\n    adesc92: \"Intact: Complete [No Shards] once.\",\n    adesc93: \"Augments are Stupid!: Complete [No Shards] three times.\",\n    adesc94: \"Grandmasters are Brilliant!: Complete [No Shards] five times.\",\n    adesc95: \"Gotta get those Grandmasters Stronger: Complete [No Shards] ten times.\",\n    adesc96: \"Summoning Enhancements: Complete [No Shards] twenty times.\",\n    adesc97: \"Magic 99/99: Complete [No Shards] fifty times.\",\n    adesc98: \"Perfect Foresight: Complete [No Shards] seventy-five times.\",\n    adesc99: \"Inflation: Complete [Cost+] once.\",\n    adesc100: \"Hyperinflation: Complete [Cost+] three times.\",\n    adesc101: \"Market Bubble: Complete [Cost+] five times.\",\n    adesc102: \"Bull Market: Complete [Cost+] ten times.\",\n    adesc103: \"Wealth Inequality: Complete [Cost+] twenty times.\",\n    adesc104: \"Severe Overpay: Complete [Cost+] fifty times.\",\n    adesc105: \"Societal Collapse: Complete [Cost+] seventy-five times.\",\n    adesc106: \"Excavation: Complete [Reduced Diamonds] once.\",\n    adesc107: \"Digging Deep: Complete [Reduced Diamonds] three times.\",\n    adesc108: \"Frack As Needed: Complete [Reduced Diamonds] five times.\",\n    adesc109: \"Unobtainium Pickaxe: Complete [Reduced Diamonds] ten times.\",\n    adesc110: \"Fortune III: Complete [Reduced Diamonds] twenty times.\",\n    adesc111: \"Every kiss...: Complete [Reduced Diamonds] fifty times.\",\n    adesc112: \"...begins with K.: Complete [Reduced Diamonds] seventy-five times.\",\n    adesc113: \"Tax evasion!: Complete {[Tax+]} once.\",\n    adesc114: \"Keeping up with the Joneses: Complete {[Tax+]} twice.\",\n    adesc115: \"Offshore deposits: Complete {[Tax+]} three times.\",\n    adesc116: \"Bribing officials: Complete {[Tax+]} five times.\",\n    adesc117: \"Becoming President: Complete {[Tax+]} ten times.\",\n    adesc118: \"Charitable Donation: Complete {[Tax+]} fifteen times.\",\n    adesc119: \"IRS Audit: Complete {[Tax+]} twenty-five times.\",\n    adesc120: \"Is there anybody in there?: Complete {[No Accelerator/Multiplier]} once.\",\n    adesc121: \"Human being: Complete {[No Accelerator/Multiplier]} twice.\",\n    adesc122: \"Interdimensional: Complete {[No Accelerator/Multiplier]} three times.\",\n    adesc123: \"A slow nickel: Complete {[No Accelerator/Multiplier]} five times.\",\n    adesc124: \"Multipliers don't even work 0/5: Complete {[No Accelerator/Multiplier]} ten times.\",\n    adesc125: \"Accelerators don't even work -5/5: Complete {[No Accelerator/Multiplier]} fifteen times.\",\n    adesc126: \"ACCELERATOR BOOSTS DON'T EVEN WORK -100/5: Complete {[No Accelerator/Multiplier]} twenty-five times.\",\n    adesc127: \"I hate this challenge: Complete Cost++ Once.\",\n    adesc128: \"A costly mistake: Complete Cost++ Twice.\",\n    adesc129: \"Impetus: Complete Cost++ Three Times.\",\n    adesc130: \"Are you broke yet? Complete Cost++ Five Times.\",\n    adesc131: \"The world of Finance: Complete Cost++ Ten Times.\",\n    adesc132: \"Marginal Gains: Complete Cost++ Twenty Times.\",\n    adesc133: \"I buy these: Complete Cost++ Twenty-Five Times.\",\n    adesc134: \"Agnostic: Complete No Runes Once.\",\n    adesc135: \"Ant-i Runes: Complete No Runes Twice.\",\n    adesc136: \"Isn't it getting tiresome?: Complete No Runes Three Times.\",\n    adesc137: \"Machine does not accept offerings: Complete No Runes Five Times.\",\n    adesc138: \"Runes Suck 1/5: Complete No Runes Ten Times.\",\n    adesc139: \"I didn't even notice Prism was gone: Complete No Runes Twenty Times.\",\n    adesc140: \"Atheist: Complete No Runes Twenty-Five Times.\",\n    adesc141: \"Sadism: Complete {[Sadistic I]} Once.\",\n    adesc142: \"Masochism: Complete {[Sadistic I]} Twice.\",\n    adesc143: \"Insanity: Complete {[Sadistic I]} Three Times.\",\n    adesc144: \"How? Complete {[Sadistic I]} Five Times.\",\n    adesc145: \"Why? Complete {[Sadistic I]} Ten Times.\",\n    adesc146: \"Descend: Complete {[Sadistic I]} Twenty Times.\",\n    adesc147: \"End of the Universe: Complete {[Sadistic I]} Twenty-Five Times.\",\n    adesc148: \"Gas gas gas: Purchase 5 Accelerators.\",\n    adesc149: \"0 to 25: Purchase 25 Accelerators.\",\n    adesc150: \"0 to 100: Purchase 100 Accelerators\",\n    adesc151: \"Highway to Hell: Purchase 666 Accelerators.\",\n    adesc152: \"Perhaps you should brake: Purchase 2,000 Accelerators.\",\n    adesc153: \"Exit the vehicle now!: Purchase 12,500 Accelerators.\",\n    adesc154: \"Faster than light: Purchase 100,000 Accelerators.\",\n    adesc155: \"I've been duped!: Purchase 2 Multipliers.\",\n    adesc156: \"Funhouse Mirrors: Purchase 20 Multipliers.\",\n    adesc157: \"Friend of binary: Purchase 100 Multipliers.\",\n    adesc158: \"Feeling the cost growth yet?: Purchase 500 Multipliers.\",\n    adesc159: \"Perhaps you'll feel the cost now: Purchase 2,000 Multipliers.\",\n    adesc160: \"Exponential Synergy: Purchase 12,500 Multipliers.\",\n    adesc161: \"Cloned: Purchase 100,000 Multipliers.\",\n    adesc162: \"Jerk > 0: Purchase 2 Accelerator Boosts.\",\n    adesc163: \"Can't the speedometer move any faster?: Purchase 10 Accelerator Boosts.\",\n    adesc164: \"50 G rotations: Purchase 50 Accelerator Boosts.\",\n    adesc165: \"Dematerialize: Purchase 200 Accelerator Boosts.\",\n    adesc166: \"Breaking the laws of Physics: Purchase 1,000 Accelerator Boosts.\",\n    adesc167: \"Decayed Realism: Purchase 5,000 Accelerator Boosts.\",\n    adesc168: \"Kinda fast: Purchase 15,000 Accelerator Boosts.\",\n    adesc169: \"The Galactic Feast: Obtain 3 Galactic Crumbs.\",\n    adesc170: \"Only the finest: Obtain 100,000 Galactic Crumbs.\",\n    adesc171: \"Six-Course Meal: Obtain 666,666,666 Galactic Crumbs.\",\n    adesc172: \"Accumulation of Food: Obtain 1e20 Galactic Crumbs.\",\n    adesc173: \"Cookie Clicking: Obtain 1e40 Galactic Crumbs.\",\n    adesc174: \"Unlimited Bread Sticks!: Obtain 1e500 Galactic Crumbs.\",\n    adesc175: \"Restaurant at the end of the Universe: Obtain 1e2500 Galactic Crumbs.\",\n    adesc176: \"Ant-icipation!: Amass a 2x Ant Multiplier through sacrifice and own a Tier 2 ant.\",\n    adesc177: \"Ant-ecedent: Amass a 6x Ant Multiplier through sacrifice and own a Tier 3 ant.\",\n    adesc178: \"Ants are friends, not food!: Amass a 20x Ant Multiplier through sacrifice and own a Tier 4 Ant.\",\n    adesc179: \"Ant Devil?: Amass a 100x Ant Multiplier through sacrifice and own a Tier 5 Ant.\",\n    adesc180: \"The world's best chef: Amass a 500x Ant Multiplier through sacrifice and own a Tier 6 Ant.\",\n    adesc181: \"6 Michelin Stars: Amass a 6,666x Ant Multiplier through sacrifice and own a Tier 7 Ant.\",\n    adesc182: \"Keys to the Restaurant at the end of the Universe: Amass a 77,777x Ant Multiplier through sacrifice and own a Tier 8 Ant.\",\n    adesc183: \"Up: Ascend Once.\",\n    adesc184: \"Double-Up: Ascend Twice.\",\n    adesc185: \"Give me Ten!: Ascend Ten Times.\",\n    adesc186: \"Give me a Hundred: Ascend 100 Times.\",\n    adesc187: \"Give me a Thousand: Ascend 1,000 Times.\",\n    adesc188: \"Give me some arbitrary number I: Ascend 14,142 Times.\",\n    adesc189: \"Give me some arbitrary number II: Ascend 141,421 Times.\",\n    adesc190: \"Now that's what I call getting some Pi!: Attain a constant of 3.14.\",\n    adesc191: \"One in a million: Attain a constant of 1,000,000 [1e6].\",\n    adesc192: \"A number: Attain a constant of 4.32e10.\",\n    adesc193: \"The coolest of numbers: Attain a constant of 6.9e21.\",\n    adesc194: \"Planck^(-1): Attain a constant of 1.509e33.\",\n    adesc195: \"Epsilon > a lot: Attain a constant of 1e66.\",\n    adesc196: \"NUM_MAX: Attain a constant of 1.8e308.\",\n    adesc197: \"Casualties: Clear 'Reduced Ants' challenge once.\",\n    adesc198: \"Fatalities: Clear 'Reduced Ants' challenge twice.\",\n    adesc199: \"Destruction: Clear 'Reduced Ants' challenge three times.\",\n    adesc200: \"War, what is it good for?: Clear 'Reduced Ants' challenge five times.\",\n    adesc201: \"Absolutely everything.: Clear 'Reduced Ants' challenge ten times.\",\n    adesc202: \"Perfect Storm: Clear 'Reduced Ants' challenge twenty times.\",\n    adesc203: \"Immaculate Storm: Clear 'Reduced Ants' challenge thirty times.\",\n    adesc204: \"I didn't need those stupid reincarnations anyway!: Clear 'No Reincarnation' challenge once.\",\n    adesc205: \"[x1,x2,0,x3]: Clear 'No Reincarnation' challenge twice.\",\n    adesc206: \"Nonmetaphysical: Clear 'No Reincarnation' challenge three times.\",\n    adesc207: \"Living alone: Clear 'No Reincarnation' challenge five times.\",\n    adesc208: \"DM me on discord if you read these names: Clear 'No Reincarnation' challenge ten times.\",\n    adesc209: \"Yeah: Clear 'No Reincarnation' challenge twenty times.\",\n    adesc210: \"Science! Clear 'No Reincarnation' challenge thirty times.\",\n    adesc211: \"The IRS strikes back: Clear 'Tax+++' challenge once.\",\n    adesc212: \"Fiscal Policy: Clear 'Tax+++' challenge twice.\",\n    adesc213: \"Economic Boom: Clear 'Tax+++' challenge three times.\",\n    adesc214: \"Ant-onomics: Clear 'Tax+++' challenge five times.\",\n    adesc215: \"'Wow Platonic Tax sucks 1/5': Clear 'Tax+++' challenge ten times.\",\n    adesc216: \"Haha this is hard for some reason: Clear 'Tax+++' challenge twenty times.\",\n    adesc217: \"Taxes are hard: Clear 'Tax+++' challenge thirty times.\",\n    adesc218: \"Shiny Blue Rock: Clear 'No Research' once.\",\n    adesc219: \"It's like Avatar: Clear 'No Research' twice.\",\n    adesc220: \"It's like Unobtainium: Clear 'No Research' three times.\",\n    adesc221: \"It's like a thing: Clear 'No Research' five times.\",\n    adesc222: \"It's like: Clear 'No Research' ten times.\",\n    adesc223: \"It's: Clear 'No Research' twenty times.\",\n    adesc224: \"It: Clear 'No Research' thirty times.\",\n    adesc225: \"Pretty Corrupt: Clear an Ascension with above 100,000 score.\",\n    adesc226: \"Bought out: Clear an Ascension with above 1 million score.\",\n    adesc227: \"Utterly Corrupt: Clear an Ascension with above 10 million score.\",\n    adesc228: \"Antitrust: Clear an Ascension with above 100 million score.\",\n    adesc229: \"Ant-i-trust: Clear an Ascension with above 1 billion score.\",\n    adesc230: \"This is pretty unfair: Clear an Ascension with above 5 billion score.\",\n    adesc231: \"Antichrist: Clear an Ascension with above 25 billion score.\",\n    adesc232: \"Highly Blessed: Level your Speed Rune blessing to 100,000.\",\n    adesc233: \"Divine Blessing: Level your Speed Rune blessing to 100,000,000.\",\n    adesc234: \"Blessing III: Level your Speed Rune blessing to 100 billion.\",\n    adesc235: \"Spirit I: Level your Speed Spirit to 1 Million.\",\n    adesc236: \"Spirit II: Level your Speed Spirit to 1 Billion.\",\n    adesc237: \"Spirit III: Level your Speed Spirit to 1 Trillion.\",\n    adesc238: \"Three-folded: [Hint: you may want to look into the inception]\",\n    adesc239: \"Seeing red: [Hint: you may need a lot of red items]\",\n    adesc240: \"ASCENDED: [Hint: you may need a LOT of ascensions OR an particularly amazing ascension]\",\n    adesc241: \"Aesop: [Hint: you gotta be pretty dang slow]\",\n    adesc242: \"Aesop's Revenge: [Hint: you gotta be pretty dang fast]\",\n    adesc243: \"Unsmith: [Hint: unsmith emoji :unsmith: can be a pretty good input]\",\n    adesc244: \"Smith: [Hint: :antismith: looks promising as well]\",\n    adesc245: \"BLESSED: [Hint: Your Speed Blessing best be unreasonably high!]\",\n    adesc246: \"Why? [Hint: Sometimes even 1 in over a Trillion counts!]\",\n    adesc247: \"Challenging! [Hint: Challenge 11 is calling your name, but with even less ants]\",\n    adesc248: \"Seeing Red but not Blue: [Hint: Can you get red stuff without getting blue stuff?]\",\n    adesc249: \"Overtaxed: [Hint: It might pay not to read!]\",\n    adesc250: \"The Thousand Suns: [Hint: You need to fully research into becoming GOD]\",\n    adesc251: \"The Thousand Moons: [Hint: You may need to cube yourself up]\",\n    adesc252: \"Ultimate: Complete 'SADISTIC II' challenge.\"\n};\nconst areward = {\n    areward3: \"Gain +.05% to Accelerator Power.\",\n    areward4: \"Start transcensions/challenges with Worker Autobuyer unlocked.\",\n    areward5: \"Gain +1 Accelerator per 500 Workers owned.\",\n    areward6: \"Gain +1 Multiplier per 1,000 Workers owned.\",\n    areward7: \"Gain +1 Accelerator Boost per 2,000 workers owned.\",\n    areward10: \"Gain +.10% to Accelerator Power.\",\n    areward11: \"Start transcensions/challenges with Investment Autobuyer unlocked.\",\n    areward12: \"Gain +1 Accelerator per 500 Investments owned.\",\n    areward13: \"Gain +1 Multiplier per 1,000 Investments owned.\",\n    areward14: \"Gain +1 Accelerator Boost per 2,000 Investments owned.\",\n    areward17: \"Gain +.15% to Accelerator Power.\",\n    areward18: \"Start transcensions/challenges with Printer Autobuyer unlocked.\",\n    areward19: \"Gain +1 Accelerator per 500 Printers owned.\",\n    areward20: \"Gain +1 Multiplier per 1,000 Printers owned.\",\n    areward21: \"Gain +1 Accelerator Boost per 2,000 Printers owned.\",\n    areward24: \"Gain +.20% to Accelerator Power.\",\n    areward25: \"Start transcensions/challenges with Coin Mint Autobuyer unlocked.\",\n    areward26: \"Gain +1 Accelerator per 500 Mints owned.\",\n    areward27: \"Gain +1 Multiplier per 1,000 Mints owned.\",\n    areward28: \"Gain +1 Accelerator Boost per 2,000 Mints owned.\",\n    areward31: \"Gain +.25% to Accelerator Power.\",\n    areward32: \"Start transcensions/challenges with Alchemy Autobuyer unlocked.\",\n    areward33: \"Gain 10% more offerings from resets || +1 Accelerator per 500 Alchemies!\",\n    areward34: \"Gain 15% more offerings from resets (stacks multiplicatively!) || +1 Multiplier per 1,000 Alchemies!\",\n    areward35: \"Gain 25% more offerings from resets (stacks multiplicatively!) || +1 Accelerator Boost per 2,000 Alchemies!\",\n    areward36: \"Multiply Crystal Production by 2x.\",\n    areward37: \"Multiply Crystal Production by the common logarithm of owned Diamonds. Prestiges give more offerings based on time spent (Up to +15 at 1800 seconds)\",\n    areward38: \"Unlock the Duplication rune!\",\n    areward43: \"Accelerator Boosts can be purchased from any screen. Unlock the Auto-Prestige feature.\",\n    areward44: \"Unlock the Prism Rune! Transcensions give more offerings based on time spent (Up to +15 at 1800 seconds)\",\n    areward45: \"Reduce tax scaling by up to 5%, depending on the length of prestige.\",\n    areward46: \"Reduce tax scaling by up to another 5%, depending on length of prestige.\",\n    areward47: \"Reduce tax scaling by up to ANOTHER 10%, depending on length of prestige!\",\n    areward50: \"Unlock new Atomic production and unlock 3 new incredibly difficult challenges! Gain 2x particles on all future Reincarnations!\",\n    areward51: \"Manual Reincarnations give +4 Obtainium (unaffected by multipliers except time multiplier)!\",\n    areward52: \"Reincarnations give more offerings based on time spent (Up to +25 at 1800 seconds)\",\n    areward53: \"Increase the amount of obtainium gained through all features by 0.125% additive for each rune level.\",\n    areward57: \"Gain +1, +1% free Multipliers!\",\n    areward58: \"Gain +1, +1% more free Multipliers!\",\n    areward59: \"Gain +1, +1% more, MORE free Multipliers!\",\n    areward60: \"Gain +2, +1% free Accelerators!\",\n    areward61: \"Gain +2, +1% more free Accelerators!\",\n    areward62: \"Gain +2, +1% more, MORE free Accelerators!\",\n    areward71: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward72: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward73: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward74: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward75: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward76: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward77: \"+1% Conversion Exponent on all generator upgrades! They're in overdrive now!\",\n    areward78: \"Start transcensions/challenges with 1 Refinery and automatically buy Refineries.\",\n    areward79: \"Automatically buy the first crystal upgrade if you can afford it!\",\n    areward80: \"Start transcensions/challenges with Multiplier Autobuyer unlocked. +5% offering recycle.\",\n    areward82: \"Delay tax growth by 4%.\",\n    areward84: \"+1% obtainium (stacks additively with other achievement rewards)\",\n    areward85: \"Start transcensions/challenges with 1 Coal Plant and automatically buy Coal Plants.\",\n    areward86: \"Automatically buy the second crystal upgrade if you can afford it!\",\n    areward87: \"Start transcensions/challenges with Accelerator Autobuyer unlocked. +5% offering recycle.\",\n    areward89: \"Delay tax growth by 4%.\",\n    areward91: \"+3% obtainium (stacks additively with other achievement rewards)\",\n    areward92: \"Start transcensions/challenges with 1 Coal Rig and automatically buy Coal Rigs.\",\n    areward93: \"Automatically buy the third crystal upgrade if you can afford it!\",\n    areward94: \"+5% offering recycle.\",\n    areward96: \"Delay tax growth by 4%.\",\n    areward98: \"+5% obtainium (stacks additively with other achievement rewards)\",\n    areward99: \"Start transcensions/challenges with 1 Diamond Pickaxe and automatically buy Diamond Pickaxes.\",\n    areward100: \"Automatically buy the fourth crystal upgrade if you can afford it!\",\n    areward101: \"+5% offering recycle.\",\n    areward102: \"Unlock the Thrift rune!\",\n    areward103: \"Delay tax growth by 4%.\",\n    areward105: \"+7% obtainium (stacks additively with other achievement rewards)\",\n    areward106: \"Start transcensions/challenges with 1 Pandora's Box and automatically buy Pandora's Boxes.\",\n    areward107: \"Automatically buy the fifth crystal upgrade if you can afford it!\",\n    areward108: \"+5% offering recycle.\",\n    areward110: \"Delay tax growth by 4%.\",\n    areward112: \"+9% obtainium (stacks additively with other achievement rewards)\",\n    areward115: \"+5% offering recycle.\",\n    areward117: \"Delay tax growth by 5.66%.\",\n    areward118: \"Each Reincarnation challenge completion delays tax growth by 0.75% per level, multiplicative\",\n    areward119: \"+11% obtainium. Unlock a nice trinket somewhere...\",\n    areward122: \"+7.5% offering recycle.\",\n    areward124: \"Delay tax growth by 5.66%. Unlock 5 new incredibly powerful researches!\",\n    areward126: \"+13% obtainium. You get an accessory to commemorate this moment!\",\n    areward127: \"Unlock 20 new incredibly expensive yet good researches. Unlock the [Anthill] feature!\",\n    areward128: \"Make researches go Cost-- with 1.5x Obtainium!\",\n    areward129: \"+7.5% offering recycle. Gain another 1.25x Obtainium multiplier!\",\n    areward131: \"Delay tax growth by 5.66%.\",\n    areward132: \"Permanently gain +25% more sacrifice reward!\",\n    areward133: \"+15% obtainium. Obtain the gift of Midas himself.\",\n    areward134: \"Unlock 10 newer incredibly expensive yet good researches. Unlock <<Talismans>> in the Runes Tab!\",\n    areward135: \"Talisman positive bonuses are now +0.05 stronger per level.\",\n    areward136: \"Talisman positive bonuses are now +0.05 even stronger per level.\",\n    areward137: \"Permanently gain +25% more sacrifice reward!\",\n    areward140: \"+17% obtainium. Lazy joke about not leaking talismans here [You get a new one]\",\n    areward141: \"Unlock a new reset tier!\",\n    areward147: \"+19% obtainium (Achievement total is up to 100%!). Gain the Polymath Talisman!\",\n    areward169: \"ALL Ant speed multiplied by log10(crumbs + 10)\",\n    areward171: \"+16.666% ALL Ant speed!\",\n    areward172: \"Gain more ants the longer your reincarnation lasts (max speed achieved in 2 hours)\",\n    areward173: \"Unlock Ant Sacrifice, allowing you to reset your ants and ant upgrades in exchange for amazing rewards! Automatically buy Worker Ants.\",\n    areward174: \"Ant Multiplier from sacrifice is multiplied by another logarithm (Multiply by 0.4 * log10(points + 1))\",\n    areward176: \"Unlock Tier 2 Ant autobuy, and autobuy Inceptus and Fortunae ants! Add +25 Base Ant ELO.\",\n    areward177: \"Unlock Tier 3 Ant autobuy, and autobuy Tributum ants! Add +50 Base Ant ELO.\",\n    areward178: \"Unlock Tier 4 Ant autobuy, and autobuy Celeritas and Multa ants! Add +75 Base Ant ELO.\",\n    areward179: \"Unlock Tier 5 Ant autobuy, and autobuy Sacrificium ants! Add +100 Base Ant ELO.\",\n    areward180: \"Unlock Tier 6 Ant autobuy, and autobuy Hic and Experientia ants! Add +1% Base Ant ELO.\",\n    areward181: \"Unlock Tier 7 Ant autobuy, and autobuy Praemoenio ants! Add +2% Base Ant ELO.\",\n    areward182: \"Unlock Tier 8 Ant autobuy, and autobuy Scientia and Phylacterium ants! Add +3% Base Ant ELO.\",\n    areward187: \"Gain an ascension gain multiplier based on your score (log10(score) - 7)x for Corruption Score > 100 Million. Gain +1% Offerings per 10,000 ascensions, up to +100%!\",\n    areward188: \"Gain +100 ascension count for all ascensions longer than 10 seconds. Gain +1% Obtainium per 50,000 ascensions, up to +100%!\",\n    areward189: \"Gain 20% of excess time after 10 seconds each Ascension as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Cubes per 250,000 ascensions, up to +200%!\",\n    areward193: \"Gain (log10(Constant+1)/4)% more Cubes on ascension!\",\n    areward195: \"Gain (log10(Constant+1)/4)% more Cubes and Tesseracts on ascension! Multiplicative with the other Ach. bonus.\",\n    areward196: \"Gain (log10(Constant+1)/50)% more Platonic Cubes on ascension!\",\n    areward197: \"You will unlock a stat tracker for ascensions.\",\n    areward198: \"Gain +4% Cubes on ascension!\",\n    areward199: \"Gain +4% Cubes on ascension!\",\n    areward200: \"Gain +4% Cubs on ascension! Did I spell that wrong? You bet I did.\",\n    areward201: \"Gain +3% Cubes on ascension!\",\n    areward202: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Tesseracts per 500,000 ascensions, up to +200%!\",\n    areward204: \"You will gain 25% of excess time after 10 seconds each Ascension as a linear multiplier to rewards.\",\n    areward205: \"Gain +4% Tesseracts on ascension!\",\n    areward206: \"Gain +4% Tesseracts on ascension!\",\n    areward207: \"Gain +4% Tesseracts on ascension!\",\n    areward208: \"Gain +3% Tesseracts on ascension!\",\n    areward209: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours).\",\n    areward211: \"You will gain 25% MORE excess time (Total: 50%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\n    areward212: \"Gain +4% Hypercubes on ascension!\",\n    areward213: \"Gain +4% Hypercubes on ascension!\",\n    areward214: \"Gain +4% Hypercubes on ascension!\",\n    areward215: \"Gain +3% Hypercubes on ascension!\",\n    areward216: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Hypercubes per 1,000,000 ascensions, up to +200%!\",\n    areward218: \"You gain gain 50% MORE MORE excess time (Total: 100%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\n    areward219: \"Gain +4% Platonic Cubes on ascension!\",\n    areward220: \"Gain +4% Platonic Cubes on ascension!\",\n    areward221: \"Gain +4% Platonic Cubes on ascension!\",\n    areward222: \"Gain +3% Platonic Cubes on ascension!\",\n    areward223: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Platonic Cubes per 1,337,000 ascensions, up to +200%!\",\n    areward240: \"Ascension Cube Gain Multipliers is VERY slightly affected by global speed multipliers: 1 + log10(Speed)/20 (Min: 1.10x, Max: 1.50x)\",\n    areward250: \"You gain a permanent +60% Obtainium and Offering bonus, with +6% all cube types!\",\n    areward251: \"You gain a permanent +100% Obtainium and Offering bonus, with +10% all cube types!\"\n};\nexport const resetachievementcheck = (i) => {\n    if (i === 1) {\n        if (player.prestigenoaccelerator === true) {\n            achievementaward(60);\n        }\n        if (player.prestigenomultiplier === true) {\n            achievementaward(57);\n        }\n        if (player.prestigenocoinupgrades === true) {\n            achievementaward(64);\n        }\n        if (G['prestigePointGain'].gte(1)) {\n            achievementaward(36);\n        }\n        if (G['prestigePointGain'].gte(1e6)) {\n            achievementaward(37);\n        }\n        if (G['prestigePointGain'].gte(1e100)) {\n            achievementaward(38);\n        }\n        if (G['prestigePointGain'].gte(\"1e1000\")) {\n            achievementaward(39);\n        }\n        if (G['prestigePointGain'].gte(\"1e10000\")) {\n            achievementaward(40);\n        }\n        if (G['prestigePointGain'].gte(\"1e77777\")) {\n            achievementaward(41);\n        }\n        if (G['prestigePointGain'].gte(\"1e250000\")) {\n            achievementaward(42);\n        }\n    }\n    if (i === 2) {\n        if (player.transcendnoaccelerator === true) {\n            achievementaward(61);\n        }\n        if (player.transcendnomultiplier === true) {\n            achievementaward(58);\n        }\n        if (player.transcendnocoinupgrades === true) {\n            achievementaward(65);\n        }\n        if (player.transcendnocoinorprestigeupgrades === true) {\n            achievementaward(66);\n        }\n        if (G['transcendPointGain'].gte(1)) {\n            achievementaward(43);\n        }\n        if (G['transcendPointGain'].gte(1e6)) {\n            achievementaward(44);\n        }\n        if (G['transcendPointGain'].gte(1e50)) {\n            achievementaward(45);\n        }\n        if (G['transcendPointGain'].gte(1e308)) {\n            achievementaward(46);\n        }\n        if (G['transcendPointGain'].gte(\"1e1500\")) {\n            achievementaward(47);\n        }\n        if (G['transcendPointGain'].gte(\"1e25000\")) {\n            achievementaward(48);\n        }\n        if (G['transcendPointGain'].gte(\"1e100000\")) {\n            achievementaward(49);\n        }\n    }\n    if (i === 3) {\n        if (player.reincarnatenoaccelerator === true) {\n            achievementaward(62);\n        }\n        if (player.reincarnatenomultiplier === true) {\n            achievementaward(59);\n        }\n        if (player.reincarnatenocoinupgrades === true) {\n            achievementaward(67);\n        }\n        if (player.reincarnatenocoinorprestigeupgrades === true) {\n            achievementaward(68);\n        }\n        if (player.reincarnatenocoinprestigeortranscendupgrades === true) {\n            achievementaward(69);\n        }\n        if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades === true) {\n            achievementaward(70);\n        }\n        if (G['reincarnationPointGain'].gte(1)) {\n            achievementaward(50);\n        }\n        if (G['reincarnationPointGain'].gte(1e5)) {\n            achievementaward(51);\n        }\n        if (G['reincarnationPointGain'].gte(1e30)) {\n            achievementaward(52);\n        }\n        if (G['reincarnationPointGain'].gte(1e200)) {\n            achievementaward(53);\n        }\n        if (G['reincarnationPointGain'].gte(\"1e1500\")) {\n            achievementaward(54);\n        }\n        if (G['reincarnationPointGain'].gte(\"1e5000\")) {\n            achievementaward(55);\n        }\n        if (G['reincarnationPointGain'].gte(\"1e7777\")) {\n            achievementaward(56);\n        }\n    }\n};\nconst challengeCompletionsBar = [\n    [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\n    [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\n    [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98],\n    [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\n    [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\n    [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\n    [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\n    [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\n    [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\n    [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147]\n];\nconst challengeCompletionsNotAuto = {\n    1: ['1e1000', 75],\n    2: ['1e1000', 76],\n    3: ['1e99999', 77],\n    5: ['1e120000', 63]\n};\nexport const challengeachievementcheck = (i, auto) => {\n    const generatorcheck = sumContents(player.upgrades.slice(101, 106));\n    for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\n        if (player.challengecompletions[i] > bar) {\n            achievementaward(ach);\n        }\n    }\n    if ([1, 2, 3, 5].includes(i) && !auto) {\n        const [gte, ach] = challengeCompletionsNotAuto[i];\n        if (i === 5) {\n            if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\n                achievementaward(ach);\n            }\n        }\n        else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\n            achievementaward(ach);\n        }\n    }\n    if (i >= 11 && i <= 14) {\n        const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30];\n        for (let j = 1; j <= 7; j++) {\n            if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\n                achievementaward(119 + 7 * i + j);\n            }\n        }\n    }\n};\nconst buildAchievementReq = [\n    () => player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5,\n    () => player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5,\n    () => player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5,\n    () => player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5,\n    () => player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5,\n    () => player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5,\n    () => player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5,\n    () => player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5,\n    () => player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5,\n    () => player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5,\n    () => player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5,\n    () => player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5,\n    () => player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5,\n    () => player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5,\n    () => player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5,\n    () => player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5,\n    () => player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5,\n    () => player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5,\n    () => player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5,\n    () => player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5,\n    () => player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5,\n    () => player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5,\n    () => player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5,\n    () => player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5,\n    () => player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5,\n    () => player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5,\n    () => player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5,\n    () => player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5,\n    () => player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5,\n    () => player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5,\n    () => player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5,\n    () => player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5,\n    () => player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5,\n    () => player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5,\n    () => player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5,\n];\nexport const buildingAchievementCheck = () => {\n    for (const req of buildAchievementReq) {\n        if (req()) {\n            const idx = buildAchievementReq.indexOf(req) + 1;\n            achievementaward(idx);\n        }\n    }\n};\nexport const ascensionAchievementCheck = (i, score = 0) => {\n    if (i === 1) {\n        const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213];\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\n                achievementaward(182 + j);\n            }\n        }\n        if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\n            achievementaward(240);\n        }\n    }\n    if (i === 2) {\n        const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, \"1.8e308\"];\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\n                achievementaward(189 + j);\n            }\n        }\n    }\n    if (i === 3) {\n        const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10];\n        for (let j = 1; j <= 7; j++) {\n            if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\n                achievementaward(224 + j);\n            }\n        }\n    }\n};\nexport const achievementdescriptions = (i) => {\n    const y = adesc[`adesc${i}`];\n    const z = player.achievements[i] > 0.5 ? ' COMPLETED!' : '';\n    const k = areward[`areward${i}`] || '';\n    document.getElementById(\"achievementdescription\").textContent = y + z;\n    document.getElementById(\"achievementreward\").textContent = \"Reward: \" + achievementpointvalues[i] + \" AP. \" + achievementpointvalues[i] + \" Quarks! \" + k;\n    if (player.achievements[i] > 0.5) {\n        document.getElementById(\"achievementdescription\").style.color = \"gold\";\n    }\n    else {\n        document.getElementById(\"achievementdescription\").style.color = \"white\";\n    }\n};\nexport const achievementaward = (num) => {\n    if (player.achievements[num] < 0.5) {\n        player.achievementPoints += achievementpointvalues[num];\n        player.worlds += achievementpointvalues[num];\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\";\n        player.achievements[num] = 1;\n        revealStuff();\n    }\n    document.getElementById(`ach${num}`).style.backgroundColor = \"Green\";\n    Synergism.emit('achievement', num);\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport { calculateRuneLevels } from './Calculate';\nimport { achievementaward } from './Achievements';\nconst talismanResourceCosts = {\n    shard: {\n        obtainium: 1e13,\n        offerings: 1e2,\n        name: \"Talisman Shard\"\n    },\n    commonFragment: {\n        obtainium: 1e14,\n        offerings: 1e4,\n        name: \"Common Fragment\"\n    },\n    uncommonFragment: {\n        obtainium: 1e16,\n        offerings: 1e5,\n        name: \"Uncommon Fragment\"\n    },\n    rareFragment: {\n        obtainium: 1e18,\n        offerings: 1e6,\n        name: \"Rare Fragment\"\n    },\n    epicFragment: {\n        obtainium: 1e20,\n        offerings: 1e7,\n        name: \"Epic Fragment\"\n    },\n    legendaryFragment: {\n        obtainium: 1e22,\n        offerings: 1e8,\n        name: \"Legendary Fragment\"\n    },\n    mythicalFragment: {\n        obtainium: 1e24,\n        offerings: 1e9,\n        name: \"Mythical Fragment\"\n    },\n};\nconst getTalismanResourceInfo = (type, percentage = player.buyTalismanShardPercent) => {\n    const obtainiumCost = talismanResourceCosts[type].obtainium;\n    const offeringCost = talismanResourceCosts[type].offerings;\n    const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost));\n    const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)));\n    const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)));\n    const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false;\n    return {\n        canBuy: canBuy,\n        buyAmount: amountToBuy,\n        obtainiumCost: obtainiumCost * amountToBuy,\n        offeringCost: offeringCost * amountToBuy\n    };\n};\nexport const updateTalismanCostDisplay = (type, percentage = player.buyTalismanShardPercent) => {\n    const el = document.getElementById(\"talismanFragmentCost\");\n    const talismanCostInfo = getTalismanResourceInfo(type, percentage);\n    const TalismanName = talismanResourceCosts[type].name;\n    el.textContent = \"Cost to buy \" + format(talismanCostInfo.buyAmount) + \" \" + TalismanName + (talismanCostInfo.buyAmount > 1 ? \"s\" : \"\") + \": \" + format(talismanCostInfo.obtainiumCost) + \" Obtainium and \" + format(talismanCostInfo.offeringCost) + \" offerings.\";\n};\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\n    document.getElementById(\"talismanTen\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"talismanTwentyFive\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"talismanFifty\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"talismanHundred\").style.backgroundColor = \"#171717\";\n    player.buyTalismanShardPercent = i;\n    let x = \"Ten\";\n    if (i === 25) {\n        x = \"TwentyFive\";\n    }\n    if (i === 50) {\n        x = \"Fifty\";\n    }\n    if (i === 100) {\n        x = \"Hundred\";\n    }\n    document.getElementById(\"talisman\" + x).style.backgroundColor = \"green\";\n};\nexport const updateTalismanInventory = () => {\n    document.getElementById(\"talismanShardInventory\").textContent = format(player.talismanShards);\n    document.getElementById(\"commonFragmentInventory\").textContent = format(player.commonFragments);\n    document.getElementById(\"uncommonFragmentInventory\").textContent = format(player.uncommonFragments);\n    document.getElementById(\"rareFragmentInventory\").textContent = format(player.rareFragments);\n    document.getElementById(\"epicFragmentInventory\").textContent = format(player.epicFragments);\n    document.getElementById(\"legendaryFragmentInventory\").textContent = format(player.legendaryFragments);\n    document.getElementById(\"mythicalFragmentInventory\").textContent = format(player.mythicalFragments);\n};\nexport const buyTalismanResources = (type, percentage = player.buyTalismanShardPercent) => {\n    const talismanResourcesData = getTalismanResourceInfo(type, percentage);\n    if (talismanResourcesData.canBuy) {\n        if (type === 'shard') {\n            player.talismanShards += talismanResourcesData.buyAmount;\n        }\n        else {\n            player[type + 's'] += talismanResourcesData.buyAmount;\n        }\n        if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\n            achievementaward(239);\n        }\n        player.researchPoints -= talismanResourcesData.obtainiumCost;\n        player.runeshards -= talismanResourcesData.offeringCost;\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n    }\n    updateTalismanCostDisplay(type, percentage);\n    updateTalismanInventory();\n};\nexport const showTalismanEffect = (i) => {\n    document.getElementById(\"talismanlevelup\").style.display = \"none\";\n    document.getElementById(\"talismanEffect\").style.display = \"block\";\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    const a = document.getElementById(\"talismanSummary\");\n    const b = document.getElementById(\"talismanBonus\");\n    const c = document.getElementById(\"talismanRune1Effect\");\n    const d = document.getElementById(\"talismanRune2Effect\");\n    const e = document.getElementById(\"talismanRune3Effect\");\n    const f = document.getElementById(\"talismanRune4Effect\");\n    const g = document.getElementById(\"talismanRune5Effect\");\n    const h = document.getElementById(\"talismanMythicEffect\");\n    switch (i) {\n        case 1:\n            a.textContent = \"=-=-=-= Exemption Talisman Effects =-=-=-=\";\n            b.textContent = \"Taxes -\" + format(10 * (player.talismanRarity[1 - 1] - 1)) + \"%\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman1Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman1Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman1Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman1Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman1Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Duplication Rune Levels!\";\n            break;\n        case 2:\n            a.textContent = \"=-=-=-= Chronos Talisman Effects =-=-=-=\";\n            b.textContent = \"Gain +\" + format(10 * (player.talismanRarity[2 - 1] - 1)) + \"% Global Speed Acceleration.\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman2Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman2Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman2Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman2Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman2Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Speed Rune Levels!\";\n            break;\n        case 3:\n            a.textContent = \"=-=-=-= Midas Talisman Effects =-=-=-=\";\n            b.textContent = \"Rune Blessing bonuses +\" + format(10 * (player.talismanRarity[3 - 1] - 1)) + \"%\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman3Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman3Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman3Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman3Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman3Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Thrift Rune Levels!\";\n            break;\n        case 4:\n            a.textContent = \"=-=-=-= Metaphysics Talisman Effects =-=-=-=\";\n            b.textContent = \"Talismans' Bonus Rune Levels +\" + format(0.05 * (player.talismanRarity[4 - 1] - 1), 2) + \" per level\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman4Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman4Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman4Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman4Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman4Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Prism Rune Levels!\";\n            break;\n        case 5:\n            a.textContent = \"=-=-=-= Polymath Talisman Effects =-=-=-=\";\n            b.textContent = \"Rune Spirit Bonuses +\" + format(1 * (player.talismanRarity[5 - 1] - 1)) + \"%\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman5Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman5Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman5Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman5Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman5Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 SI Rune Levels!\";\n            break;\n        case 6:\n            a.textContent = \"=-=-=-= Mortuus Est Talisman Effects =-=-=-=\";\n            b.textContent = \"Bonus Ant Levels: +\" + format(2 * (player.talismanRarity[6 - 1] - 1));\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman6Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman6Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman6Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman6Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman6Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: Gain ant speed based on your total rune level!\";\n            break;\n        case 7:\n            a.textContent = \"=-=-=-= Plastic Talisman Effects =-=-=-=\";\n            b.textContent = \"Gain 1x normal production\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman7Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman7Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman7Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman7Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman7Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +2 Quarks per Hour on Export!\";\n            break;\n    }\n    if (player.talismanRarity[i - 1] !== 6) {\n        h.textContent = \"Get Max Enhance for a Mythical bonus effect!\";\n    }\n};\nexport const showTalismanPrices = (i) => {\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\n    document.getElementById(\"talismanlevelup\").style.display = \"block\";\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    const a = document.getElementById(\"talismanShardCost\");\n    const b = document.getElementById(\"talismanCommonFragmentCost\");\n    const c = document.getElementById(\"talismanUncommonFragmentCost\");\n    const d = document.getElementById(\"talismanRareFragmentCost\");\n    const e = document.getElementById(\"talismanEpicFragmentCost\");\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\");\n    const g = document.getElementById(\"talismanMythicalFragmentCost\");\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"-=-=- Resources Required to Level Up -=-=-\";\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"silver\";\n    let m = G['talismanLevelCostMultiplier'][i];\n    if (player.talismanLevels[i - 1] >= 120) {\n        m *= (player.talismanLevels[i - 1] - 90) / 30;\n    }\n    if (player.talismanLevels[i - 1] >= 150) {\n        m *= (player.talismanLevels[i - 1] - 120) / 30;\n    }\n    if (player.talismanLevels[i - 1] >= 180) {\n        m *= (player.talismanLevels[i - 1] - 170) / 10;\n    }\n    a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3))));\n    b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3))));\n    c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3))));\n    d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3))));\n    e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3))));\n    f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3))));\n    g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3))));\n};\nexport const showEnhanceTalismanPrices = (i) => {\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\n    document.getElementById(\"talismanlevelup\").style.display = \"block\";\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    const a = document.getElementById(\"talismanShardCost\");\n    const b = document.getElementById(\"talismanCommonFragmentCost\");\n    const c = document.getElementById(\"talismanUncommonFragmentCost\");\n    const d = document.getElementById(\"talismanRareFragmentCost\");\n    const e = document.getElementById(\"talismanEpicFragmentCost\");\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\");\n    const g = document.getElementById(\"talismanMythicalFragmentCost\");\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"=-=-= Resources Required to ENHANCE =-=-=\";\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"gold\";\n    const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\n    const index = player.talismanRarity[i - 1];\n    const costArray = array[index - 1];\n    const m = G['talismanLevelCostMultiplier'][i];\n    a.textContent = format(m * costArray[1]);\n    b.textContent = format(m * costArray[2]);\n    c.textContent = format(m * costArray[3]);\n    d.textContent = format(m * costArray[4]);\n    e.textContent = format(m * costArray[5]);\n    f.textContent = format(m * costArray[6]);\n    g.textContent = format(m * costArray[7]);\n};\nexport const showRespecInformation = (i) => {\n    G['talismanRespec'] = i;\n    const num = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"];\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\n    document.getElementById(\"talismanlevelup\").style.display = \"none\";\n    document.getElementById(\"talismanrespec\").style.display = \"block\";\n    const runeName = [\"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\n    const runeModifier = [\"Positive\", \"Positive\", \"Positive\", \"Positive\"];\n    if (i <= 7) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = player[\"talisman\" + num[i - 1]][k];\n        }\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm [-100,000 Offerings]\";\n    }\n    if (i === 8) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = 1;\n        }\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm ALL [-400,000 Offerings]\";\n    }\n    for (let j = 1; j <= 5; j++) {\n        if (G['mirrorTalismanStats'][j] === 1) {\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid limegreen\";\n            runeModifier[j - 1] = \"Positive\";\n        }\n        else if (G['mirrorTalismanStats'][j] === -1) {\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid crimson\";\n            runeModifier[j - 1] = \"Negative\";\n        }\n        document.getElementById(\"talismanRespecButton\" + j).textContent = runeName[j - 1] + \": \" + runeModifier[j - 1];\n    }\n    document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n};\nexport const changeTalismanModifier = (i) => {\n    const runeName = [null, \"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\n    const el = document.getElementById(\"talismanRespecButton\" + i);\n    if (G['mirrorTalismanStats'][i] === 1) {\n        G['mirrorTalismanStats'][i] = (-1);\n        el.textContent = runeName[i] + \": Negative\";\n        el.style.border = \"2px solid crimson\";\n    }\n    else {\n        G['mirrorTalismanStats'][i] = (1);\n        el.textContent = runeName[i] + \": Positive\";\n        el.style.border = \"2px solid limegreen\";\n    }\n    const checkSum = G['mirrorTalismanStats'].reduce(function (a, b) {\n        return a + b;\n    }, 0);\n    if (checkSum === 1) {\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"block\";\n    }\n    else {\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n    }\n};\nexport const respecTalismanConfirm = (i) => {\n    const num = [null, \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"];\n    if (player.runeshards >= 100000 && i <= 7) {\n        for (let j = 1; j <= 5; j++) {\n            player[\"talisman\" + num[i]][j] = G['mirrorTalismanStats'][j];\n        }\n        player.runeshards -= 100000;\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\n        showTalismanEffect(i);\n    }\n    else if (player.runeshards >= 400000 && i === 8) {\n        player.runeshards -= 400000;\n        for (let j = 1; j <= 7; j++) {\n            for (let k = 1; k <= 5; k++) {\n                player[\"talisman\" + num[j]][k] = G['mirrorTalismanStats'][k];\n            }\n        }\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n    }\n    calculateRuneLevels();\n};\nexport const respecTalismanCancel = (i) => {\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    if (i <= 7) {\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\n        showTalismanEffect(i);\n    }\n};\nexport const updateTalismanAppearance = (i) => {\n    const el = document.getElementById(\"talisman\" + i);\n    const la = document.getElementById(\"talisman\" + i + \"level\");\n    const rarity = player.talismanRarity[i - 1];\n    if (rarity === 1) {\n        el.style.border = \"4px solid white\";\n        la.style.color = \"white\";\n    }\n    if (rarity === 2) {\n        el.style.border = \"4px solid limegreen\";\n        la.style.color = \"limegreen\";\n    }\n    if (rarity === 3) {\n        el.style.border = \"4px solid lightblue\";\n        la.style.color = \"lightblue\";\n    }\n    if (rarity === 4) {\n        el.style.border = \"4px solid plum\";\n        la.style.color = \"plum\";\n    }\n    if (rarity === 5) {\n        el.style.border = \"4px solid orange\";\n        la.style.color = \"orange\";\n    }\n    if (rarity === 6) {\n        el.style.border = \"4px solid crimson\";\n        la.style.color = \"crimson\";\n    }\n};\nexport const buyTalismanLevels = (i, auto = false) => {\n    let max = 1;\n    if (player.ascensionCount > 0) {\n        max = 30;\n    }\n    for (let j = 1; j <= max; j++) {\n        let checkSum = 0;\n        let priceMult = G['talismanLevelCostMultiplier'][i];\n        if (player.talismanLevels[i - 1] >= 120) {\n            priceMult *= (player.talismanLevels[i - 1] - 90) / 30;\n        }\n        if (player.talismanLevels[i - 1] >= 150) {\n            priceMult *= (player.talismanLevels[i - 1] - 120) / 30;\n        }\n        if (player.talismanLevels[i - 1] >= 180) {\n            priceMult *= (player.talismanLevels[i - 1] - 170) / 10;\n        }\n        if (player.talismanLevels[i - 1] < (player.talismanRarity[i - 1] * 30 + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400))) {\n            if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3)))) {\n                checkSum++;\n            }\n            if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3)))) {\n                checkSum++;\n            }\n            if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3)))) {\n                checkSum++;\n            }\n            if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3)))) {\n                checkSum++;\n            }\n            if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3)))) {\n                checkSum++;\n            }\n            if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3)))) {\n                checkSum++;\n            }\n            if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3)))) {\n                checkSum++;\n            }\n        }\n        if (checkSum === 7) {\n            player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3)));\n            player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3)));\n            player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3)));\n            player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3)));\n            player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3)));\n            player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3)));\n            player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3)));\n            player.talismanLevels[i - 1] += 1;\n        }\n        else {\n            return false;\n        }\n    }\n    if (!auto) {\n        showTalismanPrices(i);\n        updateTalismanInventory();\n        calculateRuneLevels();\n    }\n    return true;\n};\nexport const buyTalismanEnhance = (i, auto = false) => {\n    let checkSum = 0;\n    if (player.talismanRarity[i - 1] < 6) {\n        const priceMult = G['talismanLevelCostMultiplier'][i];\n        const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\n        const index = player.talismanRarity[i - 1] - 1;\n        const costArray = array[index];\n        if (player.commonFragments >= priceMult * costArray[2]) {\n            checkSum++;\n        }\n        if (player.uncommonFragments >= priceMult * costArray[3]) {\n            checkSum++;\n        }\n        if (player.rareFragments >= priceMult * costArray[4]) {\n            checkSum++;\n        }\n        if (player.epicFragments >= priceMult * costArray[5]) {\n            checkSum++;\n        }\n        if (player.legendaryFragments >= priceMult * costArray[6]) {\n            checkSum++;\n        }\n        if (player.mythicalFragments >= priceMult * costArray[7]) {\n            checkSum++;\n        }\n        if (checkSum === 6) {\n            player.commonFragments -= (priceMult * costArray[2]);\n            player.uncommonFragments -= (priceMult * costArray[3]);\n            player.rareFragments -= (priceMult * costArray[4]);\n            player.epicFragments -= (priceMult * costArray[5]);\n            player.legendaryFragments -= (priceMult * costArray[6]);\n            player.mythicalFragments -= (priceMult * costArray[7]);\n            player.talismanRarity[i - 1] += 1;\n            updateTalismanAppearance(i);\n            if (!auto) {\n                showEnhanceTalismanPrices(i);\n                updateTalismanInventory();\n                calculateRuneLevels();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n","import { player, format } from './Synergism';\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels } from './Calculate';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nexport const displayRuneInformation = (i, updatelevelup = true) => {\n    const m = G['effectiveLevelMult'];\n    const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400));\n    const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1]);\n    if (i === 1) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/4)^1.25 Accelerator, +0.25% Accelerators per level. +1 Accelerator Boost every 20 levels!\";\n        }\n        document.getElementById(\"runeshowpower1\").textContent = \"Speed Rune Bonus: \" + \"+\" + format(Math.floor(Math.pow(G['rune1level'] * m / 4, 1.25))) + \" Accelerators, +\" + format((G['rune1level'] / 4 * m), 2, true) + \"% Accelerators, +\" + format(Math.floor(G['rune1level'] / 20 * m)) + \" Accelerator Boosts.\";\n    }\n    if (i === 2) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/10) Multipliers every 10th level, +0.25% Multipliers per level. Tax growth is delayed more for each level!\";\n        }\n        document.getElementById(\"runeshowpower2\").textContent = \"Duplication Rune Bonus: \" + \"+\" + format(Math.floor(G['rune2level'] * m / 10) * Math.floor(1 + G['rune2level'] * m / 10) / 2) + \" Multipliers, +\" + format(m * G['rune2level'] / 4, 1, true) + \"% Multipliers, -\" + (99.9 * (1 - Math.pow(6, -(G['rune2level'] * m) / 1000))).toPrecision(4) + \"% Tax Growth.\";\n    }\n    if (i === 3) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + (Level/2)^2 * 2^(Level/2) / 256)x Crystal Production. +1 free level for each Crystal upgrade per 16 levels!\";\n        }\n        document.getElementById(\"runeshowpower3\").textContent = \"Prism Rune Bonus: \" + \"All Crystal Producer production multiplied by \" + format(Decimal.pow(G['rune3level'] * m / 2, 2).times(Decimal.pow(2, G['rune3level'] * m / 2 - 8)).add(1), 3) + \", gain +\" + format(Math.floor(G['rune3level'] / 16 * m)) + \" free crystal levels.\";\n    }\n    if (i === 4) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+0.125% building cost growth delay per level, +0.0625% offering recycle chance per level [MAX: 25%], 2^((1000 - Level)/1100) Tax growth multiplier AFTER level 400\";\n        }\n        document.getElementById(\"runeshowpower4\").textContent = \"Thrift Rune Bonus: \" + \"Delay all producer cost increases by \" + (G['rune4level'] / 8 * m).toPrecision(3) + \"%. Offering recycle chance: +\" + Math.min(25, G['rune4level'] / 16) + \"%. -\" + (99 * (1 - Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100)))).toPrecision(4) + \"% Tax Growth\";\n    }\n    if (i === 5) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + level/200)x Obtainium, (1 + Level^2/2500)x Ant Hatch Speed, +0.005 base offerings for each tier per level\";\n        }\n        document.getElementById(\"runeshowpower5\").textContent = \"S. Intellect Rune Bonus: \" + \"Obtainium gain x\" + format((1 + G['rune5level'] / 200 * m * SILevelMult), 2, true) + \". Ant Speed: x\" + format(1 + Math.pow(G['rune5level'] * m * SILevelMult, 2) / 2500) + \". Base Offerings: +\" + format((G['rune5level'] * m * SILevelMult * 0.005), 3, true);\n    }\n    if (updatelevelup) {\n        const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount);\n        let offerings = 0;\n        let j = 0;\n        while (offerings < player.runeshards && j < arr.length) {\n            offerings += arr[j];\n            j++;\n        }\n        const check = player.offeringbuyamount === j && offerings <= player.runeshards;\n        const s = player.offeringbuyamount === 1 ? \"once\" : `${check ? j : Math.max(j - 1, 0)} times`;\n        document.getElementById(\"runeDisplayInfo\").textContent = `+${format(amountPerOffering)} EXP per offering. ${format(offerings)} Offerings to level up ${s}.`;\n    }\n};\nexport const resetofferings = (input) => {\n    player.runeshards += calculateOfferings(input);\n};\nexport const redeemShards = (runeIndexPlusOne, auto = false, cubeUpgraded = 0) => {\n    const runeIndex = runeIndexPlusOne - 1;\n    const unlockedRune = [\n        true,\n        player.achievements[38] > 0.5,\n        player.achievements[44] > 0.5,\n        player.achievements[102] > 0.5,\n        player.researches[82] > 0.5\n    ];\n    let levelsToAdd = player.offeringbuyamount;\n    if (auto) {\n        levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAuto);\n    }\n    if (auto && cubeUpgraded > 0) {\n        levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1));\n    }\n    let levelsAdded = 0;\n    if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune[runeIndex]) {\n        let all = 0;\n        const maxLevel = calculateMaxRunes(runeIndex + 1);\n        const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd);\n        let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0));\n        if (cubeUpgraded > 0) {\n            toSpendTotal = Math.min(player.runeshards, cubeUpgraded);\n        }\n        const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true);\n        const a = player.upgrades[71] / 25;\n        const add = fact[0] - a * player.runelevels[runeIndex];\n        const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1);\n        while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\n            const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex];\n            const expPerOff = (add + a * player.runelevels[runeIndex]) * mult;\n            let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff));\n            if (toSpend === undefined || isNaN(toSpend)) {\n                toSpend = toSpendTotal;\n            }\n            toSpendTotal -= toSpend;\n            player.runeshards -= toSpend;\n            player.runeexp[runeIndex] += toSpend * expPerOff;\n            all += toSpend;\n            while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\n                player.runelevels[runeIndex] += 1;\n                levelsAdded++;\n            }\n        }\n        for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\n            if (unlockedRune[runeToUpdate]) {\n                if (runeToUpdate !== runeIndex) {\n                    player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true);\n                }\n                while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\n                    player.runelevels[runeToUpdate] += 1;\n                }\n            }\n        }\n        displayRuneInformation(runeIndexPlusOne);\n    }\n    calculateRuneLevels();\n    if (player.runeshards < 0 || player.runeshards === undefined) {\n        player.runeshards = 0;\n    }\n};\nexport const calculateOfferingsToLevelXTimes = (runeIndex, runeLevel, levels) => {\n    let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex];\n    const maxLevel = calculateMaxRunes(runeIndex + 1);\n    const arr = [];\n    let sum = 0;\n    const off = player.runeshards;\n    let levelsAdded = 0;\n    const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true);\n    const a = player.upgrades[71] / 25;\n    const add = fact[0] - a * runeLevel;\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1);\n    while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\n        const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult;\n        const amount = Math.ceil(exp / expPerOff);\n        sum += amount;\n        arr.push(amount);\n        levelsAdded += 1;\n        exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1);\n    }\n    return arr;\n};\n","import { player, updateAllTick, updateAllMultiplier, format } from './Synergism';\nimport { CalcECC } from './Challenges';\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { smallestInc } from './Utility';\nimport { upgradeupdate, crystalupgradedescriptions } from './Upgrades';\nimport { reset } from './Reset';\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate';\nimport { Globals as G } from './Variables';\nexport const getReductionValue = () => {\n    let reduction = 1;\n    reduction += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    reduction += CalcECC('transcend', player.challengecompletions[4]) / 200;\n    reduction += Math.min(99999.9, (3 * (player.antUpgrades[7 - 1] + G['bonusant7'])) / 100);\n    return reduction;\n};\nconst getCostAccelerator = (buyingTo) => {\n    --buyingTo;\n    const originalCost = 500;\n    let cost = new Decimal(originalCost);\n    cost = cost.times(Decimal.pow(4 / G['costDivisor'], buyingTo));\n    if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const multBit = Decimal.pow(4, num);\n        cost = cost.times(multBit.times(factorialBit));\n    }\n    if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2;\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    return cost;\n};\nexport const buyAccelerator = (autobuyer) => {\n    let buyTo = player.acceleratorBought + 1;\n    let cashToBuy = getCostAccelerator(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getCostAccelerator(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!autobuyer && player.coinbuyamount !== \"max\") {\n        if (player.acceleratorBought + player.coinbuyamount < buyTo) {\n            buyTo = player.acceleratorBought + player.coinbuyamount;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player.acceleratorBought + 1);\n    let thisCost = getCostAccelerator(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        player.coins = player.coins.sub(thisCost);\n        player.acceleratorBought = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getCostAccelerator(buyFrom);\n        player.acceleratorCost = thisCost;\n    }\n    player.prestigenoaccelerator = false;\n    player.transcendnoaccelerator = false;\n    player.reincarnatenoaccelerator = false;\n    updateAllTick();\n    if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\n        achievementaward(148);\n    }\n    if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\n        achievementaward(149);\n    }\n    if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\n        achievementaward(150);\n    }\n    if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\n        achievementaward(151);\n    }\n    if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\n        achievementaward(152);\n    }\n    if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\n        achievementaward(153);\n    }\n    if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\n        achievementaward(154);\n    }\n};\nconst getCostMultiplier = (buyingTo) => {\n    --buyingTo;\n    const originalCost = 1e5;\n    let cost = new Decimal(originalCost);\n    cost = cost.times(Decimal.pow(10, buyingTo / G['costDivisor']));\n    if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const powBit = Decimal.pow(10, num);\n        cost = cost.times(factorialBit.times(powBit));\n    }\n    if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2;\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    return cost;\n};\nexport const buyMultiplier = (autobuyer) => {\n    let buyTo = player.multiplierBought + 1;\n    let cashToBuy = getCostMultiplier(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getCostMultiplier(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!autobuyer && player.coinbuyamount !== \"max\") {\n        if (player.multiplierBought + player.coinbuyamount < buyTo) {\n            buyTo = player.multiplierBought + player.coinbuyamount;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player.multiplierBought + 1);\n    let thisCost = getCostMultiplier(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        player.coins = player.coins.sub(thisCost);\n        player.multiplierBought = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getCostMultiplier(buyFrom);\n        player.multiplierCost = thisCost;\n    }\n    player.prestigenomultiplier = false;\n    player.transcendnomultiplier = false;\n    player.reincarnatenomultiplier = false;\n    updateAllMultiplier();\n    if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\n        achievementaward(155);\n    }\n    if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\n        achievementaward(156);\n    }\n    if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\n        achievementaward(157);\n    }\n    if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\n        achievementaward(158);\n    }\n    if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\n        achievementaward(159);\n    }\n    if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\n        achievementaward(160);\n    }\n    if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\n        achievementaward(161);\n    }\n};\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI);\nconst exponentFactorialPartExtra = Math.log10(Math.E);\nconst factorialByExponent = (fact) => {\n    if (++fact === 0) {\n        return 0;\n    }\n    return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2);\n};\nconst fact100exponent = Math.log10(9.3326215443944152681699238856267e+157);\nconst precision16_loss_addition_of_ones = 188.582;\nconst known_log10s = function () {\n    const needed = [1.03, 1.25];\n    const nums = [1, 2, 3, 4, 5, 6, 10, 15];\n    for (const num of nums) {\n        needed.push(100 + (100 * num));\n        needed.push(10 + (10 * num));\n    }\n    const chalcompletions = 1000;\n    for (let i = 0; i < chalcompletions; ++i) {\n        needed.push(1 + (i / 2));\n    }\n    const obj = {};\n    for (const need of needed) {\n        if (obj[need] === undefined) {\n            obj[need] = Math.log10(need);\n        }\n    }\n    return obj;\n}();\nexport const getCost = (originalCost, buyingTo, type, num, r) => {\n    --buyingTo;\n    const cost = new Decimal(originalCost);\n    let mlog10125 = num * buyingTo;\n    if (buyingTo < precision16_loss_addition_of_ones / num) {\n        cost.mantissa += buyingTo / Math.pow(10, cost.exponent);\n    }\n    let fastFactMultBuyTo = 0;\n    let fr = Math.floor(r * 1000);\n    if (buyingTo >= r * 1000) {\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr);\n    }\n    fr = Math.floor(r * 5000);\n    if (buyingTo >= r * 5000) {\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1;\n    }\n    fr = Math.floor(r * 20000);\n    if (buyingTo >= r * 20000) {\n        fastFactMultBuyTo += 3;\n        cost.exponent -= factorialByExponent(fr) * 3;\n        cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr);\n    }\n    fr = Math.floor(r * 250000);\n    if (buyingTo >= r * 250000) {\n        cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2);\n    }\n    cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo;\n    let fastFactMultBuyTo100 = 0;\n    if ((player.currentChallenge.transcension === 4) && (type === \"Coin\" || type === \"Diamonds\")) {\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    if ((player.currentChallenge.reincarnation === 10) && (type === \"Coin\" || type === \"Diamonds\")) {\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (r * 25000)) {\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)));\n    cost.exponent += known_log10s[1.25] * mlog10125;\n    fr = Math.floor(r * 1000 * player.challengecompletions[8]);\n    if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\n        cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr);\n    }\n    const extra = cost.exponent - Math.floor(cost.exponent);\n    cost.exponent = Math.floor(cost.exponent);\n    cost.mantissa *= Math.pow(10, extra);\n    cost.normalize();\n    return cost;\n};\nexport const buyMax = (pos, type, num, originalCost) => {\n    const r = getReductionValue();\n    let tag = '';\n    switch (type) {\n        case 'Diamonds':\n            tag = 'prestigePoints';\n            break;\n        case 'Mythos':\n            tag = 'transcendPoints';\n            break;\n        case 'Particles':\n            tag = 'reincarnationPoints';\n            break;\n        case 'Coin':\n            tag = 'coins';\n            break;\n    }\n    const buyStart = player[pos + 'Owned' + type];\n    let buyInc = 1;\n    let cashToBuy = getCost(originalCost, buyStart + buyInc, type, num, r);\n    while (player[tag].gte(cashToBuy)) {\n        buyInc = buyInc * 4;\n        cashToBuy = getCost(originalCost, buyStart + buyInc, type, num, r);\n    }\n    let stepdown = Math.floor(buyInc / 8);\n    while (stepdown !== 0) {\n        if (getCost(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\n        }\n    }\n    let buyFrom = Math.max(buyStart + buyInc - 7, player[pos + 'Owned' + type] + 1);\n    let thisCost = getCost(originalCost, buyFrom, type, num, r);\n    while (buyFrom < buyStart + buyInc && player[tag].gte(thisCost)) {\n        player[tag] = player[tag].sub(thisCost);\n        player[pos + 'Owned' + type] = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getCost(originalCost, buyFrom, type, num, r);\n        player[pos + 'Cost' + type] = thisCost;\n    }\n};\nconst buyProducerTypes = {\n    Diamonds: ['prestigePoints', 'crystal'],\n    Mythos: ['transcendPoints', 'mythos'],\n    Particles: ['reincarnationPoints', 'particle'],\n    Coin: ['coins', 'coin']\n};\nexport const buyProducer = (pos, type, num, autobuyer) => {\n    const [tag, amounttype] = buyProducerTypes[type];\n    const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount`];\n    let r = 1;\n    r += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    r += CalcECC('transcend', player.challengecompletions[4]) / 200;\n    r += (3 * (G['bonusant7'] + player.antUpgrades[7 - 1])) / 100;\n    while (player[tag].gte(player[pos + 'Cost' + type]) && G['ticker'] < buythisamount) {\n        player[tag] = player[tag].sub(player[pos + 'Cost' + type]);\n        player[pos + 'Owned' + type] += 1;\n        player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.25, num));\n        player[pos + 'Cost' + type] = player[pos + 'Cost' + type].add(1);\n        if (player[pos + 'Owned' + type] >= (1000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(player[pos + 'Owned' + type]).dividedBy(1000).times(1 + num / 2);\n        }\n        if (player[pos + 'Owned' + type] >= (5000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(player[pos + 'Owned' + type]).times(10).times(10 + num * 10);\n        }\n        if (player[pos + 'Owned' + type] >= (20000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(player[pos + 'Owned' + type], 3)).times(100000).times(100 + num * 100);\n        }\n        if (player[pos + 'Owned' + type] >= (250000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.03, player[pos + 'Owned' + type] - 250000 * r));\n        }\n        if (player.currentChallenge.transcension === 4 && (type === \"Coin\" || type === \"Diamonds\")) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Math.pow(100 * player[pos + 'Owned' + type] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]));\n            if (player[pos + 'Owned' + type] >= 1000 - (10 * player.challengecompletions[4])) {\n                player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.25, player[pos + 'Owned' + type]));\n            }\n        }\n        if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && player[pos + 'Owned' + type] >= (1000 * player.challengecompletions[8] * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(2, (player[pos + 'Owned' + type] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))));\n        }\n        G['ticker'] += 1;\n    }\n    G['ticker'] = 0;\n};\nexport const buyUpgrades = (type, pos, state) => {\n    let addendum = \"\";\n    if (type === \"prestige\" || type === \"transcend\" || type === \"reincarnation\") {\n        addendum = \"Point\";\n    }\n    if (player[type + addendum + 's'].gte(Decimal.pow(10, G['upgradeCosts'][pos])) && player.upgrades[pos] === 0) {\n        player[type + addendum + 's'] = player[type + addendum + 's'].sub(Decimal.pow(10, G['upgradeCosts'][pos]));\n        player.upgrades[pos] = 1;\n        upgradeupdate(pos, state);\n    }\n    if (type === \"transcend\") {\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === \"prestige\") {\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === \"coin\") {\n        player.prestigenocoinupgrades = false;\n        player.transcendnocoinupgrades = false;\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n};\nexport const calculateCrystalBuy = (i) => {\n    const u = i - 1;\n    const exponent = Decimal.log(player.prestigeShards.add(1), 10);\n    const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G['crystalUpgradesCost'][u]) / G['crystalUpgradeCostIncrement'][u] + 1 / 4), 1 / 2) + 1 / 2);\n    return toBuy;\n};\nexport const buyCrystalUpgrades = (i, auto = false) => {\n    const u = i - 1;\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10;\n    }\n    const toBuy = calculateCrystalBuy(i);\n    if (toBuy + c > player.crystalUpgrades[u]) {\n        player.crystalUpgrades[u] = 100 / 100 * (toBuy + c);\n        if (toBuy > 0) {\n            player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G['crystalUpgradesCost'][u] + G['crystalUpgradeCostIncrement'][u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)));\n            if (!auto) {\n                crystalupgradedescriptions(i);\n            }\n        }\n    }\n};\nexport const boostAccelerator = (automated) => {\n    let buyamount = 1;\n    if (player.upgrades[46] === 1) {\n        buyamount = automated ? 9999 : player.coinbuyamount;\n    }\n    if (player.upgrades[46] < 1) {\n        while (player.prestigePoints.gte(player.acceleratorBoostCost) && G['ticker'] < buyamount) {\n            if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\n                player.acceleratorBoostBought += 1;\n                player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought));\n                if (player.acceleratorBoostBought > (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4]))) {\n                    player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4])), 2) / (1 + 2 * G['effectiveRuneBlessingPower'][4])));\n                }\n                player.transcendnoaccelerator = false;\n                player.reincarnatenoaccelerator = false;\n                if (player.upgrades[46] < 0.5) {\n                    for (let j = 21; j < 41; j++) {\n                        player.upgrades[j] = 0;\n                    }\n                    reset(\"prestige\");\n                    player.prestigePoints = new Decimal(0);\n                }\n            }\n        }\n    }\n    else {\n        const buyStart = player.acceleratorBoostBought;\n        let buyInc = 1;\n        let cost = getAcceleratorBoostCost(buyStart + buyInc);\n        while (player.prestigePoints.gte(cost)) {\n            buyInc *= 4;\n            cost = getAcceleratorBoostCost(buyStart + buyInc);\n        }\n        let stepdown = Math.floor(buyInc / 8);\n        while (stepdown !== 0) {\n            if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            }\n            else {\n                buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\n            }\n        }\n        let buyFrom = Math.max(buyStart + buyInc - 7, player.acceleratorBoostBought + 1);\n        let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought);\n        while (buyFrom < buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\n            player.prestigePoints = player.prestigePoints.sub(thisCost);\n            player.acceleratorBoostBought = buyFrom;\n            buyFrom = buyFrom + smallestInc(buyInc);\n            thisCost = getAcceleratorBoostCost(buyFrom);\n            player.acceleratorBoostCost = thisCost;\n            player.transcendnoaccelerator = false;\n            player.reincarnatenoaccelerator = false;\n        }\n    }\n    G['ticker'] = 0;\n    if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\n        achievementaward(162);\n    }\n    if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\n        achievementaward(163);\n    }\n    if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\n        achievementaward(164);\n    }\n    if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\n        achievementaward(165);\n    }\n    if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\n        achievementaward(166);\n    }\n    if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\n        achievementaward(167);\n    }\n    if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\n        achievementaward(168);\n    }\n};\nconst getAcceleratorBoostCost = (level = 1) => {\n    level--;\n    const base = new Decimal(1e3);\n    const eff = 1 + 2 * G['effectiveRuneBlessingPower'][4];\n    const linSum = (n) => n * (n + 1) / 2;\n    const sqrSum = (n) => n * (n + 1) * (2 * n + 1) / 6;\n    if (level > 1000 * eff) {\n        return base.times(Decimal.pow(10, 10 * level\n            + linSum(level)\n            + sqrSum(level - 1000 * eff) / eff));\n    }\n    else {\n        return base.times(Decimal.pow(10, 10 * level + linSum(level)));\n    }\n};\nconst getParticleCost = (originalCost, buyTo) => {\n    --buyTo;\n    originalCost = new Decimal(originalCost);\n    let cost = originalCost.times(Decimal.pow(2, buyTo));\n    const DR = (player.currentChallenge.ascension !== 15) ? 325000 : 1000;\n    if (buyTo > DR) {\n        cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)));\n    }\n    return (cost);\n};\nexport const buyParticleBuilding = (pos, originalCost, autobuyer = false) => {\n    const key = `${pos}OwnedParticles`;\n    let buyTo = player[key] + 1;\n    let cashToBuy = getParticleCost(originalCost, buyTo);\n    while (player.reincarnationPoints.gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getParticleCost(originalCost, buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!autobuyer) {\n        if (player.particlebuyamount + player[key] < buyTo) {\n            buyTo = player[key] + player.particlebuyamount + 1;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player[key] + 1);\n    let thisCost = getParticleCost(originalCost, buyFrom);\n    while (buyFrom < buyTo && player.reincarnationPoints.gte(getParticleCost(originalCost, buyFrom))) {\n        player.reincarnationPoints = player.reincarnationPoints.sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getParticleCost(originalCost, buyFrom);\n        player[`${pos}CostParticles`] = thisCost;\n    }\n};\nexport const getTesseractCost = (intCost, index) => {\n    const buyFrom = player['ascendBuilding' + index]['owned'];\n    const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2);\n    let buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((player.wowTesseracts + subCost) / intCost, 1 / 2), 1 / 2));\n    buyTo = Math.min(buyTo, player.tesseractbuyamount + player['ascendBuilding' + index]['owned']);\n    const actualCost = intCost * Math.pow(buyTo * (buyTo + 1) / 2, 2) - subCost;\n    return [buyTo, actualCost];\n};\nexport const buyTesseractBuilding = (intCost, index) => {\n    const buyTo = getTesseractCost(intCost, index)[0];\n    const actualCost = getTesseractCost(intCost, index)[1];\n    player['ascendBuilding' + index]['owned'] = buyTo;\n    player.wowTesseracts -= actualCost;\n    player['ascendBuilding' + index]['cost'] = intCost * Math.pow(1 + player['ascendBuilding' + index]['owned'], 3);\n};\nexport const buyRuneBonusLevels = (type, index) => {\n    let baseCost;\n    let baseLevels;\n    let levelCap;\n    (type === 'Spirits') ?\n        (baseCost = G['spiritBaseCost'], baseLevels = player.runeSpiritLevels[index], levelCap = player.runeSpiritBuyAmount) :\n        (baseCost = G['blessingBaseCost'], baseLevels = player.runeBlessingLevels[index], levelCap = player.runeBlessingBuyAmount);\n    const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap);\n    (type === 'Spirits') ?\n        player.runeSpiritLevels[index] = level :\n        player.runeBlessingLevels[index] = level;\n    player.runeshards -= cost;\n    if (index === 1) {\n        const requirementArray = [0, 1e5, 1e8, 1e11];\n        for (let i = 1; i <= 3; i++) {\n            if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\n                achievementaward(231 + i);\n            }\n            if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\n                achievementaward(234 + i);\n            }\n        }\n        if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\n            achievementaward(245);\n        }\n    }\n    calculateRuneBonuses();\n    if (type === 'Blessings') {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1];\n        const t = (index === 5) ? 1 : 0;\n        document.getElementById('runeBlessingPower' + index + 'Value1').textContent = format(G['runeBlessings'][index]);\n        document.getElementById('runeBlessingPower' + index + 'Value2').textContent = format(1 - t + blessingMultiplierArray[index] * G['effectiveRuneBlessingPower'][index], 4, true);\n    }\n    if (type === 'Spirits') {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100];\n        spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400);\n        const t = (index === 3) ? 1 : 0;\n        document.getElementById('runeSpiritPower' + index + 'Value1').textContent = format(G['runeSpirits'][index]);\n        document.getElementById('runeSpiritPower' + index + 'Value2').textContent = format(1 - t + spiritMultiplierArray[index] * G['effectiveRuneSpiritPower'][index], 4, true);\n    }\n};\n","import { upgradeupdate } from \"./Upgrades\";\nimport { player } from \"./Synergism\";\nimport Decimal from \"break_infinity.js\";\nimport { achievementaward } from \"./Achievements\";\nimport { revealStuff } from \"./UpdateHTML\";\nimport { Globals as G } from './Variables';\nexport const buyGenerator = (i, state) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true;\n    }\n    const q = 100 + i;\n    let type = \"transcendPoints\";\n    if (q <= 110 && q >= 106) {\n        type = \"coins\";\n    }\n    else if (q <= 115) {\n        type = \"prestigePoints\";\n    }\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105]);\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        if (achievementCheck === 0) {\n            if ([102, 103, 104, 105].includes(q)) {\n                achievementaward(q - 31);\n            }\n        }\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    revealStuff();\n};\n","import { player } from './Synergism';\nimport { achievementaward } from './Achievements';\nimport Decimal from 'break_infinity.js';\nimport { upgradeupdate } from './Upgrades';\nimport { revealStuff } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { buyUpgrades } from './Buy';\nconst buyGenerator = (i, state, auto) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true;\n    }\n    const q = 100 + i;\n    let type = \"transcendPoints\";\n    if (q <= 110 && q >= 106) {\n        type = \"coins\";\n    }\n    else if (q <= 115) {\n        type = \"prestigePoints\";\n    }\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105]);\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        if (achievementCheck === 0 && q >= 102 && q <= 105) {\n            achievementaward(q - 31);\n        }\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n    }\n    if (!auto) {\n        revealStuff();\n    }\n};\nexport const buyAutobuyers = (i, state) => {\n    const q = i + 80;\n    let type = \"\";\n    if (q <= 87) {\n        type = \"prestigePoints\";\n    }\n    else if (q <= 93) {\n        type = \"transcendPoints\";\n    }\n    else {\n        type = \"reincarnationPoints\";\n    }\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    if (player[type].gte(cost) && player.upgrades[q] === 0) {\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n    }\n};\nexport const autoUpgrades = () => {\n    if (player.upgrades[90] > 0.5 && player.shoptoggles.generators === true) {\n        for (let i = 1; i < 6; i++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + i)])) && player.shoptoggles.generators === true) {\n                buyGenerator(i, true, true);\n            }\n        }\n        for (let j = 6; j < 11; j++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][(100 + j)])) && player.shoptoggles.generators === true) {\n                buyGenerator(j, true, true);\n            }\n        }\n        for (let k = 11; k < 16; k++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + k)])) && player.shoptoggles.generators === true) {\n                buyGenerator(k, true, true);\n            }\n        }\n        for (let l = 16; l < 21; l++) {\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + l)])) && player.shoptoggles.generators === true) {\n                buyGenerator(l, true, true);\n            }\n        }\n    }\n    if (player.upgrades[91] > 0.5) {\n        for (let i = 1; i < 21; i++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true) {\n                buyUpgrades('coin', i, true);\n            }\n        }\n        for (let i = 121; i <= 125; i++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true && player.cubeUpgrades[19] > 0) {\n                buyUpgrades('coin', i, true);\n            }\n        }\n    }\n    if (player.upgrades[92] > 0.5) {\n        for (let i = 21; i < 38; i++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.prestige === true) {\n                buyUpgrades('prestige', i, true);\n            }\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige === true && player.achievements[120] === 1) {\n            buyUpgrades('prestige', 38, true);\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige === true && player.achievements[127] === 1) {\n            buyUpgrades('prestige', 39, true);\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige === true && player.achievements[134] === 1) {\n            buyUpgrades('prestige', 40, true);\n        }\n    }\n    if (player.upgrades[99] > 0.5) {\n        for (let i = 41; i < 61; i++) {\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.transcend === true) {\n                buyUpgrades('transcend', i, true);\n            }\n        }\n    }\n    if (player.cubeUpgrades[8] > 0) {\n        for (let i = 61; i <= 80; i++) {\n            if (player.reincarnationPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.reincarnate) {\n                buyUpgrades('reincarnation', i, true);\n            }\n        }\n    }\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { calculateAnts, calculateRuneLevels } from './Calculate';\nimport { sumContents } from './Utility';\nimport { buyUpgrades } from './Buy';\nimport { buyGenerator } from './Generators';\nimport { buyAutobuyers } from './Automation';\nimport { revealStuff } from './UpdateHTML';\nconst upgdesc = {\n    upgdesc1: \"Increase production of Workers per producer bought.\",\n    upgdesc2: \"Increase production of Investments per producer bought.\",\n    upgdesc3: \"Increase production of Printers per producer bought.\",\n    upgdesc4: \"Increase production of Mints per producer bought.\",\n    upgdesc5: \"Increase production of Alchemies per producer bought.\",\n    upgdesc6: \"Increase all production based on producer bought.\",\n    upgdesc7: \"Gain free multipliers based on your purchased Alchemies.\",\n    upgdesc8: \"Gain 1 free Accelerator per 7 purchased Multipliers.\",\n    upgdesc9: \"Gain 1 free Multiplier per 10 purchased Accelerators.\",\n    upgdesc10: \"Improve Workers based on the first 750 purchased Investments.\",\n    upgdesc11: \"Accelerators improve generation production by 2% each.\",\n    upgdesc12: \"Each prestige multiplies production by 1.01, multiplicatively (Max: 1e4x).\",\n    upgdesc13: \"Augments buff the production of Investments.\",\n    upgdesc14: \"Free Accelerators buff generation of Printers.\",\n    upgdesc15: \"Free Accelerators buff generation of Mints.\",\n    upgdesc16: \"Acceleration Multiplier buffs Diamond gain.\",\n    upgdesc17: \"Multiply Mint production by 1e+100.\",\n    upgdesc18: \"Multiply Printer production based on Mythos Shards.\",\n    upgdesc19: \"Multiply Investment production based on Mythos.\",\n    upgdesc20: \"Coin upgrade 1 is raised to the eleventh power.\",\n    upgdesc21: \"Gain 1 Multiplier and 5 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc22: \"Gain 1 Multiplier and 4 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc23: \"Gain 1 Multiplier and 3 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc24: \"Gain 1 Multiplier and 2 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc25: \"Gain 1 Multiplier and 1 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc26: \"Gain a free Accelerator Boost.\",\n    upgdesc27: \"Gain free Accelerators based on unspent Coins.\",\n    upgdesc28: \"Gain a free Multiplier per 160 Coin producers bought.\",\n    upgdesc29: \"Gain a free Accelerator per 80 Coin producers bought.\",\n    upgdesc30: \"Gain free Multipliers based on unspent Coins.\",\n    upgdesc31: \"Gain 1 free Accelerator Boost per 2,000 Coin producers bought.\",\n    upgdesc32: \"Gain free Accelerators based on Unspent Diamonds.\",\n    upgdesc33: \"Gain 1 free Multiplier for each Accelerator Boost owned.\",\n    upgdesc34: \"Gain 3% more free Multipliers.\",\n    upgdesc35: \"Gain 2% more free Multipliers.\",\n    upgdesc36: \"Multiply crystal production by Diamonds, maximum 1e5000x.\",\n    upgdesc37: \"Multiply mythos shard production by the squared logarithm of Diamonds.\",\n    upgdesc38: \"Gain +15% more offerings thanks to generous Discord Server Boosters!\",\n    upgdesc39: \"Gain +50% more Ant Speed thanks to generous Discord Server Boosters!\",\n    upgdesc40: \"Gain +25% more Ant Sacrifice rewards thanks to generous Discord Server Boosters!\",\n    upgdesc41: \"Multiply production based on unspent Mythos.\",\n    upgdesc42: \"Multiply Mythos Shard production based on unspent Diamonds.\",\n    upgdesc43: \"Multiply coin production by 1.01 per transcension (Max: 1e30x).\",\n    upgdesc44: \"Multiply Mythos gain on Transcend by 1.01 per transcension (Max: 1e6x).\",\n    upgdesc45: \"Gain free Accelerators based on Mythos Shards.\",\n    upgdesc46: \"Accelerator Boosts are 5% stronger and do not reset prestige features.\",\n    upgdesc47: \"Multiply Mythos Shard production based on your AP.\",\n    upgdesc48: \"Multiply production based on owned Accelerators and Multipliers.\",\n    upgdesc49: \"Gain free Multipliers based on unspent Mythos.\",\n    upgdesc50: \"Gain +25% free Accelerators and Multipliers, but ONLY while doing challenges.\",\n    upgdesc51: \"Increase production of all Mythos buildings based on owned Accelerator Boosts.\",\n    upgdesc52: \"Mythos building exponent +0.025.\",\n    upgdesc53: \"Augments produce more Shards based on Acceleration Multiplier.\",\n    upgdesc54: \"Wizards produce more Enchantments based on Multiplier.\",\n    upgdesc55: \"Grandmasters produce more Oracles based on Building power.\",\n    upgdesc56: \"Worker production is multiplied by 1e+5000.\",\n    upgdesc57: \"Investment production is multiplied by 1e+7500.\",\n    upgdesc58: \"Printer production is multiplied by 1e+15000.\",\n    upgdesc59: \"Coin Mint production is multiplied by 1e+25000.\",\n    upgdesc60: \"Alchemies production is multiplied by 1e+35000.\",\n    upgdesc61: \"Welcome to reincarnation! +5% Offering Recycle, +5 EXP/Offering!\",\n    upgdesc62: \"Completing challenges, automatically or manually, increase offerings gained in Reincarnation. Bonus subject to time multiplier!\",\n    upgdesc63: \"Crystal Production is multiplied based on Particles to the sixth power [Caps at 1e6000x].\",\n    upgdesc64: \"Mythos Shard Production is multiplied by your Particles squared.\",\n    upgdesc65: \"Multiply the gain of Particles from Reincarnation by 5x!\",\n    upgdesc66: \"When you use an Offering, every unlocked rune will get 3 free experience.\",\n    upgdesc67: \"Atom gain is increased by 3% per Particle producer purchased!\",\n    upgdesc68: \"Gain a free multiplier for every 1e1000x increase in tax.\",\n    upgdesc69: \"Gain more Obtainium based on your particle gain. [Works with automation at a reduced rate!]\",\n    upgdesc70: \"Time seems to go +0.333*log10(MAX obtainium +1)% faster when you buy this.\",\n    upgdesc71: \"Runes will gain (Rune Level/25) additional EXP per offering used.\",\n    upgdesc72: \"Obtainium gain from Reincarnations is multiplied (1 + 2C) where C is #Reincarnation Challenges completed, up to 50x!\",\n    upgdesc73: \"Gain +100% free accelerator boosts and +10 free Crystal Upgrade levels, but only in Reincarnation Challenges.\",\n    upgdesc74: \"Obtainium gain is increased based on highest ever unspent offerings. [Max: 100,000 unspent]\",\n    upgdesc75: \"Offering gain is increased based on highest ever unspent obtainium [Max: 30,000,000 obtainium]\",\n    upgdesc76: \"Ant generation kinda slow? I agree! Make all ant tiers 5x faster!\",\n    upgdesc77: \"This is Synergism, right? Let's make each purchased ant make all ants 0.4% faster.\",\n    upgdesc78: \"Gain an ant speed multiplier equivalent to (1 + 0.005 * (log10(MAX offerings + 1))^2).\",\n    upgdesc79: \"The Ant God will accept an arbitrary number of Particles in order to give you 10% more from sacrifices.\",\n    upgdesc80: \"The Ant God will accept a larger arbitrary number of Particles to give you more ant ELO.\",\n    upgdesc81: \"Automatically buy Workers if affordable.\",\n    upgdesc82: \"Automatically buy Investments if affordable.\",\n    upgdesc83: \"Automatically buy Printers if affordable.\",\n    upgdesc84: \"Automatically buy Coin Mints if affordable.\",\n    upgdesc85: \"Automatically buy Alchemies if affordable.\",\n    upgdesc86: \"Automatically buy Accelerators if affordable.\",\n    upgdesc87: \"Automatically buy Multipliers if affordable.\",\n    upgdesc88: \"Automatically buy Accelerator Boosts if affordable.\",\n    upgdesc89: \"Unlock Automatic Transcensions.\",\n    upgdesc90: \"Automatically buy from the Generator Shop.\",\n    upgdesc91: \"Automatically buy Coin Upgrades.\",\n    upgdesc92: \"Automatically buy Diamond Upgrades.\",\n    upgdesc93: \"Generate 1% of Diamond Gain from prestiging per second.\",\n    upgdesc94: \"Automatically buy Augments if affordable.\",\n    upgdesc95: \"Automatically buy Enchantments if affordable.\",\n    upgdesc96: \"Automatically buy Wizards if affordable.\",\n    upgdesc97: \"Automatically buy Oracles if affordable.\",\n    upgdesc98: \"Automatically buy Grandmasters if affordable.\",\n    upgdesc99: \"Automatically buy Mythos Upgrades if affordable.\",\n    upgdesc100: \"Generate 1% of Mythos Gain from transcending per second.\",\n    upgdesc101: \"Alchemies will produce Coin Mints.\",\n    upgdesc102: \"Coin Mints will produce Printers.\",\n    upgdesc103: \"Printers will produce Investments.\",\n    upgdesc104: \"Investments will produce Workers.\",\n    upgdesc105: \"Purchased Workers will produce Alchemies.\",\n    upgdesc106: \"Refineries can produce Alchemies equal to Refineries owned raised to 0.10\",\n    upgdesc107: \"Refinery -> Alchemy exponent increased from 0.10 to 0.25.\",\n    upgdesc108: \"Refinery -> Alchemy exponent increased from 0.25 to 0.50\",\n    upgdesc109: \"Refinery -> Alchemy exponent increased from 0.50 to 0.75\",\n    upgdesc110: \"Refinery -> Alchemy exponent increased from 0.75 to 1\",\n    upgdesc111: \"Augments can produce Pandora Boxes equal to Augments owned raised to 0.08\",\n    upgdesc112: \"Augment -> Box exponent increased from 0.08 to 0.16\",\n    upgdesc113: \"Augment -> Box exponent increased from 0.16 to 0.24\",\n    upgdesc114: \"Augment -> Box exponent increased from 0.24 to 0.32\",\n    upgdesc115: \"Augment -> Box exponent increased from 0.32 to 0.40\",\n    upgdesc116: \"Protons can produce Grandmasters equal to Protons owned raised to 0.05\",\n    upgdesc117: \"Protons -> Grandmaster exponent increased from 0.05 to 0.10\",\n    upgdesc118: \"Protons -> Grandmaster exponent increased from 0.10 to 0.15\",\n    upgdesc119: \"Protons -> Grandmaster exponent increased from 0.15 to 0.20\",\n    upgdesc120: \"Protons -> Grandmaster exponent increased from 0.20 to 0.25\",\n    upgdesc121: \"You probably autobought this. -50% taxes!\",\n    upgdesc122: \"Increase Crystal Upgrade 3 cap from +12% to +100%!\",\n    upgdesc123: \"Raise coin production to the power of 1.025. More EXPONENTS.\",\n    upgdesc124: \"Gain +3% more effective ELO.\",\n    upgdesc125: \"Constant Tax divisor is 0.333% stronger per challenge 10 completion. [Divisor^(1 + upgrade)]\"\n};\nconst crystalupgdesc = {\n    crystalupgdesc1: \"Gain a 5% multiplicative boost to crystals per AP per level.\",\n    crystalupgdesc2: \"Gain a boost to crystals based on held coins per level.\",\n    crystalupgdesc3: \"Each purchased Crystal producer increases generation of Crystal producers by .1% per level. [MAX: 12%]\",\n    crystalupgdesc4: \"Improve the multiplier to coin production by .05 exponent per level. [MAX: +10.00]\",\n    crystalupgdesc5: \"Every challenge completion increases crystal gain by 1% per level.\",\n    crystalupgdesc6: \"Coming SOON!\",\n    crystalupgdesc7: \"Coming SOON!\",\n    crystalupgdesc8: \"Coming SOON!\"\n};\nconst constantUpgDesc = {\n    constantUpgDesc1: \"Make all Tesseract buildings 5% more productive per level.\",\n    constantUpgDesc2: \"Each Tesseract building bought increases the production of all of them by 0.1% per level [Max 10%].\",\n    constantUpgDesc3: \"Increase offering gain +2% per level.\",\n    constantUpgDesc4: \"Increase obtainium gain +4% per level.\",\n    constantUpgDesc5: \"Multiply ant speed by (1 + log10(Constant + 1)/10)^level\",\n    constantUpgDesc6: \"Add +2 free Ant Levels per level.\",\n    constantUpgDesc7: \"Provides 7 free rune levels and increases the rune cap by 3 per level.\",\n    constantUpgDesc8: \"Increase the rune EXP given by offerings by 10% per level [Additive]\",\n    constantUpgDesc9: \"When bought, rune effectiveness is increased by Log4(Talisman Shards +1) %\",\n    constantUpgDesc10: \"When bought, gain Log4(Constant + 1)% more Wow! Cubes and Tesseracts on ascension.\"\n};\nconst upgradetexts = [\n    () => \"Worker Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Investment Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Printer Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Mint Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Alchemy Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"All Coin production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Gain \" + Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))) + \" free multipliers from bought Alchemies.\",\n    () => \"+\" + Math.floor(player.multiplierBought / 7) + \" free Accelerators.\",\n    () => \"+\" + Math.floor(player.acceleratorBought / 10) + \" free Multipliers.\",\n    () => \"Worker Production x\" + format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\n    () => \"Generator efficiency x\" + format(Decimal.pow(1.02, G['freeAccelerator']), 2),\n    () => \"All Coin production x\" + format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\n    () => \"Investment Production x\" + format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\n    () => \"Printer Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => \"Mint Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => \"Gain \" + format(Decimal.pow(G['acceleratorEffect'], 1 / 3), 2) + \"x more Diamonds on prestige\",\n    () => \"Mint Production x1e100 (Duh)\",\n    () => \"Printer Production x\" + format(Decimal.min(1e125, player.transcendShards.add(1))),\n    () => \"Investment Production x\" + format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\n    () => \"All coin production is further multiplied by \" + format(Decimal.pow((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 10), 2) + \" [Stacks with upgrade 1]!\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((5 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((4 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((3 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((2 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((1 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+1 Accelerator Boost.\",\n    () => \"+\" + format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))) + \" Accelerators.\",\n    () => \"+\" + format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))) + \" Multipliers.\",\n    () => \"+\" + format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))) + \" Accelerators.\",\n    () => \"+\" + format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))) + \" Multipliers.\",\n    () => \"+\" + format(Math.floor(G['totalCoinOwned'] / 2000)) + \" Accelerator Boosts\",\n    () => \"+\" + format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))) + \" Accelerators\",\n    () => \"+\" + format(G['totalAcceleratorBoost']) + \" Multipliers\",\n    () => \"+\" + format(Math.floor(3 / 103 * G['freeMultiplier'])) + \" Multipliers\",\n    () => \"+\" + format(Math.floor(2 / 102 * G['freeMultiplier'])) + \" Multipliers\",\n    () => \"All Crystal producers x\" + format(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)), 2),\n    () => \"All Mythos producers production x\" + format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Welcome to Transcension! Coin production is multiplied by \" + format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))) + \".\",\n    () => \"All mythos shard producers are going into overdrive: x\" + format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2) + \" the production!\",\n    () => \"Multiply all coin production by \" + format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\n    () => \"Multiply Mythos gained in Transcension by \" + format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\n    () => \"+\" + format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))) + \" Accelerators!\",\n    () => \"It's kinda self-evident, ain't it?\",\n    () => \"Mythos-tier producers production x\" + format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\n    () => \"Multiply coin production by a factor of \" + format(Math.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8)) + \"!\",\n    () => \"+\" + format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))) + \" Multipliers through magic!\",\n    () => \"It's quite obvious what the benefit is, but you must be in a challenge for it to be in use!\",\n    () => \"Mythos-tier producers production x\" + format(Math.pow(G['totalAcceleratorBoost'], 2), 2) + \"!\",\n    () => \"Mythos-tier producers production x\" + format(Decimal.pow(G['globalMythosMultiplier'], 0.025), 2) + \"! It's like inception, or something.\",\n    () => \"Augments will produce \" + format(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)), 2) + \"x as many Mythos Shards.\",\n    () => \"Wizards will produce \" + format(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)), 2) + \"x as many Enchantments; what productive spirits!\",\n    () => \"Grandmasters will produce \" + format((Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1))), 2) + \"x as many Oracles!\",\n    () => \"It's quite obvious, ain't it?\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"+5% Offering Recycle/+5EXP per Offerings. Duh!\",\n    () => \"Base offering amount for Reincarnations +\" + Math.floor(1 / 5 * (sumContents(player.challengecompletions))) + \". Challenge yourself!\",\n    () => \"All crystal production x\" + format(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6))),\n    () => \"All mythos shard production x\" + format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\n    () => \"5x Particle gain from Reincarnations. Duh!\",\n    () => \"It's quite clear in the description!\",\n    () => \"The first particle-tier producer is \" + format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2) + \"x as productive.\",\n    () => \"Your compliance with tax laws provides you with \" + format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G['taxdivisor'], 10)))) + \" free Multipliers, for some reason.\",\n    () => {\n        const a = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        const b = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        return \"Cosmic Magnetics will allow you to gain \" +\n            format(Math.min(10, new Decimal(a).toNumber()), 2) +\n            \"x as much Obtainium reincarnating, x\" +\n            format(Math.min(3, new Decimal(b).toNumber()), 2) +\n            \" automation gain.\";\n    },\n    () => \"Contracted time makes your game timers run \" + format(1 / 3 * Math.log(player.maxobtainium + 1) / Math.log(10), 2, true) + \"% more quickly.\",\n    () => \"Writing's on the wall. Look above!\",\n    () => \"Obtainium multiplier: x\" + Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\n    () => \"Same as Transcend upgrade 10, except you MUST be in a Reincarnation challenge in particular.\",\n    () => \"Obtainium multiplier: x\" + format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\n    () => \"Offering Multiplier: x\" + format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\n    () => \"Epic 5x Ants!\",\n    () => \"Ant Speed Multiplier: x\" + format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\n    () => \"Ant Speed Multiplier: x\" + format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2), 2, true),\n    () => \"You will gain +10% rewards =)\",\n    () => \"Ant Elo +75 if this upgrade is purchased.\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"-50% Taxes duh!\",\n    () => \"+88% cap to Crystal Upgrade 3, duh!\",\n    () => \"Coin Production ^1.025, duh!\",\n    () => \"+3% Effective Ant ELO, duh!\",\n    () => \"+\" + format(0.333 * player.challengecompletions[10], 0) + \"% Constant Divisor power.\"\n];\nexport const upgradeeffects = (i) => {\n    document.getElementById(\"upgradeeffect\").textContent = \"Effect: \" + upgradetexts[i - 1]();\n};\nexport const upgradedescriptions = (i) => {\n    const y = upgdesc[`upgdesc${i}`];\n    const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : '';\n    const el = document.getElementById(\"upgradedescription\");\n    el.textContent = y + z;\n    el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white';\n    if (player.toggles[9] === true) {\n        let type = '';\n        if (i <= 20 && i >= 1) {\n            type = 'coin';\n        }\n        if (i <= 40 && i >= 21) {\n            type = 'prestige';\n        }\n        if (i <= 60 && i >= 41) {\n            type = 'transcend';\n        }\n        if (i <= 80 && i >= 61) {\n            type = 'reincarnation';\n        }\n        if (i <= 87 && i >= 81) {\n            type = 'prestige';\n        }\n        if (i <= 93 && i >= 88) {\n            type = 'transcend';\n        }\n        if (i <= 100 && i >= 94) {\n            type = 'reincarnation';\n        }\n        if (type !== '' && i <= 80 && i >= 1) {\n            buyUpgrades(type, i);\n        }\n        if (type !== '' && i <= 100 && i >= 81) {\n            buyAutobuyers(i - 80);\n        }\n        if (i <= 120 && i >= 101) {\n            buyGenerator(i - 100);\n        }\n    }\n    let currency = '';\n    let color = '';\n    if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\n        currency = \"Coins\";\n        color = \"yellow\";\n    }\n    if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\n        currency = \"Diamonds\";\n        color = \"cyan\";\n    }\n    if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\n        currency = \"Mythos\";\n        color = \"plum\";\n    }\n    if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\n        currency = \"Particles\";\n        color = \"limegreen\";\n    }\n    document.getElementById(\"upgradecost\").textContent = \"Cost: \" + format(Decimal.pow(10, G['upgradeCosts'][i])) + \" \" + currency;\n    document.getElementById(\"upgradecost\").style.color = color;\n    upgradeeffects(i);\n};\nexport const crystalupgradedescriptions = (i) => {\n    const w = crystalupgdesc[`crystalupgdesc${i}`];\n    const p = player.crystalUpgrades[i - 1];\n    const c = (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\n        (Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100);\n    const q = Decimal.pow(10, (G['crystalUpgradesCost'][i - 1] + G['crystalUpgradeCostIncrement'][i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)));\n    document.getElementById(\"crystalupgradedescription\").textContent = w;\n    document.getElementById(\"crystalupgradeslevel\").textContent = \"Level: \" + p;\n    document.getElementById(\"crystalupgradescost\").textContent = \"Cost: \" + format(q) + \" crystals\";\n};\nexport const upgradeupdate = (num, fast) => {\n    const el = document.getElementById(`upg${num}`);\n    if (player.upgrades[num] > 0.5 && ((num <= 60 || num > 80) && (num <= 93 || num > 100))) {\n        el.style.backgroundColor = \"green\";\n    }\n    else if (player.upgrades[num] > 0.5 && ((num > 60 && num <= 80) || (num > 93 && num <= 100) || (num > 120))) {\n        el.style.backgroundColor = \"white\";\n    }\n    const b = upgdesc[`upgdesc${num}`];\n    const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : '';\n    if (player.upgrades[num] > 0.5) {\n        if (!fast) {\n            document.getElementById(\"upgradedescription\").textContent = b + c;\n            document.getElementById(\"upgradedescription\").style.color = \"gold\";\n        }\n    }\n    else {\n        el.style.backgroundColor = \"Black\";\n    }\n    if (!fast)\n        revealStuff();\n};\nconst constUpgEffect = {\n    1: () => `Tesseract building production x${format(Decimal.pow(1.05, player.constantUpgrades[1]), 2, true)}`,\n    2: () => `Tesseract building production x${format(Decimal.pow(1 + 0.001 * Math.min(100, player.constantUpgrades[2]), player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned), 2, true)}`,\n    3: () => `Offering gain x${format(1 + 0.02 * player.constantUpgrades[3], 2, true)}`,\n    4: () => `Obtainium gain x${format(1 + 0.04 * player.constantUpgrades[4], 2, true)}`,\n    5: () => `Ant Speed x${format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)}`,\n    6: () => `+ ${format(2 * player.constantUpgrades[6])} free Ant Levels`,\n    7: () => `+${format(7 * player.constantUpgrades[7])} free Rune Levels, +${format(3 * player.constantUpgrades[7])} to Rune Cap`,\n    8: () => `Rune EXP x${format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)}`,\n    9: () => `Runes effectiveness x${format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)}`,\n    10: () => `Cubes/Tesseracts on Ascension x${format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)}`\n};\nexport const returnConstUpgEffect = (i) => { var _a; return (_a = constUpgEffect[i]) === null || _a === void 0 ? void 0 : _a.call(constUpgEffect); };\nexport const getConstUpgradeMetadata = (i) => {\n    const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G['constUpgradeCosts'][i]) / Math.log(10)));\n    let cost = new Decimal(\"1\");\n    if (toBuy > player.constantUpgrades[i]) {\n        cost = Decimal.pow(10, toBuy - 1).times(G['constUpgradeCosts'][i]);\n    }\n    else {\n        cost = Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]);\n    }\n    return [Math.max(1, toBuy - player.constantUpgrades[i]), cost];\n};\nexport const constantUpgradeDescriptions = (i) => {\n    const [level, cost] = getConstUpgradeMetadata(i);\n    const y = constantUpgDesc[`constantUpgDesc${i}`];\n    document.getElementById(\"constUpgradeDescription\").textContent = y;\n    document.getElementById(\"constUpgradeLevel2\").textContent = format(player.constantUpgrades[i]);\n    document.getElementById(\"constUpgradeCost2\").textContent = format(cost) + \" [+\" + format(level) + \" LVL]\";\n    document.getElementById(\"constUpgradeEffect2\").textContent = returnConstUpgEffect(i);\n};\nexport const buyConstantUpgrades = (i, fast = false) => {\n    const [level, cost] = getConstUpgradeMetadata(i);\n    if (player.ascendShards.gte(cost)) {\n        player.constantUpgrades[i] += level;\n        if (player.researches[175] === 0) {\n            player.ascendShards = player.ascendShards.sub(cost);\n        }\n        if (!fast) {\n            constantUpgradeDescriptions(i);\n        }\n    }\n    calculateAnts();\n    calculateRuneLevels();\n};\n","import { player, format } from \"./Synergism\";\nimport { achievementaward } from \"./Achievements\";\nimport { CalcECC } from \"./Challenges\";\nimport { calculateCubeBlessings, calculateSummationNonLinear } from \"./Calculate\";\nimport { upgradeupdate } from \"./Upgrades\";\nimport { revealStuff } from \"./UpdateHTML\";\nimport { Globals as G } from \"./Variables\";\nconst distributions = {\n    cubes: {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    },\n    tesseracts: {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    },\n    hypercubes: {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    },\n    platonics: {\n        cubes: { weight: 13200, pdf: (x) => 0 <= x && x <= 33.000 },\n        tesseracts: { weight: 13200, pdf: (x) => 33.000 < x && x <= 66.000 },\n        hypercubes: { weight: 13200, pdf: (x) => 66.000 < x && x <= 99.000 },\n        platonics: { weight: 396, pdf: (x) => 99.000 < x && x <= 99.990 },\n        hypercubeBonus: { weight: 1, pdf: (x) => 99.990 < x && x <= 99.9925 },\n        taxes: { weight: 1, pdf: (x) => 99.9925 < x && x <= 99.995 },\n        scoreBonus: { weight: 1, pdf: (x) => 99.995 < x && x <= 99.9975 },\n        globalSpeed: { weight: 1, pdf: (x) => 99.9975 < x && x <= 100 },\n    }\n};\nexport const cubeDistributions = (k) => distributions[k];\nexport const openCubes = (value, cubeName, max = false) => {\n    return [value, cubeName, max];\n};\nexport const openCube = (value, max = false) => {\n    let toSpend = max ? player.wowCubes : Math.min(player.wowCubes, value);\n    if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\n        achievementaward(246);\n    }\n    player.wowCubes -= toSpend;\n    player.cubeOpenedDaily += toSpend;\n    if (player.cubeQuarkDaily < 25 + 75 * player.shopUpgrades.cubeToQuark) {\n        while (player.cubeOpenedDaily >= 10 * Math.pow(1 + player.cubeQuarkDaily, 4) && player.cubeQuarkDaily < 25 + 75 * player.shopUpgrades.cubeToQuark) {\n            player.cubeQuarkDaily += 1;\n            player.worlds += 1;\n        }\n    }\n    toSpend *= (1 + player.researches[138] / 1000);\n    toSpend *= (1 + 0.8 * player.researches[168] / 1000);\n    toSpend *= (1 + 0.6 * player.researches[198] / 1000);\n    toSpend = Math.floor(toSpend);\n    let toSpendModulo = toSpend % 20;\n    let toSpendDiv20 = Math.floor(toSpend / 20);\n    const blessings = {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    };\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\n        toSpendModulo += toSpendDiv20;\n    }\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\n        toSpendModulo += toSpendDiv20;\n    }\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\n        toSpendModulo += toSpendDiv20;\n    }\n    toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20);\n    toSpendModulo = toSpendModulo % 20;\n    for (const key of Object.keys(player.cubeBlessings)) {\n        player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n    }\n    for (let i = 0; i < toSpendModulo; i++) {\n        const num = 100 * Math.random();\n        for (const key of Object.keys(player.cubeBlessings)) {\n            if (blessings[key].pdf(num))\n                player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n        }\n    }\n    calculateCubeBlessings();\n};\nconst cubeUpgradeName = [\n    \"Wow! I want more Cubes.\",\n    \"Wow! I want passive Offering gain too.\",\n    \"Wow! I want better passive Obtainium\",\n    \"Wow! I want to keep mythos building autobuyers.\",\n    \"Wow! I want to keep mythos upgrade autobuyer.\",\n    \"Wow! I want to keep auto mythos gain.\",\n    \"Wow! I want the particle building automators.\",\n    \"Wow! I want to automate Particle Upgrades.\",\n    \"Wow! I want to automate researches better dangit.\",\n    \"Wow! This is pretty good but expensive.\",\n    \"Wow! I want more cubes 2.\",\n    \"Wow! I want building power to be useful 1.\",\n    \"Wow! I want opened cubes to give more tributes 1.\",\n    \"Wow! I want Iris Tribute bonuses to scale better 1.\",\n    \"Wow! I want Ares Tribute bonuses to scale better 1.\",\n    \"Wow! I want more rune levels 1.\",\n    \"Wow! I want just a little bit more crystal power.\",\n    \"Wow! I want to accelerate time!\",\n    \"Wow! I want to unlock a couple more coin upgrades.\",\n    \"Wow! I want to improve automatic rune tools.\",\n    \"Wow! I want more cubes 3.\",\n    \"Wow! I wish my Artemis was a little better 1\",\n    \"Wow! I want opened cubes to give more tributes 2.\",\n    \"Wow! I want Plutus Tribute bonuses to scale better 1\",\n    \"Wow! I want Moloch Tribute bonuses to scale better 1\",\n    \"Wow! I want to start Ascensions with rune levels.\",\n    \"Wow! I want to start Ascensions with one of each reincarnation building.\",\n    \"Wow! I want to finally render Reincarnating obsolete.\",\n    \"Wow! I want to increase maximum Reincarnation Challenge completions.\",\n    \"Wow! I want to arbitrarily increase my cube and tesseract gain.\",\n    \"Wow! I want more cubes 4.\",\n    \"Wow! I want runes to be easier to level up over time.\",\n    \"Wow! I want opened cubes to give more tributes 3.\",\n    \"Wow! I want Chronos Tribute bonuses to scale better 1\",\n    \"Wow! I want Aphrodite Tribute bonuses to scale better 1\",\n    \"Wow! I want building power to be useful 2.\",\n    \"Wow! I want more rune levels 2.\",\n    \"Wow! I want more tesseracts while corrupted!\",\n    \"Wow! I want more score from challenge 10 completions.\",\n    \"Wow! I want Athena Tribute bonuses to scale better 1.\",\n    \"Wow! I want more cubes 5.\",\n    \"Wow! I want some Uncorruptable Obtainium.\",\n    \"Wow! I want even more Uncorruptable Obtainium!\",\n    \"Wow! I want Midas Tribute bonus to scale better 1.\",\n    \"Wow! I want Hermes Tribute bonus to scale better 1.\",\n    \"Wow! I want even MORE offerings!\",\n    \"Wow! I want even MORE obtainium!\",\n    \"Wow! I want to start ascension with an ant.\",\n    \"Wow! I want to start ascension with a challenge 6-8 completion.\",\n    \"Wow! I want to be enlightened by the power of a thousand suns.\"\n];\nconst cubeBaseCost = [\n    200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\n    5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\n    5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\n    5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\n    5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8\n];\nconst cubeMaxLevel = [\n    2, 10, 5, 1, 1, 1, 1, 1, 1, 1,\n    2, 10, 1, 10, 10, 10, 5, 1, 1, 1,\n    2, 10, 1, 10, 10, 10, 1, 1, 5, 1,\n    2, 1, 1, 10, 10, 10, 10, 1, 1, 10,\n    2, 10, 10, 10, 10, 20, 20, 1, 1, 100000\n];\nconst cubeUpgradeDescriptions = [\n    \"[1x1] You got it! +14% cubes from Ascending per level.\",\n    \"[1x2] Plutus grants you +1 Offering per second, no matter what, per level. Also a +0.5% Recycling chance!\",\n    \"[1x3] Athena grants you +10% more Obtainium, and +80% Auto Obtainium per level.\",\n    \"[1x4] You keep those 5 useful automation upgrades in the upgrades tab!\",\n    \"[1x5] You keep the mythos upgrade automation upgrade in the upgrades tab!\",\n    \"[1x6] You keep the automatic mythos gain upgrade in the upgrades tab!\",\n    \"[1x7] Automatically buy each Particle Building whenever possible.\",\n    \"[1x8] Automatically buy Particle Upgrades.\",\n    \"[1x9] The research automator in shop now automatically buys cheapest when enabled. It's like a roomba kinda!\",\n    \"[1x10] Unlock some tools to automate Ascensions or whatever. Kinda expensive but cool.\",\n    \"[2x1] You got it again! +7% cubes from Ascending per level.\",\n    \"[2x2] Raise building power to the power of (1 + level * 0.09).\",\n    \"[2x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\n    \"[2x4] Iris shines her light on you. The effect power is now increased by +0.01 (+0.005 if >1000 tributes) per level.\",\n    \"[2x5] Ares teaches you the art of war. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[2x6] You got it buster! +20 ALL max rune levels per level.\",\n    \"[2x7] Yep. +5 Exponent per level to crystals.\",\n    \"[2x8] Quantum tunnelling ftw. +20% global game speed.\",\n    \"[2x9] Unlocks new coin upgrades ranging from start of ascend to post c10 and beyond.\",\n    \"[2x10] The rune automator in shop now spends all offerings automatically, 'splitting' them into each of the 5 runes equally.\",\n    \"[3x1] You got it once more! +7% cubes from Ascending per level.\",\n    \"[3x2] The exponent of the bonus of Artemis is increased by 0.05 per level.\",\n    \"[3x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\n    \"[3x4] Plutus teaches you the Art of the Deal. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[3x5] Moloch lends you a hand in communicating with Ant God. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[3x6] Start ascensions with 3 additional rune levels [Does not decrease EXP requirement] per level.\",\n    \"[3x7] Upon an ascension, you will start with 1 of each reincarnation building to speed up Ascensions.\",\n    \"[3x8] Well, I think you got it? Gain +1% of particles on Reincarnation per second.\",\n    \"[3x9] Add +5 to Reincarnation Challenge cap per level. Completions after 25 scale faster in requirement!\",\n    \"[3x10] You now get +25% Cubes and Tesseracts forever!\",\n    \"[4x1] You again? +7% cubes from Ascending per level.\",\n    \"[4x2] Gain +0.1% Rune EXP per second you have spent in an Ascension. This has no cap!\",\n    \"[4x3] For each 20 cubes opened at once, you get yet another additional tribute at random.\",\n    \"[4x4] Chronos overclocks the universe for your personal benefit. (Rewards the same as others)\",\n    \"[4x5] Aphrodite increases the fertility of your coins. (Rewards the same as others)\",\n    \"[4x6] Raise building power to (1 + 0.05 * Level) once more.\",\n    \"[4x7] Adds +20 to ALL rune caps again per level.\",\n    \"[4x8] Gain +0.5% more tesseracts on ascension for each additional level in a corruption you enable.\",\n    \"[4x9] Instead of the multiplier being 1.03^(C10 completions), it is now 1.035^(C10 completions)!\",\n    \"[4x10] Athena is very smart (Rewards the same as others).\",\n    \"[5x1] Yeah yeah yeah, +7% cubes from Ascending per level. Isn't it enough?\",\n    \"[5x2] You now gain +4% Obtainium per level, which is not dependent on corruptions!\",\n    \"[5x3] Gain another +3% corruption-independent Obtainium per level.\",\n    \"[5x4] Blah blah blah Midas works harder (same rewards as before)\",\n    \"[5x5] Blah blah blah Hermes works harder (same rewards as before)\",\n    \"[5x6] Gain +5% more offerings per level!\",\n    \"[5x7] Gain +10% more obtainium per level!\",\n    \"[5x8] When you ascend, start with 1 worker ant (this is a lot better than it sounds!)\",\n    \"[5x9] When you ascend, gain 1 of each challenge 6-8 completion.\",\n    \"[5x10] What doesn't this boost? +0.01% Accelerators, Multipliers, Accelerator Boosts, +0.02% Obtainium, +0.02% Offerings, +0.1 Max Rune Levels, +1 Effective ELO, +0.001 Talisman bonuses per level.\"\n];\nconst getCubeCost = (i, linGrowth = 0) => {\n    let amountToBuy = G['buyMaxCubeUpgrades'] ? 1e5 : 1;\n    amountToBuy = Math.min(cubeMaxLevel[i - 1] - player.cubeUpgrades[i], amountToBuy);\n    const metaData = calculateSummationNonLinear(player.cubeUpgrades[i], cubeBaseCost[i - 1], player.wowCubes, linGrowth, amountToBuy);\n    return ([metaData[0], metaData[1]]);\n};\nexport const cubeUpgradeDesc = (i, linGrowth = 0) => {\n    const metaData = getCubeCost(i, linGrowth);\n    const a = document.getElementById(\"cubeUpgradeName\");\n    const b = document.getElementById(\"cubeUpgradeDescription\");\n    const c = document.getElementById(\"cubeUpgradeCost\");\n    const d = document.getElementById(\"cubeUpgradeLevel\");\n    a.textContent = cubeUpgradeName[i - 1];\n    b.textContent = cubeUpgradeDescriptions[i - 1];\n    c.textContent = \"Cost: \" + format(metaData[1], 0, true) + \" Wow! Cubes [+\" + format(metaData[0] - player.cubeUpgrades[i], 0, true) + \" Levels]\";\n    c.style.color = \"green\";\n    d.textContent = \"Level: \" + format(player.cubeUpgrades[i], 0, true) + \"/\" + format(cubeMaxLevel[i - 1], 0, true);\n    d.style.color = \"white\";\n    if (player.wowCubes < cubeBaseCost[i - 1]) {\n        c.style.color = \"crimson\";\n    }\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i - 1]) {\n        c.style.color = \"gold\";\n        d.style.color = \"plum\";\n    }\n};\nexport const updateCubeUpgradeBG = (i) => {\n    const a = document.getElementById(\"cubeUpg\" + i);\n    if (player.cubeUpgrades[i] > cubeMaxLevel[i - 1]) {\n        console.log(\"Refunded \" + (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) + \" levels of Cube Upgrade \" + i + \", adding \" + (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) * cubeBaseCost[i - 1] + \" Wow! Cubes to balance.\");\n        player.wowCubes += (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) * cubeBaseCost[i - 1];\n        player.cubeUpgrades[i] = cubeMaxLevel[i - 1];\n    }\n    if (player.cubeUpgrades[i] === 0) {\n        a.style.backgroundColor = \"black\";\n    }\n    if (player.cubeUpgrades[i] > 0 && player.cubeUpgrades[i] < cubeMaxLevel[i - 1]) {\n        a.style.backgroundColor = \"purple\";\n    }\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i - 1]) {\n        a.style.backgroundColor = \"green\";\n    }\n};\nexport const buyCubeUpgrades = (i, linGrowth = 0) => {\n    const metaData = getCubeCost(i, linGrowth);\n    if (player.wowCubes >= metaData[1] && player.cubeUpgrades[i] < cubeMaxLevel[i - 1]) {\n        player.wowCubes -= 100 / 100 * metaData[1];\n        player.cubeUpgrades[i] = metaData[0];\n    }\n    if (i === 4 && player.cubeUpgrades[4] > 0) {\n        for (let j = 94; j <= 98; j++) {\n            player.upgrades[j] = 1;\n            upgradeupdate(j, true);\n        }\n    }\n    if (i === 5 && player.cubeUpgrades[5] > 0) {\n        player.upgrades[99] = 1;\n        upgradeupdate(99, true);\n    }\n    if (i === 6 && player.cubeUpgrades[6] > 0) {\n        player.upgrades[100] = 1;\n        upgradeupdate(100, true);\n    }\n    cubeUpgradeDesc(i, linGrowth);\n    updateCubeUpgradeBG(i);\n    revealStuff();\n    calculateCubeBlessings();\n};\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { openCube } from './Cubes';\nexport const openTesseract = (value, max = false) => {\n    let toSpend = Math.min(player.wowTesseracts, value);\n    if (max) {\n        toSpend = player.wowTesseracts;\n    }\n    player.wowTesseracts -= toSpend;\n    player.tesseractOpenedDaily += toSpend;\n    if (player.tesseractQuarkDaily < 25 + 75 * player.shopUpgrades.tesseractToQuark) {\n        while (player.tesseractOpenedDaily >= 10 * Math.pow(1 + player.tesseractQuarkDaily, 3) &&\n            player.tesseractQuarkDaily < 25 + 75 * player.shopUpgrades.tesseractToQuark) {\n            player.tesseractQuarkDaily += 1;\n            player.worlds += 1;\n        }\n    }\n    const toSpendModulo = toSpend % 20;\n    const toSpendDiv20 = Math.floor(toSpend / 20);\n    const blessings = {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    };\n    for (const key in player.tesseractBlessings) {\n        player.tesseractBlessings[key] += blessings[key].weight * toSpendDiv20;\n    }\n    for (let i = 0; i < toSpendModulo; i++) {\n        const num = 100 * Math.random();\n        for (const key in player.tesseractBlessings) {\n            if (blessings[key].pdf(num))\n                player.tesseractBlessings[key] += 1;\n        }\n    }\n    calculateTesseractBlessings();\n    const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153]);\n    player.wowCubes += extraCubeBlessings;\n    openCube(extraCubeBlessings, false);\n};\nexport const calculateTesseractBlessings = () => {\n    const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed];\n    for (let i = 0; i < 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (tesseractArray[i] >= 1000 && i !== 5) {\n            power = G['giftDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['giftDRPower'][i]));\n        }\n        G['tesseractBonusMultiplier'][i + 1] = 1 + mult * G['giftbase'][i] * Math.pow(tesseractArray[i], power) * G['hypercubeBonusMultiplier'][i + 1];\n    }\n};\n","import { player, format } from './Synergism';\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate';\nimport { revealStuff } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nconst getResearchCost = (index, buyAmount = 1, linGrowth = 0) => {\n    buyAmount = Math.min(G['researchMaxLevels'][index] - player.researches[index], buyAmount);\n    const metaData = calculateSummationNonLinear(player.researches[index], G['researchBaseCosts'][index], player.researchPoints, linGrowth, buyAmount);\n    return [metaData[0], metaData[1]];\n};\nexport const buyResearch = (index, auto = false, linGrowth = 0) => {\n    if (player.autoResearchToggle && player.autoResearch > 0 && !auto) {\n        const p = player.autoResearch;\n        if (player.researches[p] === G['researchMaxLevels'][p]) {\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"green\";\n        }\n        else if (player.researches[p] >= 1) {\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"purple\";\n        }\n        else {\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"black\";\n        }\n    }\n    if (!auto && player.autoResearchToggle && player.shopUpgrades.obtainiumAuto >= 1 && player.cubeUpgrades[9] < 1) {\n        player.autoResearch = index;\n        document.getElementById(\"res\" + index).style.backgroundColor = \"orange\";\n    }\n    const buyamount = (G['maxbuyresearch'] || auto) ? 1e5 : 1;\n    const metaData = getResearchCost(index, buyamount, linGrowth);\n    const canAfford = player.researchPoints >= metaData[1];\n    if ((auto || !player.autoResearchToggle) && isResearchUnlocked(index) && !isResearchMaxed(index) && canAfford) {\n        player.researchPoints -= metaData[1];\n        player.researches[index] = metaData[0];\n        G['researchfiller2'] = \"Level: \" + player.researches[index] + \"/\" + (G['researchMaxLevels'][index]);\n        researchDescriptions(index, auto, linGrowth);\n        if (index === 47 && player.unlocks.rrow1 === false) {\n            player.unlocks.rrow1 = true;\n            revealStuff();\n        }\n        if (index === 48 && player.unlocks.rrow2 === false) {\n            player.unlocks.rrow2 = true;\n            revealStuff();\n        }\n        if (index === 49 && player.unlocks.rrow3 === false) {\n            player.unlocks.rrow3 = true;\n            revealStuff();\n        }\n        if (index === 50 && player.unlocks.rrow4 === false) {\n            player.unlocks.rrow4 = true;\n            revealStuff();\n        }\n        calculateRuneLevels();\n        calculateAnts();\n    }\n    if (index > 0 && isResearchUnlocked(index)) {\n        if (player.researches[index] === (G['researchMaxLevels'][index])) {\n            document.getElementById(\"res\" + index).style.backgroundColor = \"green\";\n        }\n    }\n    if (auto && player.cubeUpgrades[9] === 1) {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        if (isResearchMaxed(player.autoResearch)) {\n            player.roombaResearchIndex += 1;\n        }\n        while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 1) {\n            player.roombaResearchIndex += 1;\n            player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        }\n        if (isResearchUnlocked(player.autoResearch)) {\n            const doc = document.getElementById(\"res\" + G['researchOrderByCost'][player.roombaResearchIndex]);\n            if (doc)\n                doc.style.backgroundColor = \"orange\";\n        }\n    }\n    return canAfford;\n};\nexport const maxRoombaResearchIndex = (p = player) => {\n    const base = p.ascensionCount > 0 ? 140 : 125;\n    const c11 = p.challengecompletions[11] > 0 ? 15 : 0;\n    const c12 = p.challengecompletions[12] > 0 ? 15 : 0;\n    const c13 = p.challengecompletions[13] > 0 ? 15 : 0;\n    const c14 = p.challengecompletions[14] > 0 ? 15 : 0;\n    return base + c11 + c12 + c13 + c14;\n};\nexport const isResearchUnlocked = (index) => {\n    const cumuSum = (sum => (value) => sum += value)(0);\n    const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum);\n    const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218];\n    for (let i = 0; i < indices.length; i++) {\n        if (i === 3 && (index === 121 || index === 124 || index === 150)) {\n            return player.achievements[chievos[i]] > 0;\n        }\n        if (index <= indices[i]) {\n            return player.achievements[chievos[i]] > 0;\n        }\n    }\n    return false;\n};\nconst isResearchMaxed = (index) => G['researchMaxLevels'][index] <= player.researches[index];\nconst resdesc = [\n    \"[1x1] Increase the number of free Accelerators gained by 20% from all sources.\",\n    \"[1x2] Increase the number of free Multipliers gained by 20% from all sources.\",\n    \"[1x3] Increase the number of free Accelerator Boosts gained by 20% from all sources.\",\n    \"[1x4] Increase most rune effects by 10%. (Excludes any recycle chance bonus)\",\n    \"[1x5] Multiply the production of all crystal producers by 1e4.\",\n    \"[1x6] Gain +5% free accelerators per level.\",\n    \"[1x7] Gain +4% free accelerators per level.\",\n    \"[1x8] Gain +3% free accelerators per level.\",\n    \"[1x9] Gain +2% free accelerators per level.\",\n    \"[1x10] Gain +2% free accelerators per level.\",\n    \"[1x11] Gain +5% free multipliers per level.\",\n    \"[1x12] Gain +4% free multipliers per level.\",\n    \"[1x13] Gain +2.5% free multipliers per level.\",\n    \"[1x14] Gain +1.5% free multipliers per level.\",\n    \"[1x15] Gain +0.5% free multipliers per level.\",\n    \"[1x16] Gain +5% free accelerator boosts per level.\",\n    \"[1x17] Gain +5% free accelerator boosts per level.\",\n    \"[1x18] Gain +2 free accelerator per accelerator boost.\",\n    \"[1x19] Gain +2 free accelerator per accelerator boost.\",\n    \"[1x20] Gain +3 free accelerator per accelerator boost!\",\n    \"[1x21] Most rune effects are increased by 1% per level. (Excludes any recycle chance bonus)\",\n    \"[1x22] Each Offering used increases Rune EXP by 0.6 per level.\",\n    \"[1x23] Each Offering used increases Rune EXP by another 0.3 per level!\",\n    \"[1x24] Prestige and Transcensions base Offering is increased by 0.2 per level.\",\n    \"[1x25] Reincarnations base Offering is increased by 0.6 per level.\",\n    \"[2x1] Multiply all crystal producer production by 150% per level (multiplicative).\",\n    \"[2x2] Multiply all crystal producer production by 150% per level (multiplicative).\",\n    \"[2x3] Coin Exponent is increased by 0.08 per level.\",\n    \"[2x4] Coin Exponent is increased by another 0.08 per level.\",\n    \"[2x5] Coin Exponent is increased by ANOTHER 0.04 per level.\",\n    \"[2x6] Want to bake cookies instead? You can go offline for 2 additional hours per level (base 24hr).\",\n    \"[2x7] Want to bake a lot of cookies instead? Extend the offline maximum timer by another 2 hours per level!\",\n    \"[2x8] Gain +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x9] Gain another +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x10] Gain ANOTHER +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x11] Building power scales 5% faster per level.\",\n    \"[2x12] Building power scales 2.5% faster per level.\",\n    \"[2x13] Building power scales 2.5% faster per level.\",\n    \"[2x14] Building power affects crystal production at a reduced rate.\",\n    \"[2x15] Building power affects mythos shard production at a reduced rate.\",\n    \"[2x16] Start Reincarnations with automatic A.Boosts unlocked. Note: this research doesn't affect earning achievements.\",\n    \"[2x17] Start Reincarnations with automatic Generators unlocked.\",\n    \"[2x18] Start Reincarnations with automatic C.Upgrades unlocked.\",\n    \"[2x19] Start Reincarnations with automatic D.Upgrades unlocked.\",\n    \"[2x20] Start Reincarnations with automatic Diamond production unlocked.\",\n    \"[2x21] Unlock the ability to automatically Reincarnate!\",\n    \"[2x22] Unlock Reincarnation upgrades 1-5. [Upgrades cost between 1 and 1,000 Particles]\",\n    \"[2x23] Unlock Reincarnation upgrades 6-10. [Upgrades cost between 100,000 and 1e22 Particles]\",\n    \"[2x24] Unlock Reincarnation upgrades 11-15. [Upgrades cost between 1e30 and 1e60 Particles]\",\n    \"[2x25] Unlock Reincarnation upgrades 16-20. [You might want to wait until challenge 8 is doable!]\",\n    \"[3x1] Taxation scales 5.0% slower per level. [Up to -50%]\",\n    \"[3x2] Taxation scales 2.5% slower per level. [Up to -75%]\",\n    \"[3x3] Taxation scales 1.25% slower per level. [Up to -87.5%]\",\n    \"[3x4] Taxation scales 0.625% slower per level. [Up to -93.75%]\",\n    \"[3x5] Taxation scales 0.3125% slower per level. [Up to -96.875%]\",\n    \"[3x6] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x7] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x8] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x9] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x10] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x11] Gain +50% of your best obtainium per second AUTOMATICALLY!\",\n    \"[3x12] Gain an additional +10% of your best obtainium per second automatically.\",\n    \"[3x13] If your Reincarnation lasts at least 2 seconds you gain +1 obtainium per level.\",\n    \"[3x14] If your Reincarnation lasts at least 5 seconds you gain +2 obtainium per level.\",\n    \"[3x15] Increase the rate of gaining obtainium through reincarnations by 20% per level.\",\n    \"[3x16] Increase the maximum number of [No Multipliers] completions by 5 per level.\",\n    \"[3x17] Increase the maximum number of [No Accelerators] completions by 5 per level.\",\n    \"[3x18] Increase the maximum number of [No Shards] completions by 5 per level.\",\n    \"[3x19] Increase the maximum number of [Cost+] completions by 5 per level.\",\n    \"[3x20] Increase the maximum number of [Reduced Diamonds] completions by 5 per level.\",\n    \"[3x21] Automatically gain completions for Challenge 1, even without running it!\",\n    \"[3x22] Automatically gain completions for Challenge 2, even without running it!\",\n    \"[3x23] Automatically gain completions for Challenge 3, even without running it!\",\n    \"[3x24] Automatically gain completions for Challenge 4, even without running it!\",\n    \"[3x25] Automatically gain completions for Challenge 5, even without running it!\",\n    \"[4x1] Welcome to the land of expensive researches. Here's +10% obtainium per level to help you out!\",\n    \"[4x2] Increase the level cap of Thrift rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x3] Increase the level cap of Speed rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x4] Increase the level cap of Prism rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x5] Increase the level cap of Duplication rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x6] You thought the previous researches are expensive? You're going to need this! [+10% Obtainium/level]\",\n    \"[4x7] Permanently UNLOCK the Rune of Superior Intellect! [+%Ob / +Ant Speed / +Base Offerings.]\",\n    \"[4x8] Taking forever to level up that SI Rune? Here's +5% SI Rune EXP per level.\",\n    \"[4x9] Does the new rune kinda suck? Power it up! +0.5% level effectiveness for SI rune per level!\",\n    \"[4x10] Gain +0.01% more offerings per level per challenge completion!\",\n    \"[4x11] Yeah, going back to basics. +5% Accelerators/Level.\",\n    \"[4x12] 0/5 Multipliers SUCK: +5% Multipliers/Level.\",\n    \"[4x13] -1/5 A.Boosts SUCK: +5% Accelerator Boosts/Level.\",\n    \"[4x14] -5/5 MULTIPLIERS STILL SUCK: +20% Multiplier Boosts/Level\",\n    \"[4x15] Runes don't suck at all, but why not make them even BETTER? +1% Rune Effect/level!\",\n    \"[4x16] A simple +5% Rune EXP for all runes!\",\n    \"[4x17] Another simple +5% Rune EXP for all runes!\",\n    \"[4x18] +1 Accelerator Boost per 20 Summative Rune Levels, per level.\",\n    \"[4x19] +20 Multiplier per 8 Summative Rune Levels, per level.\",\n    \"[4x20] Gain +4 base Offerings from Reincarnations by purchasing this. Math Nerds will love this!\",\n    \"[4x21] Ants slow? Add +0.0002 to ant efficiency increase per ant purchased per level.\",\n    \"[4x22] Add +4 level to the first six upgradable ants per level!\",\n    \"[4x23] Add +4 level to the next five upgradable ants per level!\",\n    \"[4x24] Is the Quark Shop too hot to resist? Get +1 Quark per hour from Exporting for each level (Up to +75)!\",\n    \"[4x25] Alright, Platonic is off his rocker. I don't expect you to get this but this will give +1 MORE Quark per hour from Exporting (Up to +100)!\",\n    \"[5x1] Alright, you're past the big wall. How about adding +.001 to Inceptus Ant efficiency per level?\",\n    \"[5x2] Gain +1 bonus level to ALL ants per level! A rainbow attack!\",\n    \"[5x3] Pray to Ant God for +5% sacrifice rewards per level!\",\n    \"[5x4] You're beginning to feel like an ant god (ant god): +5% sacrifice reward per level!\",\n    \"[5x5] Buy this and be able to run the first five challenges infinitely! (Note that requirements scale a LOT faster after 75)\",\n    \"[5x6] Engrave your talismans with obtainium to get +0.03 Rune Levels per talisman level per level.\",\n    \"[5x7] Refine your talismans with the powder of Obtainium to get +0.03 Rune Levels per talisman level per level again.\",\n    \"[5x8] A simple trick makes your base ant ELO increase by 25 per level!\",\n    \"[5x9] A more convoluted trick makes your base ant ELO increase by 25 per level again!\",\n    \"[5x10] Gain +1% more ELO from ant sources per level because why not?\",\n    \"[5x11] Gotta go fast [+10 max Speed Rune Level per level, +1% EXP to that rune]\",\n    \"[5x12] Double Trouble [+10 max Duplication Rune level per level, +1% EXP to that rune]\",\n    \"[5x13] Newton's Delight [+10 max Prism Rune Level per level, +1% EXP to that rune]\",\n    \"[5x14] Five-Finger discounts [+10 max Thrift Rune Level per level, +1% EXP to that rune]\",\n    \"[5x15] Scientific Breakthrough [+10 max SI Rune Level per level +1% EXP to that rune]\",\n    \"[5x16] Talismans have +0.015 Rune levels per talisman level per level. Levelception!\",\n    \"[5x17] Talismans have another +0.015 Rune levels per talisman level per level!\",\n    \"[5x18] For 'neutral' talisman effects, increase by +0.06 per level!\",\n    \"[5x19] Gain +0.25% Wow! Cubes per level upon Ascension.\",\n    \"[5x20] Gain another +0.25% Wow! per level upon Ascension.\",\n    \"[5x21] Bend time to your will, making all ticks 2% faster each level.\",\n    \"[5x22] Adds +2% ant sacrifice reward per level.\",\n    \"[5x23] Adds +40 base ant ELO per level.\",\n    \"[5x24] Unlock the automator for Ant Sacrifice! [Good luck buying this.]\",\n    \"[5x25] Good luck, buddy. [+1 Export Quark/hour]\",\n    \"[6x1] 6 rows? That can't be... You've angered ant god (+1% Accelerators / level)\",\n    \"[6x2] Ant God gets angrier (+1% Accelerator Boosts / level)\",\n    \"[6x3] Ant God cannot believe your bravery (+1% Multipliers / level)\",\n    \"[6x4] Add +1 extra level to Crystal upgrade caps multiplied by Level * Log4(Common Fragments + 1)\",\n    \"[6x5] Unlock automation for Fortifying talismans! Activates every 2 real life seconds.\",\n    \"[6x6] Turn some Ant Disciples against Ant God, giving +0.5% Rune Effectiveness per level.\",\n    \"[6x7] Recruit a couple other ants towards your side as well, giving +2 free ant levels per level.\",\n    \"[6x8] Using some coalesced Obtainium, you can make Ant Sacrifice 3% better per level.\",\n    \"[6x9 lol] The funny number. Gain a +6.9% bonus to blessing level.\",\n    \"[6x10] Unlock automation for Enhancing talismans! Activates every 2 real life seconds.\",\n    \"[6x11] It may be time to look back. Makes all ticks 1.5% faster each level.\",\n    \"[6x12] Paying off Wow! Industries, they'll sponsor +1% cubes per level towards your Ascension bank.\",\n    \"[6x13] When you open Wow! Cubes you will get +0.1% tributes per level!\",\n    \"[6x14] Make all Tesseract buildings produce 2% faster per level.\",\n    \"[6x15] The first of a Tetralogy, this tome reduces the base requirements of Challenge 10 by dividing it by 1e100M! A must-read!\",\n    \"[6x16] The Ant God has infiltrated your mind. Run away from your conscience! (+0.8% Accelerators / level)\",\n    \"[6x17] Run... RUN FASTER from your nightmares! (+0.8% Accelerator Boosts / level)\",\n    \"[6x18] Your resilience somehow gives you +0.8% Multipliers / level!\",\n    \"[6x19] Your obtainium gain is increased by 3 * Log4(Uncommon Fragments + 1) * level%! Why is this? I don't know.\",\n    \"[6x20] Your knowledge from the ant war will help you automatically gain Mortuus Est Ant levels.\",\n    \"[6x21] Feed your Disciples pure Obtainium to make your runes +0.4% more effective per level.\",\n    \"[6x22] Feed your ants their own crumbs to make them Log(Crumbs + 10)x faster!\",\n    \"[6x23] Increase your base Ant ELO by 2.5% per level!\",\n    \"[6x24] You will gain +0.03% more Offerings per level per level in the Midas Talisman!\",\n    \"[6x25] Auto Challenge. Enough said. (Lets you automatically run and complete challenges!)\",\n    \"[7x1] A new row, old upgrade. Makes all ticks 1.2% faster each level.\",\n    \"[7x2] Wow! Industries sponsors another +0.9% cubes per level towards your Ascension bank!\",\n    \"[7x3] Hey, I totally didn't steal this idea. You gain 12 tributes of Wow! Cube tier for every Tesseract opened.\",\n    \"[7x4] Make all Tesseract buildings produce 3% faster per level. Hey, isn't that more than the last research tier?\",\n    \"[7x5] Tome 2 of 4: How to win over the Ant universe. Another e100M Divider to Challenge 10 Base Requirement on purchase.\",\n    \"[7x6] What, again? Alright. +0.6% Accelerators / level.\",\n    \"[7x7] Gas, gas, gas. +0.6% Accelerator Boosts / level.\",\n    \"[7x8] Dupe DUPE DUPE. +0.6% Multipliers / level.\",\n    \"[7x9] Somehow, I can't explain why, you reduce your taxes by 2% multiplicative, based on 3/5 * log10(Rare Fragments)!\",\n    \"[7x10] Want a permanent blessing boost? I know you do. A permanent +25% effect to all blessings.\",\n    \"[7x11] SIGMA KAPPA: +0.3% Rune Effectiveness each level!\",\n    \"[7x12] More exponentiation! +0.0001% more inceptus power per level!\",\n    \"[7x13] Ant God's wanting blood: +2% Ant Sacrifice rewards / level\",\n    \"[7x14] Spirit power still sucks, so add +8% power per level!\",\n    \"[7x15] Gain 2x the Spirit buffs in challenges!\",\n    \"[7x16] < T I M E >: +0.9% faster ticks / level \",\n    \"[7x17] Because of sponsorships, Wow! Industries is raising cubes gained in Ascension by 0.8% per level.\",\n    \"[7x18] Gain +0.08% tributes from cubes per level. You know, you should expect it at this point.\",\n    \"[7x19] +4% faster Tesseract Buildings / level. It's GROWING.\",\n    \"[7x20] Tome 3 of 4: How to totally ROCK challenge 10. e100m divisor!\",\n    \"[7x21] You should know how this goes. +0.4% Accelerator Boosts / level\",\n    \"[7x22] Accelerator Boosts += 0.004 * Accelerator Boosts\",\n    \"[7x23] A lot of a small +0.4% Multipliers per level\",\n    \"[7x24] Epic Fragments boost Blessing power by 10% * Log10(Epic Shards + 1)\",\n    \"[7x25] Automatically buy Constant Upgrades, if they are affordable! They also no longer subtract from your constant.\",\n    \"[8x1] Row 8 baby! +0.2% Rune Effectiveness / level.\",\n    \"[8x2] +Log10(Crumbs)% to ant production per level. Pretty cool buff ain't it?\",\n    \"[8x3] +666 Base ELO per level! Spooky number of the devil.\",\n    \"[8x4] +0.04% more offerings per level per midas level!\",\n    \"[8x5] +1 Export Quark per hour, yet again.\",\n    \"[8x6] +0.6% faster ticks / level because why not? You're already the speed of light.\",\n    \"[8x7] +0.7% cubes in ascension bank / level, from dividends in Wow! Stock.\",\n    \"[8x8] When you open a Hypercube, you also open 100 Tesseracts! (This works with 7x3, if you were curious.)\",\n    \"[8x9] +5% faster Tesseract Buildings / level. ASCENDED.\",\n    \"[8x10] Tome 4 of 4: You need to prepare for your ascent. e100m divisor!\",\n    \"[8x11] Something something +0.2% Accelerators pretty cool!\",\n    \"[8x12] Something somewhere, +0.2% Accelerator Boosts!\",\n    \"[8x13] You are DUPLICATED. +0.2% Multipliers/level\",\n    \"[8x14] Legendary Fragments increase Spirit power by +15% multiplied by Log10(Legendary Fragments + 1)\",\n    \"[8x15] Unlock Automations for all 5 of the Tesseract buildings.\",\n    \"[8x16] +0.1% Rune Effectiveness / level. Does this even do anything at this point?\",\n    \"[8x17] Each purchased level of Mortuus Est also increases Ascension Cube reward by +0.03%\",\n    \"[8x18] +1% Ant Sacrifice Reward per level. Singularity HYPE.\",\n    \"[8x19] Increases both Spirit AND Blessing power by 2% per level.\",\n    \"[8x20] Gain +1 export Quark per level, and increases the max timer to redeem quarks by 12.5 hours each!\",\n    \"[8x21] +0.3% faster ticks / level, because you just can't wait to become the singularity.\",\n    \"[8x22] +0.6% cubes in Ascension Bank / level. No one knows how. Bank error perhaps.\",\n    \"[8x23] +0.06% tributes from cubes / level!. Wow! Cubes really has a lot of manufacturing errors in your favor.\",\n    \"[8x24] +10% faster Tesseract Buildings / level. THE ARISEN. WITH THE PRAISE OF THE SINGULARITY.\",\n    \"[8x25] Gain the power of a thousand suns! +0.01% Accelerators, A. Boosts, Multipliers, Offerings, and +0.004% Cubes, +0.04 Max Rune level, + Floor(level/400) max Talisman Level, +Floor(level/200) free ants.\"\n];\nexport const researchDescriptions = (i, auto = false, linGrowth = 0) => {\n    const buyAmount = (G['maxbuyresearch'] || auto) ? 100000 : 1;\n    const y = resdesc[i - 1];\n    let z = \"\";\n    const p = \"res\" + i;\n    const metaData = getResearchCost(i, buyAmount, linGrowth);\n    z = \" Cost: \" + (format(metaData[1], 0, false)) + \" Obtainium [+\" + format(metaData[0] - player.researches[i], 0, true) + \" Levels]\";\n    if (player.researches[i] === (G['researchMaxLevels'][i])) {\n        document.getElementById(\"researchcost\").style.color = \"Gold\";\n        document.getElementById(\"researchinfo3\").style.color = \"plum\";\n        z = z + \" || MAXED!\";\n    }\n    else {\n        document.getElementById(\"researchcost\").style.color = \"limegreen\";\n        document.getElementById(\"researchinfo3\").style.color = \"white\";\n    }\n    if (player.researchPoints < G['researchBaseCosts'][i] && player.researches[i] < (G['researchMaxLevels'][i])) {\n        document.getElementById(\"researchcost\").style.color = \"crimson\";\n    }\n    if (!auto && !player.autoResearchToggle) {\n        if (player.researches[i] > 0.5 && player.researches[i] < (G['researchMaxLevels'][i])) {\n            document.getElementById(p).style.backgroundColor = \"purple\";\n        }\n    }\n    if (player.researches[i] > 0.5 && player.researches[i] >= (G['researchMaxLevels'][i])) {\n        document.getElementById(p).style.backgroundColor = \"green\";\n    }\n    document.getElementById(\"researchinfo2\").textContent = y;\n    document.getElementById(\"researchcost\").textContent = z;\n    document.getElementById(\"researchinfo3\").textContent = \"Level \" + player.researches[i] + \"/\" + (G['researchMaxLevels'][i]);\n};\nexport const updateResearchBG = (j) => {\n    if (player.researches[j] > G['researchMaxLevels'][j]) {\n        player.researchPoints += (player.researches[j] - G['researchMaxLevels'][j]) * G['researchBaseCosts'][j];\n        player.researches[j] = G['researchMaxLevels'][j];\n    }\n    const k = \"res\" + j;\n    if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n        document.getElementById(k).style.backgroundColor = \"purple\";\n    }\n    else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n        document.getElementById(k).style.backgroundColor = \"green\";\n    }\n    else {\n        document.getElementById(k).style.backgroundColor = \"black\";\n    }\n};\n","import { player } from './Synergism';\nimport { openTesseract } from './Tesseracts';\nimport { Globals as G } from './Variables';\nexport const openHypercube = (value, max = false) => {\n    const toSpend = max ? player.wowHypercubes : Math.min(player.wowHypercubes, value);\n    player.wowHypercubes -= toSpend;\n    player.hypercubeOpenedDaily += toSpend;\n    if (player.hypercubeQuarkDaily < 25 + 75 * player.shopUpgrades.hypercubeToQuark) {\n        while (player.hypercubeOpenedDaily >= 5 * Math.pow(1 + player.hypercubeQuarkDaily, 2) && player.hypercubeQuarkDaily < 25 + 75 * player.shopUpgrades.hypercubeToQuark) {\n            player.hypercubeQuarkDaily += 1;\n            player.worlds += 1;\n        }\n    }\n    const toSpendModulo = toSpend % 20;\n    const toSpendDiv20 = Math.floor(toSpend / 20);\n    const blessings = {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    };\n    for (const key in player.hypercubeBlessings) {\n        player.hypercubeBlessings[key] += blessings[key].weight * toSpendDiv20;\n    }\n    for (let i = 0; i < toSpendModulo; i++) {\n        const num = 100 * Math.random();\n        for (const key in player.hypercubeBlessings) {\n            if (blessings[key].pdf(num))\n                player.hypercubeBlessings[key] += 1;\n        }\n    }\n    calculateHypercubeBlessings();\n    const extraTesseractBlessings = Math.floor(toSpend * 100 * player.researches[183]);\n    player.wowTesseracts += extraTesseractBlessings;\n    openTesseract(extraTesseractBlessings, false);\n};\nexport const calculateHypercubeBlessings = () => {\n    const keys = Object.keys(player.hypercubeBlessings);\n    for (const key of keys) {\n        const obj = player.hypercubeBlessings[key];\n        const idx = keys.indexOf(key) + 1;\n        let power = 1;\n        let mult = 1;\n        if (obj >= 1000) {\n            power = G['benedictionDRPower'][idx];\n            mult *= Math.pow(1000, (1 - G['benedictionDRPower'][idx]));\n        }\n        G['hypercubeBonusMultiplier'][idx] = 1 + mult * G['benedictionbase'][idx] * Math.pow(obj, power) * G['platonicBonusMultiplier'][4];\n    }\n};\n","import { player, clearInt, interval, format } from './Synergism';\nimport { calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels, calculateAnts, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO } from './Calculate';\nimport { resetofferings } from './Runes';\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { revealStuff } from './UpdateHTML';\nimport { upgradeupdate } from './Upgrades';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { getElementById } from './Utility';\nimport { ascensionAchievementCheck } from './Achievements';\nimport { buyResearch } from './Research';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { challengeRequirement } from './Challenges';\nimport { Synergism } from './Events';\nlet repeatreset;\nexport const resetrepeat = (input) => {\n    clearInt(repeatreset);\n    repeatreset = interval(() => resetdetails(input), 50);\n};\nexport const resetdetails = (input) => {\n    getElementById('resetofferings1').src = \"Pictures/Offering.png\";\n    const transcensionChallenge = player.currentChallenge.transcension;\n    const reincarnationChallenge = player.currentChallenge.reincarnation;\n    const offering = calculateOfferings(input);\n    const offeringImage = getElementById(\"resetofferings1\");\n    const offeringText = document.getElementById(\"resetofferings2\");\n    const currencyImage1 = getElementById(\"resetcurrency1\");\n    const resetObtainiumImage = getElementById(\"resetobtainium\");\n    const resetobtainiumText = document.getElementById(\"resetobtainium2\");\n    const resetInfo = document.getElementById('resetinfo');\n    const resetCurrencyGain = document.getElementById(\"resetcurrency2\");\n    (input == \"reincarnation\") ?\n        (resetObtainiumImage.src = \"Pictures/Obtainium.png\", resetobtainiumText.textContent = format(Math.floor(G['obtainiumGain']))) :\n        (resetObtainiumImage.src = \"\", resetobtainiumText.textContent = \"\");\n    (input == \"ascensionChallenge\" || input == \"ascension\") ?\n        offeringImage.style.display = offeringText.style.display = \"none\" :\n        offeringImage.style.display = offeringText.style.display = \"block\";\n    switch (input) {\n        case \"prestige\":\n            if (currencyImage1.src !== \"Pictures/Diamond.png\") {\n                currencyImage1.src = \"Pictures/Diamond.png\";\n            }\n            resetCurrencyGain.textContent = \"+\" + format(G['prestigePointGain']);\n            resetInfo.textContent = \"Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few offerings. Required: \" + format(player.coinsThisPrestige) + \"/1e16 Coins || TIME SPENT: \" + format(player.prestigecounter) + \" seconds.\";\n            resetInfo.style.color = \"turquoise\";\n            break;\n        case \"transcension\":\n            if (currencyImage1.src !== \"Pictures/Mythos.png\") {\n                currencyImage1.src = \"Pictures/Mythos.png\";\n            }\n            resetCurrencyGain.textContent = \"+\" + format(G['transcendPointGain']);\n            resetInfo.textContent = \"Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: \" + format(player.coinsThisTranscension) + \"/1e100 Coins || TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\";\n            resetInfo.style.color = \"orchid\";\n            break;\n        case \"reincarnation\":\n            if (currencyImage1.src !== \"Pictures/Particle.png\") {\n                currencyImage1.src = \"Pictures/Particle.png\";\n            }\n            resetCurrencyGain.textContent = \"+\" + format(G['reincarnationPointGain']);\n            resetInfo.textContent = \"Reset ALL previous reset tiers, but gain Particles, Obtainium and Offerings! Required: \" + format(player.transcendShards) + \"/1e300 Mythos Shards || TIME SPENT: \" + format(player.reincarnationcounter) + \" seconds.\";\n            resetInfo.style.color = \"limegreen\";\n            break;\n        case \"acceleratorBoost\":\n            if (currencyImage1.src !== \"Pictures/Diamond.png\") {\n                currencyImage1.src = \"Pictures/Diamond.png\";\n            }\n            resetCurrencyGain.textContent = \"-\" + format(player.acceleratorBoostCost);\n            resetInfo.textContent = \"Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: \" + format(player.prestigePoints) + \"/\" + format(player.acceleratorBoostCost) + \" Diamonds.\";\n            resetInfo.style.color = \"cyan\";\n            break;\n        case \"transcensionChallenge\":\n            currencyImage1.src = \"\";\n            resetCurrencyGain.textContent = \"\";\n            (transcensionChallenge !== 0) ?\n                (resetInfo.style.color = \"aquamarine\", resetInfo.textContent = \"Are you tired of being in your challenge or stuck? Click to leave challenge \" + transcensionChallenge + \". Progress: \" + format(player.coinsThisTranscension) + \"/\" + format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge])) + \" Coins. TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\") :\n                (resetInfo.style.color = \"crimson\", resetInfo.textContent = \"You're not in a Transcension Challenge right now. Get in one before you can leave it, duh!\");\n            break;\n        case \"reincarnationChallenge\":\n            currencyImage1.src = \"\";\n            resetCurrencyGain.textContent = \"\";\n            if (reincarnationChallenge !== 0) {\n                const goal = reincarnationChallenge >= 9 ? \"coins\" : \"transcendShards\";\n                const goaldesc = reincarnationChallenge >= 9 ? \" Coins\" : \" Mythos Shards\";\n                resetInfo.style.color = \"silver\";\n                resetInfo.textContent = \"Are you done or tired of being in your challenge? Click to leave challenge \" + reincarnationChallenge + \". Progress: \" + format(player[goal]) + \"/\" + format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge)) + goaldesc + \". TIME SPENT: \" + format(player.reincarnationcounter) + \" Seconds.\";\n            }\n            else {\n                resetInfo.style.color = \"crimson\";\n                resetInfo.textContent = \"You're not in a Reincarnation Challenge right now. How could you leave what you are not in?\";\n            }\n            break;\n        case \"ascensionChallenge\":\n            currencyImage1.src = \"\";\n            resetCurrencyGain.textContent = \"\";\n            resetInfo.textContent = \"Click this if you're in an Ascension Challenge and want to leave. You get it already!\";\n            resetInfo.style.color = \"gold\";\n            break;\n        case \"ascension\":\n            currencyImage1.src = \"\";\n            resetCurrencyGain.textContent = \"\";\n            resetInfo.textContent = \"Ascend. 10x1 is required! +\" + format(CalcCorruptionStuff()[4], 0, true) + \" Wow! Cubes for doing it! Time: \" + format(player.ascensionCounter, 0, false) + \" Seconds.\";\n            resetInfo.style.color = \"gold\";\n            break;\n    }\n    document.getElementById(\"resetofferings2\").textContent = \"+\" + format(offering);\n};\nexport const updateAutoReset = (i) => {\n    if (i === 1) {\n        const t = +getElementById(\"prestigeamount\").value;\n        if (t >= 0) {\n            player.prestigeamount = t;\n        }\n        else {\n            player.prestigeamount = 0;\n        }\n    }\n    else if (i === 2) {\n        const u = +getElementById(\"transcendamount\").value;\n        if (u >= 0) {\n            player.transcendamount = u;\n        }\n        else {\n            player.transcendamount = 0;\n        }\n    }\n    else if (i === 3) {\n        const v = +getElementById(\"reincarnationamount\").value;\n        if (v >= 0) {\n            player.reincarnationamount = v;\n        }\n        else {\n            player.reincarnationamount = 0;\n        }\n    }\n    else if (i === 4) {\n        let v = parseFloat(getElementById(\"ascensionAmount\").value);\n        v = Math.floor(v);\n        if (v >= 1) {\n            player.autoAscendThreshold = v;\n        }\n        else {\n            player.autoAscendThreshold = 1;\n        }\n    }\n    else if (i === 5) {\n        const v = parseFloat(getElementById(\"autoAntSacrificeAmount\").value);\n        player.autoAntSacTimer = Math.max(0, v);\n    }\n};\nexport const updateTesseractAutoBuyAmount = () => {\n    let v = parseFloat(getElementById(\"tesseractAmount\").value);\n    v = Math.floor(v);\n    if (v >= 0) {\n        player.tesseractAutoBuyerAmount = v;\n    }\n    else {\n        player.tesseractAutoBuyerAmount = 0;\n    }\n};\nconst resetAddHistoryEntry = (input, from = 'unknown') => {\n    const offeringsGiven = calculateOfferings(input);\n    const isChallenge = [\"enterChallenge\", \"leaveChallenge\"].includes(from);\n    if (input === \"prestige\") {\n        const historyEntry = {\n            seconds: player.prestigecounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: \"prestige\",\n            diamonds: G['prestigePointGain'].toString(),\n        };\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    }\n    else if (input === \"transcension\" || input === \"transcensionChallenge\") {\n        const historyEntry = {\n            seconds: player.transcendcounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: \"transcend\",\n            mythos: G['transcendPointGain'].toString(),\n        };\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    }\n    else if (input === \"reincarnation\" || input === \"reincarnationChallenge\") {\n        if (!isChallenge || G['reincarnationPointGain'].gte(player.reincarnationPoints.div(10))) {\n            const historyEntry = {\n                seconds: player.reincarnationcounter,\n                date: Date.now(),\n                offerings: offeringsGiven,\n                kind: \"reincarnate\",\n                particles: G['reincarnationPointGain'].toString(),\n                obtainium: G['obtainiumGain'],\n            };\n            Synergism.emit('historyAdd', 'reset', historyEntry);\n        }\n    }\n    else if (input === \"ascension\" || input === \"ascensionChallenge\") {\n        if (player.challengecompletions[10] > 0) {\n            const corruptionMetaData = CalcCorruptionStuff();\n            const historyEntry = {\n                seconds: player.ascensionCounter,\n                date: Date.now(),\n                c10Completions: player.challengecompletions[10],\n                usedCorruptions: player.usedCorruptions.slice(0),\n                corruptionScore: corruptionMetaData[3],\n                wowCubes: corruptionMetaData[4],\n                wowTesseracts: corruptionMetaData[5],\n                wowHypercubes: corruptionMetaData[6],\n                wowPlatonicCubes: corruptionMetaData[7],\n                kind: \"ascend\",\n            };\n            if (from !== \"enterChallenge\" && player.currentChallenge.ascension !== 0) {\n                historyEntry.currentChallenge = player.currentChallenge.ascension;\n            }\n            Synergism.emit('historyAdd', 'ascend', historyEntry);\n        }\n    }\n};\nexport const reset = (input, fast = false, from = 'unknown') => {\n    resetAddHistoryEntry(input, from);\n    resetofferings(input);\n    resetUpgrades(1);\n    player.coins = new Decimal(\"102\");\n    player.coinsThisPrestige = new Decimal(\"100\");\n    player.firstOwnedCoin = 0;\n    player.firstGeneratedCoin = new Decimal(\"0\");\n    player.firstCostCoin = new Decimal(\"100\");\n    player.secondOwnedCoin = 0;\n    player.secondGeneratedCoin = new Decimal(\"0\");\n    player.secondCostCoin = new Decimal(\"2e3\");\n    player.thirdOwnedCoin = 0;\n    player.thirdGeneratedCoin = new Decimal(\"0\");\n    player.thirdCostCoin = new Decimal(\"4e4\");\n    player.fourthOwnedCoin = 0;\n    player.fourthGeneratedCoin = new Decimal(\"0\");\n    player.fourthCostCoin = new Decimal(\"8e5\");\n    player.fifthOwnedCoin = 0;\n    player.fifthGeneratedCoin = new Decimal(\"0\");\n    player.fifthCostCoin = new Decimal(\"1.6e7\");\n    player.firstGeneratedDiamonds = new Decimal(\"0\");\n    player.secondGeneratedDiamonds = new Decimal(\"0\");\n    player.thirdGeneratedDiamonds = new Decimal(\"0\");\n    player.fourthGeneratedDiamonds = new Decimal(\"0\");\n    player.fifthGeneratedDiamonds = new Decimal(\"0\");\n    player.multiplierCost = new Decimal(\"1e5\");\n    player.multiplierBought = 0;\n    player.acceleratorCost = new Decimal(\"500\");\n    player.acceleratorBought = 0;\n    player.prestigeCount += 1;\n    player.prestigePoints = player.prestigePoints.add(G['prestigePointGain']);\n    player.prestigeShards = new Decimal(\"0\");\n    player.prestigenoaccelerator = true;\n    player.prestigenomultiplier = true;\n    player.prestigenocoinupgrades = true;\n    player.unlocks.prestige = true;\n    if (player.prestigecounter < player.fastestprestige) {\n        player.fastestprestige = player.prestigecounter;\n    }\n    G['prestigePointGain'] = new Decimal('0');\n    player.prestigecounter = 0;\n    G['autoResetTimers'].prestige = 0;\n    const types = ['transcension', 'transcensionChallenge', 'reincarnation', 'reincarnationChallenge', 'ascension', 'ascensionChallenge'];\n    if (types.includes(input)) {\n        resetUpgrades(2);\n        player.coinsThisTranscension = new Decimal(\"100\");\n        player.firstOwnedDiamonds = 0;\n        player.firstCostDiamonds = new Decimal(\"100\");\n        player.secondOwnedDiamonds = 0;\n        player.secondCostDiamonds = new Decimal(\"1e5\");\n        player.thirdOwnedDiamonds = 0;\n        player.thirdCostDiamonds = new Decimal(\"1e15\");\n        player.fourthOwnedDiamonds = 0;\n        player.fourthCostDiamonds = new Decimal(\"1e40\");\n        player.fifthOwnedDiamonds = 0;\n        player.fifthCostDiamonds = new Decimal(\"1e100\");\n        player.firstGeneratedMythos = new Decimal(\"0\");\n        player.secondGeneratedMythos = new Decimal(\"0\");\n        player.thirdGeneratedMythos = new Decimal(\"0\");\n        player.fourthGeneratedMythos = new Decimal(\"0\");\n        player.fifthGeneratedMythos = new Decimal(\"0\");\n        player.acceleratorBoostBought = 0;\n        player.acceleratorBoostCost = new Decimal(\"1e3\");\n        player.transcendCount += 1;\n        player.prestigePoints = new Decimal(\"0\");\n        player.transcendPoints = player.transcendPoints.add(G['transcendPointGain']);\n        player.transcendShards = new Decimal(\"0\");\n        player.transcendnocoinupgrades = true;\n        player.transcendnocoinorprestigeupgrades = true;\n        player.transcendnoaccelerator = true;\n        player.transcendnomultiplier = true;\n        G['transcendPointGain'] = new Decimal('0');\n        if (player.achievements[78] > 0.5) {\n            player.firstOwnedDiamonds += 1;\n        }\n        if (player.achievements[85] > 0.5) {\n            player.secondOwnedDiamonds += 1;\n        }\n        if (player.achievements[92] > 0.5) {\n            player.thirdOwnedDiamonds += 1;\n        }\n        if (player.achievements[99] > 0.5) {\n            player.fourthOwnedDiamonds += 1;\n        }\n        if (player.achievements[106] > 0.5) {\n            player.fifthOwnedDiamonds += 1;\n        }\n        if (player.achievements[4] > 0.5) {\n            player.upgrades[81] = 1;\n        }\n        if (player.achievements[11] > 0.5) {\n            player.upgrades[82] = 1;\n        }\n        if (player.achievements[18] > 0.5) {\n            player.upgrades[83] = 1;\n        }\n        if (player.achievements[25] > 0.5) {\n            player.upgrades[84] = 1;\n        }\n        if (player.achievements[32] > 0.5) {\n            player.upgrades[85] = 1;\n        }\n        if (player.achievements[80] > 0.5) {\n            player.upgrades[87] = 1;\n        }\n        if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\n            player.fastesttranscend = player.transcendcounter;\n        }\n        player.transcendcounter = 0;\n        G['autoResetTimers'].transcension = 0;\n    }\n    if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge') {\n        if (player.ascensionCount > 0 && player.achievements[183] < 1) {\n            ascensionAchievementCheck(1);\n        }\n        player.researchPoints += Math.floor(G['obtainiumGain']);\n        const opscheck = G['obtainiumGain'] / (1 + player.reincarnationcounter);\n        if (opscheck > player.obtainiumpersecond) {\n            player.obtainiumpersecond = opscheck;\n        }\n        player.currentChallenge.transcension = 0;\n        resetUpgrades(3);\n        player.coinsThisReincarnation = new Decimal(\"100\");\n        player.firstOwnedMythos = 0;\n        player.firstCostMythos = new Decimal(\"1\");\n        player.secondOwnedMythos = 0;\n        player.secondCostMythos = new Decimal(\"1e2\");\n        player.thirdOwnedMythos = 0;\n        player.thirdCostMythos = new Decimal(\"1e4\");\n        player.fourthOwnedMythos = 0;\n        player.fourthCostMythos = new Decimal(\"1e8\");\n        player.fifthOwnedMythos = 0;\n        player.fifthCostMythos = new Decimal(\"1e16\");\n        player.firstGeneratedParticles = new Decimal(\"0\");\n        player.secondGeneratedParticles = new Decimal(\"0\");\n        player.thirdGeneratedParticles = new Decimal(\"0\");\n        player.fourthGeneratedParticles = new Decimal(\"0\");\n        player.fifthGeneratedParticles = new Decimal(\"0\");\n        player.reincarnationCount += 1;\n        player.transcendPoints = new Decimal(\"0\");\n        player.reincarnationPoints = player.reincarnationPoints.add(G['reincarnationPointGain']);\n        if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\n            player.prestigePoints = player.prestigePoints.add(G['reincarnationPointGain']);\n        }\n        player.reincarnationShards = new Decimal(\"0\");\n        player.challengecompletions[1] = 0;\n        player.challengecompletions[2] = 0;\n        player.challengecompletions[3] = 0;\n        player.challengecompletions[4] = 0;\n        player.challengecompletions[5] = 0;\n        G['reincarnationPointGain'] = new Decimal('0');\n        if (player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.reincarnation === 0) {\n            player.challengecompletions[1] = player.highestchallengecompletions[1];\n            player.challengecompletions[2] = player.highestchallengecompletions[2];\n            player.challengecompletions[3] = player.highestchallengecompletions[3];\n            player.challengecompletions[4] = player.highestchallengecompletions[4];\n            player.challengecompletions[5] = player.highestchallengecompletions[5];\n        }\n        player.reincarnatenocoinupgrades = true;\n        player.reincarnatenocoinorprestigeupgrades = true;\n        player.reincarnatenocoinprestigeortranscendupgrades = true;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true;\n        player.reincarnatenoaccelerator = true;\n        player.reincarnatenomultiplier = true;\n        if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\n            player.fastestreincarnate = player.reincarnationcounter;\n        }\n        calculateCubeBlessings();\n        player.reincarnationcounter = 0;\n        G['autoResetTimers'].reincarnation = 0;\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\n            const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n            buyResearch(player.autoResearch, true, linGrowth);\n        }\n        calculateRuneLevels();\n        calculateAnts();\n    }\n    if (input === 'ascension' || input === 'ascensionChallenge') {\n        const metaData = CalcCorruptionStuff();\n        ascensionAchievementCheck(3, metaData[3]);\n        player.currentChallenge.transcension = 0;\n        player.currentChallenge.reincarnation = 0;\n        player.autoChallengeIndex = 1;\n        G['autoChallengeTimerIncrement'] = 0;\n        resetResearches();\n        resetAnts();\n        resetTalismans();\n        player.reincarnationPoints = new Decimal(\"0\");\n        player.reincarnationShards = new Decimal(\"0\");\n        player.obtainiumpersecond = 0;\n        player.maxobtainiumpersecond = 0;\n        player.offeringpersecond = 0;\n        player.antSacrificePoints = 0;\n        player.antSacrificeTimer = 0;\n        player.antSacrificeTimerReal = 0;\n        player.antUpgrades[12 - 1] = 0;\n        for (let j = 61; j <= 80; j++) {\n            player.upgrades[j] = 0;\n        }\n        for (let j = 94; j <= 100; j++) {\n            player.upgrades[j] = 0;\n        }\n        player.firstOwnedParticles = 0;\n        player.secondOwnedParticles = 0;\n        player.thirdOwnedParticles = 0;\n        player.fourthOwnedParticles = 0;\n        player.fifthOwnedParticles = 0;\n        player.firstCostParticles = new Decimal(\"1\");\n        player.secondCostParticles = new Decimal(\"100\");\n        player.thirdCostParticles = new Decimal(\"1e4\");\n        player.fourthCostParticles = new Decimal(\"1e8\");\n        player.fifthCostParticles = new Decimal(\"1e16\");\n        player.runeexp = [0, 0, 0, 0, 0];\n        player.runelevels = [0, 0, 0, 0, 0];\n        player.runeshards = 0;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n        player.runelevels[0] = 3 * player.cubeUpgrades[26];\n        player.runelevels[1] = 3 * player.cubeUpgrades[26];\n        player.runelevels[2] = 3 * player.cubeUpgrades[26];\n        player.runelevels[3] = 3 * player.cubeUpgrades[26];\n        player.runelevels[4] = 3 * player.cubeUpgrades[26];\n        if (player.cubeUpgrades[27] === 1) {\n            player.firstOwnedParticles = 1;\n            player.secondOwnedParticles = 1;\n            player.thirdOwnedParticles = 1;\n            player.fourthOwnedParticles = 1;\n            player.fifthOwnedParticles = 1;\n        }\n        if (player.cubeUpgrades[48] > 0) {\n            player.firstOwnedAnts += 1;\n        }\n        if (player.challengecompletions[10] > 0) {\n            let ascCount = 1;\n            if (player.ascensionCounter >= 10) {\n                if (player.achievements[188] > 0) {\n                    ascCount += 99;\n                }\n                ascCount *= 1 + (Math.min(24 * 3600, player.ascensionCounter) / 10 - 1) * 0.2 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223]);\n            }\n            if (player.achievements[187] > 0 && metaData[3] > 1e8) {\n                ascCount *= (Math.log(metaData[3]) / Math.log(10) - 1);\n            }\n            ascCount *= G['challenge15Rewards'].ascensions;\n            ascCount = Math.floor(ascCount);\n            player.ascensionCount += ascCount;\n            player.wowCubes += metaData[4];\n            player.wowTesseracts += metaData[5];\n            player.wowHypercubes += metaData[6];\n            player.wowPlatonicCubes += metaData[7];\n        }\n        for (let j = 1; j <= 10; j++) {\n            player.challengecompletions[j] = 0;\n            player.highestchallengecompletions[j] = 0;\n        }\n        player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49];\n        player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49];\n        player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49];\n        player.roombaResearchIndex = 0;\n        player.autoResearch = 1;\n        for (let j = 1; j <= (200); j++) {\n            const k = \"res\" + j;\n            if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n                document.getElementById(k).style.backgroundColor = \"purple\";\n            }\n            else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n                document.getElementById(k).style.backgroundColor = \"green\";\n            }\n            else {\n                document.getElementById(k).style.backgroundColor = \"black\";\n            }\n        }\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        calculateTalismanEffects();\n        calculateObtainium();\n        ascensionAchievementCheck(1);\n        player.ascensionCounter = 0;\n        updateTalismanInventory();\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        updateTalismanAppearance(7);\n        calculateCubeBlessings();\n        calculateTesseractBlessings();\n        calculateHypercubeBlessings();\n        if (player.cubeUpgrades[4] === 1) {\n            player.upgrades[94] = 1;\n            player.upgrades[95] = 1;\n            player.upgrades[96] = 1;\n            player.upgrades[97] = 1;\n            player.upgrades[98] = 1;\n        }\n        if (player.cubeUpgrades[5] === 1) {\n            player.upgrades[99] = 1;\n        }\n        if (player.cubeUpgrades[6] === 1) {\n            player.upgrades[100] = 1;\n        }\n        for (let j = 61; j <= 80; j++) {\n            document.getElementById(\"upg\" + j).style.backgroundColor = \"black\";\n        }\n        for (let j = 94; j <= 100; j++) {\n            if (player.upgrades[j] === 0) {\n                document.getElementById(\"upg\" + j).style.backgroundColor = \"black\";\n            }\n        }\n        player.usedCorruptions = Array.from(player.prototypeCorruptions);\n    }\n    player.unlocks.prestige = true;\n    if (input == \"transcension\" || input == \"transcensionChallenge\") {\n        player.unlocks.transcend = true;\n    }\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\n        player.unlocks.reincarnate = true;\n    }\n    if (!fast) {\n        revealStuff();\n    }\n};\nconst resetUpgrades = (i) => {\n    if (i > 2.5) {\n        for (let i = 41; i < 61; i++) {\n            if (i !== 46) {\n                player.upgrades[i] = 0;\n            }\n        }\n        if (player.researches[41] === 0) {\n            player.upgrades[46] = 0;\n        }\n        if (player.researches[41] < 0.5) {\n            player.upgrades[88] = 0;\n        }\n        if (player.achievements[50] === 0) {\n            player.upgrades[89] = 0;\n        }\n        if (player.researches[42] < 0.5) {\n            player.upgrades[90] = 0;\n        }\n        if (player.researches[43] < 0.5) {\n            player.upgrades[91] = 0;\n        }\n        if (player.researches[44] < 0.5) {\n            player.upgrades[92] = 0;\n        }\n        if (player.researches[45] < 0.5) {\n            player.upgrades[93] = 0;\n        }\n        player.upgrades[116] = 0;\n        player.upgrades[117] = 0;\n        player.upgrades[118] = 0;\n        player.upgrades[119] = 0;\n        player.upgrades[120] = 0;\n    }\n    for (let j = 1; j <= 20; j++) {\n        player.upgrades[j] = 0;\n    }\n    for (let j = 121, k = 106; j <= 125; j++, k++) {\n        player.upgrades[j] = 0;\n        player.upgrades[k] = 0;\n    }\n    if (i > 1.5) {\n        if (player.achievements[4] < 0.5) {\n            player.upgrades[81] = 0;\n        }\n        if (player.achievements[11] < 0.5) {\n            player.upgrades[82] = 0;\n        }\n        if (player.achievements[18] < 0.5) {\n            player.upgrades[83] = 0;\n        }\n        if (player.achievements[25] < 0.5) {\n            player.upgrades[84] = 0;\n        }\n        if (player.achievements[32] < 0.5) {\n            player.upgrades[85] = 0;\n        }\n        if (player.achievements[87] < 0.5) {\n            player.upgrades[86] = 0;\n        }\n        if (player.achievements[80] < 0.5) {\n            player.upgrades[87] = 0;\n        }\n        player.upgrades[101] = 0;\n        player.upgrades[102] = 0;\n        player.upgrades[103] = 0;\n        player.upgrades[104] = 0;\n        player.upgrades[105] = 0;\n    }\n    if (i > 1.5) {\n        for (let k = 21; k < 41; k++) {\n            player.upgrades[k] = 0;\n        }\n        player.upgrades[111] = 0;\n        player.upgrades[112] = 0;\n        player.upgrades[113] = 0;\n        player.upgrades[114] = 0;\n        player.upgrades[115] = 0;\n    }\n    if (i > 1.5) {\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n        player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000];\n        let m = 0;\n        m += Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100;\n        if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n            m += 10;\n        }\n        player.crystalUpgrades = [m, m, m, m, m, m, m, m];\n    }\n    for (let x = 1; x <= 125; x++) {\n        upgradeupdate(x, true);\n    }\n    if (player.achievements[87] > 0.5) {\n        player.upgrades[86] = 1;\n    }\n};\nexport const resetAnts = () => {\n    player.firstOwnedAnts = 0;\n    if (player.cubeUpgrades[48] > 0) {\n        player.firstOwnedAnts = 1;\n    }\n    player.secondOwnedAnts = 0;\n    player.thirdOwnedAnts = 0;\n    player.fourthOwnedAnts = 0;\n    player.fifthOwnedAnts = 0;\n    player.sixthOwnedAnts = 0;\n    player.seventhOwnedAnts = 0;\n    player.eighthOwnedAnts = 0;\n    player.firstGeneratedAnts = new Decimal(\"0\");\n    player.secondGeneratedAnts = new Decimal(\"0\");\n    player.thirdGeneratedAnts = new Decimal(\"0\");\n    player.fourthGeneratedAnts = new Decimal(\"0\");\n    player.fifthGeneratedAnts = new Decimal(\"0\");\n    player.sixthGeneratedAnts = new Decimal(\"0\");\n    player.seventhGeneratedAnts = new Decimal(\"0\");\n    player.eighthGeneratedAnts = new Decimal(\"0\");\n    player.firstCostAnts = new Decimal(\"1e800\");\n    player.secondCostAnts = new Decimal(\"3\");\n    player.thirdCostAnts = new Decimal(\"100\");\n    player.fourthCostAnts = new Decimal(\"1e4\");\n    player.fifthCostAnts = new Decimal(\"1e12\");\n    player.sixthCostAnts = new Decimal(\"1e36\");\n    player.seventhCostAnts = new Decimal(\"1e100\");\n    player.eighthCostAnts = new Decimal(\"1e300\");\n    const ant12 = player.antUpgrades[12 - 1];\n    player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12];\n    player.antPoints = new Decimal(\"1\");\n    if (player.currentChallenge.ascension === 12) {\n        player.antPoints = new Decimal(\"7\");\n    }\n    calculateAnts();\n    calculateRuneLevels();\n};\nconst resetResearches = () => {\n    player.researchPoints = 0;\n    const destroy = [\n        6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n        51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n        76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\n        101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\n        126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149,\n        151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174,\n        176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199\n    ];\n    for (const item of destroy) {\n        player.researches[item] = 0;\n    }\n};\nconst resetTalismans = () => {\n    player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n    player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n    player.talismanShards = 0;\n    player.commonFragments = 0;\n    player.uncommonFragments = 0;\n    player.rareFragments = 0;\n    player.epicFragments = 0;\n    player.legendaryFragments = 0;\n    player.mythicalFragments = 0;\n};\n","import { player, format, interval, clearInt, saveSynergy, resourceGain, updateAll } from './Synergism';\nimport { sumContents, productContents } from './Utility';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport Decimal from 'break_infinity.js';\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport { redeemShards } from './Runes';\nexport const calculateTotalCoinOwned = () => {\n    G['totalCoinOwned'] =\n        player.firstOwnedCoin +\n            player.secondOwnedCoin +\n            player.thirdOwnedCoin +\n            player.fourthOwnedCoin +\n            player.fifthOwnedCoin;\n};\nexport const calculateTotalAcceleratorBoost = () => {\n    let b = 0;\n    if (player.upgrades[26] > 0.5) {\n        b += 1;\n    }\n    if (player.upgrades[31] > 0.5) {\n        b += Math.floor(G['totalCoinOwned'] / 2000) * 100 / 100;\n    }\n    if (player.achievements[7] > 0.5) {\n        b += Math.floor(player.firstOwnedCoin / 2000);\n    }\n    if (player.achievements[14] > 0.5) {\n        b += Math.floor(player.secondOwnedCoin / 2000);\n    }\n    if (player.achievements[21] > 0.5) {\n        b += Math.floor(player.thirdOwnedCoin / 2000);\n    }\n    if (player.achievements[28] > 0.5) {\n        b += Math.floor(player.fourthOwnedCoin / 2000);\n    }\n    if (player.achievements[35] > 0.5) {\n        b += Math.floor(player.fifthOwnedCoin / 2000);\n    }\n    b += player.researches[93] * Math.floor(1 / 20 * (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']));\n    b += Math.floor((0.01 + G['rune1level']) * G['effectiveLevelMult'] / 20);\n    b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17]);\n    b *= (1 + 1 / 20 * player.researches[88]);\n    b *= calculateSigmoidExponential(20, (player.antUpgrades[4 - 1] + G['bonusant4']) / 1000 * 20 / 19);\n    b *= (1 + 1 / 100 * player.researches[127]);\n    b *= (1 + 0.8 / 100 * player.researches[142]);\n    b *= (1 + 0.6 / 100 * player.researches[157]);\n    b *= (1 + 0.4 / 100 * player.researches[172]);\n    b *= (1 + 0.2 / 100 * player.researches[187]);\n    b *= (1 + 0.01 / 100 * player.researches[200]);\n    b *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        b *= 2;\n    }\n    b = Math.floor(b);\n    G['freeAcceleratorBoost'] = b;\n    G['totalAcceleratorBoost'] = Math.floor(player.acceleratorBoostBought + G['freeAcceleratorBoost']) * 100 / 100;\n};\nexport const calculateAcceleratorMultiplier = () => {\n    G['acceleratorMultiplier'] = 1;\n    G['acceleratorMultiplier'] *= (1 + player.achievements[60] / 100);\n    G['acceleratorMultiplier'] *= (1 + player.achievements[61] / 100);\n    G['acceleratorMultiplier'] *= (1 + player.achievements[62] / 100);\n    G['acceleratorMultiplier'] *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10]);\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[86]);\n    G['acceleratorMultiplier'] *= (1 + 1 / 100 * player.researches[126]);\n    G['acceleratorMultiplier'] *= (1 + 0.8 / 100 * player.researches[141]);\n    G['acceleratorMultiplier'] *= (1 + 0.6 / 100 * player.researches[156]);\n    G['acceleratorMultiplier'] *= (1 + 0.4 / 100 * player.researches[171]);\n    G['acceleratorMultiplier'] *= (1 + 0.2 / 100 * player.researches[186]);\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.researches[200]);\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\n    G['acceleratorMultiplier'] *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]);\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        G['acceleratorMultiplier'] *= 1.25;\n    }\n};\nexport const calculateRecycleMultiplier = () => {\n    const recycleFactors = sumContents([\n        0.05 * player.achievements[80],\n        0.05 * player.achievements[87],\n        0.05 * player.achievements[94],\n        0.05 * player.achievements[101],\n        0.05 * player.achievements[108],\n        0.05 * player.achievements[115],\n        0.075 * player.achievements[122],\n        0.075 * player.achievements[129],\n        0.05 * player.upgrades[61],\n        0.25 * Math.min(1, G['rune4level'] / 400),\n        0.005 * player.cubeUpgrades[2]\n    ]);\n    return 1 / (1 - recycleFactors);\n};\nexport function calculateRuneExpGiven(runeIndex, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\n    const recycleMultiplier = calculateRecycleMultiplier();\n    let allRuneExpAdditiveMultiplier = null;\n    if (all) {\n        allRuneExpAdditiveMultiplier = sumContents([\n            1 / 100 * player.highestchallengecompletions[3],\n            1 * player.upgrades[66]\n        ]);\n    }\n    else {\n        allRuneExpAdditiveMultiplier = sumContents([\n            1,\n            Math.min(1, player.highestchallengecompletions[1]),\n            0.4 / 10 * player.highestchallengecompletions[1],\n            0.6 * player.researches[22],\n            0.3 * player.researches[23],\n            2 * player.upgrades[61],\n            player.upgrades[71] * runeLevel / 25\n        ]);\n    }\n    const allRuneExpMultiplier = productContents([\n        1 + (player.researches[91] / 20),\n        1 + (player.researches[92] / 20),\n        calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8 - 1] + G['bonusant8'], 1.1)),\n        G['cubeBonusMultiplier'][4],\n        (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\n        1 / Math.pow(G['droughtMultiplier'][player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13]),\n        1 + 1 / 10 * player.constantUpgrades[8],\n        G['challenge15Rewards'].runeExp\n    ]);\n    const runeExpMultiplier = [\n        productContents([\n            1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5)\n        ]),\n        productContents([\n            1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5)\n        ])\n    ];\n    const fact = [\n        allRuneExpAdditiveMultiplier,\n        allRuneExpMultiplier,\n        recycleMultiplier,\n        runeExpMultiplier[runeIndex]\n    ];\n    return returnFactors ? fact : productContents(fact);\n}\nexport const lookupTableGen = (runeLevel) => {\n    const allRuneExpRequiredMultiplier = productContents([\n        Math.pow(runeLevel / 2, 3),\n        ((3.5 * runeLevel) + 100) / 500,\n        Math.max(1, (runeLevel - 200) / 9),\n        Math.max(1, (runeLevel - 400) / 12),\n        Math.max(1, (runeLevel - 600) / 15),\n        Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\n    ]);\n    return allRuneExpRequiredMultiplier;\n};\nconst lookupTableRuneExp = Object.assign({}, ...Array.from({ length: 20000 }, (_, i) => ({ [i]: lookupTableGen(i) })));\nexport const calculateRuneExpToLevel = (runeIndex, runeLevel = player.runelevels[runeIndex]) => {\n    return lookupTableRuneExp[runeLevel] * G['runeexpbase'][runeIndex];\n};\nexport const calculateMaxRunes = (i) => {\n    let max = 1000;\n    const increaseAll = 10 * (2 * player.cubeUpgrades[16] + 2 * player.cubeUpgrades[37])\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50]);\n    const increaseMaxLevel = [\n        null,\n        10 * (player.researches[78] + player.researches[111]) + increaseAll,\n        10 * (player.researches[80] + player.researches[112]) + increaseAll,\n        10 * (player.researches[79] + player.researches[113]) + increaseAll,\n        10 * (player.researches[77] + player.researches[114]) + increaseAll,\n        10 * player.researches[115] + increaseAll\n    ];\n    max += increaseMaxLevel[i];\n    return max;\n};\nexport function calculateOfferings(input, calcMult = true, statistic = false) {\n    if (input == \"acceleratorBoost\" || input == \"ascension\" || input == \"ascensionChallenge\") {\n        return 0;\n    }\n    let q = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\n        a += 3;\n        if (player.achievements[52] > 0.5) {\n            a += (25 * Math.min(player.reincarnationcounter / 1800, 1));\n        }\n        if (player.upgrades[62] > 0.5) {\n            a += 1 / 50 * (sumContents(player.challengecompletions));\n        }\n        a += 0.6 * player.researches[25];\n        if (player.researches[95] === 1) {\n            a += 4;\n        }\n        a += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\n        a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4);\n        a *= Math.min(Math.pow(player.reincarnationcounter / 10, 2), 1);\n        if (player.reincarnationcounter >= 5) {\n            a *= Math.max(1, player.reincarnationcounter / 10);\n        }\n    }\n    if (input == \"transcension\" || input == \"transcensionChallenge\" || input == \"reincarnation\" ||\n        input == \"reincarnationChallenge\") {\n        b += 2;\n        if (player.reincarnationCount > 0) {\n            b += 2;\n        }\n        if (player.achievements[44] > 0.5) {\n            b += (15 * Math.min(player.transcendcounter / 1800, 1));\n        }\n        if (player.challengecompletions[2] > 0) {\n            b += 1;\n        }\n        b += 0.2 * player.researches[24];\n        b += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\n        b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5);\n        b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25);\n        b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1);\n        if (player.transcendCount >= 5) {\n            b *= Math.max(1, player.transcendcounter / 10);\n        }\n    }\n    c += 1;\n    if (player.transcendCount > 0 || player.reincarnationCount > 0) {\n        c += 1;\n    }\n    if (player.reincarnationCount > 0) {\n        c += 2;\n    }\n    if (player.achievements[37] > 0.5) {\n        c += (15 * Math.min(player.prestigecounter / 1800, 1));\n    }\n    if (player.challengecompletions[2] > 0) {\n        c += 1;\n    }\n    c += 0.2 * player.researches[24];\n    c += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\n    c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5);\n    c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50);\n    c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1);\n    if (player.prestigeCount >= 5) {\n        c *= Math.max(1, player.prestigecounter / 10);\n    }\n    q = a + b + c;\n    const arr = [\n        1 + 10 * player.achievements[33] / 100,\n        1 + 15 * player.achievements[34] / 100,\n        1 + 25 * player.achievements[35] / 100,\n        1 + 20 * player.upgrades[38] / 100,\n        1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)),\n        1 + 1 / 50 * player.shopUpgrades.offeringAuto,\n        1 + 1 / 25 * player.shopUpgrades.offeringEX,\n        1 + 1 / 100 * player.shopUpgrades.cashGrab,\n        1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85],\n        1 + Math.pow((player.antUpgrades[6 - 1] + G['bonusant6']), .66),\n        G['cubeBonusMultiplier'][3],\n        1 + 0.02 * player.constantUpgrades[3],\n        1 + 0.0003 * player.talismanLevels[3 - 1] * player.researches[149] + 0.0004 * player.talismanLevels[3 - 1] * player.researches[179],\n        1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]),\n        1 + 0.01 / 100 * player.researches[200],\n        1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187],\n        1 + .6 * player.achievements[250] + 1 * player.achievements[251],\n        1 + 0.05 * player.cubeUpgrades[46],\n        1 + 0.02 / 100 * player.cubeUpgrades[50],\n        1 + player.platonicUpgrades[5],\n        1 + 2.5 * player.platonicUpgrades[10],\n        1 + 5 * player.platonicUpgrades[15],\n        G['challenge15Rewards'].offering,\n    ];\n    if (calcMult) {\n        q *= productContents(arr);\n    }\n    else if (!calcMult) {\n        return arr;\n    }\n    if (statistic) {\n        return productContents(arr);\n    }\n    q = Math.floor(q) * 100 / 100;\n    let persecond = 0;\n    if (input === \"prestige\") {\n        persecond = q / (1 + player.prestigecounter);\n    }\n    if (input === \"transcension\" || input == \"transcensionChallenge\") {\n        persecond = q / (1 + player.transcendcounter);\n    }\n    if (input === \"reincarnation\" || input == \"reincarnationChallenge\") {\n        persecond = q / (1 + player.reincarnationcounter);\n    }\n    if (persecond > player.offeringpersecond) {\n        player.offeringpersecond = persecond;\n    }\n    return q;\n}\nexport const calculateObtainium = () => {\n    G['obtainiumGain'] = 1;\n    if (player.upgrades[69] > 0) {\n        G['obtainiumGain'] *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5)).toNumber());\n    }\n    if (player.upgrades[72] > 0) {\n        G['obtainiumGain'] *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]));\n    }\n    if (player.upgrades[74] > 0) {\n        G['obtainiumGain'] *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)));\n    }\n    G['obtainiumGain'] *= (1 + player.researches[65] / 5);\n    G['obtainiumGain'] *= (1 + player.researches[76] / 10);\n    G['obtainiumGain'] *= (1 + player.researches[81] / 10);\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.obtainiumAuto / 50);\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.cashGrab / 100);\n    G['obtainiumGain'] *= (1 + G['rune5level'] / 200 * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)));\n    G['obtainiumGain'] *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07 * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15 * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147]);\n    G['obtainiumGain'] *= (1 + 2 * Math.pow((player.antUpgrades[10 - 1] + G['bonusant10']) / 50, 2 / 3));\n    G['obtainiumGain'] *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6));\n    G['obtainiumGain'] *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251]);\n    G['obtainiumGain'] *= G['cubeBonusMultiplier'][5];\n    G['obtainiumGain'] *= (1 + 0.04 * player.constantUpgrades[4]);\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[47]);\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[3]);\n    G['obtainiumGain'] *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]));\n    G['obtainiumGain'] *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][4]);\n    G['obtainiumGain'] *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144]);\n    G['obtainiumGain'] *= (1 + 0.02 / 100 * player.cubeUpgrades[50]);\n    if (player.achievements[53] > 0) {\n        G['obtainiumGain'] *= (1 + 1 / 800 * (G['runeSum']));\n    }\n    if (player.achievements[128]) {\n        G['obtainiumGain'] *= 1.5;\n    }\n    if (player.achievements[129]) {\n        G['obtainiumGain'] *= 1.25;\n    }\n    if (player.achievements[51] > 0) {\n        G['obtainiumGain'] += 4;\n    }\n    if (player.reincarnationcounter >= 2) {\n        G['obtainiumGain'] += 1 * player.researches[63];\n    }\n    if (player.reincarnationcounter >= 5) {\n        G['obtainiumGain'] += 2 * player.researches[64];\n    }\n    G['obtainiumGain'] *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2));\n    G['obtainiumGain'] *= (1 + 1 / 25 * player.shopUpgrades.obtainiumEX);\n    if (player.reincarnationCount >= 5) {\n        G['obtainiumGain'] *= Math.max(1, player.reincarnationcounter / 10);\n    }\n    G['obtainiumGain'] *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2);\n    G['obtainiumGain'] = Math.pow(G['obtainiumGain'], Math.min(1, G['illiteracyPower'][player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log(player.researchPoints + 10) / Math.log(10)))));\n    G['obtainiumGain'] *= (1 + 4 / 100 * player.cubeUpgrades[42]);\n    G['obtainiumGain'] *= (1 + 3 / 100 * player.cubeUpgrades[43]);\n    G['obtainiumGain'] *= (1 + player.platonicUpgrades[5]);\n    G['obtainiumGain'] *= (1 + 1.5 * player.platonicUpgrades[9]);\n    G['obtainiumGain'] *= (1 + 2.5 * player.platonicUpgrades[10]);\n    G['obtainiumGain'] *= (1 + 5 * player.platonicUpgrades[15]);\n    G['obtainiumGain'] *= G['challenge15Rewards'].obtainium;\n    if (player.currentChallenge.ascension === 15) {\n        G['obtainiumGain'] += 1;\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['obtainiumGain'] = 0;\n    }\n    player.obtainiumpersecond = G['obtainiumGain'] / (0.1 + player.reincarnationcounter);\n    player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond);\n};\nexport const calculateAutomaticObtainium = () => {\n    return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5);\n};\nexport const calculateTalismanEffects = () => {\n    let positiveBonus = 0;\n    let negativeBonus = 0;\n    if (player.achievements[135] === 1) {\n        positiveBonus += 0.02;\n    }\n    if (player.achievements[136] === 1) {\n        positiveBonus += 0.02;\n    }\n    positiveBonus += 0.02 * (player.talismanRarity[4 - 1] - 1);\n    positiveBonus += 1.2 * player.researches[106] / 100;\n    positiveBonus += 1.2 * player.researches[107] / 100;\n    positiveBonus += 1.2 * player.researches[116] / 200;\n    positiveBonus += 1.2 * player.researches[117] / 200;\n    positiveBonus += (G['cubeBonusMultiplier'][9] - 1);\n    positiveBonus += 0.0004 * player.cubeUpgrades[50];\n    negativeBonus += 0.06 * player.researches[118];\n    negativeBonus += 0.0004 * player.cubeUpgrades[50];\n    for (let i = 1; i <= 5; i++) {\n        if (player.talismanOne[i] === (1)) {\n            G['talisman1Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[1 - 1]] + positiveBonus) * player.talismanLevels[1 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman1Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[1 - 1]] - negativeBonus) * player.talismanLevels[1 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanTwo[i] === (1)) {\n            G['talisman2Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[2 - 1]] + positiveBonus) * player.talismanLevels[2 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman2Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[2 - 1]] - negativeBonus) * player.talismanLevels[2 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanThree[i] === (1)) {\n            G['talisman3Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[3 - 1]] + positiveBonus) * player.talismanLevels[3 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman3Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[3 - 1]] - negativeBonus) * player.talismanLevels[3 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanFour[i] === (1)) {\n            G['talisman4Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[4 - 1]] + positiveBonus) * player.talismanLevels[4 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman4Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[4 - 1]] - negativeBonus) * player.talismanLevels[4 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanFive[i] === (1)) {\n            G['talisman5Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[5 - 1]] + positiveBonus) * player.talismanLevels[5 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman5Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[5 - 1]] - negativeBonus) * player.talismanLevels[5 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanSix[i] === (1)) {\n            G['talisman6Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[6 - 1]] + positiveBonus) * player.talismanLevels[6 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman6Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[6 - 1]] - negativeBonus) * player.talismanLevels[6 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanSeven[i] === (1)) {\n            G['talisman7Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[7 - 1]] + positiveBonus) * player.talismanLevels[7 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman7Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[7 - 1]] - negativeBonus) * player.talismanLevels[7 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n    }\n    const talismansEffects = [G['talisman1Effect'], G['talisman2Effect'], G['talisman3Effect'], G['talisman4Effect'], G['talisman5Effect'], G['talisman6Effect'], G['talisman7Effect']];\n    const runesTalisman = [0, 0, 0, 0, 0, 0];\n    talismansEffects.forEach((talismanEffect) => {\n        talismanEffect.forEach((levels, runeNumber) => {\n            runesTalisman[runeNumber] += levels;\n        });\n    });\n    [, G['rune1Talisman'], G['rune2Talisman'], G['rune3Talisman'], G['rune4Talisman'], G['rune5Talisman']] = runesTalisman;\n    G['talisman6Power'] = 0;\n    G['talisman7Quarks'] = 0;\n    if (player.talismanRarity[1 - 1] === 6) {\n        G['rune2Talisman'] += 400;\n    }\n    if (player.talismanRarity[2 - 1] === 6) {\n        G['rune1Talisman'] += 400;\n    }\n    if (player.talismanRarity[3 - 1] === 6) {\n        G['rune4Talisman'] += 400;\n    }\n    if (player.talismanRarity[4 - 1] === 6) {\n        G['rune3Talisman'] += 400;\n    }\n    if (player.talismanRarity[5 - 1] === 6) {\n        G['rune5Talisman'] += 400;\n    }\n    if (player.talismanRarity[6 - 1] === 6) {\n        G['talisman6Power'] = 2.5;\n    }\n    if (player.talismanRarity[7 - 1] === 6) {\n        G['talisman7Quarks'] = 2;\n    }\n};\nexport const calculateRuneLevels = () => {\n    calculateTalismanEffects();\n    if (player.currentChallenge.reincarnation !== 9) {\n        G['rune1level'] = Math.max(1, player.runelevels[0] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune1Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune2level'] = Math.max(1, player.runelevels[1] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune2Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune3level'] = Math.max(1, player.runelevels[2] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune3Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune4level'] = Math.max(1, player.runelevels[3] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune4Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune5level'] = Math.max(1, player.runelevels[4] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune5Talisman']) + 7 * player.constantUpgrades[7]);\n    }\n    G['runeSum'] = sumContents([G['rune1level'], G['rune2level'], G['rune3level'], G['rune4level'], G['rune5level']]);\n    calculateRuneBonuses();\n};\nexport const calculateRuneBonuses = () => {\n    G['blessingMultiplier'] = 1;\n    G['spiritMultiplier'] = 1;\n    G['blessingMultiplier'] *= (1 + 6.9 * player.researches[134] / 100);\n    G['blessingMultiplier'] *= (1 + (player.talismanRarity[3 - 1] - 1) / 10);\n    G['blessingMultiplier'] *= (1 + 0.10 * Math.log(player.epicFragments + 1) / Math.log(10) * player.researches[174]);\n    G['blessingMultiplier'] *= (1 + 2 * player.researches[194] / 100);\n    if (player.researches[160] > 0) {\n        G['blessingMultiplier'] *= Math.pow(1.25, 8);\n    }\n    G['spiritMultiplier'] *= (1 + 8 * player.researches[164] / 100);\n    if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\n        G['spiritMultiplier'] *= Math.pow(2, 8);\n    }\n    G['spiritMultiplier'] *= (1 + 0.15 * Math.log(player.legendaryFragments + 1) / Math.log(10) * player.researches[189]);\n    G['spiritMultiplier'] *= (1 + 2 * player.researches[194] / 100);\n    G['spiritMultiplier'] *= (1 + (player.talismanRarity[5 - 1] - 1) / 100);\n    for (let i = 1; i <= 5; i++) {\n        G['runeBlessings'][i] = G['blessingMultiplier'] * player.runelevels[i - 1] * player.runeBlessingLevels[i];\n        G['runeSpirits'][i] = G['spiritMultiplier'] * player.runelevels[i - 1] * player.runeSpiritLevels[i];\n    }\n    for (let i = 1; i <= 5; i++) {\n        if (G['runeBlessings'][i] <= 1e30) {\n            G['effectiveRuneBlessingPower'][i] = (Math.pow(G['runeBlessings'][i], 1 / 8)) / 75 * G['challenge15Rewards'].blessingBonus;\n        }\n        else if (G['runeBlessings'][i] > 1e30) {\n            G['effectiveRuneBlessingPower'][i] = Math.pow(10, 5 / 2) * (Math.pow(G['runeBlessings'][i], 1 / 24)) / 75 * G['challenge15Rewards'].blessingBonus;\n        }\n        if (G['runeSpirits'][i] <= 1e25) {\n            G['effectiveRuneSpiritPower'][i] = (Math.pow(G['runeSpirits'][i], 1 / 8)) / 75 * G['challenge15Rewards'].spiritBonus;\n        }\n        else if (G['runeSpirits'][i] > 1e25) {\n            G['effectiveRuneSpiritPower'][i] = Math.pow(10, 25 / 12) * (Math.pow(G['runeSpirits'][i], 1 / 24)) / 75 * G['challenge15Rewards'].spiritBonus;\n        }\n    }\n};\nexport const calculateAnts = () => {\n    let bonusLevels = 0;\n    bonusLevels += 2 * (player.talismanRarity[6 - 1] - 1);\n    bonusLevels += CalcECC('reincarnation', player.challengecompletions[9]);\n    bonusLevels += 2 * player.constantUpgrades[6];\n    bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11]);\n    bonusLevels += Math.floor(1 / 200 * player.researches[200]);\n    bonusLevels *= G['challenge15Rewards'].bonusAntLevel;\n    let c11 = 0;\n    let c11bonus = 0;\n    if (player.currentChallenge.ascension === 11) {\n        c11 = 999;\n    }\n    if (player.currentChallenge.ascension === 11) {\n        c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)));\n    }\n    G['bonusant1'] = Math.min(player.antUpgrades[1 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant2'] = Math.min(player.antUpgrades[2 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant3'] = Math.min(player.antUpgrades[3 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant4'] = Math.min(player.antUpgrades[4 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant5'] = Math.min(player.antUpgrades[5 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant6'] = Math.min(player.antUpgrades[6 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant7'] = Math.min(player.antUpgrades[7 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant8'] = Math.min(player.antUpgrades[8 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant9'] = Math.min(player.antUpgrades[9 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant10'] = Math.min(player.antUpgrades[10 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant11'] = Math.min(player.antUpgrades[11 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant12'] = Math.min(player.antUpgrades[12 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n};\nexport const calculateAntSacrificeELO = () => {\n    G['antELO'] = 0;\n    G['effectiveELO'] = 0;\n    const antUpgradeSum = sumContents(player.antUpgrades);\n    if (player.antPoints.gte(\"1e40\")) {\n        G['antELO'] += Decimal.log(player.antPoints, 10);\n        G['antELO'] += 1 / 2 * antUpgradeSum;\n        G['antELO'] += 1 / 10 * player.firstOwnedAnts;\n        G['antELO'] += 1 / 5 * player.secondOwnedAnts;\n        G['antELO'] += 1 / 3 * player.thirdOwnedAnts;\n        G['antELO'] += 1 / 2 * player.fourthOwnedAnts;\n        G['antELO'] += player.fifthOwnedAnts;\n        G['antELO'] += 2 * player.sixthOwnedAnts;\n        G['antELO'] += 4 * player.seventhOwnedAnts;\n        G['antELO'] += 8 * player.eighthOwnedAnts;\n        G['antELO'] += 666 * player.researches[178];\n        if (player.achievements[180] === 1) {\n            G['antELO'] *= 1.01;\n        }\n        if (player.achievements[181] === 1) {\n            G['antELO'] *= 1.03 / 1.01;\n        }\n        if (player.achievements[182] === 1) {\n            G['antELO'] *= 1.06 / 1.03;\n        }\n        G['antELO'] *= (1 + player.researches[110] / 100);\n        G['antELO'] *= (1 + 2.5 * player.researches[148] / 100);\n        if (player.achievements[176] === 1) {\n            G['antELO'] += 25;\n        }\n        if (player.achievements[177] === 1) {\n            G['antELO'] += 50;\n        }\n        if (player.achievements[178] === 1) {\n            G['antELO'] += 75;\n        }\n        if (player.achievements[179] === 1) {\n            G['antELO'] += 100;\n        }\n        G['antELO'] += 25 * player.researches[108];\n        G['antELO'] += 25 * player.researches[109];\n        G['antELO'] += 40 * player.researches[123];\n        G['antELO'] += 100 * CalcECC('reincarnation', player.challengecompletions[10]);\n        G['antELO'] += 75 * player.upgrades[80];\n        G['antELO'] = 1 / 10 * Math.floor(10 * G['antELO']);\n        G['effectiveELO'] += 0.5 * Math.min(3500, G['antELO']);\n        G['effectiveELO'] += 0.1 * Math.min(4000, G['antELO']);\n        G['effectiveELO'] += 0.1 * Math.min(6000, G['antELO']);\n        G['effectiveELO'] += 0.1 * Math.min(10000, G['antELO']);\n        G['effectiveELO'] += 0.2 * G['antELO'];\n        G['effectiveELO'] += (G['cubeBonusMultiplier'][8] - 1);\n        G['effectiveELO'] += 1 * player.cubeUpgrades[50];\n        G['effectiveELO'] *= (1 + 0.03 * player.upgrades[124]);\n    }\n};\nconst calculateAntSacrificeMultipliers = () => {\n    G['timeMultiplier'] = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2));\n    if (player.achievements[177] === 0) {\n        G['timeMultiplier'] *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10));\n    }\n    if (player.achievements[177] > 0) {\n        G['timeMultiplier'] *= Math.max(1, player.antSacrificeTimer / 10);\n    }\n    G['upgradeMultiplier'] = 1;\n    G['upgradeMultiplier'] *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11 - 1] + G['bonusant11']) / 125)));\n    G['upgradeMultiplier'] *= (1 + player.researches[103] / 20);\n    G['upgradeMultiplier'] *= (1 + player.researches[104] / 20);\n    if (player.achievements[132] === 1) {\n        G['upgradeMultiplier'] *= 1.25;\n    }\n    if (player.achievements[137] === 1) {\n        G['upgradeMultiplier'] *= 1.25;\n    }\n    G['upgradeMultiplier'] *= (1 + 6.66 * G['effectiveRuneBlessingPower'][3]);\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]));\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * player.researches[122]);\n    G['upgradeMultiplier'] *= (1 + 3 / 100 * player.researches[133]);\n    G['upgradeMultiplier'] *= (1 + 2 / 100 * player.researches[163]);\n    G['upgradeMultiplier'] *= (1 + 1 / 100 * player.researches[193]);\n    G['upgradeMultiplier'] *= (1 + 1 / 10 * player.upgrades[79]);\n    G['upgradeMultiplier'] *= (1 + 0.09 * player.upgrades[40]);\n    G['upgradeMultiplier'] *= G['cubeBonusMultiplier'][7];\n};\nexport const calculateAntSacrificeRewards = () => {\n    calculateAntSacrificeELO();\n    calculateAntSacrificeMultipliers();\n    const rewardsMult = G['timeMultiplier'] * G['upgradeMultiplier'];\n    const rewards = {\n        antSacrificePoints: G['effectiveELO'] * rewardsMult / 85,\n        offerings: player.offeringpersecond * 0.15 * G['effectiveELO'] * rewardsMult / 180,\n        obtainium: player.maxobtainiumpersecond * 0.24 * G['effectiveELO'] * rewardsMult / 180,\n        talismanShards: (G['antELO'] > 500)\n            ? Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G['effectiveELO'] - 500)), 2)))\n            : 0,\n        commonFragments: (G['antELO'] > 750)\n            ? Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G['effectiveELO'] - 750)), 1.83)))\n            : 0,\n        uncommonFragments: (G['antELO'] > 1000)\n            ? Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G['effectiveELO'] - 1000)), 1.66)))\n            : 0,\n        rareFragments: (G['antELO'] > 1500)\n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G['effectiveELO'] - 1500)), 1.50)))\n            : 0,\n        epicFragments: (G['antELO'] > 2000)\n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G['effectiveELO'] - 2000)), 1.33)))\n            : 0,\n        legendaryFragments: (G['antELO'] > 3000)\n            ? Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G['effectiveELO'] - 3000)), 1.16)))\n            : 0,\n        mythicalFragments: (G['antELO'] > 5000)\n            ? Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G['effectiveELO'] - 4150)), 1)))\n            : 0\n    };\n    return rewards;\n};\nexport const calculateOffline = (forceTime = 0) => {\n    G['timeWarp'] = true;\n    const maximumTimer = 86400 + 7200 * player.researches[31] + 7200 * player.researches[32];\n    const updatedTime = Date.now();\n    const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000));\n    document.getElementById(\"offlineTimer\").textContent = \"You have \" + format(timeAdd, 0) + \" real-life seconds of Offline Progress!\";\n    let simulatedTicks = (timeAdd > 1000) ? 200 : 1 + Math.floor(timeAdd / 5);\n    const tickValue = (timeAdd > 1000) ? timeAdd / 200 : Math.min(5, timeAdd);\n    let timeMultiplier = 1;\n    const maxSimulatedTicks = simulatedTicks;\n    let progressBarWidth = 0;\n    let automaticObtainium = 0;\n    toggleTalismanBuy(player.buyTalismanShardPercent);\n    updateTalismanInventory();\n    player.quarkstimer += timeAdd;\n    player.quarkstimer = Math.min(90000 + 45000 * player.researches[195], player.quarkstimer);\n    player.ascensionCounter += timeAdd;\n    player.runeshards += timeAdd * (1 / 2 * Math.min(1, player.highestchallengecompletions[2]) + player.cubeUpgrades[2]);\n    document.getElementById('preload').style.display = (forceTime > 0) ? 'none' : 'block';\n    document.getElementById(\"offlineprogressbar\").style.display = \"block\";\n    player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick;\n    const runOffline = interval(runSimulator, 0);\n    function runSimulator() {\n        timeMultiplier = calculateTimeAcceleration();\n        calculateObtainium();\n        player.prestigecounter += tickValue * timeMultiplier;\n        player.transcendcounter += tickValue * timeMultiplier;\n        player.reincarnationcounter += tickValue * timeMultiplier;\n        resourceGain(tickValue * G['timeMultiplier']);\n        if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14) {\n            calculateObtainium();\n            automaticObtainium = calculateAutomaticObtainium();\n            player.researchPoints += tickValue * timeMultiplier * automaticObtainium;\n        }\n        if (player.achievements[173] > 0) {\n            player.antSacrificeTimer += tickValue * timeMultiplier;\n            player.antSacrificeTimerReal += tickValue;\n        }\n        if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\n            player.sacrificeTimer += tickValue;\n            if (player.sacrificeTimer >= 1) {\n                const rune = player.autoSacrifice;\n                redeemShards(rune, true);\n                player.sacrificeTimer = player.sacrificeTimer % 1;\n            }\n        }\n        updateAll();\n        simulatedTicks -= 1;\n        progressBarWidth = 750 * (1 - simulatedTicks / maxSimulatedTicks);\n        document.getElementById(\"offlineprogressdone\").style.width = progressBarWidth + \"px\";\n        if (simulatedTicks < 1) {\n            clearInt(runOffline);\n            G['timeWarp'] = false;\n            document.getElementById(\"offlineprogressbar\").style.display = \"none\";\n            document.getElementById(\"preload\").style.display = \"none\";\n        }\n    }\n    player.offlinetick = updatedTime;\n    if (!player.loadedNov13Vers) {\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\n            const ascCount = player.ascensionCount;\n            reset(\"ascensionChallenge\");\n            player.ascensionCount = (ascCount + 1);\n        }\n        player.loadedNov13Vers = true;\n    }\n    saveSynergy();\n    updateTalismanInventory();\n    calculateObtainium();\n    calculateAnts();\n    calculateRuneLevels();\n};\nexport const calculateSigmoid = (constant, factor, divisor) => {\n    return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))));\n};\nexport const calculateSigmoidExponential = (constant, coefficient) => {\n    return (1 + (constant - 1) * (1 - Math.exp(-coefficient)));\n};\nexport const calculateCubeBlessings = () => {\n    const cubeArray = [player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed];\n    const powerBonus = [player.cubeUpgrades[45] / 100, player.cubeUpgrades[35] / 100, player.cubeUpgrades[24] / 100, player.cubeUpgrades[14] / 100, player.cubeUpgrades[40] / 100, player.cubeUpgrades[22] / 40, player.cubeUpgrades[15] / 100, player.cubeUpgrades[25] / 100, player.cubeUpgrades[44] / 100, player.cubeUpgrades[34] / 100];\n    for (let i = 1; i <= 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (cubeArray[i - 1] >= 1000) {\n            power = G['blessingDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['blessingDRPower'][i]) * (1 + powerBonus[i - 1]));\n        }\n        if (i === 6) {\n            power = 2.25;\n            mult = 1;\n        }\n        G['cubeBonusMultiplier'][i] = 1 + mult * G['blessingbase'][i] * Math.pow(cubeArray[i - 1], power * (1 + powerBonus[i - 1])) * G['tesseractBonusMultiplier'][i];\n    }\n    calculateRuneLevels();\n    calculateAntSacrificeELO();\n    calculateObtainium();\n};\nexport function calculateCubeMultiplier(calcMult = true) {\n    const arr = [\n        Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\n        1 + 3 / 200 * player.shopUpgrades.seasonPass,\n        1 + player.researches[119] / 400,\n        1 + player.researches[120] / 400,\n        1 + 14 * player.cubeUpgrades[1] / 100,\n        1 + 7 * player.cubeUpgrades[11] / 100,\n        1 + 7 * player.cubeUpgrades[21] / 100,\n        1 + 7 * player.cubeUpgrades[31] / 100,\n        1 + 7 * player.cubeUpgrades[41] / 100,\n        1 + player.researches[137] / 100,\n        1 + 0.9 * player.researches[152] / 100,\n        1 + 0.8 * player.researches[167] / 100,\n        1 + 0.7 * player.researches[182] / 100,\n        1 + 0.6 * player.researches[197] / 100,\n        1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\n        1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12 - 1],\n        1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][2],\n        1 + 0.004 / 100 * player.researches[200],\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\n        1 + 0.25 * player.cubeUpgrades[30],\n        1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\n        1 + player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400,\n        1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\n        1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(calculateTimeAcceleration() + 0.01) / Math.log(10)),\n        1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\n        G['platonicBonusMultiplier'][0],\n        G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4\n    ];\n    if (calcMult) {\n        return productContents(arr);\n    }\n    else {\n        return arr;\n    }\n}\nexport const calculateTimeAcceleration = () => {\n    let timeMult = 1;\n    timeMult *= (1 + 1 / 300 * Math.log(player.maxobtainium + 1) / Math.log(10) * player.upgrades[70]);\n    timeMult *= (1 + player.researches[121] / 50);\n    timeMult *= (1 + 0.015 * player.researches[136]);\n    timeMult *= (1 + 0.012 * player.researches[151]);\n    timeMult *= (1 + 0.009 * player.researches[166]);\n    timeMult *= (1 + 0.006 * player.researches[181]);\n    timeMult *= (1 + 0.003 * player.researches[196]);\n    timeMult *= (1 + 8 * G['effectiveRuneBlessingPower'][1]);\n    timeMult *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][1]);\n    timeMult *= G['cubeBonusMultiplier'][10];\n    timeMult *= 1 + player.cubeUpgrades[18] / 5;\n    timeMult *= calculateSigmoid(2, player.antUpgrades[12 - 1] + G['bonusant12'], 69);\n    timeMult *= (1 + 0.10 * (player.talismanRarity[2 - 1] - 1));\n    timeMult *= G['challenge15Rewards'].globalSpeed;\n    timeMult *= G['lazinessMultiplier'][player.usedCorruptions[3]];\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\n        timeMult *= 1000;\n    }\n    if (timeMult > 100) {\n        timeMult = 10 * Math.sqrt(timeMult);\n    }\n    if (timeMult < 1) {\n        timeMult = Math.pow(timeMult, 1 - player.platonicUpgrades[7] / 30);\n    }\n    timeMult *= G['platonicBonusMultiplier'][7];\n    if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\n        achievementaward(241);\n    }\n    if (timeMult > 3600 && player.achievements[242] < 1) {\n        achievementaward(242);\n    }\n    return (timeMult);\n};\nexport const calculateCorruptionPoints = () => {\n    let basePoints = 400;\n    for (let i = 1; i <= 9; i++) {\n        basePoints += 16 * Math.pow(player.usedCorruptions[i], 2);\n    }\n    return (basePoints);\n};\nexport const calculateSummationLinear = (baseLevel, baseCost, resourceAvailable, differenceCap = 1e9) => {\n    const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2;\n    const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)));\n    const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost;\n    return [buyToLevel, realCost];\n};\nexport const calculateSummationNonLinear = (baseLevel, baseCost, resourceAvailable, diffPerLevel, buyAmount) => {\n    const c = diffPerLevel / 2;\n    resourceAvailable = resourceAvailable || 0;\n    const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c));\n    resourceAvailable += alreadySpent;\n    const v = resourceAvailable / baseCost;\n    let buyToLevel = c > 0\n        ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\n        : Math.floor(v);\n    buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel);\n    let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent;\n    if (buyToLevel == baseLevel) {\n        totalCost = baseCost * (1 + 2 * c * baseLevel);\n    }\n    return [buyToLevel, totalCost];\n};\nexport const CalcCorruptionStuff = () => {\n    const corruptionArrayMultiplier = [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10];\n    const corruptionLevelSum = sumContents(player.usedCorruptions);\n    let cubeBank = 0;\n    let challengeModifier = 1;\n    let corruptionMultiplier = 1;\n    let bankMultiplier = 1;\n    let effectiveScore = 1;\n    const speed = calculateTimeAcceleration();\n    for (let i = 1; i <= 10; i++) {\n        challengeModifier = (i >= 6) ? 2 : 1;\n        cubeBank += challengeModifier * player.highestchallengecompletions[i];\n    }\n    let baseScore = 0;\n    const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\n    const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\n    const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    for (let i = 1; i <= 10; i++) {\n        baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i];\n        if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75);\n            if (player.highestchallengecompletions[i] >= 750) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750);\n            }\n        }\n        if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25);\n            if (player.highestchallengecompletions[i] >= 60) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60);\n            }\n        }\n    }\n    baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10] + player.platonicUpgrades[15]), player.highestchallengecompletions[10]);\n    for (let i = 1; i <= 10; i++) {\n        corruptionMultiplier *= corruptionArrayMultiplier[player.usedCorruptions[i]];\n    }\n    effectiveScore = baseScore * corruptionMultiplier * G['challenge15Rewards'].score * G['platonicBonusMultiplier'][6];\n    bankMultiplier = Math.pow(effectiveScore / 3000, 1 / 4.1);\n    let cubeGain = cubeBank * bankMultiplier;\n    cubeGain *= calculateCubeMultiplier();\n    cubeGain *= (1 + 0.000075 * corruptionLevelSum * player.platonicUpgrades[1]);\n    if (effectiveScore > 5e12 && player.platonicUpgrades[10] > 0) {\n        cubeGain *= 2;\n    }\n    if (effectiveScore > 25e12 && player.platonicUpgrades[15] > 0) {\n        cubeGain *= 2.25;\n    }\n    let tesseractGain = 1;\n    tesseractGain *= Math.pow(1 + Math.max(0, (effectiveScore - 1e5)) / 1e4, .35);\n    tesseractGain *= (1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]));\n    if (effectiveScore >= 100000) {\n        tesseractGain += 2;\n    }\n    tesseractGain *= (1 + 0.25 * player.cubeUpgrades[30]);\n    tesseractGain *= (1 + 1 / 200 * player.cubeUpgrades[38] * sumContents(player.usedCorruptions));\n    tesseractGain *= (1 + player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400);\n    tesseractGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    tesseractGain *= (1 + 0.00015 * corruptionLevelSum * player.platonicUpgrades[2]);\n    if (effectiveScore > 7.5e12 && player.platonicUpgrades[10] > 0) {\n        tesseractGain *= 2;\n    }\n    if (effectiveScore > 50e12 && player.platonicUpgrades[15] > 0) {\n        tesseractGain *= 2.25;\n    }\n    tesseractGain *= G['platonicBonusMultiplier'][1];\n    tesseractGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    tesseractGain *= (1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8));\n    tesseractGain *= (1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208]);\n    tesseractGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\n    tesseractGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\n    tesseractGain *= (1 + 3 / 200 * player.shopUpgrades.seasonPass);\n    let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0;\n    hypercubeGain *= Math.pow(1 + Math.max(0, (effectiveScore - 1e9)) / 1e8, .5);\n    hypercubeGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    hypercubeGain *= (1 + 0.00045 * corruptionLevelSum * player.platonicUpgrades[3]);\n    if (effectiveScore > 10e12 && player.platonicUpgrades[10] > 0) {\n        hypercubeGain *= 2;\n    }\n    if (effectiveScore > 100e12 && player.platonicUpgrades[15] > 0) {\n        hypercubeGain *= 2.25;\n    }\n    hypercubeGain *= G['platonicBonusMultiplier'][2];\n    hypercubeGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    hypercubeGain *= (1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9));\n    hypercubeGain *= (1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215]);\n    hypercubeGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\n    hypercubeGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\n    let platonicGain = (effectiveScore >= 1.337e12) ? 1 : 0;\n    platonicGain *= Math.pow(1 + Math.max(0, effectiveScore - 1.337e12) / 1.337e11, .75);\n    platonicGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    if (effectiveScore > 2.5e12) {\n        platonicGain *= (1 + player.platonicUpgrades[4] / 50);\n    }\n    if (effectiveScore > 20e12 && player.platonicUpgrades[10] > 0) {\n        platonicGain *= 2;\n    }\n    if (effectiveScore > 250e12 && player.platonicUpgrades[15] > 0) {\n        platonicGain *= 2.25;\n    }\n    platonicGain *= G['platonicBonusMultiplier'][3];\n    platonicGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    platonicGain *= (1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9));\n    platonicGain *= (1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222]);\n    platonicGain *= (1 + player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10));\n    platonicGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\n    platonicGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\n    return [cubeBank, Math.floor(baseScore), corruptionMultiplier, Math.floor(effectiveScore), Math.floor(cubeGain), Math.floor(tesseractGain), Math.floor(hypercubeGain), Math.floor(platonicGain)];\n};\nexport const dailyResetCheck = () => {\n    if (!player.dayCheck) {\n        player.dayCheck = new Date();\n        console.log('date successfully calibrated!');\n    }\n    else if (typeof player.dayCheck === 'string') {\n        player.dayCheck = new Date(player.dayCheck);\n    }\n    const d = new Date();\n    const h = d.getHours();\n    const m = d.getMinutes();\n    const s = d.getSeconds();\n    player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s;\n    if (d.getDate() !== player.dayCheck.getDate() || d.getMonth() !== player.dayCheck.getMonth() || d.getFullYear() !== player.dayCheck.getFullYear()) {\n        player.dayCheck = new Date();\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n        document.getElementById('cubeQuarksOpenRequirement').style.display = \"block\";\n        if (player.challengecompletions[11] > 0) {\n            document.getElementById('tesseractQuarksOpenRequirement').style.display = \"block\";\n        }\n        if (player.challengecompletions[13] > 0) {\n            document.getElementById('hypercubeQuarksOpenRequirement').style.display = \"block\";\n        }\n    }\n};\n","import { player, format, clearInt, interval } from './Synergism';\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateMaxRunes, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { revealStuff } from './UpdateHTML';\nimport { redeemShards } from './Runes';\nimport { updateTalismanInventory } from './Talismans';\nimport { buyResearch } from './Research';\nimport { resetAnts } from './Reset';\nimport { Synergism } from './Events';\nconst antdesc = {\n    antdesc1: \"Gain a worker ant for your everyday life. Gathers Galactic Crumbs. Essential!\",\n    antdesc2: \"Gain a breeder ant that produces worker ants automatically!\",\n    antdesc3: \"Gain a meta-breeder ant that produces breeder ants automatically!\",\n    antdesc4: \"Gain a mega-breeder ant that produces meta-breeder ants automatically!\",\n    antdesc5: \"Gain a Queen ant that produces mega-breeder ants automatically!\",\n    antdesc6: \"Gain a Lord Royal ant that produces Queen ants automatically!\",\n    antdesc7: \"Gain an ALMIGHTY ANT that produces Lord Royal ants automatically!\",\n    antdesc8: \"Gain a DISCIPLE OF ANT GOD that produces ALMIGHTY ANTS automatically!\"\n};\nconst antspecies = {\n    antspecies1: \"Inceptus Formicidae\",\n    antspecies2: \"Fortunae Formicidae\",\n    antspecies3: \"Tributum Formicidae\",\n    antspecies4: \"Celeritas Formicidae\",\n    antspecies5: \"Multa Formicidae\",\n    antspecies6: \"Sacrificium Formicidae\",\n    antspecies7: \"Hic Formicidae\",\n    antspecies8: \"Experientia Formicidae\",\n    antspecies9: \"Praemoenio Formicidae\",\n    antspecies10: \"Scientia Formicidae\",\n    antspecies11: \"Phylacterium Formicidae\",\n    antspecies12: \"Mortuus Est Formicidae\"\n};\nconst antupgdesc = {\n    antupgdesc1: \"Promotes romance and unity within the colony. [+12% Ant Speed / level]\",\n    antupgdesc2: \"Sweetens crumbs to increase their value [Each level increases Crumb --> Coin Conversion efficiency, up to ^50,000,000]\",\n    antupgdesc3: \"Swarms the Taxman into submission [Up to -99% taxes!]\",\n    antupgdesc4: \"Scares you into running faster [up to x20]\",\n    antupgdesc5: \"Imitates your body through magic shape-shifting powers [up to x40]\",\n    antupgdesc6: \"Tries to please Ant God... but fails [Additional Offerings!]\",\n    antupgdesc7: \"Helps you build a few things here and there [+3% Building Cost Delay / level, Cap 9,999,999%]\",\n    antupgdesc8: \"Knows how to salt and pepper food [Up to 1,000x Rune EXP!]\",\n    antupgdesc9: \"Can make your message to Ant God a little more clear [+1 all Rune Levels / level, Cap 10 Million]\",\n    antupgdesc10: \"Has big brain energy [Additional Obtainium!]\",\n    antupgdesc11: \"A valuable offering to the Ant God [Gain up to 3x Sacrifice Rewards!]\",\n    antupgdesc12: \"Betray Ant God increasing the fragility of your dimension [Unlocks ant talisman, Up to 2x faster timers on most things]\"\n};\nexport const calculateCrumbToCoinExp = () => {\n    const exponent = player.currentChallenge.ascension !== 15\n        ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499)\n        : 1 / 10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499));\n    return exponent;\n};\nconst antUpgradeTexts = [\n    () => \"ALL Ants work at \" + format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1 - 1] + G['bonusant1']), 2) + \"x speed.\",\n    () => \"Crumb --> Coin exponent is ^\" + format(calculateCrumbToCoinExp()),\n    () => \"Tax growth is multiplied by \" + format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3 - 1] + G['bonusant3']), 4),\n    () => \"Accelerator Boosts +\" + format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4 - 1] + G['bonusant4']) / 1000 * 20 / 19) - 1), 3) + \"%\",\n    () => \"Multipliers +\" + format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39) - 1), 3) + \"%\",\n    () => \"Offerings x\" + format(1 + Math.pow((player.antUpgrades[6 - 1] + G['bonusant6']) / 50, 0.75), 4),\n    () => \"Building Costs scale \" + format(Math.min(9999999, 3 * player.antUpgrades[7 - 1] + 3 * G['bonusant7']), 0, true) + \"% slower!\",\n    () => \"Rune EXP is multiplied by \" + format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8 - 1] + G['bonusant8'], 1.1)), 3) + \"!\",\n    () => \"Each rune has +\" + format(1 * Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])), 0, true) + \" effective levels.\",\n    () => \"Obtainium x\" + format(1 + 2 * Math.pow((player.antUpgrades[10 - 1] + G['bonusant10']) / 50, 0.75), 4),\n    () => \"Sacrificing is \" + format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11 - 1] + G['bonusant11']) / 125)), 4) + \"x as effective\",\n    () => \"Global timer is sped up by a factor of \" + format(calculateSigmoid(2, player.antUpgrades[12 - 1] + G['bonusant12'], 69), 4)\n];\nlet repeatAnt = null;\nexport const antRepeat = (i) => {\n    clearInt(repeatAnt);\n    repeatAnt = interval(() => updateAntDescription(i), 50);\n};\nexport const updateAntDescription = (i) => {\n    const el = document.getElementById(\"anttierdescription\");\n    const la = document.getElementById(\"antprice\");\n    const ti = document.getElementById(\"antquantity\");\n    const me = document.getElementById(\"generateant\");\n    let priceType = \"Galactic Crumbs\";\n    let tier = \"\";\n    el.textContent = antdesc[\"antdesc\" + i];\n    switch (i) {\n        case 1:\n            priceType = \"Particles\";\n            tier = \"first\";\n            me.textContent = \"Generates \" + format(G['antOneProduce'], 5) + \" Crumbs/sec\";\n            break;\n        case 2:\n            tier = \"second\";\n            me.textContent = \"Generates \" + format(G['antTwoProduce'], 5) + \" Workers/sec\";\n            break;\n        case 3:\n            tier = \"third\";\n            me.textContent = \"Generates \" + format(G['antThreeProduce'], 5) + \" Breeders/sec\";\n            break;\n        case 4:\n            tier = \"fourth\";\n            me.textContent = \"Generates \" + format(G['antFourProduce'], 5) + \" MetaBreeders/sec\";\n            break;\n        case 5:\n            tier = \"fifth\";\n            me.textContent = \"Generates \" + format(G['antFiveProduce'], 5) + \" MegaBreeders/sec\";\n            break;\n        case 6:\n            tier = \"sixth\";\n            me.textContent = \"Generates \" + format(G['antSixProduce'], 5) + \" Queens/sec\";\n            break;\n        case 7:\n            tier = \"seventh\";\n            me.textContent = \"Generates \" + format(G['antSevenProduce'], 5) + \" Royals/sec\";\n            break;\n        case 8:\n            tier = \"eighth\";\n            me.textContent = \"Generates \" + format(G['antEightProduce'], 5) + \" ALMIGHTIES/sec\";\n            break;\n    }\n    la.textContent = \"Cost: \" + format(player[tier + \"CostAnts\"]) + \" \" + priceType;\n    ti.textContent = \"Owned: \" + format(player[tier + \"OwnedAnts\"]) + \" [+\" + format(player[tier + \"GeneratedAnts\"], 2) + \"]\";\n};\nconst getAntCost = (originalCost, buyTo, index) => {\n    --buyTo;\n    const cost = originalCost\n        .times(Decimal.pow(G['antCostGrowth'][index - 1], buyTo))\n        .add(1 * buyTo);\n    return cost;\n};\nconst getAntUpgradeCost = (originalCost, buyTo, index) => {\n    --buyTo;\n    const cost = originalCost.times(Decimal.pow(G['antUpgradeCostIncreases'][index - 1], buyTo));\n    return cost;\n};\nexport const buyAntProducers = (pos, type, originalCost, index) => {\n    const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints);\n    originalCost = new Decimal(originalCost);\n    const tag = index === 1 ? 'reincarnationPoints' : 'antPoints';\n    let buyTo = player[pos + \"Owned\" + type] + 1;\n    let cashToBuy = getAntCost(originalCost, buyTo, index);\n    while (player[tag].gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getAntCost(originalCost, buyTo, index);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!player.antMax) {\n        if (1 + player[pos + \"Owned\" + type] < buyTo) {\n            buyTo = player[pos + \"Owned\" + type] + 1;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player[pos + 'Owned' + type] + 1);\n    let thisCost = getAntCost(originalCost, buyFrom, index);\n    while (buyFrom <= buyTo && player[tag].gte(getAntCost(originalCost, buyFrom, index))) {\n        player[tag] = player[tag].sub(thisCost);\n        player[pos + 'Owned' + type] = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getAntCost(originalCost, buyFrom, index);\n        player[pos + 'Cost' + type] = thisCost;\n    }\n    if (player.reincarnationPoints.lt(0)) {\n        player.reincarnationPoints = new Decimal(\"0\");\n    }\n    if (player.antPoints.lt(0)) {\n        player.antPoints = new Decimal(\"0\");\n    }\n    calculateAntSacrificeELO();\n    const achRequirements = [2, 6, 20, 100, 500, 6666, 77777];\n    for (let j = 0; j < achRequirements.length; j++) {\n        if (sacrificeMult > achRequirements[j] && player[G['ordinals'][j + 1] + \"OwnedAnts\"] > 0 && player.achievements[176 + j] === 0) {\n            achievementaward(176 + j);\n        }\n    }\n    if (player.firstOwnedAnts > 6.9e7) {\n        player.firstOwnedAnts = 6.9e7;\n    }\n};\nexport const buyAntUpgrade = (originalCost, auto, index) => {\n    if (player.currentChallenge.ascension !== 11) {\n        originalCost = new Decimal(originalCost);\n        let buyTo = 1 + player.antUpgrades[index - 1];\n        let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        while (player.antPoints.gte(cashToBuy)) {\n            buyTo = buyTo * 4;\n            cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        }\n        let stepdown = Math.floor(buyTo / 8);\n        while (stepdown !== 0) {\n            if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            }\n            else {\n                buyTo = buyTo - stepdown;\n            }\n        }\n        if (!player.antMax) {\n            if (player.antUpgrades[index - 1] + 1 < buyTo) {\n                buyTo = 1 + player.antUpgrades[index - 1];\n            }\n        }\n        let buyFrom = Math.max(buyTo - 7, 1 + player.antUpgrades[index - 1]);\n        let thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\n            player.antPoints = player.antPoints.sub(thisCost);\n            player.antUpgrades[index - 1] = buyFrom;\n            buyFrom = buyFrom + 1;\n            thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        }\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        if (!auto) {\n            antUpgradeDescription(index);\n        }\n        if (player.antUpgrades[12 - 1] === 1 && index === 12) {\n            revealStuff();\n        }\n    }\n};\nexport const antUpgradeDescription = (i) => {\n    const el = document.getElementById(\"antspecies\");\n    const al = document.getElementById(\"antlevelbonus\");\n    const la = document.getElementById(\"antupgradedescription\");\n    const ti = document.getElementById(\"antupgradecost\");\n    const me = document.getElementById(\"antupgradeeffect\");\n    const content1 = antspecies[\"antspecies\" + i];\n    const content2 = antupgdesc[\"antupgdesc\" + i];\n    const bonuslevel = G[\"bonusant\" + i];\n    const c11 = player.currentChallenge.ascension === 11 ? 999 : 0;\n    el.childNodes[0].textContent = content1 + \" Level \" + format(player.antUpgrades[i - 1]);\n    al.textContent = \" [+\" + format(Math.min(player.antUpgrades[i - 1] + c11, bonuslevel)) + \"]\";\n    la.textContent = content2;\n    ti.textContent = \"Cost: \" + format(Decimal.pow(G['antUpgradeCostIncreases'][i - 1], player.antUpgrades[i - 1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i - 1])) + \" Galactic Crumbs\";\n    me.textContent = \"CURRENT EFFECT: \" + antUpgradeTexts[i - 1]();\n};\nexport const antSacrificePointsToMultiplier = (points) => {\n    let multiplier = Math.pow(1 + points / 5000, 2);\n    multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10));\n    if (player.achievements[174] > 0) {\n        multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10));\n    }\n    return multiplier;\n};\nexport const showSacrifice = () => {\n    const sacRewards = calculateAntSacrificeRewards();\n    document.getElementById(\"antSacrificeSummary\").style.display = \"block\";\n    document.getElementById(\"antELO\").childNodes[0].textContent = \"Your Ant ELO is \";\n    document.getElementById(\"ELO\").textContent = format(G['antELO'], 2);\n    document.getElementById(\"effectiveELO\").textContent = \"[\" + format(G['effectiveELO'], 2, false) + \" effective]\";\n    document.getElementById(\"antSacrificeMultiplier\").childNodes[0].textContent = \"Ant Multiplier x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false) + \" --> \";\n    document.getElementById(\"SacrificeMultiplier\").textContent = \"x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false);\n    document.getElementById(\"SacrificeUpgradeMultiplier\").textContent = format(G['upgradeMultiplier'], 3, true) + \"x\";\n    document.getElementById(\"SacrificeTimeMultiplier\").textContent = format(G['timeMultiplier'], 3, true) + \"x\";\n    document.getElementById(\"antSacrificeOffering\").textContent = \"+\" + format(sacRewards.offerings);\n    document.getElementById(\"antSacrificeObtainium\").textContent = \"+\" + format(sacRewards.obtainium);\n    if (player.challengecompletions[9] > 0) {\n        document.getElementById(\"antSacrificeTalismanShard\").textContent = \"+\" + format(sacRewards.talismanShards) + \" [>500 ELO]\";\n        document.getElementById(\"antSacrificeCommonFragment\").textContent = \"+\" + format(sacRewards.commonFragments) + \" [>750 ELO]\";\n        document.getElementById(\"antSacrificeUncommonFragment\").textContent = \"+\" + format(sacRewards.uncommonFragments) + \" [>1,000 ELO]\";\n        document.getElementById(\"antSacrificeRareFragment\").textContent = \"+\" + format(sacRewards.rareFragments) + \" [>1,500 ELO]\";\n        document.getElementById(\"antSacrificeEpicFragment\").textContent = \"+\" + format(sacRewards.epicFragments) + \" [>2,000 ELO]\";\n        document.getElementById(\"antSacrificeLegendaryFragment\").textContent = \"+\" + format(sacRewards.legendaryFragments) + \" [>3,000 ELO]\";\n        document.getElementById(\"antSacrificeMythicalFragment\").textContent = \"+\" + format(sacRewards.mythicalFragments) + \" [>5,000 ELO]\";\n    }\n};\nexport const sacrificeAnts = (auto = false) => {\n    let p = true;\n    if (player.antPoints.gte(\"1e40\")) {\n        if (!auto && player.antSacrificePoints < 100 && player.toggles[32]) {\n            p = confirm(\"This resets your Crumbs, Ants and Ant Upgrades in exchange for some multiplier and resources. Continue?\");\n        }\n        if (p) {\n            const antSacrificePointsBefore = player.antSacrificePoints;\n            const sacRewards = calculateAntSacrificeRewards();\n            player.antSacrificePoints += sacRewards.antSacrificePoints;\n            player.runeshards += sacRewards.offerings;\n            player.researchPoints += sacRewards.obtainium;\n            const historyEntry = {\n                date: Date.now(),\n                seconds: player.antSacrificeTimer,\n                kind: 'antsacrifice',\n                offerings: sacRewards.offerings,\n                obtainium: sacRewards.obtainium,\n                antSacrificePointsBefore: antSacrificePointsBefore,\n                antSacrificePointsAfter: player.antSacrificePoints,\n                baseELO: G['antELO'],\n                effectiveELO: G['effectiveELO'],\n                crumbs: player.antPoints.toString(),\n                crumbsPerSecond: G['antOneProduce'].toString(),\n            };\n            if (player.challengecompletions[9] > 0) {\n                player.talismanShards += sacRewards.talismanShards;\n                player.commonFragments += sacRewards.commonFragments;\n                player.uncommonFragments += sacRewards.uncommonFragments;\n                player.rareFragments += sacRewards.rareFragments;\n                player.epicFragments += sacRewards.epicFragments;\n                player.legendaryFragments += sacRewards.legendaryFragments;\n                player.mythicalFragments += sacRewards.mythicalFragments;\n            }\n            if (player.shopUpgrades.offeringAuto > 0.5 && player.autoSacrificeToggle) {\n                if (player.cubeUpgrades[20] === 1 && player.runeshards >= 5) {\n                    let unmaxed = 0;\n                    for (let i = 1; i <= 5; i++) {\n                        if (player.runelevels[i - 1] < calculateMaxRunes(i))\n                            unmaxed++;\n                    }\n                    if (unmaxed > 0) {\n                        const baseAmount = Math.floor(player.runeshards / unmaxed);\n                        for (let i = 1; i <= 5; i++) {\n                            redeemShards(i, true, baseAmount);\n                        }\n                        player.sacrificeTimer = 0;\n                    }\n                }\n            }\n            resetAnts();\n            player.antSacrificeTimer = 0;\n            player.antSacrificeTimerReal = 0;\n            updateTalismanInventory();\n            if (player.autoResearch > 0 && player.autoResearchToggle) {\n                const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                buyResearch(player.autoResearch, true, linGrowth);\n            }\n            calculateAntSacrificeELO();\n            Synergism.emit('historyAdd', 'ants', historyEntry);\n        }\n    }\n    if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\n        achievementaward(248);\n    }\n};\nexport const autoBuyAnts = () => {\n    const canAffordUpgrade = (x, m) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G['antUpgradeBaseCost'][x - 1]), player.antUpgrades[x - 1] + 1, x).times(m));\n    const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145];\n    const cost = [\"100\", \"100\", \"1000\", \"1000\", \"1e5\", \"1e6\", \"1e8\", \"1e11\", \"1e15\", \"1e20\", \"1e40\", \"1e100\"];\n    if (player.currentChallenge.ascension !== 11) {\n        for (let i = 1; i <= ach.length; i++) {\n            const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]];\n            if (check && canAffordUpgrade(i, 2)) {\n                buyAntUpgrade(cost[i - 1], true, i);\n            }\n        }\n    }\n    const _ach = [173, 176, 177, 178, 179, 180, 181, 182];\n    const _cost = [\"1e800\", \"3\", \"100\", \"10000\", \"1e12\", \"1e36\", \"1e100\", \"1e300\"];\n    for (let i = 1; i <= _ach.length; i++) {\n        const res = i === 1 ? player.reincarnationPoints : player.antPoints;\n        const m = i === 1 ? 1 : 2;\n        if (player.achievements[_ach[i - 1]] && res.gte(player[G['ordinals'][i - 1] + \"CostAnts\"].times(m))) {\n            buyAntProducers(G['ordinals'][i - 1], \"Ants\", _cost[i - 1], i);\n        }\n    }\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { revealStuff } from './UpdateHTML';\nimport { calculateTimeAcceleration } from './Calculate';\nconst shopData = {\n    offeringPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999,\n        type: \"consumable\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instantly gain 2 real life hours of Offerings, based on your all time best Offerings/sec and speed acceleration!\",\n    },\n    obtainiumPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999,\n        type: \"consumable\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instantly gain 2 real life hours of Obtainium, based on your all time best Obtainium/sec and speed acceleration!\",\n    },\n    offeringEX: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Gain +4% more offerings from all sources!\",\n    },\n    offeringAuto: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 1,\n        description: \"Automatically pour Offerings into a rune. 1st level unlocks feature, and each level increases Offering gain by 2%. Every second, 2^(Level) levels worth of offerings are spent. [First Level Cannot be refunded!]\",\n    },\n    obtainiumEX: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Gain +4% more obtainium from all sources!\",\n    },\n    obtainiumAuto: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 1,\n        description: \"Automatically pour Obtainium into a research. 1st level unlocks feature, and each level increases Obtainium gain by 2%. Every reincarnation, dump all Obtainium into research until maxed. [First Level Cannot be Refunded!]\",\n    },\n    instantChallenge: {\n        price: 300,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"T and R challenges don't cause resets if retry is enabled and gain up to 10 completions per tick. Addtionally, instantly gain T challenge completions up to highest completed when exiting R challenges. [Cannot be Refunded!]\"\n    },\n    antSpeed: {\n        price: 200,\n        priceIncrease: 25,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Each level gives a 1.125x speed multiplier to all Ant tiers' production! Short and simple.\"\n    },\n    cashGrab: {\n        price: 100,\n        priceIncrease: 40,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"This is a cash grab but it gives a couple cool stats. +1% production per level to Offerings and Obtainium.\",\n    },\n    shopTalisman: {\n        price: 1500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Permanently unlock a Shop talisman! [Warning: you can't refund this and this is VERY expensive to level. Be sure you want to buy it!]\",\n    },\n    seasonPass: {\n        price: 500,\n        priceIncrease: 75,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Wow! Cubes is giving you a deal: Buy this totally fair Season Pass and gain +1.5% cubes and tesseracts per level when you ascend!\",\n    },\n    challengeExtension: {\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 5,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Using some amazing trick, you manage to increase your Reincarnation Challenge cap by 2 for each level! [Cannot be Refunded!]\",\n    },\n    challengeTome: {\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 15,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"The extended cut: This fifth forgotten tome gives you an additional 20 Million exponent reduction on the Challenge 10 requirement per level. [Cannot be Refunded!]\",\n    },\n    cubeToQuark: {\n        price: 2000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instead of a daily cap of 25 Quarks by opening Wow! Cubes, how about 100? This adds 75 to the daily cap! [Cannot be Refunded!]\"\n    },\n    tesseractToQuark: {\n        price: 3500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instead of a daily cap of 25 Quarks by opening Wow! Cubes, how about 100? This adds 75 to the daily cap! [Cannot be Refunded!]\"\n    },\n    hypercubeToQuark: {\n        price: 5000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instead of a daily cap of 25 Quarks by opening Wow! Cubes, how about 100? This adds 75 to the daily cap! [Cannot be Refunded!]\"\n    },\n};\nexport const getShopCosts = (input) => {\n    if (shopData[input].type === \"consumable\" || shopData[input].maxLevel === 1) {\n        return shopData[input].price;\n    }\n    else {\n        const priceIncreaseMult = player.shopUpgrades[input];\n        return shopData[input].price + shopData[input].priceIncrease * priceIncreaseMult;\n    }\n};\nexport const shopDescriptions = (input) => {\n    const rofl = document.getElementById(\"quarkdescription\");\n    const lmao = document.getElementById(\"quarkcost\");\n    const lol = document.getElementById(\"quarkeffect\");\n    rofl.textContent = shopData[input].description;\n    lmao.textContent = \"Cost: \" + format(getShopCosts(input)) + \" Quarks\";\n    switch (input) {\n        case \"offeringPotion\":\n            lol.textContent = \"Gain \" + format((7200 * player.offeringpersecond * calculateTimeAcceleration()), 0, true) + \" Offerings.\";\n            break;\n        case \"obtainiumPotion\":\n            lol.textContent = \"Gain \" + format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration()), 0, true) + \" Obtainium.\";\n            break;\n        case \"offeringEX\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.offeringEX, 2, true) + \"% more Offerings!\";\n            break;\n        case \"offeringAuto\":\n            lol.textContent = \"CURRENT Effect: Per 10 seconds, pour \" + format(Math.pow(2, 1 + player.shopUpgrades.offeringAuto)) + \" Offerings. +\" + format(2 * player.shopUpgrades.offeringAuto, 2) + \"% Offerings.\";\n            break;\n        case \"obtainiumEX\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.obtainiumEX, 2, true) + \"% more Obtainium!\";\n            break;\n        case \"obtainiumAuto\":\n            lol.textContent = \"CURRENT Effect: Try to upgrade research each reincarnation, and gain \" + format(player.shopUpgrades.obtainiumAuto * 2, 2) + \"% more Obtainium.\";\n            break;\n        case \"instantChallenge\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"antSpeed\":\n            lol.textContent = \"CURRENT Effect: All Ants' Speed x\" + format(Math.pow(1.125, player.shopUpgrades.antSpeed), 2);\n            break;\n        case \"cashGrab\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(player.shopUpgrades.cashGrab, 2) + \"% more Obtainium and Offerings!\";\n            break;\n        case \"shopTalisman\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"seasonPass\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(3 / 2 * player.shopUpgrades.seasonPass) + \"% more Wow! Cubes and Tesseracts.\";\n            break;\n        case \"challengeExtension\":\n            lol.textContent = \"CURRENT Effect: Reincarnation Challenges may be completed an additional \" + format(2 * player.shopUpgrades.challengeExtension) + \" times.\";\n            break;\n        case \"challengeTome\":\n            lol.textContent = \"CURRENT Effect: Challenge 10 Exponent Requirement reduced by \" + format(20 * player.shopUpgrades.challengeTome) + \" Million.\";\n            break;\n        case \"cubeToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"tesseractToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"hypercubeToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n    }\n};\nexport const buyShopUpgrades = (input) => {\n    let p = true;\n    if (G['shopConfirmation']) {\n        p = confirm(\"Are you sure you'd like to purchase \" + input + \" for \" + format(getShopCosts(input)) + \" Quarks? Press 'OK' to finalize purchase.\");\n    }\n    if (p) {\n        if (player.worlds >= getShopCosts(input) && player.shopUpgrades[input] < shopData[input].maxLevel) {\n            player.worlds -= getShopCosts(input);\n            player.shopUpgrades[input] += 1;\n            console.log(\"purchase successful for 1 level of '\" + input + \"'!\");\n        }\n        else {\n            console.log(\"purchase attempted for 1 level of '\" + input + \"' but failed!\");\n        }\n    }\n    revealStuff();\n};\nexport const useConsumable = (input) => {\n    const p = G['shopConfirmation']\n        ? confirm('Would you like to use this potion?')\n        : true;\n    if (p) {\n        switch (input) {\n            case \"offeringPotion\":\n                if (player.shopUpgrades.offeringPotion > 0.5) {\n                    player.shopUpgrades.offeringPotion -= 1;\n                    player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration());\n                }\n                break;\n            case \"obtainiumPotion\":\n                if (player.shopUpgrades.obtainiumPotion > 0.5) {\n                    player.shopUpgrades.obtainiumPotion -= 1;\n                    player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration());\n                }\n                break;\n        }\n    }\n};\nexport const resetShopUpgrades = () => {\n    const p = G['shopConfirmation']\n        ? confirm(\"This will fully refund most of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?\")\n        : true;\n    if (p) {\n        player.worlds -= 15;\n        let initialQuarks = player.worlds;\n        for (const shopItem in shopData) {\n            const key = shopItem;\n            if (shopData[key].refundable && player.shopUpgrades[key] > shopData[key].refundMinimumLevel) {\n                let doNotRefund = shopData[key].price * shopData[key].refundMinimumLevel +\n                    shopData[key].priceIncrease * (shopData[key].refundMinimumLevel) * (shopData[key].refundMinimumLevel - 1) / 2;\n                player.worlds += shopData[key].price * player.shopUpgrades[key] +\n                    shopData[key].priceIncrease * (player.shopUpgrades[key]) * (player.shopUpgrades[key] - 1) / 2\n                    - doNotRefund;\n                console.log(\"Successfully refunded \" + format(player.worlds - initialQuarks) + \" Quarks from '\" + shopItem + \"'. You now have \" + format(player.worlds) + \" Quarks.\");\n                player.shopUpgrades[key] = shopData[key].refundMinimumLevel;\n                initialQuarks = player.worlds;\n            }\n        }\n    }\n};\n","import Decimal from 'break_infinity.js';\nimport { Globals as G } from './Variables';\nimport { player, format, formatTimeShort } from './Synergism';\nimport { CalcECC } from './Challenges';\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration } from './Calculate';\nimport { displayRuneInformation } from './Runes';\nimport { showSacrifice } from './Ants';\nimport { sumContents } from './Utility';\nimport { getShopCosts } from './Shop';\nexport const visualUpdateBuildings = () => {\n    if (G['currentTab'] !== \"buildings\") {\n        console.log(\"buildings update happened not in buildings\");\n        return;\n    }\n    if (G['buildingSubTab'] === \"coin\") {\n        const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'];\n        const names = [null, 'Workers', 'Investments', 'Printers', 'Coin Mints', 'Alchemies'];\n        let percentage = new Decimal();\n        let totalProductionDivisor = new Decimal(G['produceTotal']);\n        if (totalProductionDivisor.equals(0)) {\n            totalProductionDivisor = new Decimal(1);\n        }\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            document.getElementById(\"buildtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedCoin'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedCoin']) + \"]\";\n            document.getElementById(\"buycoin\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostCoin']) + \" coins.\";\n            percentage = percentage.fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent).times(100);\n            document.getElementById(\"buildtext\" + (2 * i)).textContent = \"Coins/Sec: \" + format((place.dividedBy(G['taxdivisor'])).times(40), 2) + \" [\" + format(percentage, 3) + \"%]\";\n        }\n        document.getElementById(\"buildtext11\").textContent = \"Accelerators: \" + format(player.acceleratorBought, 0, true) + \" [+\" + format(G['freeAccelerator'], 0, true) + \"]\";\n        document.getElementById(\"buildtext12\").textContent = \"Acceleration Power: \" + ((G['acceleratorPower'] - 1) * (100)).toPrecision(4) + \"% || Acceleration Multiplier: \" + format(G['acceleratorEffect'], 2) + \"x\";\n        document.getElementById(\"buildtext13\").textContent = \"Multipliers: \" + format(player.multiplierBought, 0, true) + \" [+\" + format(G['freeMultiplier'], 0, true) + \"]\";\n        document.getElementById(\"buildtext14\").textContent = \"Multiplier Power: \" + G['multiplierPower'].toPrecision(4) + \"x || Multiplier: \" + format(G['multiplierEffect'], 2) + \"x\";\n        document.getElementById(\"buildtext15\").textContent = \"Accelerator Boost: \" + format(player.acceleratorBoostBought, 0, true) + \" [+\" + format(G['freeAcceleratorBoost'], 0, false) + \"]\";\n        document.getElementById(\"buildtext16\").textContent = \"Reset Diamonds and Prestige Upgrades, but add \" + (G['tuSevenMulti'] * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100)).toPrecision(4) + \"% Acceleration Power and 5 free Accelerators.\";\n        document.getElementById(\"buyaccelerator\").textContent = \"Cost: \" + format(player.acceleratorCost) + \" coins.\";\n        document.getElementById(\"buymultiplier\").textContent = \"Cost: \" + format(player.multiplierCost) + \" coins.\";\n        document.getElementById(\"buyacceleratorboost\").textContent = \"Cost: \" + format(player.acceleratorBoostCost) + \" Diamonds.\";\n        let warning = \"\";\n        if (player.reincarnationCount > 0.5) {\n            warning = `Your tax also caps your Coin gain at ${format(Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))}/s.`;\n        }\n        document.getElementById(\"taxinfo\").textContent =\n            `Due to your excessive wealth, coin production is divided by ${format(G['taxdivisor'], 2)} to pay taxes! ${warning}`;\n    }\n    if (G['buildingSubTab'] === \"diamond\") {\n        const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'];\n        const names = [null, 'Refineries', 'Coal Plants', 'Coal Rigs', 'Pickaxes', 'Pandoras Boxes'];\n        const perSecNames = [null, \"Crystal/sec\", \"Ref./sec\", \"Plants/sec\", \"Rigs/sec\", \"Pickaxes/sec\"];\n        document.getElementById(\"prestigeshardinfo\").textContent = \"You have \" + format(player.prestigeShards, 2) + \" Crystals, multiplying Coin production by \" + format(G['prestigeMultiplier'], 2) + \"x.\";\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            document.getElementById(\"prestigetext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedDiamonds'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedDiamonds'], 2) + \"]\";\n            document.getElementById(\"prestigetext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\n            document.getElementById(\"buydiamond\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostDiamonds'], 2) + \" Diamonds\";\n        }\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            const p = Decimal.pow(10, Decimal.log(G['prestigePointGain'].add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10));\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when your Diamonds can increase by a factor \" + format(Decimal.pow(10, player.prestigeamount)) + \" [Toggle number above]. Current Multiplier: \" + format(p) + \".\";\n        }\n        if (player.resettoggle1 === 2) {\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when the autotimer is at least \" + (player.prestigeamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].prestige, 1) + \"s.\";\n        }\n    }\n    if (G['buildingSubTab'] === \"mythos\") {\n        const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'];\n        const names = [null, 'Augments', 'Enchantments', 'Wizards', 'Oracles', 'Grandmasters'];\n        const perSecNames = [null, \"Shards/sec\", \"Augments/sec\", \"Enchantments/sec\", \"Wizards/sec\", \"Oracles/sec\"];\n        document.getElementById(\"transcendshardinfo\").textContent = \"You have \" + format(player.transcendShards, 2) + \" Mythos Shards, providing \" + format(G['totalMultiplierBoost'], 0, true) + \" Multiplier Power boosts.\";\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            document.getElementById(\"transcendtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedMythos'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedMythos'], 2) + \"]\";\n            document.getElementById(\"transcendtext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\n            document.getElementById(\"buymythos\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostMythos'], 2) + \" Mythos\";\n        }\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            document.getElementById(\"autotranscend\").textContent = \"Prestige when your Mythos can increase by a factor \" + format(Decimal.pow(10, player.transcendamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['transcendPointGain'].add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2) + \".\";\n        }\n        if (player.resettoggle2 === 2) {\n            document.getElementById(\"autotranscend\").textContent = \"Transcend when the autotimer is at least \" + (player.transcendamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].transcension, 1) + \"s.\";\n        }\n    }\n    if (G['buildingSubTab'] === \"particle\") {\n        const upper = ['FirstParticles', 'SecondParticles', 'ThirdParticles', 'FourthParticles', 'FifthParticles'];\n        const names = ['Protons', 'Elements', 'Pulsars', 'Quasars', 'Galactic Nuclei'];\n        const perSecNames = [\"Atoms/sec\", \"Protons/sec\", \"Elements/sec\", \"Pulsars/sec\", \"Quasars/sec\"];\n        for (let i = 1; i <= 5; i++) {\n            const place = G[`produce${upper[i - 1]}`];\n            document.getElementById(`reincarnationtext${i}`).textContent =\n                `${names[i - 1]}: ${format(player[`${G['ordinals'][i - 1]}OwnedParticles`], 0, true)} [+${format(player[`${G['ordinals'][i - 1]}GeneratedParticles`], 2)}]`;\n            document.getElementById(`reincarnationtext${i + 5}`).textContent =\n                `${perSecNames[i - 1]}: ${format((place).times(40), 2)}`;\n            document.getElementById(`buyparticles${i}`).textContent =\n                `Cost: ${format(player[`${G['ordinals'][i - 1]}CostParticles`], 2)} Particles`;\n        }\n        document.getElementById(\"reincarnationshardinfo\").textContent = \"You have \" + format(player.reincarnationShards, 2) + \" Atoms, providing \" + G['buildingPower'].toPrecision(4) + \" Building Power. Multiplier to Coin Production: \" + format(G['reincarnationMultiplier']);\n        document.getElementById(\"reincarnationCrystalInfo\").textContent = \"Thanks to Research 2x14, you also multiply Crystal production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 50), 3, false);\n        document.getElementById(\"reincarnationMythosInfo\").textContent = \"Thanks to Research 2x15, you also multiply Mythos Shard production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 250), 3, false);\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when your Particles can increase by a factor \" + format(Decimal.pow(10, player.reincarnationamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['reincarnationPointGain'].add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2) + \".\";\n        }\n        if (player.resettoggle3 === 2) {\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when the autotimer is at least \" + (player.reincarnationamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].reincarnation, 1) + \"s.\";\n        }\n    }\n    if (G['buildingSubTab'] === \"tesseract\") {\n        const names = [null, 'Dot', 'Vector', 'Three-Space', 'Bent Time', 'Hilbert Space'];\n        const perSecNames = [null, '+Constant/sec', 'Dot/sec', 'Vector/sec', 'Three-Space/sec', 'Bent Time/sec'];\n        for (let i = 1; i <= 5; i++) {\n            document.getElementById(\"ascendText\" + i).textContent = names[i] + \": \" + format(player['ascendBuilding' + i]['owned'], 0, true) + \" [+\" + format(player['ascendBuilding' + i]['generated'], 2) + \"]\";\n            document.getElementById(\"ascendText\" + (5 + i)).textContent =\n                perSecNames[i] + \": \" + format((G['ascendBuildingProduction'][G['ordinals'][i - 1]]), 2);\n            document.getElementById(\"buyTesseracts\" + i).textContent = \"Cost: \" + format(player['ascendBuilding' + i]['cost'], 0) + \" Tesseracts\";\n        }\n        document.getElementById(\"tesseractInfo\").textContent = \"You have \" + format(player.wowTesseracts) + \" Wow! Tesseracts. Gain more by beating Challenge 10 on each Ascension.\";\n        document.getElementById(\"ascendShardInfo\").textContent = \"You have a mathematical constant of \" + format(player.ascendShards, 2) + \". Taxes are divided by \" + format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + 0.5 * player.platonicUpgrades[15] + (G['platonicBonusMultiplier'][5] - 1)), 4, true) + \".\";\n        document.getElementById(\"autotessbuyeramount\").textContent = \"Auto buyer will save at least \" + format(player.tesseractAutoBuyerAmount) + \" tesseracts. [Enter number above].\";\n    }\n};\nexport const visualUpdateUpgrades = () => {\n    if (G['currentTab'] !== \"upgrades\")\n        return;\n};\nexport const visualUpdateAchievements = () => {\n    if (G['currentTab'] !== \"achievements\")\n        return;\n};\nexport const visualUpdateRunes = () => {\n    if (G['currentTab'] !== \"runes\")\n        return;\n    if (G['runescreen'] === \"runes\") {\n        const talismans = [\n            'rune1Talisman',\n            'rune2Talisman',\n            'rune3Talisman',\n            'rune4Talisman',\n            'rune5Talisman'\n        ];\n        document.getElementById(\"offeringCount\").textContent = \"You have \" + format(player.runeshards, 0, true) + \" Offerings.\";\n        for (let i = 1; i <= 5; i++) {\n            const place = G[talismans[i - 1]];\n            document.getElementById('rune' + i + 'level').childNodes[0].textContent = \"Level: \" + format(player.runelevels[i - 1]) + \"/\" + format(calculateMaxRunes(i));\n            document.getElementById('rune' + i + 'exp').textContent = \"+1 in \" + format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2) + \" EXP\";\n            document.getElementById('bonusrune' + i).textContent = \" [Bonus: \" + format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[9 - 1] + G['bonusant9']) + place) + \"]\";\n            displayRuneInformation(i, false);\n        }\n        document.getElementById(\"offeringExperienceValue\").textContent = \"Gain \" + format((1 + Math.min(player.highestchallengecompletions[1], 1) + 1 / 25 * player.highestchallengecompletions[1] + 0.6 * player.researches[22] + 0.3 * player.researches[23] + 3 / 25 * player.upgrades[66] + 2 * player.upgrades[61]) * calculateRecycleMultiplier(), 2, true) + \"* EXP per offering sacrificed.\";\n        document.getElementById(\"offeringRecycleInfo\").textContent = \"You have \" + format((5 * player.achievements[80] + 5 * player.achievements[87] + 5 * player.achievements[94] + 5 * player.achievements[101] + 5 * player.achievements[108] + 5 * player.achievements[115] + 7.5 * player.achievements[122] + 7.5 * player.achievements[129] + 5 * player.upgrades[61] + Math.min(25, G['rune4level'] / 16) + 0.5 * player.cubeUpgrades[2]), 2, true) + \"% chance of recycling your offerings. This multiplies EXP gain by \" + format(calculateRecycleMultiplier(), 2, true) + \"!\";\n    }\n    if (G['runescreen'] === \"talismans\") {\n        for (let i = 1; i <= 7; i++) {\n            document.getElementById('talisman' + i + 'level').textContent = \"Level \" + player.talismanLevels[i - 1] + \"/\" + (30 * player.talismanRarity[i - 1] + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400));\n        }\n    }\n    if (G['runescreen'] === \"blessings\") {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1];\n        let t = 0;\n        for (let i = 1; i <= 5; i++) {\n            document.getElementById('runeBlessingLevel' + i + 'Value').textContent = format(player.runeBlessingLevels[i], 0, true);\n            document.getElementById('runeBlessingPower' + i + 'Value1').textContent = format(G['runeBlessings'][i]);\n            document.getElementById('runeBlessingPurchaseAmount' + i).textContent = format(Math.max(1, calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i]));\n            document.getElementById('runeBlessingPurchaseCost' + i).textContent = format(Math.max(G['blessingBaseCost'] * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[1]));\n            if (i === 5) {\n                t = 1;\n            }\n            document.getElementById('runeBlessingPower' + i + 'Value2').textContent = format(1 - t + blessingMultiplierArray[i] * G['effectiveRuneBlessingPower'][i], 4, true);\n        }\n    }\n    if (G['runescreen'] === \"spirits\") {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100];\n        const subtract = [0, 0, 0, 1, 0, 0];\n        for (let i = 1; i <= 5; i++) {\n            spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400);\n            document.getElementById('runeSpiritLevel' + i + 'Value').textContent = format(player.runeSpiritLevels[i], 0, true);\n            document.getElementById('runeSpiritPower' + i + 'Value1').textContent = format(G['runeSpirits'][i]);\n            document.getElementById('runeSpiritPurchaseAmount' + i).textContent = format(Math.max(1, calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i]));\n            document.getElementById('runeSpiritPurchaseCost' + i).textContent = format(Math.max(G['spiritBaseCost'] * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[1]));\n            document.getElementById('runeSpiritPower' + i + 'Value2').textContent = format(1 - subtract[i] + spiritMultiplierArray[i] * G['effectiveRuneSpiritPower'][i], 4, true);\n        }\n    }\n};\nexport const visualUpdateChallenges = () => {\n    if (G['currentTab'] !== \"challenges\")\n        return;\n    if (player.researches[150] > 0) {\n        document.getElementById(\"autoIncrementerAmount\").textContent = format(G['autoChallengeTimerIncrement'], 2) + \"s\";\n    }\n};\nexport const visualUpdateResearch = () => {\n    if (G['currentTab'] !== \"researches\")\n        return;\n    if (player.researches[61] > 0) {\n        document.getElementById(\"automaticobtainium\").textContent = \"Thanks to researches you automatically gain \" + format(calculateAutomaticObtainium() * calculateTimeAcceleration(), 3, true) + \" Obtainium per real life second.\";\n    }\n};\nexport const visualUpdateAnts = () => {\n    if (G['currentTab'] !== \"ants\")\n        return;\n    document.getElementById(\"crumbcount\").textContent = \"You have \" + format(player.antPoints, 2) + \" Galactic Crumbs [\" + format(G['antOneProduce'], 2) + \"/s], providing a \" + format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499))) + \"x Coin Multiplier.\";\n    const mode = player.autoAntSacrificeMode === 2 ? \"Real-time\" : \"In-game time\";\n    const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer;\n    document.getElementById(\"autoAntSacrifice\").textContent = `Sacrifice when the timer is at least ${player.autoAntSacTimer} seconds (${mode}), Currently: ${format(timer)}`;\n    if (player.achievements[173] === 1) {\n        document.getElementById(\"antSacrificeTimer\").textContent = formatTimeShort(player.antSacrificeTimer);\n        showSacrifice();\n    }\n};\nexport const visualUpdateCubes = () => {\n    if (G['currentTab'] !== \"cubes\")\n        return;\n    document.getElementById(\"cubeToQuarkTimerValue\").textContent = format(Math.floor(player.dayTimer / 3600), 0) + \" Hours \" + format(Math.floor(player.dayTimer / 60 % 60), 0) + \" Mins \" + format(Math.floor(player.dayTimer % 60), 0) + \" Secs \";\n    const prefixes = ['cube', 'tesseract', 'hypercube'];\n    const power = [4, 3, 2];\n    const multipliers = [10, 10, 5];\n    for (let i = 0; i <= 2; i++) {\n        document.getElementById(prefixes[i] + 'QuarksTodayValue').textContent = format(player[prefixes[i] + 'QuarkDaily']) + \"/\" + format(25 + 75 * player.shopUpgrades[`${prefixes[i]}ToQuark`]);\n        document.getElementById(prefixes[i] + 'QuarksOpenTodayValue').textContent = format(player[prefixes[i] + 'OpenedDaily'], 0, true);\n        document.getElementById(prefixes[i] + 'QuarksOpenRequirementValue').textContent = format(Math.max(0, multipliers[i] * Math.pow(Math.min(25 + 75 * +player.shopUpgrades[`${prefixes[i]}ToQuark`], 1 + player[prefixes[i] + 'QuarkDaily']), power[i]) - player[prefixes[i] + 'OpenedDaily']), 0, true);\n    }\n    let accuracy;\n    switch (player.subtabNumber) {\n        case 0: {\n            document.getElementById(\"cubeQuantity\").textContent = format(player.wowCubes, 0, true);\n            const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed];\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3];\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (cubeArray[i] >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`cubeBlessing${i}Amount`).textContent = `x${format(cubeArray[i], 0, true)}`;\n                document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(100 * (G['cubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n                if (i === 1 || i === 8 || i === 9) {\n                    document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(G['cubeBonusMultiplier'][i] - 1, accuracy[i] + augmentAccuracy, true)}`;\n                }\n            }\n            document.getElementById(\"cubeBlessingTotalAmount\").textContent = format(sumContents(cubeArray), 0, true);\n            break;\n        }\n        case 1: {\n            document.getElementById(\"tesseractQuantity\").textContent = format(player.wowTesseracts, 0, true);\n            const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed];\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (tesseractArray[i] >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`tesseractBlessing${i}Amount`).textContent = `x${format(tesseractArray[i], 0, true)}`;\n                document.getElementById(`tesseractBlessing${i}Effect`).textContent = `+${format(100 * (G['tesseractBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n            }\n            document.getElementById(\"tesseractBlessingTotalAmount\").textContent = format(sumContents(tesseractArray), 0, true);\n            break;\n        }\n        case 2: {\n            document.getElementById(\"hypercubeQuantity\").textContent = format(player.wowHypercubes, 0, true);\n            const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed];\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (hypercubeArray[i] >= 1000) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`hypercubeBlessing${i}Amount`).textContent = `x${format(hypercubeArray[i], 0, true)}`;\n                document.getElementById(`hypercubeBlessing${i}Effect`).textContent = `+${format(100 * (G['hypercubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n            }\n            document.getElementById(\"hypercubeBlessingTotalAmount\").textContent = format(sumContents(hypercubeArray), 0, true);\n            break;\n        }\n        case 3: {\n            document.getElementById(\"platonicQuantity\").textContent = format(player.wowPlatonicCubes, 0, true);\n            const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed];\n            const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4];\n            accuracy = [5, 5, 5, 5, 2, 3, 3, 2];\n            for (let i = 0; i < platonicArray.length; i++) {\n                let augmentAccuracy = 0;\n                if (platonicArray[i] >= DRThreshold[i]) {\n                    augmentAccuracy += 1;\n                }\n                document.getElementById(`platonicBlessing${i + 1}Amount`).textContent = `x${format(platonicArray[i], 0, true)}`;\n                document.getElementById(`platonicBlessing${i + 1}Effect`).textContent = `+${format(100 * (G['platonicBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n            }\n            document.getElementById(\"platonicBlessingTotalAmount\").textContent = format(sumContents(platonicArray), 0, true);\n            break;\n        }\n        case 4:\n            document.getElementById(\"cubeAmount2\").textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`;\n            break;\n        case 5:\n            break;\n        default:\n            break;\n    }\n};\nexport const visualUpdateCorruptions = () => {\n    if (G['currentTab'] !== \"traits\")\n        return;\n    document.getElementById(\"autoAscendMetric\").textContent = format(player.autoAscendThreshold, 0, true);\n    const metaData = CalcCorruptionStuff();\n    document.getElementById(\"corruptionBankValue\").textContent = format(metaData[0]);\n    document.getElementById(\"corruptionScoreValue\").textContent = format(metaData[1], 0, true);\n    document.getElementById(\"corruptionMultiplierValue\").textContent = format(metaData[2], 1, true);\n    document.getElementById(\"corruptionTotalScore\").textContent = format(metaData[3], 0, true);\n    document.getElementById(\"corruptionCubesValue\").textContent = format(metaData[4], 0, true);\n    document.getElementById(\"corruptionTesseractsValue\").textContent = format(metaData[5]);\n    document.getElementById(\"corruptionHypercubesValue\").textContent = format(metaData[6]);\n    document.getElementById(\"corruptionPlatonicCubesValue\").textContent = format(metaData[7]);\n    document.getElementById(\"corruptionAntExponentValue\").textContent = format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G['extinctionMultiplier'][player.usedCorruptions[7]], 3);\n    document.getElementById(\"corruptionSpiritBonusValue\").textContent = format(calculateCorruptionPoints() / 400, 2, true);\n};\nexport const visualUpdateSettings = () => {\n    if (G['currentTab'] !== \"settings\")\n        return;\n    document.getElementById(\"prestigeCountStatistic\").childNodes[1].textContent = format(player.prestigeCount, 0, true);\n    document.getElementById(\"transcensionCountStatistic\").childNodes[1].textContent = format(player.transcendCount, 0, true);\n    document.getElementById(\"reincarnationCountStatistic\").childNodes[1].textContent = format(player.reincarnationCount, 0, true);\n    document.getElementById(\"fastestPrestigeStatistic\").childNodes[1].textContent = format(1000 * player.fastestprestige) + \"ms\";\n    document.getElementById(\"fastestTranscensionStatistic\").childNodes[1].textContent = format(1000 * player.fastesttranscend) + \"ms\";\n    document.getElementById(\"fastestReincarnationStatistic\").childNodes[1].textContent = format(1000 * player.fastestreincarnate) + \"ms\";\n    document.getElementById(\"mostOfferingStatistic\").childNodes[1].textContent = format(player.maxofferings);\n    document.getElementById(\"mostObtainiumStatistic\").childNodes[1].textContent = format(player.maxobtainium);\n    document.getElementById(\"mostObtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.maxobtainiumpersecond, 2, true);\n    document.getElementById(\"runeSumStatistic\").childNodes[1].textContent = format(G['runeSum']);\n    document.getElementById(\"obtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.obtainiumpersecond, 2, true);\n    document.getElementById(\"ascensionCountStatistic\").childNodes[1].textContent = format(player.ascensionCount, 0, true);\n    document.getElementById(\"saveString\").textContent =\n        `Currently: ${player.saveString.replace(\"$VERSION$\", \"v\" + player.version)}`;\n    const onExportQuarks = (Math.floor(player.quarkstimer / 3600) * (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]));\n    const maxExportQuarks = ((25 * (1 + player.researches[195] / 2)) * (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]));\n    document.getElementById(\"quarktimerdisplay\").textContent = format((3600 - (player.quarkstimer % 3600.00001)), 2) + \"s until +\" + (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]) + \" export Quark\";\n    document.getElementById(\"quarktimeramount\").textContent = \"Quarks on export: \"\n        + onExportQuarks\n        + \" [Max \"\n        + format(maxExportQuarks)\n        + \"]\";\n    if (onExportQuarks === maxExportQuarks) {\n        const settingsTab = document.getElementById('settingstab');\n        settingsTab.style.backgroundColor = 'orange';\n        settingsTab.style.border = '1px solid gold';\n        settingsTab.setAttribute('full', '1');\n    }\n};\nexport const visualUpdateShop = () => {\n    if (G['currentTab'] !== \"shop\")\n        return;\n    document.getElementById(\"quarkamount\").textContent = \"You have \" + format(player.worlds) + \" Quarks!\";\n    document.getElementById(\"offeringpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.offeringPotion);\n    document.getElementById(\"obtainiumpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.obtainiumPotion);\n    document.getElementById(\"offeringtimerlevel\").textContent = \"Level: \" + player.shopUpgrades.offeringEX + \"/100\";\n    document.getElementById(\"obtainiumtimerlevel\").textContent = \"Level: \" + player.shopUpgrades.obtainiumEX + \"/100\";\n    document.getElementById(\"offeringautolevel\").textContent = \"Level: \" + player.shopUpgrades.offeringAuto + \"/100\";\n    document.getElementById(\"obtainiumautolevel\").textContent = \"Level: \" + player.shopUpgrades.obtainiumAuto + \"/100\";\n    document.getElementById(\"instantchallenge\").textContent = player.shopUpgrades.instantChallenge > 0 ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"antspeed\").textContent = \"Level: \" + player.shopUpgrades.antSpeed + \"/100\";\n    document.getElementById(\"cashgrab\").textContent = \"Level: \" + player.shopUpgrades.cashGrab + \"/100\";\n    document.getElementById(\"shoptalisman\").textContent = player.shopUpgrades.shopTalisman > 0 ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"challengeUpgradeLevel\").textContent = \"Level: \" + player.shopUpgrades.challengeExtension + \"/5\";\n    document.getElementById(\"challenge10TomeLevel\").textContent = \"Level: \" + player.shopUpgrades.challengeTome + \"/15\";\n    document.getElementById(\"seasonPassLevel\").textContent = \"Level: \" + player.shopUpgrades.seasonPass + \"/100\";\n    document.getElementById(\"cubeToQuark\").textContent = player.shopUpgrades.cubeToQuark ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"tesseractToQuark\").textContent = player.shopUpgrades.tesseractToQuark ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"hypercubeToQuark\").textContent = player.shopUpgrades.hypercubeToQuark ? \"Bought\" : \"Not Bought\";\n    player.shopUpgrades.offeringEX === 100 ?\n        document.getElementById(\"offeringtimerbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"offeringtimerbutton\").textContent = \"Upgrade for \" + format(getShopCosts('offeringEX')) + \" Quarks\";\n    player.shopUpgrades.offeringAuto === 100 ?\n        document.getElementById(\"offeringautobutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"offeringautobutton\").textContent = \"Upgrade for \" + format(getShopCosts('offeringAuto')) + \" Quarks\";\n    player.shopUpgrades.obtainiumEX === 100 ?\n        document.getElementById(\"obtainiumtimerbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"obtainiumtimerbutton\").textContent = \"Upgrade for \" + format(getShopCosts('obtainiumEX')) + \" Quarks\";\n    player.shopUpgrades.obtainiumAuto === 100 ?\n        document.getElementById(\"obtainiumautobutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"obtainiumautobutton\").textContent = \"Upgrade for \" + format(getShopCosts('obtainiumAuto')) + \" Quarks\";\n    player.shopUpgrades.instantChallenge > 0 ?\n        (document.getElementById(\"instantchallengebutton\").textContent = \"Bought!\") :\n        document.getElementById(\"instantchallengebutton\").textContent = \"Buy for \" + format(getShopCosts('instantChallenge')) + \" Quarks\";\n    player.shopUpgrades.antSpeed === 100 ?\n        document.getElementById(\"antspeedbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"antspeedbutton\").textContent = \"Upgrade for \" + format(getShopCosts('antSpeed')) + \" Quarks\";\n    player.shopUpgrades.cashGrab === 100 ?\n        document.getElementById(\"cashgrabbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"cashgrabbutton\").textContent = \"Upgrade for \" + format(getShopCosts('cashGrab')) + \" Quarks\";\n    player.shopUpgrades.shopTalisman > 0 ?\n        (document.getElementById(\"shoptalismanbutton\").textContent = \"Bought!\") :\n        document.getElementById(\"shoptalismanbutton\").textContent = \"Buy for \" + format(getShopCosts('shopTalisman')) + \" Quarks\";\n    player.shopUpgrades.challengeExtension === 5 ?\n        document.getElementById(\"challengeUpgradeButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"challengeUpgradeButton\").textContent = \"Buy for \" + format(getShopCosts('challengeExtension')) + \" Quarks\";\n    player.shopUpgrades.challengeTome === 15 ?\n        document.getElementById(\"challenge10TomeButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"challenge10TomeButton\").textContent = \"Buy for \" + format(getShopCosts('challengeTome')) + \" Quarks\";\n    player.shopUpgrades.seasonPass === 100 ?\n        document.getElementById(\"seasonPassButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"seasonPassButton\").textContent = \"Buy for \" + format(getShopCosts('seasonPass')) + \" Quarks\";\n    player.shopUpgrades.cubeToQuark > 0 ?\n        (document.getElementById(\"cubeToQuarkButton\").textContent = \"Maxed!\") :\n        document.getElementById(\"cubeToQuarkButton\").textContent = \"Buy for \" + format(getShopCosts('cubeToQuark')) + \" Quarks\";\n    player.shopUpgrades.tesseractToQuark > 0 ?\n        (document.getElementById(\"tesseractToQuarkButton\").textContent = \"Maxed!\") :\n        document.getElementById(\"tesseractToQuarkButton\").textContent = \"Buy for \" + format(getShopCosts('tesseractToQuark')) + \" Quarks\";\n    player.shopUpgrades.hypercubeToQuark > 0 ?\n        (document.getElementById(\"hypercubeToQuarkButton\").textContent = \"Maxed!\") :\n        document.getElementById(\"hypercubeToQuarkButton\").textContent = \"Buy for \" + format(getShopCosts('hypercubeToQuark')) + \" Quarks\";\n};\n","import { player, format, formatTimeShort, } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate';\nimport { achievementaward, totalachievementpoints } from './Achievements';\nimport { displayRuneInformation } from './Runes';\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions } from './UpdateVisuals';\nexport const revealStuff = () => {\n    const example = document.getElementsByClassName(\"coinunlock1\");\n    for (let i = 0; i < example.length; i++) {\n        player.unlocks.coinone ? example[i].style.display = \"block\" : example[i].style.display = \"none\";\n    }\n    const example2 = document.getElementsByClassName(\"coinunlock2\");\n    for (let i = 0; i < example2.length; i++) {\n        player.unlocks.cointwo ? example2[i].style.display = \"block\" : example2[i].style.display = \"none\";\n    }\n    const example3 = document.getElementsByClassName(\"coinunlock3\");\n    for (let i = 0; i < example3.length; i++) {\n        player.unlocks.cointhree ? example3[i].style.display = \"block\" : example3[i].style.display = \"none\";\n    }\n    const example4 = document.getElementsByClassName(\"coinunlock4\");\n    for (let i = 0; i < example4.length; i++) {\n        player.unlocks.coinfour ? example4[i].style.display = \"block\" : example4[i].style.display = \"none\";\n    }\n    const example5 = document.getElementsByClassName(\"prestigeunlock\");\n    for (let i = 0; i < example5.length; i++) {\n        player.unlocks.prestige ? example5[i].style.display = \"block\" : example5[i].style.display = \"none\";\n    }\n    const example6 = document.getElementsByClassName(\"generationunlock\");\n    for (let i = 0; i < example6.length; i++) {\n        player.unlocks.generation ? example6[i].style.display = \"block\" : example6[i].style.display = \"none\";\n    }\n    const example7 = document.getElementsByClassName(\"transcendunlock\");\n    for (let i = 0; i < example7.length; i++) {\n        player.unlocks.transcend ? example7[i].style.display = \"block\" : example7[i].style.display = \"none\";\n    }\n    const example8 = document.getElementsByClassName(\"reincarnationunlock\");\n    for (let i = 0; i < example8.length; i++) {\n        player.unlocks.reincarnate ? example8[i].style.display = \"block\" : example8[i].style.display = \"none\";\n    }\n    const example9 = document.getElementsByClassName(\"auto\");\n    for (let i = 0; i < example9.length; i++) {\n        example9[i].style.display = \"none\";\n    }\n    const example10 = document.getElementsByClassName(\"reinrow1\");\n    for (let i = 0; i < example10.length; i++) {\n        player.researches[47] === 1 ? example10[i].style.display = \"block\" : example10[i].style.display = \"none\";\n    }\n    const example11 = document.getElementsByClassName(\"reinrow2\");\n    for (let i = 0; i < example11.length; i++) {\n        player.researches[48] === 1 ? example11[i].style.display = \"block\" : example11[i].style.display = \"none\";\n    }\n    const example12 = document.getElementsByClassName(\"reinrow3\");\n    for (let i = 0; i < example12.length; i++) {\n        player.researches[49] === 1 ? example12[i].style.display = \"block\" : example12[i].style.display = \"none\";\n    }\n    const example13 = document.getElementsByClassName(\"reinrow4\");\n    for (let i = 0; i < example13.length; i++) {\n        player.researches[50] === 1 ? example13[i].style.display = \"block\" : example13[i].style.display = \"none\";\n    }\n    const example14 = document.getElementsByClassName(\"chal6\");\n    for (let i = 0; i < example14.length; i++) {\n        player.achievements[113] === 1 ? example14[i].style.display = \"block\" : example14[i].style.display = \"none\";\n    }\n    const example15 = document.getElementsByClassName(\"chal7\");\n    for (let i = 0; i < example15.length; i++) {\n        player.achievements[120] === 1 ? example15[i].style.display = \"block\" : example15[i].style.display = \"none\";\n    }\n    const example16 = document.getElementsByClassName(\"chal7x10\");\n    for (let i = 0; i < example16.length; i++) {\n        player.achievements[124] === 1 ? example16[i].style.display = \"block\" : example16[i].style.display = \"none\";\n    }\n    const example17 = document.getElementsByClassName(\"chal8\");\n    for (let i = 0; i < example17.length; i++) {\n        player.achievements[127] === 1 ? example17[i].style.display = \"block\" : example17[i].style.display = \"none\";\n    }\n    const example18 = document.getElementsByClassName(\"chal9\");\n    for (let i = 0; i < example18.length; i++) {\n        player.achievements[134] === 1 ? example18[i].style.display = \"block\" : example18[i].style.display = \"none\";\n    }\n    const example19 = document.getElementsByClassName(\"chal9x1\");\n    for (let i = 0; i < example19.length; i++) {\n        player.highestchallengecompletions[9] > 0 ? example19[i].style.display = \"block\" : example19[i].style.display = \"none\";\n    }\n    const example20 = document.getElementsByClassName(\"chal10\");\n    for (let i = 0; i < example20.length; i++) {\n        player.achievements[141] === 1 ? example20[i].style.display = \"block\" : example20[i].style.display = \"none\";\n    }\n    const example21 = document.getElementsByClassName(\"ascendunlock\");\n    for (let i = 0; i < example21.length; i++) {\n        player.ascensionCount > 0 ? example21[i].style.display = \"block\" : example21[i].style.display = \"none\";\n    }\n    const example22 = document.getElementsByClassName(\"chal11\");\n    for (let i = 0; i < example22.length; i++) {\n        player.challengecompletions[11] > 0 ? example22[i].style.display = \"block\" : example22[i].style.display = \"none\";\n    }\n    const example23 = document.getElementsByClassName(\"chal12\");\n    for (let i = 0; i < example23.length; i++) {\n        player.challengecompletions[12] > 0 ? example23[i].style.display = \"block\" : example23[i].style.display = \"none\";\n    }\n    const example24 = document.getElementsByClassName(\"chal13\");\n    for (let i = 0; i < example24.length; i++) {\n        player.challengecompletions[13] > 0 ? example24[i].style.display = \"block\" : example24[i].style.display = \"none\";\n    }\n    const example25 = document.getElementsByClassName(\"chal14\");\n    for (let i = 0; i < example25.length; i++) {\n        player.challengecompletions[14] > 0 ? example25[i].style.display = \"block\" : example25[i].style.display = \"none\";\n    }\n    const example26 = document.getElementsByClassName(\"ascendunlockib\");\n    for (let i = 0; i < example26.length; i++) {\n        example26[i].style.display = player.ascensionCount > 0 ? \"inline-block\" : \"none\";\n    }\n    const example27 = document.getElementsByClassName(\"prestigeunlockib\");\n    for (let i = 0; i < example27.length; i++) {\n        example27[i].style.display = +player.unlocks.prestige > 0 ? \"inline-block\" : \"none\";\n    }\n    const example28 = document.getElementsByClassName(\"research150\");\n    for (let i = 0; i < example28.length; i++) {\n        example28[i].style.display = player.researches[150] > 0 ? \"block\" : \"none\";\n    }\n    const example29 = document.getElementsByClassName(\"cubeUpgrade10\");\n    for (let i = 0; i < example29.length; i++) {\n        example29[i].style.display = player.cubeUpgrades[10] > 0 ? \"flex\" : \"none\";\n    }\n    const example30 = document.getElementsByClassName(\"cubeUpgrade19\");\n    for (let i = 0; i < example30.length; i++) {\n        example30[i].style.display = player.cubeUpgrades[19] > 0 ? \"block\" : \"none\";\n    }\n    const example31 = document.getElementsByClassName(\"sacrificeAnts\");\n    for (const ex of Array.from(example31)) {\n        ex.style.display = player.achievements[173] === 1 ? \"block\" : \"none\";\n    }\n    if (player.upgrades[89] === 1) {\n        document.getElementById('transcendautotoggle').style.display = 'block';\n        document.getElementById('transcendamount').style.display = 'block';\n        document.getElementById('autotranscend').style.display = 'block';\n    }\n    else {\n        document.getElementById('transcendautotoggle').style.display = 'none';\n        document.getElementById('transcendamount').style.display = 'none';\n        document.getElementById('autotranscend').style.display = 'none';\n    }\n    player.achievements[38] === 1 ?\n        (document.getElementById(\"rune2area\").style.display = \"flex\", document.getElementById(\"runeshowpower2\").style.display = \"flex\") :\n        (document.getElementById(\"rune2area\").style.display = \"none\", document.getElementById(\"runeshowpower2\").style.display = \"none\");\n    if (player.achievements[43] === 1) {\n        document.getElementById('prestigeautotoggle').style.display = 'block';\n        document.getElementById('prestigeamount').style.display = 'block';\n        document.getElementById('autoprestige').style.display = 'block';\n    }\n    else {\n        document.getElementById('prestigeautotoggle').style.display = 'none';\n        document.getElementById('prestigeamount').style.display = 'none';\n        document.getElementById('autoprestige').style.display = 'none';\n    }\n    player.achievements[44] === 1 ?\n        (document.getElementById(\"rune3area\").style.display = \"flex\", document.getElementById(\"runeshowpower3\").style.display = \"flex\") :\n        (document.getElementById(\"rune3area\").style.display = \"none\", document.getElementById(\"runeshowpower3\").style.display = \"none\");\n    player.achievements[102] === 1 ?\n        (document.getElementById(\"rune4area\").style.display = \"flex\", document.getElementById(\"runeshowpower4\").style.display = \"flex\") :\n        (document.getElementById(\"rune4area\").style.display = \"none\", document.getElementById(\"runeshowpower4\").style.display = \"none\");\n    player.achievements[119] === 1 ?\n        document.getElementById(\"talisman1area\").style.display = \"block\" :\n        document.getElementById(\"talisman1area\").style.display = \"none\";\n    player.achievements[126] === 1 ?\n        document.getElementById(\"talisman2area\").style.display = \"block\" :\n        document.getElementById(\"talisman2area\").style.display = \"none\";\n    player.achievements[133] === 1 ?\n        document.getElementById(\"talisman3area\").style.display = \"block\" :\n        document.getElementById(\"talisman3area\").style.display = \"none\";\n    player.achievements[134] === 1 ?\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"block\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"block\") :\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"none\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"none\");\n    player.achievements[140] === 1 ?\n        document.getElementById(\"talisman4area\").style.display = \"block\" :\n        document.getElementById(\"talisman4area\").style.display = \"none\";\n    player.achievements[147] === 1 ?\n        document.getElementById(\"talisman5area\").style.display = \"block\" :\n        document.getElementById(\"talisman5area\").style.display = \"none\";\n    player.achievements[173] === 1 ?\n        document.getElementById(\"sacrificeAnts\").style.display = \"block\" :\n        document.getElementById(\"sacrificeAnts\").style.display = \"none\";\n    player.researches[39] > 0 ?\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"block\" :\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"none\";\n    player.researches[40] > 0 ?\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"block\" :\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"none\";\n    player.researches[46] > 0 ?\n        document.getElementById(\"reincarnateautomation\").style.display = \"block\" :\n        document.getElementById(\"reincarnateautomation\").style.display = \"none\";\n    player.researches[82] > 0 ?\n        (document.getElementById(\"rune5area\").style.display = \"flex\", document.getElementById(\"runeshowpower5\").style.display = \"flex\") :\n        (document.getElementById(\"rune5area\").style.display = \"none\", document.getElementById(\"runeshowpower5\").style.display = \"none\");\n    player.researches[130] > 0 ?\n        document.getElementById(\"toggleautofortify\").style.display = \"block\" :\n        document.getElementById(\"toggleautofortify\").style.display = \"none\";\n    player.researches[135] > 0 ?\n        document.getElementById(\"toggleautoenhance\").style.display = \"block\" :\n        document.getElementById(\"toggleautoenhance\").style.display = \"none\";\n    for (let z = 1; z <= 5; z++) {\n        (player.researches[190] > 0) ?\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"block\" :\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"none\";\n    }\n    player.researches[190] > 0 ?\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"block\" :\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"none\";\n    player.researches[190] > 0 ?\n        document.getElementById(\"tesseractAmount\").style.display = \"block\" :\n        document.getElementById(\"tesseractAmount\").style.display = \"none\";\n    player.researches[190] > 0 ?\n        document.getElementById(\"autotessbuyeramount\").style.display = \"block\" :\n        document.getElementById(\"autotessbuyeramount\").style.display = \"none\";\n    (player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0) ?\n        document.getElementById(\"talisman6area\").style.display = \"block\" :\n        document.getElementById(\"talisman6area\").style.display = \"none\";\n    player.shopUpgrades.offeringAuto > 0 ?\n        document.getElementById(\"toggleautosacrifice\").style.display = \"block\" :\n        document.getElementById(\"toggleautosacrifice\").style.display = \"none\";\n    player.shopUpgrades.obtainiumAuto > 0 ?\n        document.getElementById(\"toggleautoresearch\").style.display = \"block\" :\n        document.getElementById(\"toggleautoresearch\").style.display = \"none\";\n    player.shopUpgrades.shopTalisman > 0 ?\n        document.getElementById(\"talisman7area\").style.display = \"block\" :\n        document.getElementById(\"talisman7area\").style.display = \"none\";\n    player.cubeUpgrades[8] > 0 ?\n        document.getElementById('particleAutoUpgrade').style.display = \"block\" :\n        document.getElementById('particleAutoUpgrade').style.display = \"none\";\n    document.getElementById(\"ascensionStats\").style.visibility = player.achievements[197] > 0 ? \"visible\" : \"hidden\";\n    document.getElementById(\"ascHyperStats\").style.display = player.challengecompletions[13] > 0 ? \"\" : \"none\";\n    document.getElementById(\"ascPlatonicStats\").style.display = player.challengecompletions[14] > 0 ? \"\" : \"none\";\n    const e = document.getElementsByClassName(\"auto\");\n    const automationUnlocks = {\n        0: player.upgrades[81] === 1,\n        1: player.upgrades[82] === 1,\n        2: player.upgrades[83] === 1,\n        3: player.upgrades[84] === 1,\n        4: player.upgrades[85] === 1,\n        5: player.upgrades[86] === 1,\n        6: player.upgrades[87] === 1,\n        7: player.upgrades[88] === 1,\n        8: player.achievements[78] === 1,\n        9: player.achievements[85] === 1,\n        10: player.achievements[92] === 1,\n        11: player.achievements[99] === 1,\n        12: player.achievements[106] === 1,\n        13: player.achievements[43] === 1,\n        14: player.upgrades[94] === 1,\n        15: player.upgrades[95] === 1,\n        16: player.upgrades[96] === 1,\n        17: player.upgrades[97] === 1,\n        18: player.upgrades[98] === 1,\n        19: player.upgrades[89] === 1,\n        20: player.cubeUpgrades[7] === 1,\n        21: player.cubeUpgrades[7] === 1,\n        22: player.cubeUpgrades[7] === 1,\n        23: player.cubeUpgrades[7] === 1,\n        24: player.cubeUpgrades[7] === 1,\n        25: player.researches[46] === 1,\n        26: player.upgrades[91] === 1,\n        27: player.upgrades[92] === 1,\n        28: player.upgrades[99] === 1,\n        29: player.upgrades[90] === 1,\n        30: player.unlocks.prestige,\n        31: player.prestigeCount > 0.5 || player.reincarnationCount > 0.5,\n        32: player.transcendCount > 0.5 || player.reincarnationCount > 0.5,\n        33: player.reincarnationCount > 0.5,\n        34: player.ascensionCount > 0,\n        35: player.achievements[173] > 0\n    };\n    for (let i = 0; i < e.length; i++) {\n        if (automationUnlocks[i]) {\n            e[i].style.display = \"block\";\n        }\n    }\n};\nexport const hideStuff = () => {\n    document.getElementById(\"buildings\").style.display = \"none\";\n    document.getElementById(\"buildingstab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"upgrades\").style.display = \"none\";\n    document.getElementById(\"upgradestab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"settings\").style.display = \"none\";\n    const settingsTab = document.getElementById(\"settingstab\");\n    if (settingsTab.getAttribute('full') === '0') {\n        settingsTab.style.backgroundColor = \"#171717\";\n        settingsTab.style.color = \"white\";\n        settingsTab.style.border = '1px solid white';\n    }\n    document.getElementById(\"statistics\").style.display = \"none\";\n    document.getElementById(\"achievementstab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"achievementstab\").style.color = \"white\";\n    document.getElementById(\"runes\").style.display = \"none\";\n    document.getElementById(\"runestab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"challenges\").style.display = \"none\";\n    document.getElementById(\"challengetab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"research\").style.display = \"none\";\n    document.getElementById(\"researchtab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"shop\").style.display = \"none\";\n    document.getElementById(\"shoptab\").style.backgroundColor = \"purple\";\n    document.getElementById(\"ants\").style.display = \"none\";\n    document.getElementById(\"anttab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"cubetab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"traitstab\").style.backgroundColor = \"#171717\";\n    document.getElementById(\"cubes\").style.display = \"none\";\n    document.getElementById(\"traits\").style.display = \"none\";\n    document.getElementById(\"activaterune2\").style.display = \"none\";\n    document.getElementById(\"activaterune3\").style.display = \"none\";\n    document.getElementById(\"activaterune4\").style.display = \"none\";\n    if (G['currentTab'] === \"buildings\") {\n        document.getElementById(\"buildingstab\").style.backgroundColor = \"orange\";\n        document.getElementById(\"buildings\").style.display = \"block\";\n    }\n    if (G['currentTab'] === \"upgrades\") {\n        document.getElementById(\"upgrades\").style.display = \"block\";\n        document.getElementById(\"upgradestab\").style.backgroundColor = \"orange\";\n        document.getElementById(\"upgradedescription\").textContent = \"Hover over an upgrade to view details!\";\n    }\n    if (G['currentTab'] === \"settings\") {\n        document.getElementById(\"settings\").style.display = \"block\";\n        if (settingsTab.getAttribute('full') === '0') {\n            settingsTab.style.backgroundColor = \"white\";\n            settingsTab.style.color = \"black\";\n            settingsTab.style.border = '1px solid white';\n        }\n    }\n    if (G['currentTab'] === \"achievements\") {\n        document.getElementById(\"statistics\").style.display = \"block\";\n        document.getElementById(\"achievementstab\").style.backgroundColor = \"white\";\n        document.getElementById(\"achievementstab\").style.color = \"black\";\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\";\n    }\n    if (G['currentTab'] === \"runes\") {\n        document.getElementById(\"runes\").style.display = \"block\";\n        document.getElementById(\"runestab\").style.backgroundColor = \"blue\";\n        document.getElementById(\"runeshowlevelup\").textContent = \"Hey, hover over a rune icon to get details on what each one does and what benefits they're giving you!\";\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\n        displayRuneInformation(1, false);\n        displayRuneInformation(2, false);\n        displayRuneInformation(3, false);\n        displayRuneInformation(4, false);\n        displayRuneInformation(5, false);\n    }\n    if (G['currentTab'] === \"challenges\") {\n        document.getElementById(\"challenges\").style.display = \"block\";\n        document.getElementById(\"challengetab\").style.backgroundColor = \"purple\";\n    }\n    if (G['currentTab'] === \"researches\") {\n        document.getElementById(\"research\").style.display = \"block\";\n        document.getElementById(\"researchtab\").style.backgroundColor = \"green\";\n    }\n    if (G['currentTab'] === \"shop\") {\n        document.getElementById(\"shop\").style.display = \"block\";\n        document.getElementById(\"shoptab\").style.backgroundColor = \"limegreen\";\n    }\n    if (G['currentTab'] === \"ants\") {\n        document.getElementById(\"ants\").style.display = \"block\";\n        document.getElementById(\"anttab\").style.backgroundColor = \"brown\";\n    }\n    if (G['currentTab'] === \"cubes\") {\n        document.getElementById(\"cubes\").style.display = \"block\";\n        document.getElementById(\"cubetab\").style.backgroundColor = \"white\";\n    }\n    if (G['currentTab'] === \"traits\") {\n        document.getElementById(\"traits\").style.display = \"flex\";\n        document.getElementById(\"traitstab\").style.backgroundColor = \"white\";\n    }\n    if (player.achievements[38] > 0.5) {\n        document.getElementById(\"activaterune2\").style.display = \"block\";\n    }\n    if (player.achievements[44] > 0.5) {\n        document.getElementById(\"activaterune3\").style.display = \"block\";\n    }\n    if (player.achievements[102] > 0.5) {\n        document.getElementById(\"activaterune4\").style.display = \"block\";\n    }\n};\nconst visualTab = {\n    buildings: visualUpdateBuildings,\n    upgrades: visualUpdateUpgrades,\n    achievements: visualUpdateAchievements,\n    runes: visualUpdateRunes,\n    challenges: visualUpdateChallenges,\n    research: visualUpdateResearch,\n    settings: visualUpdateSettings,\n    shop: visualUpdateShop,\n    ants: visualUpdateAnts,\n    cubes: visualUpdateCubes,\n    traits: visualUpdateCorruptions\n};\nexport const htmlInserts = () => {\n    var _a;\n    document.getElementById(\"coinDisplay\").textContent = format(player.coins);\n    document.getElementById(\"offeringDisplay\").textContent = format(player.runeshards);\n    document.getElementById(\"diamondDisplay\").textContent = format(player.prestigePoints);\n    document.getElementById(\"mythosDisplay\").textContent = format(player.transcendPoints);\n    document.getElementById(\"mythosshardDisplay\").textContent = format(player.transcendShards);\n    document.getElementById(\"particlesDisplay\").textContent = format(player.reincarnationPoints);\n    document.getElementById(\"quarkDisplay\").textContent = format(player.worlds);\n    document.getElementById(\"obtainiumDisplay\").textContent = format(player.researchPoints);\n    updateAscensionStats();\n    (_a = visualTab[G['currentTab']]) === null || _a === void 0 ? void 0 : _a.call(visualTab);\n};\nexport const buttoncolorchange = () => {\n    (player.toggles[15] && player.achievements[43] === 1) ?\n        document.getElementById('prestigebtn').style.backgroundColor = \"green\" :\n        document.getElementById('prestigebtn').style.backgroundColor = \"#171717\";\n    (player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0)) ?\n        document.getElementById('transcendbtn').style.backgroundColor = \"green\" :\n        document.getElementById('transcendbtn').style.backgroundColor = \"#171717\";\n    (player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0)) ?\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"green\" :\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"#171717\";\n    (player.toggles[8] && player.upgrades[88] > 0.5) ?\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"green\" :\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"#171717\";\n    (player.currentChallenge.transcension === 0) ?\n        document.getElementById('challengebtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('challengebtn').style.backgroundColor = \"purple\";\n    (player.currentChallenge.reincarnation === 0) ?\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"purple\";\n    (player.currentChallenge.ascension === 0) ?\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"purple\";\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"coin\") {\n        const a = document.getElementById(\"buycoin1\");\n        const b = document.getElementById(\"buycoin2\");\n        const c = document.getElementById(\"buycoin3\");\n        const d = document.getElementById(\"buycoin4\");\n        const e = document.getElementById(\"buycoin5\");\n        const f = document.getElementById(\"buyaccelerator\");\n        const g = document.getElementById(\"buymultiplier\");\n        const h = document.getElementById(\"buyacceleratorboost\");\n        ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin)) ?\n            a.style.backgroundColor = \"#555555\" :\n            a.style.backgroundColor = \"#171717\";\n        ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin)) ?\n            b.style.backgroundColor = \"#555555\" :\n            b.style.backgroundColor = \"#171717\";\n        ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin)) ?\n            c.style.backgroundColor = \"#555555\" :\n            c.style.backgroundColor = \"#171717\";\n        ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin)) ?\n            d.style.backgroundColor = \"#555555\" :\n            d.style.backgroundColor = \"#171717\";\n        ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin)) ?\n            e.style.backgroundColor = \"#555555\" :\n            e.style.backgroundColor = \"#171717\";\n        ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost)) ?\n            f.style.backgroundColor = \"#555555\" :\n            f.style.backgroundColor = \"#171717\";\n        ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost)) ?\n            g.style.backgroundColor = \"#555555\" :\n            g.style.backgroundColor = \"#171717\";\n        ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost)) ?\n            h.style.backgroundColor = \"#555555\" :\n            h.style.backgroundColor = \"#171717\";\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n        const a = document.getElementById(\"buydiamond1\");\n        const b = document.getElementById(\"buydiamond2\");\n        const c = document.getElementById(\"buydiamond3\");\n        const d = document.getElementById(\"buydiamond4\");\n        const e = document.getElementById(\"buydiamond5\");\n        const f = document.getElementById(\"buycrystalupgrade1\");\n        const g = document.getElementById(\"buycrystalupgrade2\");\n        const h = document.getElementById(\"buycrystalupgrade3\");\n        const i = document.getElementById(\"buycrystalupgrade4\");\n        const j = document.getElementById(\"buycrystalupgrade5\");\n        ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds)) ? a.style.backgroundColor = \"#555555\" : a.style.backgroundColor = \"#171717\";\n        ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds)) ? b.style.backgroundColor = \"#555555\" : b.style.backgroundColor = \"#171717\";\n        ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds)) ? c.style.backgroundColor = \"#555555\" : c.style.backgroundColor = \"#171717\";\n        ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds)) ? d.style.backgroundColor = \"#555555\" : d.style.backgroundColor = \"#171717\";\n        ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds)) ? e.style.backgroundColor = \"#555555\" : e.style.backgroundColor = \"#171717\";\n        let k = 0;\n        k += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\n        if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\n            k += 10;\n        }\n        (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = \"purple\" : f.style.backgroundColor = \"#171717\";\n        (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = \"purple\" : g.style.backgroundColor = \"#171717\";\n        (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = \"purple\" : h.style.backgroundColor = \"#171717\";\n        (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = \"purple\" : i.style.backgroundColor = \"#171717\";\n        (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = \"purple\" : j.style.backgroundColor = \"#171717\";\n    }\n    if (G['currentTab'] === \"runes\") {\n        if (G['runescreen'] === \"runes\") {\n            for (let i = 1; i <= 5; i++) {\n                player.runeshards > 0.5 ? document.getElementById(\"activaterune\" + i).style.backgroundColor = \"purple\" : document.getElementById(\"activaterune\" + i).style.backgroundColor = \"#171717\";\n            }\n        }\n        if (G['runescreen'] === \"talismans\") {\n            const a = document.getElementById(\"buyTalismanItem1\");\n            const b = document.getElementById(\"buyTalismanItem2\");\n            const c = document.getElementById(\"buyTalismanItem3\");\n            const d = document.getElementById(\"buyTalismanItem4\");\n            const e = document.getElementById(\"buyTalismanItem5\");\n            const f = document.getElementById(\"buyTalismanItem6\");\n            const g = document.getElementById(\"buyTalismanItem7\");\n            const arr = [a, b, c, d, e, f, g];\n            for (let i = 0; i < arr.length; i++) {\n                arr[i].style.backgroundColor = (player.researchPoints > G['talismanResourceObtainiumCosts'][i]\n                    && player.runeshards > G['talismanResourceOfferingCosts'][i]) ? \"purple\" : \"#171717\";\n            }\n        }\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"mythos\") {\n        for (let i = 1; i <= 5; i++) {\n            const toggle = player.toggles[i + 15];\n            const mythos = player[`${G['ordinals'][i - 1]}CostMythos`];\n            (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos)\n                ? document.getElementById('buymythos' + i).style.backgroundColor = \"#555555\"\n                : document.getElementById('buymythos' + i).style.backgroundColor = \"#171717\";\n        }\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"particle\") {\n        for (let i = 1; i <= 5; i++) {\n            const costParticles = player[G['ordinals'][i - 1] + 'CostParticles'];\n            player.reincarnationPoints.gte(costParticles)\n                ? document.getElementById(\"buyparticles\" + i).style.backgroundColor = \"#555555\"\n                : document.getElementById(\"buyparticles\" + i).style.backgroundColor = \"#171717\";\n        }\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"tesseract\") {\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuilding = player['ascendBuilding' + i]['cost'];\n            player.wowTesseracts >= ascendBuilding ?\n                document.getElementById('buyTesseracts' + i).style.backgroundColor = \"#555555\" :\n                document.getElementById('buyTesseracts' + i).style.backgroundColor = \"#171717\";\n        }\n        for (let i = 1; i <= 8; i++) {\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]))) ?\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"green\" :\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"#171717\";\n        }\n        for (let i = 9; i <= 10; i++) {\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i])) || player.constantUpgrades[i] >= 1) ?\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"gold\" :\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"#171717\";\n        }\n    }\n    if (G['currentTab'] === \"ants\") {\n        (player.reincarnationPoints.gte(player.firstCostAnts)) ? document.getElementById(\"anttier1\").style.backgroundColor = \"white\" : document.getElementById(\"anttier1\").style.backgroundColor = \"#171717\";\n        for (let i = 2; i <= 8; i++) {\n            const costAnts = player[G['ordinals'][i - 1] + 'CostAnts'];\n            player.antPoints.gte(costAnts)\n                ? document.getElementById(\"anttier\" + i).style.backgroundColor = \"white\"\n                : document.getElementById(\"anttier\" + i).style.backgroundColor = \"#171717\";\n        }\n        for (let i = 1; i <= 12; i++) {\n            if (player.antPoints.gte(Decimal.pow(G['antUpgradeCostIncreases'][i - 1], player.antUpgrades[i - 1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i - 1]))) {\n                document.getElementById(\"antUpgrade\" + i).style.backgroundColor = \"silver\";\n            }\n            else {\n                document.getElementById(\"antUpgrade\" + i).style.backgroundColor = \"#171717\";\n            }\n        }\n    }\n};\nexport const updateChallengeDisplay = () => {\n    for (let k = 1; k <= 10; k++) {\n        const el = document.getElementById(\"challenge\" + k);\n        el.style.backgroundColor = \"#171717\";\n        if (player.currentChallenge.transcension === k) {\n            el.style.backgroundColor = \"plum\";\n        }\n        if (player.currentChallenge.reincarnation === k) {\n            el.style.backgroundColor = \"plum\";\n        }\n    }\n    for (let k = 11; k <= 15; k++) {\n        const el = document.getElementById(\"challenge\" + k);\n        el.style.backgroundColor = \"#171717\";\n        if (player.currentChallenge.ascension === k) {\n            el.style.backgroundColor = \"plum\";\n        }\n    }\n    if (player.retrychallenges) {\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: ON\";\n    }\n    else {\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: OFF\";\n    }\n    for (let k = 1; k <= 15; k++) {\n        updateChallengeLevel(k);\n    }\n};\nexport const updateChallengeLevel = (k) => {\n    const el = document.getElementById(\"challenge\" + k + \"level\");\n    let maxChallenges = 0;\n    switch (k) {\n        case 1:\n            maxChallenges = 25 + 5 * player.researches[66] + 925 * player.researches[105];\n            break;\n        case 2:\n            maxChallenges = 25 + 5 * player.researches[67] + 925 * player.researches[105];\n            break;\n        case 3:\n            maxChallenges = 25 + 5 * player.researches[68] + 925 * player.researches[105];\n            break;\n        case 4:\n            maxChallenges = 25 + 5 * player.researches[69] + 925 * player.researches[105];\n            break;\n        case 5:\n            maxChallenges = 25 + 5 * player.researches[70] + 925 * player.researches[105];\n            break;\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n            maxChallenges = 25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15];\n            break;\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n            maxChallenges = 30 + 3 * player.platonicUpgrades[5] + 3 * player.platonicUpgrades[10] + 4 * player.platonicUpgrades[15];\n            break;\n        case 15:\n            maxChallenges = 9001;\n            break;\n    }\n    el.textContent = `${player.challengecompletions[k]} / ${maxChallenges}`;\n};\nexport const updateAchievementBG = () => {\n    for (let i = 1; i <= 182; i++) {\n        document.getElementById(\"ach\" + i).style.backgroundColor = \"black\";\n    }\n    const fixDisplay1 = document.getElementsByClassName('purpleach');\n    const fixDisplay2 = document.getElementsByClassName('redach');\n    for (let i = 0; i < fixDisplay1.length; i++) {\n        fixDisplay1[i].style.backgroundColor = \"purple\";\n    }\n    for (let i = 0; i < fixDisplay2.length; i++) {\n        fixDisplay2[i].style.backgroundColor = \"maroon\";\n    }\n    for (let i = 1; i < player.achievements.length; i++) {\n        if (player.achievements[i] > 0.5 && player.achievements[i] !== undefined) {\n            achievementaward(i);\n        }\n    }\n};\nexport const CSSAscend = () => {\n    for (let i = 1; i <= 5; i++) {\n        const a = document.getElementById(\"ascendText\" + i);\n        const b = document.getElementById(\"ascendText\" + (5 + i));\n        const c = document.getElementById(\"tesseracts\" + i);\n        const d = document.getElementById(\"buyTesseracts\" + i);\n        const e = document.getElementById(\"tesseractAutoToggle\" + i);\n        a.style.top = (8 + 35 * i) + \"px\";\n        b.style.top = (8 + 35 * i) + \"px\";\n        c.style.top = (23 + 35 * i) + \"px\";\n        d.style.top = (38 + 35 * i) + \"px\";\n        e.style.top = (22 + 35 * i) + \"px\";\n        a.style.left = \"13%\";\n        b.style.left = \"56.5%\";\n        c.style.left = \"10%\";\n    }\n    for (let i = 1; i <= 6; i++) {\n        const a = document.getElementById(\"switchCubeSubTab\" + i);\n        a.style.top = (30 + 35 * i) + \"px\";\n        a.style.left = \"5%\";\n    }\n};\nexport const CSSRuneBlessings = () => {\n    for (let i = 1; i <= 5; i++) {\n        const a = document.getElementById('runeBlessingIcon' + i);\n        const b = document.getElementById('runeSpiritIcon' + i);\n        const c = document.getElementById('runeBlessingLevel' + i);\n        const d = document.getElementById('runeSpiritLevel' + i);\n        const e = document.getElementById('runeBlessingPurchase' + i);\n        const f = document.getElementById('runeSpiritPurchase' + i);\n        const g = document.getElementById('runeBlessingPower' + i);\n        const h = document.getElementById('runeSpiritPower' + i);\n        a.style.top = b.style.top = (20 + 75 * i) + \"px\";\n        a.style.left = b.style.left = \"10%\";\n        c.style.top = d.style.top = (23 + 75 * i) + \"px\";\n        c.style.left = d.style.left = \"15%\";\n        e.style.top = f.style.top = (36 + 75 * i) + \"px\";\n        e.style.left = f.style.left = \"32%\";\n        g.style.top = h.style.top = (23 + 75 * i) + \"px\";\n        g.style.left = h.style.left = \"59%\";\n    }\n};\nexport const showCorruptionStatsLoadouts = () => {\n    if (player.corruptionShowStats) {\n        document.getElementById(\"corruptionStats\").style.display = \"block\";\n        document.getElementById(\"corruptionLoadouts\").style.display = \"none\";\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"dodgerblue\";\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"white\";\n    }\n    else {\n        document.getElementById(\"corruptionStats\").style.display = \"none\";\n        document.getElementById(\"corruptionLoadouts\").style.display = \"block\";\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"white\";\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"dodgerblue\";\n    }\n};\nexport const updateAscensionStats = () => {\n    const t = player.ascensionCounter;\n    const [cubes, tess, hyper, platonic] = CalcCorruptionStuff().splice(4);\n    const fillers = {\n        \"ascLen\": formatTimeShort(player.ascensionCounter),\n        \"ascCubes\": format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2, true),\n        \"ascTess\": format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3, true),\n        \"ascHyper\": format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4, true),\n        \"ascPlatonic\": format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5, true),\n        \"ascC10\": player.challengecompletions[10] + '',\n        \"ascTimeAccel\": `${format(calculateTimeAcceleration(), 3, true)}x`\n    };\n    for (const key in fillers) {\n        document.getElementById(key).textContent = fillers[key];\n    }\n};\nconst tabColors = {\n    buildings: 'yellow',\n    upgrades: 'yellow',\n    achievements: 'white',\n    runes: 'cyan',\n    challenges: 'plum',\n    researches: 'green',\n    ants: 'brown',\n    cubes: 'purple',\n    traits: 'orange',\n    settings: 'white',\n    shop: 'limegreen'\n};\nexport const changeTabColor = () => {\n    var _a;\n    const tab = document.getElementById('tabBorder');\n    const color = (_a = tabColors[G['currentTab']]) !== null && _a !== void 0 ? _a : 'yellow';\n    tab.style.backgroundColor = color;\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings } from './Calculate';\nexport const loadStatisticsAccelerator = () => {\n    document.getElementById(\"sA1\").textContent = \"+\" + format(G['freeUpgradeAccelerator'], 0, false);\n    document.getElementById(\"sA2\").textContent = \"+\" + format(G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]), 0, false);\n    document.getElementById(\"sA3\").textContent = \"+\" + format(Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 10, 1.1)), 0, true);\n    document.getElementById(\"sA4\").textContent = \"x\" + format(1 + G['rune1level'] * 1 / 200 * G['effectiveLevelMult'], 3, true);\n    document.getElementById(\"sA5\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true);\n    document.getElementById(\"sA6\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true);\n    document.getElementById(\"sA7\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[1], 3, true);\n    document.getElementById(\"sA8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true);\n    document.getElementById(\"sA9\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[86], 3, true);\n    document.getElementById(\"sA10\").textContent = \"x\" + format(1.25, 3, true);\n    document.getElementById(\"sA11\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true);\n    document.getElementById(\"sA12\").textContent = format(G['freeAccelerator'], 0, true);\n};\nexport const loadStatisticsMultiplier = () => {\n    document.getElementById(\"sM1\").textContent = \"+\" + format(G['freeUpgradeMultiplier'], 0, true);\n    document.getElementById(\"sM2\").textContent = \"+\" + format(Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) * Math.floor(10 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100, 0, true);\n    document.getElementById(\"sM3\").textContent = \"x\" + format(1 + G['rune2level'] / 200 * G['effectiveLevelMult'], 3, true);\n    document.getElementById(\"sM4\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true);\n    document.getElementById(\"sM5\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true);\n    document.getElementById(\"sM6\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[2], 3, true);\n    document.getElementById(\"sM7\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true);\n    document.getElementById(\"sM8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[87], 3, true);\n    document.getElementById(\"sM9\").textContent = \"x\" + format(calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39), 2, true);\n    document.getElementById(\"sM10\").textContent = \"x\" + format(G['cubeBonusMultiplier'][2], 3, true);\n    document.getElementById(\"sM11\").textContent = \"x\" + format(1.25, 3, true);\n    document.getElementById(\"sM12\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true);\n    document.getElementById(\"sM13\").textContent = format(G['freeMultiplier'], 3, true);\n};\nexport const loadStatisticsCubeMultipliers = () => {\n    const arr = calculateCubeMultiplier(false);\n    const map = {\n        1: { acc: 4, desc: \"Ascension Timer Multiplier\" },\n        2: { acc: 2, desc: \"Season pass:\" },\n        3: { acc: 4, desc: \"Research 5x19:\" },\n        4: { acc: 4, desc: \"Research 5x20:\" },\n        5: { acc: 2, desc: \"Cube upgrade 1x1:\" },\n        6: { acc: 2, desc: \"Cube upgrade 2x1:\" },\n        7: { acc: 2, desc: \"Cube upgrade 3x1:\" },\n        8: { acc: 2, desc: \"Cube upgrade 4x1:\" },\n        9: { acc: 2, desc: \"Cube upgrade 5x1:\" },\n        10: { acc: 2, desc: \"Research 6x12:\" },\n        11: { acc: 3, desc: \"Research 7x2:\" },\n        12: { acc: 3, desc: \"Research 7x17:\" },\n        13: { acc: 3, desc: \"Research 8x7:\" },\n        14: { acc: 3, desc: \"Research 8x22:\" },\n        15: { acc: 3, desc: \"Ascension Count Achievement:\" },\n        16: { acc: 4, desc: \"Bought Mortuus Est ants (R8x17):\" },\n        17: { acc: 4, desc: \"Duplication Spirit Power:\" },\n        18: { acc: 5, desc: \"Research 8x25:\" },\n        19: { acc: 4, desc: \"Constant upgrade 10:\" },\n        20: { acc: 2, desc: \"Cube upgrade 3x10:\" },\n        21: { acc: 2, desc: \"Number Achievement 4 Bonus:\" },\n        22: { acc: 2, desc: \"Number Achievement 6 Bonus:\" },\n        23: { acc: 2, desc: \"Challenge 11 Ach:\" },\n        24: { acc: 4, desc: \"ASCENDED Achievement:\" },\n        25: { acc: 2, desc: \"Sun & Moon Achievements:\" },\n        26: { acc: 4, desc: \"Cube Shards:\" },\n        27: { acc: 4, desc: \"Challenge 15 Reward:\" },\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const statCMi = document.getElementById(`statCM${i + 1}`);\n        statCMi.childNodes[0].textContent = map[i + 1].desc;\n        document.getElementById(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    document.getElementById(\"sCMT\").textContent = `x${format(calculateCubeMultiplier(), 3)}`;\n};\nexport const loadStatisticsOfferingMultipliers = () => {\n    const arr = calculateOfferings(\"prestige\", false);\n    const map = {\n        1: { acc: 3, desc: \"Alchemy Achievement 5:\" },\n        2: { acc: 3, desc: \"Alchemy Achievement 6:\" },\n        3: { acc: 3, desc: \"Alchemy Achievement 7:\" },\n        4: { acc: 3, desc: \"Diamond Upgrade 4x3:\" },\n        5: { acc: 3, desc: \"Particle Upgrade 3x5:\" },\n        6: { acc: 3, desc: \"Auto Offering Shop Upgrade:\" },\n        7: { acc: 3, desc: \"Offering EX Shop Upgrade:\" },\n        8: { acc: 3, desc: \"Cash Grab Shop Upgrade:\" },\n        9: { acc: 3, desc: \"Research 4x10:\" },\n        10: { acc: 3, desc: \"Sacrificium Formicidae:\" },\n        11: { acc: 3, desc: \"Plutus Cube Tribute:\" },\n        12: { acc: 3, desc: \"Constant Upgrade 3:\" },\n        13: { acc: 3, desc: \"Research 6x24,8x4:\" },\n        14: { acc: 3, desc: \"Challenge 12:\" },\n        15: { acc: 3, desc: \"Research 8x25:\" },\n        16: { acc: 3, desc: \"Ascension Count Achievement:\" },\n        17: { acc: 3, desc: \"Sun and Moon Achievements:\" },\n        18: { acc: 3, desc: \"Cube Upgrade 5x6:\" },\n        19: { acc: 3, desc: \"Cube Upgrade 5x10:\" },\n        20: { acc: 3, desc: \"Platonic ALPHA:\" },\n        21: { acc: 3, desc: \"Platonic BETA:\" },\n        22: { acc: 3, desc: \"Platonic OMEGA:\" },\n        23: { acc: 3, desc: \"Challenge 15:\" },\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const statOffi = document.getElementById(`statOff${i + 1}`);\n        statOffi.childNodes[0].textContent = map[i + 1].desc;\n        document.getElementById(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    document.getElementById(\"sOffT\").textContent = `x${format(calculateOfferings(\"prestige\", true, true), 3)}`;\n};\nexport const c15RewardUpdate = () => {\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10];\n    const keys = Object.keys(G['challenge15Rewards']);\n    const e = player.challenge15Exponent;\n    for (const obj in G['challenge15Rewards']) {\n        G['challenge15Rewards'][obj] = 1;\n    }\n    if (e >= exponentRequirements[0]) {\n        G['challenge15Rewards'][keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2);\n    }\n    if (e >= exponentRequirements[1]) {\n        G['challenge15Rewards'][keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2);\n    }\n    if (e >= exponentRequirements[2]) {\n        G['challenge15Rewards'][keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2);\n    }\n    if (e >= exponentRequirements[3]) {\n        G['challenge15Rewards'][keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2));\n    }\n    if (e >= exponentRequirements[4]) {\n        G['challenge15Rewards'][keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75);\n    }\n    if (e >= exponentRequirements[5]) {\n        G['challenge15Rewards'][keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75);\n    }\n    if (e >= exponentRequirements[6]) {\n        G['challenge15Rewards'][keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2);\n    }\n    if (e >= exponentRequirements[7]) {\n        G['challenge15Rewards'][keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2);\n    }\n    if (e >= exponentRequirements[8]) {\n        G['challenge15Rewards'][keys[8]] = 1 + Math.pow(e / 2e4, 1.5);\n    }\n    if (e >= exponentRequirements[9]) {\n        G['challenge15Rewards'][keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2);\n    }\n    if (e >= exponentRequirements[10]) {\n        G['challenge15Rewards'][keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2);\n    }\n    if (e >= exponentRequirements[11]) {\n        G['challenge15Rewards'][keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2));\n    }\n    if (e >= exponentRequirements[12]) {\n        G['challenge15Rewards'][keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2));\n    }\n    if (e >= exponentRequirements[13]) {\n        G['challenge15Rewards'][keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4);\n    }\n    if (e >= exponentRequirements[14]) {\n        G['challenge15Rewards'][keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) / Math.log(2);\n    }\n    if (e >= exponentRequirements[15]) {\n        G['challenge15Rewards'][keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2);\n    }\n    if (e >= exponentRequirements[16]) {\n        G['challenge15Rewards'][keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2);\n    }\n    if (e >= exponentRequirements[17]) {\n        G['challenge15Rewards'][keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2);\n    }\n    if (e >= exponentRequirements[18]) {\n        G['challenge15Rewards'][keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4);\n    }\n    if (e >= exponentRequirements[19]) {\n        G['challenge15Rewards'][keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3);\n    }\n    if (e >= exponentRequirements[20]) {\n        G['challenge15Rewards'][keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2);\n    }\n    if (e >= exponentRequirements[21]) {\n        G['challenge15Rewards'][keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4);\n    }\n    if (e >= exponentRequirements[22]) {\n        G['challenge15Rewards'][keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 4);\n    }\n    updateDisplayC15Rewards();\n};\nconst updateDisplayC15Rewards = () => {\n    document.getElementById('c15Reward0Num').textContent = format(player.challenge15Exponent, 0, true);\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10];\n    const values = Object.values(G['challenge15Rewards']);\n    let keepExponent = 'None';\n    for (let i = 0; i < exponentRequirements.length; i++) {\n        if (keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]) {\n            keepExponent = exponentRequirements[i];\n        }\n        if (player.challenge15Exponent >= exponentRequirements[i]) {\n            document.getElementById('c15Reward' + (i + 1) + 'Num').textContent = format(100 * values[i] - 100, 2, true);\n        }\n        document.getElementById('c15Reward' + (i + 1)).style.display = (player.challenge15Exponent >= exponentRequirements[i]) ? 'block' : 'none';\n        document.getElementById('c15RewardList').textContent = typeof keepExponent === 'string'\n            ? 'You have unlocked all reward types from Challenge 15!'\n            : 'Next reward type requires ' + format(keepExponent, 0, true) + ' exponent.';\n    }\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { toggleCorruptionLevel } from './Toggles';\nimport { getElementById } from './Utility';\nexport const corruptionDisplay = (index) => {\n    if (document.getElementById(\"corruptionDetails\").style.visibility !== \"visible\") {\n        document.getElementById(\"corruptionDetails\").style.visibility = \"visible\";\n    }\n    if (document.getElementById(\"corruptionSelectedPic\").style.visibility !== \"visible\") {\n        document.getElementById(\"corruptionSelectedPic\").style.visibility = \"visible\";\n    }\n    G['corruptionTrigger'] = index;\n    const corruptionTexts = {\n        1: {\n            name: \"Corruption I: Divisiveness\",\n            description: \"Your multipliers get disintegrated! Is extra devious without also using Maladaption Corruption\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[1]) + \". Effect: Free Mult Exponent ^\" + format(G['divisivenessPower'][player.usedCorruptions[1]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[1]) + \". Effect: Free Multiplier Exponent ^\" + format(G['divisivenessPower'][player.prototypeCorruptions[1]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[1]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[1]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[1], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[1], 2), 1) + \"%\",\n            image: \"Pictures/Divisiveness Level 7.png\"\n        },\n        2: {\n            name: \"Corruption II: Maladaption\",\n            description: \"Insert Cool Text Here. Is extra devious without also using Divisiveness Corruption. Yin/Yang!\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[2]) + \". Effect: Free Accel. Exponent ^\" + format(G['maladaptivePower'][player.usedCorruptions[2]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[2]) + \". Effect: Free Accelerator Exponent ^\" + format(G['maladaptivePower'][player.prototypeCorruptions[2]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[2]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[2]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[2], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[2], 2), 1) + \"%\",\n            image: \"Pictures/Maladaption Lvl 7.png\"\n        },\n        3: {\n            name: \"Corruption III: Spacial Dilation\",\n            description: \"Way to go, Albert.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[3]) + \". Effect: Time Speed is divided by \" + format(1 / G['lazinessMultiplier'][player.usedCorruptions[3]], 5),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[3]) + \". Effect: Time is divided by \" + format(1 / G['lazinessMultiplier'][player.prototypeCorruptions[3]], 5),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[3]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[3]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[3], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[3], 2), 1) + \"%\",\n            image: \"Pictures/Laziness Lvl 7.png\"\n        },\n        4: {\n            name: \"Corruption IV: Hyperchallenged\",\n            description: \"What's in a challenge?\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.usedCorruptions[4]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.prototypeCorruptions[4]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[4]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[4]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[4], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[4], 2), 1) + \"%\",\n            image: \"Pictures/Hyperchallenged Lvl 7.png\"\n        },\n        5: {\n            name: \"Corruption V: Scientific Illiteracy\",\n            description: \"Maybe Albert wouldn't have theorized Dilation after all.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.usedCorruptions[5]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.prototypeCorruptions[5]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[5]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[5]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[5], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[5], 2), 1) + \"%\",\n            image: \"Pictures/Scientific Illiteracy Lvl 7.png\"\n        },\n        6: {\n            name: \"Corruption VI: Market Deflation\",\n            description: \"Diamond Mine destroyed... no more monopolies!\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[6]) + \". Effect: Diamond gain ^\" + format(G['deflationMultiplier'][player.usedCorruptions[6]], 9),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[6]) + \". Effect: Diamond gain ^\" + format(G['deflationMultiplier'][player.prototypeCorruptions[6]], 9),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[6]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[6]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[6], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[6], 2), 1) + \"%\",\n            image: \"Pictures/Deflation Lvl 7.png\"\n        },\n        7: {\n            name: \"Corruption VII: Extinction\",\n            description: \"It killed the dinosaurs too, ya dingus.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.usedCorruptions[7]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.prototypeCorruptions[7]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[7]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[7]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[7], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[7], 2), 1) + \"%\",\n            image: \"Pictures/Extinction Lvl 7.png\"\n        },\n        8: {\n            name: \"Corruption VIII: Drought\",\n            description: \"More like California, am I right?\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.usedCorruptions[8]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.prototypeCorruptions[8]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[8]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[8]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[8], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[8], 2), 1) + \"%\",\n            image: \"Pictures/Drought Lvl 7.png\"\n        },\n        9: {\n            name: \"Corruption IX: Financial Recession\",\n            description: \"2008.exe has stopped working.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.usedCorruptions[9]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.prototypeCorruptions[9]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[9]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[9]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[9], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[9], 2), 1) + \"%\",\n            image: \"Pictures/Financial Collapse Lvl 7.png\"\n        },\n        10: {\n            name: \"CLEANSE THE CORRUPTION\",\n            description: \"Free this world of sin.\",\n            current: \"Reset all Corruptions to level 0 for your current ascension. Does not reset your current ascension.\",\n            planned: \"Push that big 'Reset Corruptions' button to confirm your decision.\",\n            multiplier: \"Note: if you need to do this, you may have bitten off more than you can chew.\",\n            spiritContribution: \"\",\n            image: \"Pictures/ExitCorruption.png\"\n        }\n    };\n    document.getElementById(\"corruptionName\").textContent = corruptionTexts[index].name;\n    document.getElementById(\"corruptionDescription\").textContent = corruptionTexts[index].description;\n    document.getElementById(\"corruptionLevelCurrent\").textContent = corruptionTexts[index].current;\n    document.getElementById(\"corruptionLevelPlanned\").textContent = corruptionTexts[index].planned;\n    document.getElementById(\"corruptionMultiplierContribution\").textContent = corruptionTexts[index].multiplier;\n    document.getElementById(\"corruptionSpiritContribution\").textContent = corruptionTexts[index].spiritContribution;\n    document.getElementById(\"corruptionSelectedPic\").setAttribute(\"src\", corruptionTexts[index].image);\n    if (index < 10) {\n        document.getElementById(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index]);\n        document.getElementById(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index]);\n    }\n};\nexport const corruptionButtonsAdd = () => {\n    const rows = document.getElementsByClassName(\"corruptionStatRow\");\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        const p = document.createElement(\"p\");\n        p.className = \"corrDesc\";\n        let text = document.createTextNode(\"Current: \");\n        p.appendChild(text);\n        let span = document.createElement(\"span\");\n        span.id = `corrCurrent${i + 1}`;\n        span.textContent = player.usedCorruptions[i + 1] + '';\n        p.appendChild(span);\n        text = document.createTextNode(\" / Next: \");\n        p.appendChild(text);\n        span = document.createElement(\"span\");\n        span.id = `corrNext${i + 1}`;\n        span.textContent = player.prototypeCorruptions[i + 1] + '';\n        p.appendChild(span);\n        row.appendChild(p);\n        let btn;\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionMax\";\n        btn.textContent = \"+12\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 12);\n        row.appendChild(btn);\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionUp\";\n        btn.textContent = \"+1\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 1);\n        row.appendChild(btn);\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionDown\";\n        btn.textContent = \"-1\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, -1);\n        row.appendChild(btn);\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionReset\";\n        btn.textContent = \"-12\";\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 1, -12));\n        row.appendChild(btn);\n        row.addEventListener('click', () => corruptionDisplay(i + 1));\n    }\n};\nexport const corruptionLoadoutTableCreate = () => {\n    const corrCount = 9;\n    const table = getElementById(\"corruptionLoadoutTable\");\n    for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\n        const row = table.insertRow();\n        for (let j = 0; j <= corrCount; j++) {\n            const cell = row.insertCell();\n            if (j === 0) {\n                cell.textContent = (i === 0) ? \"Next:\" : `Loadout ${i}:`;\n            }\n            else if (j <= corrCount) {\n                cell.textContent = ((i === 0) ? player.prototypeCorruptions[j] : player.corruptionLoadouts[i][j]).toString();\n                cell.style.textAlign = \"center\";\n            }\n        }\n        if (i === 0)\n            continue;\n        let cell = row.insertCell();\n        let btn = document.createElement(\"button\");\n        btn.className = \"corrSave\";\n        btn.textContent = \"Save\";\n        btn.onclick = () => corruptionLoadoutSaveLoad(true, i);\n        cell.appendChild(btn);\n        cell = row.insertCell();\n        btn = document.createElement(\"button\");\n        btn.className = \"corrLoad\";\n        btn.textContent = \"Load\";\n        btn.onclick = () => corruptionLoadoutSaveLoad(false, i);\n        cell.appendChild(btn);\n    }\n};\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\n    const row = getElementById(\"corruptionLoadoutTable\").rows[updateRow + 1].cells;\n    for (let i = 0; i < row.length; i++) {\n        if (i === 0 || i > 9)\n            continue;\n        row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i] : player.corruptionLoadouts[updateRow][i]).toString();\n    }\n};\nconst corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\n    if (save) {\n        player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions);\n        corruptionLoadoutTableUpdate(loadout);\n    }\n    else {\n        player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout]);\n        corruptionLoadoutTableUpdate();\n    }\n};\nexport const corruptionCleanseConfirm = () => {\n    const corrupt = document.getElementById('corruptionCleanseConfirm');\n    corrupt.style.visibility = 'visible';\n    setTimeout(() => corrupt.style.visibility = 'hidden', 10000);\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { revealStuff, hideStuff, updateChallengeDisplay, showCorruptionStatsLoadouts, changeTabColor } from './UpdateHTML';\nimport { player, interval, clearInt, format, resetCheck } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { visualUpdateCubes } from './UpdateVisuals';\nimport { calculateRuneLevels } from './Calculate';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport { getChallengeConditions } from './Challenges';\nimport { maxRoombaResearchIndex } from './Research';\nimport { loadStatisticsCubeMultipliers, loadStatisticsOfferingMultipliers, loadStatisticsAccelerator, loadStatisticsMultiplier } from './Statistics';\nimport { corruptionDisplay, corruptionLoadoutTableUpdate } from './Corruptions';\nconst tabNumberConst = {\n    \"settings\": -1,\n    \"shop\": 0,\n    \"buildings\": 1,\n    \"upgrades\": 2,\n    \"achievements\": 3,\n    \"runes\": 4,\n    \"challenges\": 5,\n    \"researches\": 6,\n    \"ants\": 7,\n    \"cubes\": 8,\n    \"traits\": 9\n};\nexport const toggleTabs = (name) => {\n    G['currentTab'] = name;\n    player.tabnumber = tabNumberConst[name];\n    revealStuff();\n    hideStuff();\n    const subTabList = subTabsInMainTab(player.tabnumber).subTabList;\n    if (player.tabnumber !== -1) {\n        for (let i = 0; i < subTabList.length; i++) {\n            const button = document.getElementById(subTabList[i].buttonID);\n            if (button && button.style.backgroundColor === \"crimson\") {\n                player.subtabNumber = i;\n                break;\n            }\n            if (player.tabnumber === 9 && button.style.borderColor === \"dodgerblue\") {\n                player.subtabNumber = i;\n                break;\n            }\n        }\n    }\n    else {\n        const btns = document.getElementById(\"settings\").getElementsByClassName(\"subtabSwitcher\")[0].children;\n        for (let i = 0; i < btns.length; i++) {\n            if (btns[i].classList.contains(\"buttonActive\")) {\n                player.subtabNumber = i;\n                break;\n            }\n        }\n    }\n};\nexport const toggleSettings = (i) => {\n    i++;\n    if (player.toggles[i] === true) {\n        player.toggles[i] = false;\n    }\n    else {\n        player.toggles[i] = true;\n    }\n    toggleauto();\n};\nexport const toggleChallenges = (i, auto = false) => {\n    if (player.currentChallenge.transcension === 0 && (i <= 5)) {\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\n            player.currentChallenge.transcension = i;\n            reset(\"transcensionChallenge\", false, \"enterChallenge\");\n            player.transcendCount -= 1;\n        }\n    }\n    if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) && (i >= 6 && i < 11)) {\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\n            player.currentChallenge.reincarnation = i;\n            reset(\"reincarnationChallenge\", false, \"enterChallenge\");\n            player.reincarnationCount -= 1;\n        }\n    }\n    if (player.challengecompletions[10] > 0) {\n        if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0) && (i >= 11)) {\n            reset(\"ascensionChallenge\", false, \"enterChallenge\");\n            player.currentChallenge.ascension = i;\n            if (player.currentChallenge.ascension === 12) {\n                player.antPoints = new Decimal(\"8\");\n            }\n            if (player.currentChallenge.ascension === 15) {\n                player.usedCorruptions[0] = 0;\n                player.prototypeCorruptions[0] = 0;\n                for (let i = 1; i <= 9; i++) {\n                    player.usedCorruptions[i] = 11;\n                }\n            }\n        }\n    }\n    updateChallengeDisplay();\n    getChallengeConditions(i);\n    if (!auto && player.autoChallengeRunning) {\n        toggleAutoChallengeRun();\n    }\n    if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\n        achievementaward(238);\n    }\n};\nexport const toggleBuyAmount = (quantity, type) => {\n    player[type + 'buyamount'] = quantity;\n    let a = ['one', 'ten', 'hundred', 'thousand'][quantity.toString().length - 1];\n    const c = type + a;\n    let d = \"\";\n    d = d + c;\n    document.getElementById(d).style.backgroundColor = \"Green\";\n    if (quantity !== 1) {\n        a = \"one\";\n        d = type + a;\n        document.getElementById(d).style.backgroundColor = \"Black\";\n    }\n    if (quantity !== 10) {\n        a = \"ten\";\n        d = type + a;\n        document.getElementById(d).style.backgroundColor = \"Black\";\n    }\n    if (quantity !== 100) {\n        a = \"hundred\";\n        d = type + a;\n        document.getElementById(d).style.backgroundColor = \"Black\";\n    }\n    if (quantity !== 1000) {\n        a = \"thousand\";\n        d = type + a;\n        document.getElementById(d).style.backgroundColor = \"Black\";\n    }\n};\nexport const toggleShops = (i) => {\n    if (i === 1 && player.shoptoggles.coin === false) {\n        player.shoptoggles.coin = true;\n        document.getElementById(\"shoptogglecoin\").textContent = \"Auto: ON\";\n    }\n    else if (i === 1 && player.shoptoggles.coin === true) {\n        player.shoptoggles.coin = false;\n        document.getElementById(\"shoptogglecoin\").textContent = \"Auto: OFF\";\n    }\n    if (i === 2 && player.shoptoggles.prestige === false) {\n        player.shoptoggles.prestige = true;\n        document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: ON\";\n    }\n    else if (i === 2 && player.shoptoggles.prestige === true) {\n        player.shoptoggles.prestige = false;\n        document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: OFF\";\n    }\n    if (i === 3 && player.shoptoggles.transcend === false) {\n        player.shoptoggles.transcend = true;\n        document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: ON\";\n    }\n    else if (i === 3 && player.shoptoggles.transcend === true) {\n        player.shoptoggles.transcend = false;\n        document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: OFF\";\n    }\n    if (i === 4 && player.shoptoggles.generators === false) {\n        player.shoptoggles.generators = true;\n        document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: ON\";\n    }\n    else if (i === 4 && player.shoptoggles.generators === true) {\n        player.shoptoggles.generators = false;\n        document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: OFF\";\n    }\n    if (i === 5 && player.shoptoggles.reincarnate === false) {\n        player.shoptoggles.reincarnate = true;\n        document.getElementById(\"particleAutoUpgrade\").textContent = \"Auto: ON\";\n    }\n    else if (i === 5 && player.shoptoggles.reincarnate === true) {\n        player.shoptoggles.reincarnate = false;\n        document.getElementById(\"particleAutoUpgrade\").textContent = \"Auto: OFF\";\n    }\n};\nexport function tabs(mainTab) {\n    const tabs = {\n        \"-1\": { tabName: \"settings\", unlocked: true },\n        0: { tabName: \"shop\", unlocked: player.unlocks.reincarnate },\n        1: { tabName: \"buildings\", unlocked: true },\n        2: { tabName: \"upgrades\", unlocked: true },\n        3: { tabName: \"achievements\", unlocked: player.unlocks.coinfour },\n        4: { tabName: \"runes\", unlocked: player.unlocks.prestige },\n        5: { tabName: \"challenges\", unlocked: player.unlocks.transcend },\n        6: { tabName: \"researches\", unlocked: player.unlocks.reincarnate },\n        7: { tabName: \"ants\", unlocked: player.achievements[127] > 0 },\n        8: { tabName: \"cubes\", unlocked: player.achievements[141] > 0 },\n        9: { tabName: \"traits\", unlocked: player.achievements[141] > 0 }\n    };\n    if (typeof mainTab === 'undefined') {\n        return tabs;\n    }\n    return tabs[mainTab];\n}\nexport const subTabsInMainTab = (mainTab) => {\n    const subTabs = {\n        \"-1\": {\n            tabSwitcher: setActiveSettingScreen,\n            subTabList: [\n                { subTabID: \"settingsubtab\", unlocked: true },\n                { subTabID: \"creditssubtab\", unlocked: true },\n                { subTabID: \"statisticsSubTab\", unlocked: true },\n                { subTabID: \"resetHistorySubTab\", unlocked: player.unlocks.prestige },\n                { subTabID: \"ascendHistorySubTab\", unlocked: player.ascensionCount > 0 },\n                { subTabID: \"testingLogger\", unlocked: true }\n            ]\n        },\n        0: { subTabList: [] },\n        1: {\n            tabSwitcher: toggleBuildingScreen,\n            subTabList: [\n                { subTabID: \"coin\", unlocked: true, buttonID: \"switchToCoinBuilding\" },\n                { subTabID: \"diamond\", unlocked: player.unlocks.prestige, buttonID: \"switchToDiamondBuilding\" },\n                { subTabID: \"mythos\", unlocked: player.unlocks.transcend, buttonID: \"switchToMythosBuilding\" },\n                { subTabID: \"particle\", unlocked: player.unlocks.reincarnate, buttonID: \"switchToParticleBuilding\" },\n                { subTabID: \"tesseract\", unlocked: player.achievements[183] > 0, buttonID: \"switchToTesseractBuilding\" }\n            ]\n        },\n        2: { subTabList: [] },\n        3: { subTabList: [] },\n        4: {\n            tabSwitcher: toggleRuneScreen,\n            subTabList: [\n                { subTabID: 1, unlocked: player.unlocks.prestige, buttonID: \"toggleRuneSubTab1\" },\n                { subTabID: 2, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab2\" },\n                { subTabID: 3, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab3\" },\n                { subTabID: 4, unlocked: player.achievements[204] > 0, buttonID: \"toggleRuneSubTab4\" }\n            ]\n        },\n        5: { subTabList: [] },\n        6: { subTabList: [] },\n        7: { subTabList: [] },\n        8: {\n            tabSwitcher: toggleCubeSubTab,\n            subTabList: [\n                { subTabID: 1, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab1\" },\n                { subTabID: 2, unlocked: player.achievements[197] > 0, buttonID: \"switchCubeSubTab2\" },\n                { subTabID: 3, unlocked: player.achievements[211] > 0, buttonID: \"switchCubeSubTab3\" },\n                { subTabID: 4, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab4\" },\n                { subTabID: 5, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab5\" },\n                { subTabID: 6, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab6\" }\n            ]\n        },\n        9: {\n            tabSwitcher: toggleCorruptionLoadoutsStats,\n            subTabList: [\n                { subTabID: true, unlocked: player.achievements[141] > 0, buttonID: \"corrStatsBtn\" },\n                { subTabID: false, unlocked: player.achievements[141] > 0, buttonID: \"corrLoadoutsBtn\" }\n            ]\n        },\n    };\n    return subTabs[mainTab];\n};\nexport const keyboardTabChange = (dir = 1, main = true) => {\n    if (main) {\n        player.tabnumber += dir;\n        const maxTab = Object.keys(tabs()).reduce((a, b) => Math.max(a, +b), -Infinity);\n        const minTab = Object.keys(tabs()).reduce((a, b) => Math.min(a, +b), Infinity);\n        const handleLoopBack = () => {\n            if (player.tabnumber === maxTab + 1) {\n                player.tabnumber = minTab;\n            }\n            if (player.tabnumber === minTab - 1) {\n                player.tabnumber = maxTab;\n            }\n        };\n        handleLoopBack();\n        while (!tabs(player.tabnumber).unlocked) {\n            player.tabnumber += dir;\n            handleLoopBack();\n        }\n        toggleTabs(tabs(player.tabnumber).tabName);\n    }\n    else {\n        const subTabList = subTabsInMainTab(player.tabnumber).subTabList;\n        if (subTabList.length === 0)\n            return;\n        player.subtabNumber += dir;\n        const handleLoopBack = () => {\n            const numSubTabs = subTabList.length;\n            player.subtabNumber = (player.subtabNumber + numSubTabs) % numSubTabs;\n        };\n        handleLoopBack();\n        while (!subTabList[player.subtabNumber].unlocked) {\n            player.subtabNumber += dir;\n            handleLoopBack();\n        }\n        toggleSubTab(player.tabnumber, player.subtabNumber);\n    }\n    changeTabColor();\n};\nexport const toggleSubTab = (mainTab = 1, subTab = 0) => {\n    if (tabs(mainTab).unlocked && subTabsInMainTab(mainTab).subTabList.length > 0) {\n        if (mainTab === -1) {\n            const btn = document.getElementById(\"settings\").getElementsByClassName(\"subtabSwitcher\")[0].children[subTab];\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID, btn);\n        }\n        else {\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID);\n        }\n    }\n};\nexport const toggleautoreset = (i) => {\n    if (i === 1) {\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            player.resettoggle1 = 2;\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\";\n        }\n        else {\n            player.resettoggle1 = 1;\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n    }\n    else if (i === 2) {\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            player.resettoggle2 = 2;\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\";\n        }\n        else {\n            player.resettoggle2 = 1;\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n    }\n    else if (i === 3) {\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            player.resettoggle3 = 2;\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\";\n        }\n        else {\n            player.resettoggle3 = 1;\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n    }\n    else if (i === 4) {\n    }\n};\nexport const toggleautobuytesseract = () => {\n    if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\n        player.tesseractAutoBuyerToggle = 2;\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\";\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\";\n    }\n    else {\n        player.tesseractAutoBuyerToggle = 1;\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\";\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\";\n    }\n};\nexport const toggleauto = () => {\n    const autos = document.getElementsByClassName(\"auto\");\n    for (const auto of Array.from(autos)) {\n        const format = auto.getAttribute(\"format\") || 'Auto [$]';\n        const toggleId = auto.getAttribute(\"toggleId\");\n        if (toggleId === undefined || toggleId === null) {\n            continue;\n        }\n        const finishedString = format.replace('$', player.toggles[+toggleId] ? \"ON\" : \"OFF\");\n        auto.textContent = finishedString;\n        auto.style.border = \"2px solid \" + (player.toggles[+toggleId] ? \"green\" : \"red\");\n    }\n};\nexport const toggleResearchBuy = () => {\n    if (G['maxbuyresearch']) {\n        G['maxbuyresearch'] = false;\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: 1 Level\";\n    }\n    else {\n        G['maxbuyresearch'] = true;\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: MAX [if possible]\";\n    }\n};\nexport const toggleAutoResearch = () => {\n    const el = document.getElementById(\"toggleautoresearch\");\n    if (player.autoResearchToggle) {\n        player.autoResearchToggle = false;\n        el.textContent = \"Automatic: OFF\";\n        player.autoResearch = 0;\n    }\n    else {\n        player.autoResearchToggle = true;\n        el.textContent = \"Automatic: ON\";\n    }\n    if (!player.autoResearchToggle) {\n        for (let i = 1; i <= maxRoombaResearchIndex(player); i++) {\n            const l = document.getElementById(\"res\" + i);\n            if (player.researches[i] === 0) {\n                l.style.backgroundColor = \"black\";\n            }\n            if (0 < player.researches[i] && player.researches[i] < G['researchMaxLevels'][i]) {\n                l.style.backgroundColor = \"purple\";\n            }\n            if (player.researches[i] === G['researchMaxLevels'][i]) {\n                l.style.backgroundColor = \"green\";\n            }\n        }\n    }\n    if (player.autoResearchToggle && player.cubeUpgrades[9] === 1) {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        const doc = document.getElementById(\"res\" + player.autoResearch);\n        if (doc)\n            doc.style.backgroundColor = \"orange\";\n    }\n};\nexport const toggleAutoSacrifice = (index) => {\n    const el = document.getElementById(\"toggleautosacrifice\");\n    if (index === 0) {\n        if (player.autoSacrificeToggle) {\n            player.autoSacrificeToggle = false;\n            el.textContent = \"Auto Runes: OFF\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\";\n            player.autoSacrifice = 0;\n        }\n        else {\n            player.autoSacrificeToggle = true;\n            el.textContent = \"Auto Runes: ON\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\";\n        }\n    }\n    else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAuto > 0.5) {\n        player.autoSacrifice = index;\n    }\n    for (let i = 1; i <= 5; i++) {\n        document.getElementById(\"rune\" + i).style.backgroundColor = player.autoSacrifice === i ? \"orange\" : \"#171717\";\n    }\n    calculateRuneLevels();\n};\nexport const toggleBuildingScreen = (input) => {\n    G['buildingSubTab'] = input;\n    const screen = {\n        \"coin\": {\n            screen: \"coinBuildings\",\n            button: \"switchToCoinBuilding\",\n            subtabNumber: 0\n        },\n        \"diamond\": {\n            screen: \"prestige\",\n            button: \"switchToDiamondBuilding\",\n            subtabNumber: 1\n        },\n        \"mythos\": {\n            screen: \"transcension\",\n            button: \"switchToMythosBuilding\",\n            subtabNumber: 2\n        },\n        \"particle\": {\n            screen: \"reincarnation\",\n            button: \"switchToParticleBuilding\",\n            subtabNumber: 3\n        },\n        \"tesseract\": {\n            screen: \"ascension\",\n            button: \"switchToTesseractBuilding\",\n            subtabNumber: 4\n        }\n    };\n    for (const key in screen) {\n        document.getElementById(screen[key].screen).style.display = \"none\";\n        document.getElementById(screen[key].button).style.backgroundColor = \"#171717\";\n    }\n    document.getElementById(screen[G['buildingSubTab']].screen).style.display = \"block\";\n    document.getElementById(screen[G['buildingSubTab']].button).style.backgroundColor = \"crimson\";\n    player.subtabNumber = screen[G['buildingSubTab']].subtabNumber;\n};\nexport const toggleRuneScreen = (index) => {\n    const screens = ['runes', 'talismans', 'blessings', 'spirits'];\n    G['runescreen'] = screens[index - 1];\n    for (let i = 1; i <= 4; i++) {\n        const a = document.getElementById(\"toggleRuneSubTab\" + i);\n        const b = document.getElementById(\"runeContainer\" + i);\n        if (i === index) {\n            a.style.border = \"2px solid gold\";\n            a.style.backgroundColor = \"crimson\";\n            b.style.display = \"block\";\n        }\n        else {\n            a.style.border = \"2px solid silver\";\n            a.style.backgroundColor = \"#171717\";\n            b.style.display = \"none\";\n        }\n    }\n    player.subtabNumber = index - 1;\n};\nexport const toggleautofortify = () => {\n    const el = document.getElementById(\"toggleautofortify\");\n    if (player.autoFortifyToggle === false && player.researches[130] == 1) {\n        el.textContent = \"Auto Fortify: ON\";\n        el.style.border = \"2px solid green\";\n    }\n    else {\n        el.textContent = \"Auto Fortify: OFF\";\n        el.style.border = \"2px solid red\";\n    }\n    player.autoFortifyToggle = !player.autoFortifyToggle;\n};\nexport const toggleautoenhance = () => {\n    const el = document.getElementById(\"toggleautoenhance\");\n    if (player.autoEnhanceToggle === false && player.researches[135] == 1) {\n        el.textContent = \"Auto Enhance: ON\";\n        el.style.border = \"2px solid green\";\n    }\n    else {\n        el.textContent = \"Auto Enhance: OFF\";\n        el.style.border = \"2px solid red\";\n    }\n    player.autoEnhanceToggle = !player.autoEnhanceToggle;\n};\nconst setActiveSettingScreen = (subtab, clickedButton) => __awaiter(void 0, void 0, void 0, function* () {\n    const subtabEl = document.getElementById(subtab);\n    if (subtabEl.classList.contains(\"subtabActive\")) {\n        return;\n    }\n    const switcherEl = clickedButton.parentNode;\n    switcherEl.querySelectorAll(\".buttonActive\").forEach(b => b.classList.remove(\"buttonActive\"));\n    clickedButton.classList.add(\"buttonActive\");\n    subtabEl.parentNode.querySelectorAll(\".subtabActive\").forEach(subtab => subtab.classList.remove(\"subtabActive\"));\n    subtabEl.classList.add(\"subtabActive\");\n    if (subtab === \"statisticsSubTab\") {\n        const refreshStats = function () {\n            if (G['currentTab'] !== \"settings\") {\n                clearInt(id);\n            }\n            loadStatisticsAccelerator();\n            loadStatisticsMultiplier();\n            loadStatisticsOfferingMultipliers();\n            loadStatisticsCubeMultipliers();\n            if (!subtabEl.classList.contains(\"subtabActive\"))\n                clearInt(id);\n        };\n        const id = interval(refreshStats, 1000);\n        refreshStats();\n    }\n    else if (subtab === 'creditssubtab') {\n        const credits = document.getElementById('creditList');\n        const artists = document.getElementById('artistList');\n        if (credits.childElementCount > 0 || artists.childElementCount > 0)\n            return;\n        try {\n            const r = yield fetch('https://api.github.com/repos/pseudo-corp/SynergismOfficial/contributors', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const j = yield r.json();\n            for (const contributor of j) {\n                const div = document.createElement('div');\n                div.classList.add('credit');\n                const img = new Image(32, 32);\n                img.src = contributor.avatar_url;\n                img.alt = contributor.login;\n                const a = document.createElement('a');\n                a.href = `https://github.com/Pseudo-Corp/SynergismOfficial/commits/ts?author=${contributor.login}`;\n                a.textContent = contributor.login;\n                div.appendChild(img);\n                div.appendChild(a);\n                credits.appendChild(div);\n            }\n        }\n        catch (e) {\n            credits.appendChild(document.createTextNode(e.toString()));\n        }\n        try {\n            const r = yield fetch('https://api.github.com/gists/01917ff476d25a141c5bad38340cd756', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const j = yield r.json();\n            const f = JSON.parse(j.files['synergism_artists.json'].content);\n            for (const user of f) {\n                const p = document.createElement('p');\n                p.textContent = user;\n                artists.appendChild(p);\n            }\n        }\n        catch (e) {\n            credits.appendChild(document.createTextNode(e.toString()));\n        }\n    }\n});\nexport const toggleShopConfirmation = () => {\n    const el = document.getElementById(\"toggleConfirmShop\");\n    el.textContent = G['shopConfirmation']\n        ? \"Shop Confirmations: OFF\"\n        : \"Shop Confirmations: ON\";\n    G['shopConfirmation'] = !G['shopConfirmation'];\n};\nexport const toggleAntMaxBuy = () => {\n    const el = document.getElementById(\"toggleAntMax\");\n    el.textContent = player.antMax\n        ? \"Buy Max: OFF\"\n        : \"Buy Max: ON\";\n    player.antMax = !player.antMax;\n};\nexport const toggleAntAutoSacrifice = (mode = 0) => {\n    if (mode === 0) {\n        const el = document.getElementById(\"toggleAutoSacrificeAnt\");\n        if (player.autoAntSacrifice) {\n            player.autoAntSacrifice = false;\n            el.textContent = \"Auto Sacrifice: OFF\";\n        }\n        else {\n            player.autoAntSacrifice = true;\n            el.textContent = \"Auto Sacrifice: ON\";\n        }\n    }\n    else if (mode === 1) {\n        const el = document.getElementById(\"autoSacrificeAntMode\");\n        if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\n            player.autoAntSacrificeMode = 2;\n            el.textContent = \"Mode: Real time\";\n        }\n        else {\n            player.autoAntSacrificeMode = 1;\n            el.textContent = \"Mode: In-game time\";\n        }\n    }\n};\nexport const toggleMaxBuyCube = () => {\n    const el = document.getElementById(\"toggleCubeBuy\");\n    if (G['buyMaxCubeUpgrades']) {\n        G['buyMaxCubeUpgrades'] = false;\n        el.textContent = \"Upgrade: 1 Level wow\";\n    }\n    else {\n        G['buyMaxCubeUpgrades'] = true;\n        el.textContent = \"Upgrade: MAX [if possible wow]\";\n    }\n};\nexport const toggleCubeSubTab = (i) => {\n    const numSubTabs = subTabsInMainTab(8).subTabList.length;\n    for (let j = 1; j <= numSubTabs; j++) {\n        const cubeTab = document.getElementById(`cubeTab${j}`);\n        if (cubeTab.style.display === \"block\" && j !== i) {\n            cubeTab.style.display = \"none\";\n        }\n        if (cubeTab.style.display === \"none\" && j === i) {\n            cubeTab.style.display = \"block\";\n            player.subtabNumber = j - 1;\n        }\n        document.getElementById(\"switchCubeSubTab\" + j).style.backgroundColor = i === j ? \"crimson\" : \"#171717\";\n    }\n    visualUpdateCubes();\n};\nexport const updateAutoChallenge = (i) => {\n    switch (i) {\n        case 1: {\n            const t = parseFloat(document.getElementById('startAutoChallengeTimerInput').value) || 0;\n            player.autoChallengeTimer.start = Math.max(t, 0);\n            document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\n            return;\n        }\n        case 2: {\n            const u = parseFloat(document.getElementById('exitAutoChallengeTimerInput').value) || 0;\n            player.autoChallengeTimer.exit = Math.max(u, 0);\n            document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\n            return;\n        }\n        case 3: {\n            const v = parseFloat(document.getElementById('enterAutoChallengeTimerInput').value) || 0;\n            player.autoChallengeTimer.enter = Math.max(v, 0);\n            document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\n            return;\n        }\n    }\n};\nexport const toggleAutoChallengesIgnore = (i) => {\n    const el = document.getElementById(\"toggleAutoChallengeIgnore\");\n    if (player.autoChallengeToggles[i]) {\n        el.style.border = \"2px solid red\";\n        el.textContent = \"Automatically Run Chal.\" + i + \" [OFF]\";\n    }\n    else {\n        el.style.border = \"2px solid green\";\n        el.textContent = \"Automatically Run Chal.\" + i + \" [ON]\";\n    }\n    player.autoChallengeToggles[i] = !player.autoChallengeToggles[i];\n};\nexport const toggleAutoChallengeRun = () => {\n    const el = document.getElementById('toggleAutoChallengeStart');\n    if (player.autoChallengeRunning) {\n        el.style.border = \"2px solid red\";\n        el.textContent = \"Auto Challenge Sweep [OFF]\";\n        player.autoChallengeIndex = 1;\n        G['autoChallengeTimerIncrement'] = 0;\n    }\n    else {\n        el.style.border = \"2px solid gold\";\n        el.textContent = \"Auto Challenge Sweep [ON]\";\n    }\n    player.autoChallengeRunning = !player.autoChallengeRunning;\n};\nexport const toggleAutoChallengeTextColors = (i) => {\n    const a = document.getElementById(\"startAutoChallengeTimer\");\n    const b = document.getElementById(\"exitAutoChallengeTimer\");\n    const c = document.getElementById(\"enterAutoChallengeTimer\");\n    a.style.color = i === 1 ? 'gold' : 'white';\n    b.style.color = i === 2 ? 'gold' : 'white';\n    c.style.color = i === 3 ? 'gold' : 'white';\n};\nexport const toggleAutoAscend = () => {\n    const a = document.getElementById(\"ascensionAutoEnable\");\n    if (player.autoAscend) {\n        a.style.border = \"2px solid red\";\n        a.textContent = \"Auto Ascend [OFF]\";\n    }\n    else {\n        a.style.border = \"2px solid green\";\n        a.textContent = \"Auto Ascend [ON]\";\n    }\n    player.autoAscend = !player.autoAscend;\n};\nexport const updateRuneBlessingBuyAmount = (i) => {\n    switch (i) {\n        case 1: {\n            const t = Math.floor(parseFloat(document.getElementById('buyRuneBlessingInput').value)) || 1;\n            player.runeBlessingBuyAmount = Math.max(t, 1);\n            document.getElementById('buyRuneBlessingToggleValue').textContent = format(player.runeBlessingBuyAmount, 0, true);\n            return;\n        }\n        case 2: {\n            const u = Math.floor(parseFloat(document.getElementById('buyRuneSpiritInput').value)) || 1;\n            player.runeSpiritBuyAmount = Math.max(u, 1);\n            document.getElementById('buyRuneSpiritToggleValue').textContent = format(player.runeSpiritBuyAmount, 0, true);\n            return;\n        }\n    }\n};\nexport const toggleAutoTesseracts = (i) => {\n    const el = document.getElementById('tesseractAutoToggle' + i);\n    if (player.autoTesseracts[i]) {\n        el.textContent = \"Auto [OFF]\";\n        el.style.border = \"2px solid red\";\n    }\n    else {\n        el.textContent = \"Auto [ON]\";\n        el.style.border = \"2px solid green\";\n    }\n    player.autoTesseracts[i] = !player.autoTesseracts[i];\n};\nexport const toggleCorruptionLevel = (index, value) => {\n    const current = player.prototypeCorruptions[index];\n    const maxCorruption = 12;\n    if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value);\n    }\n    if (value < 0 && current > 0 && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] -= Math.min(current, -value);\n    }\n    player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]));\n    if (value === 999 && player.currentChallenge.ascension !== 15) {\n        for (let i = 0; i <= 9; i++) {\n            player.usedCorruptions[i] = 0;\n            player.prototypeCorruptions[i] = 0;\n            if (i > 0)\n                corruptionDisplay(i);\n        }\n        corruptionDisplay(G['corruptionTrigger']);\n        document.getElementById(\"corruptionCleanseConfirm\").style.visibility = \"hidden\";\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n        }\n    }\n    corruptionDisplay(index);\n    corruptionLoadoutTableUpdate();\n};\nexport const toggleCorruptionLoadoutsStats = (stats) => {\n    player.corruptionShowStats = stats;\n    showCorruptionStatsLoadouts();\n};\nexport const toggleAscStatPerSecond = (id) => {\n    const el = document.getElementById(`unit${id}`);\n    if (!el) {\n        console.log(id, 'platonic needs to fix');\n        return;\n    }\n    el.textContent = player.ascStatToggles[id] ? '/s' : '';\n    player.ascStatToggles[id] = !player.ascStatToggles[id];\n};\n","import Decimal from \"break_infinity.js\";\nimport { player, format, resetCheck } from \"./Synergism\";\nimport { toggleAutoChallengeTextColors, toggleChallenges } from \"./Toggles\";\nimport { Globals as G } from './Variables';\nimport { calculateRuneLevels } from \"./Calculate\";\nexport const challengeDisplay = (i, changefocus) => {\n    changefocus = (changefocus === null || changefocus === undefined) ? true : changefocus;\n    let quarksMultiplier = 1;\n    if (changefocus) {\n        G['challengefocus'] = i;\n        document.getElementById(\"oneChallengeDetails\").style.display = \"block\";\n        document.getElementById('startChallenge').style.display = 'block';\n        document.getElementById('retryChallenge').style.display = 'block';\n        G['triggerChallenge'] = i;\n    }\n    let maxChallenges = 0;\n    if (i <= 5 && changefocus) {\n        if (player.challengecompletions[i] >= 100) {\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 100! Effective completion count: \" + CalcECC('transcend', player.challengecompletions[i]);\n        }\n        else {\n            document.getElementById('completionSoftcap').textContent = \"\";\n        }\n    }\n    if (i > 5 && i <= 10) {\n        maxChallenges = 25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15];\n        quarksMultiplier = 10;\n        if (player.challengecompletions[i] >= 25 && changefocus) {\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 25! Effective completion count: \" + format(CalcECC('reincarnation', player.challengecompletions[i]), 2, true);\n        }\n        else {\n            document.getElementById('completionSoftcap').textContent = \"\";\n        }\n    }\n    if (i > 10) {\n        maxChallenges = 30 + 3 * player.platonicUpgrades[5] + 3 * player.platonicUpgrades[10] + 4 * player.platonicUpgrades[15];\n        if (player.challengecompletions[i] >= 10) {\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 10! Effective completion count: \" + format(CalcECC('ascension', player.challengecompletions[i]), 2, true);\n        }\n        else {\n            document.getElementById('completionSoftcap').textContent = \"\";\n        }\n    }\n    let descriptor = \"\";\n    const a = document.getElementById(\"challengeName\");\n    const b = document.getElementById(\"challengeFlavor\");\n    const c = document.getElementById(\"challengeRestrictions\");\n    const d = document.getElementById(\"challengeGoal\");\n    const e = document.getElementById(\"challengePer1\").childNodes[0];\n    const f = document.getElementById(\"challengePer2\").childNodes[0];\n    const g = document.getElementById(\"challengePer3\").childNodes[0];\n    const h = document.getElementById(\"challengeFirst1\");\n    const j = document.getElementById(\"challengeQuarkBonus\");\n    const k = document.getElementById(\"startChallenge\");\n    const l = document.getElementById(\"challengeCurrent1\");\n    const m = document.getElementById(\"challengeCurrent2\");\n    const n = document.getElementById(\"challengeCurrent3\");\n    if (i === 1 && G['challengefocus'] === 1) {\n        maxChallenges = 25 + 5 * player.researches[66] + 925 * player.researches[105];\n        a.textContent = \"No Multipliers Challenge || \" + player.challengecompletions[1] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Multipliers make the game a little too fast. Let's take them out!\";\n        c.textContent = \"Transcend and reach the goal except Multipliers do nothing but act like Accelerators, which are nerfed by 50%!\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+10 base Multiplier Boosts! [+0.05 to power!] Current: \";\n        f.textContent = \"+10% total Multiplier Boosts! Current: \";\n        g.textContent = \"+0.04 base Rune exp per Offering! Current: \";\n        h.textContent = \"+1 free Multiplier! +1 Base EXP per offering used!\";\n        k.textContent = \"Start [No Multipliers]\";\n        l.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \" Boosts\";\n        m.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \"% more Boosts\";\n        n.textContent = \"+\" + format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true) + \" Rune EXP [Highest Completion]\";\n    }\n    if (i === 2 && G['challengefocus'] === 2) {\n        maxChallenges = 25 + 5 * player.researches[67] + 925 * player.researches[105];\n        a.textContent = \"No Accelerators Challenge || \" + player.challengecompletions[2] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Who needs accelerators? They do basically nothing now.\";\n        c.textContent = \"Transcend and reach the goal except Accelerators do nothing! Multipliers are nerfed a bit as well.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+5 Free Accelerators! Current: \";\n        f.textContent = \"+5% Accelerator Boost Power! Current: \";\n        g.textContent = \"+0.25% Accelerator Power! Current: \";\n        h.textContent = \"+1 base offering for Prestige and Transcensions.\";\n        k.textContent = \"Start [No Accelerators]\";\n        l.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \" Accelerators\";\n        m.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \"% A.Boost Power\";\n        n.textContent = \"+\" + format(0.25 * CalcECC('transcend', player.challengecompletions[2]), 2, true) + \"% Accelerator Power\";\n    }\n    if (i === 3 && G['challengefocus'] === 3) {\n        maxChallenges = 25 + 5 * player.researches[68] + 925 * player.researches[105];\n        a.textContent = \"No Shards Challenge || \" + player.challengecompletions[3] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Alright, now you're thinking, how else can I make the game harder?\";\n        c.textContent = \"Transcend and reach the goal except you do not produce Crystals or Mythos Shards.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"Crystal --> Coin conversion exponent +0.04! Current: \";\n        f.textContent = \"+0.5% to Grandmaster production per Mythos producer bought. Current: \";\n        g.textContent = \"When you use a rune, all other runes gain +0.01 EXP. Current: \";\n        h.textContent = \"Gain an offering automatically every 2 seconds!\";\n        k.textContent = \"Start [No Shards]\";\n        l.textContent = \"Exponent +\" + format(0.04 * player.challengecompletions[3], 2, true);\n        m.textContent = \"+\" + format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \"%\";\n        n.textContent = \"+\" + format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \" EXP\";\n    }\n    if (i === 4 && G['challengefocus'] === 4) {\n        maxChallenges = 25 + 5 * player.researches[69] + 925 * player.researches[105];\n        a.textContent = \"Cost+ Challenge || \" + player.challengecompletions[4] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You're getting rich now, but inflation hasn't happened yet? I don't think so!\";\n        c.textContent = \"Transcend and reach the goal except Coin/Crystal producers, Accelerators and Multipliers cost more. [Gets harder each time!]\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"Accelerator Cost scale slows down by +5 purchases. Current: \";\n        f.textContent = \"Multiplier Cost scale slows down by +2 purchases. Current: \";\n        g.textContent = \"Building Cost Delay +0.5%. Current: \";\n        h.textContent = \"None\";\n        k.textContent = \"Start [Cost+]\";\n        l.textContent = \"Accelerator Delay +\" + format(5 * CalcECC('transcend', player.challengecompletions[4]));\n        m.textContent = \"Multiplier Delay +\" + format(2 * CalcECC('transcend', player.challengecompletions[4]));\n        n.textContent = \"Building Cost Delay +\" + format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true) + \"%\";\n    }\n    if (i === 5 && G['challengefocus'] === 5) {\n        maxChallenges = 25 + 5 * player.researches[70] + 925 * player.researches[105];\n        a.textContent = \"Reduced Diamonds Challenge || \" + player.challengecompletions[5] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You ever wonder how you get so many diamonds?\";\n        c.textContent = \"Transcend and reach the goal except you gain far fewer Diamonds from all sources [Gets harder each time!]\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+0.01 Coin --> Diamond conversion exponent on Prestige! Current: \";\n        f.textContent = \"Multiply Crystal production by 10! Current: \";\n        g.textContent = \"\";\n        h.textContent = \"None\";\n        k.textContent = \"Start [Reduced Diamonds]\";\n        l.textContent = \"Exponent = ^\" + format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true);\n        m.textContent = \"Crystal production x\" + format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])));\n        n.textContent = \"\";\n    }\n    if (i === 6 && G['challengefocus'] === 6) {\n        a.textContent = \"Higher Tax Challenge || \" + player.challengecompletions[6] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The tax man caught wind that you reincarnated recently...\";\n        c.textContent = \"Reincarnate and reach the goal except tax has a lower cap, and Coin production is divided by 1e250.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 6)) + \" Mythos Shards in challenge.\";\n        e.textContent = \"-3.5% Taxes [Multiplicative]! Current: \";\n        f.textContent = \"Thrift Rune Exp +10%! Current: \";\n        g.textContent = \"Prestige Offerings +2%! Current: \";\n        h.textContent = \"-7.5% Taxes!\";\n        k.textContent = \"Start <Higher Tax>\";\n        l.textContent = \"Tax multiplier x\" + format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true);\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[6])) + \"%\";\n        n.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[6])) + \"% Prestige-based Offerings\";\n    }\n    if (i === 7 && G['challengefocus'] === 7) {\n        a.textContent = \"No Multipliers/Accelerators Challenge || \" + player.challengecompletions[7] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You're really going to hate this one.\";\n        c.textContent = \"Reincarnate and reach the goal except Accelerators and Multipliers do nothing. Coin Production is divided by 1e1,250.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 7)) + \" Mythos Shards in challenge.\";\n        e.textContent = \"Accelerator/Multiplier boost power exponent +0.04! Current: \";\n        f.textContent = \"Speed Rune Exp +10%! Current: \";\n        g.textContent = \"Duplication Rune Exp +10%! Current: \";\n        h.textContent = \"Multiplier Boost power +25%! The first Discord-Booster Global Diamond Upgrade.\";\n        k.textContent = \"Start <No Multipliers/Accelerators>\";\n        l.textContent = \"Exponent = ^\" + format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true);\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\";\n        n.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\";\n    }\n    if (i === 8 && G['challengefocus'] === 8) {\n        a.textContent = \"Cost++ Challenge || \" + player.challengecompletions[8] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You thought you could outgrow inflation by Reincarnating?\";\n        c.textContent = \"Reincarnate and reach the goal except Cost Scaling for producers and Accelerators/Multipliers scale much, much faster.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 8)) + \" Mythos Shards in challenge.\";\n        e.textContent = \"Base Building Power +0.25! Current: \";\n        f.textContent = \"Prism Rune Exp +20%! Current: \";\n        g.textContent = \"Transcend Offerings +4%! Current: \";\n        h.textContent = \"Unlock the Anthill feature! Includes 20 new Researches. A Global Diamond Upgrade.\";\n        k.textContent = \"Start <Cost++>\";\n        l.textContent = \"+\" + format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true);\n        m.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% EXP\";\n        n.textContent = \"+\" + format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% Transcend-based offerings\";\n    }\n    if (i === 9 && G['challengefocus'] === 9) {\n        a.textContent = \"No Runes Challenge || \" + player.challengecompletions[9] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You'll never complain about Prism being bad again.\";\n        c.textContent = \"Reincarnate and reach the goal except runes always have level 1 effects. All coin production is divided by e2,000,000.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+1 free Ant level! Current: \";\n        f.textContent = \"+10% Ant speed [Multiplicative!] Current: \";\n        g.textContent = \"SI Rune Exp +20%! Current: \";\n        h.textContent = \"Unlock the Talismans feature! [In Runes tab]. A Global Diamond Upgrade.\";\n        k.textContent = \"Start <No Runes>\";\n        l.textContent = \"+\" + format(CalcECC('reincarnation', player.challengecompletions[9])) + \" free levels\";\n        m.textContent = \"x\" + format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true) + \" Ant Speed\";\n        n.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true) + \"% EXP\";\n    }\n    if (i === 10 && G['challengefocus'] === 10) {\n        a.textContent = \"Sadistic Challenge I || \" + player.challengecompletions[10] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"I'm sorry for what I've unleashed onto the world.\";\n        c.textContent = \"Reincarnate and reach the goal except run the first five challenges AT THE SAME TIME! Coin Production /e12,500,000.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+100 base ELO for sacrificing ants! Current: \";\n        f.textContent = \"+2% Ant Sacrifice Reward! Current: \";\n        g.textContent = \"Reincarnation Offerings +10%! Current: \";\n        h.textContent = \"Unlock the Ascension Reset Tier!\";\n        k.textContent = \"Start <Sadistic I>\";\n        l.textContent = \"+\" + format(100 * CalcECC('reincarnation', player.challengecompletions[10])) + \" Ant ELO\";\n        m.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[10])) + \"% Ant Sacrifice reward\";\n        n.textContent = \"+\" + format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true) + \"% Reincarnate-based offerings\";\n    }\n    if (i === 11 && G['challengefocus'] === 11) {\n        a.textContent = \"Reduced Ants Challenge || \" + player.challengecompletions[11] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The great Ant War of '21 wiped off all of the skilled ants.\";\n        c.textContent = \"Ascend and reach the goal but only get free ant upgrades and from Challenge8/9 completions. FOR ASCENSION CHALLENGES YOU MUST CLEAR CHALLENGE 10 TO ATTEMPT THEM.\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"+12 free Ant Levels! Current: \";\n        f.textContent = \"Ant Speed x(1e5)^completions! Current: \";\n        g.textContent = \"+80 to Rune Caps! Current: \";\n        h.textContent = \"Unlock 15 Researches, and unlock the ability to open Tesseracts!\";\n        k.textContent = \"Start <[(Reduced Ants)]>\";\n        l.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[11])) + \" free ant levels\";\n        m.textContent = \"Ant Speed x\" + format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])));\n        n.textContent = \"+\" + format(80 * CalcECC('ascension', player.challengecompletions[11])) + \" to Rune Caps\";\n    }\n    if (i === 12 && G['challengefocus'] === 12) {\n        a.textContent = \"No Reincarnation Challenge || \" + player.challengecompletions[12] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"For some reason, you just can't do it.\";\n        c.textContent = \"Ascend and reach the goal but you do not gain Particles and you cannot Reincarnate at all! Ant production ^0.5.\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"+50% Obtainium! Current: \";\n        f.textContent = \"+12% Offerings! Current: \";\n        g.textContent = \"+1 Cube Tribute per opening! Current: \";\n        h.textContent = \"Unlock 15 Researches, and unlock the mystical Spirit Power! Find these in the Runes tab.\";\n        k.textContent = \"Start <[(No Reincarnation)]>\";\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[12])) + \"% Obtainium\";\n        m.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[12])) + \"% Offerings\";\n        n.textContent = \"+\" + format(CalcECC('ascension', player.challengecompletions[12])) + \" additional Cube Tributes\";\n    }\n    if (i === 13 && G['challengefocus'] === 13) {\n        a.textContent = \"Tax+++ Challenge || \" + player.challengecompletions[13] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Good luck with the IRS, buddy.\";\n        c.textContent = \"Ascend and reach the goal, but taxes are much higher and grow with challenge completions. Ant production ^0.23\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"Taxes -3.33%! Multiplicative! Current: \";\n        f.textContent = \"+6 maximum to Talisman Level Cap! Current: \";\n        g.textContent = \"+3% Spirit Power effectiveness! Current: \";\n        h.textContent = \"Unlock 15 Researches, and unlock the power of the Hypercube!\";\n        k.textContent = \"Start <[(Tax+++)]>\";\n        l.textContent = \"-\" + format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])), 3, true) + \"% Corruption Tax\";\n        m.textContent = \"+\" + format(6 * CalcECC('ascension', player.challengecompletions[13])) + \" Talisman Level Cap\";\n        n.textContent = \"+\" + format(3 * CalcECC('ascension', player.challengecompletions[13])) + \"% Effectiveness\";\n    }\n    if (i === 14 && G['challengefocus'] === 14) {\n        a.textContent = \"No Research Challenge || \" + player.challengecompletions[14] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The dimension that never progressed past the dark ages. Many fear to even step foot.\";\n        c.textContent = \"Ascend and reach the goal but you do not gain Obtainium nor are any researches purchasable. Ant production ^0.2.\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"+50% stronger effect on researches 1x1 through 1x5. Current: \";\n        f.textContent = \"+1 research purchased per roomba tick! Current: \";\n        g.textContent = \"+200 to Rune Caps! Current: \";\n        h.textContent = \"Unlock 15 Researches, and a way to coalesce your power into the Singularity.\";\n        k.textContent = \"Start <[(No Research)]>\";\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[14])) + \"% Power\";\n        m.textContent = \"+\" + format(1 * player.challengecompletions[14]) + \" per Tick\";\n        n.textContent = \"+\" + format(200 * CalcECC('ascension', player.challengecompletions[14])) + \" to Rune Caps\";\n    }\n    if (i === 15 && G['challengefocus'] === 15) {\n        a.textContent = \"SADISTIC CHALLENGE II || \" + player.challengecompletions[15] + \"/9001 Completions\";\n        b.textContent = \"The worst sin a man can do is making others suffer.\";\n        c.textContent = \"Ascend and reach the goal but you're FULLY corrupt and must stay that way.\";\n        d.textContent = \"Goal: 1e4T Coins, but get bonuses based on your best attempt.\";\n        e.textContent = \"You have no idea \";\n        f.textContent = \"what you have just done \";\n        g.textContent = \"the ant god shakes their mighty head \";\n        h.textContent = \"Enter the singularity.\";\n        k.textContent = \"Start <[(Sadistic Challenge II)]>\";\n        l.textContent = \"\";\n        m.textContent = \"\";\n        n.textContent = \"\";\n    }\n    const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\n    const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\n    const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    let scoreDisplay = 0;\n    if (i <= 5) {\n        if (player.highestchallengecompletions[i] >= 750) {\n            scoreDisplay = scoreArray3[i];\n        }\n        else if (player.highestchallengecompletions[i] >= 75) {\n            scoreDisplay = scoreArray2[i];\n        }\n        else {\n            scoreDisplay = scoreArray1[i];\n        }\n    }\n    if (i > 5 && i <= 10) {\n        if (player.highestchallengecompletions[i] >= 60) {\n            scoreDisplay = scoreArray3[i];\n        }\n        else if (player.highestchallengecompletions[i] >= 25) {\n            scoreDisplay = scoreArray2[i];\n        }\n        else {\n            scoreDisplay = scoreArray1[i];\n        }\n    }\n    if (changefocus) {\n        j.textContent = \"\";\n    }\n    if (player.ascensionCount === 0) {\n        descriptor = \"Quarks\";\n        j.style.color = \"cyan\";\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\n        j.textContent = \"Gain \" + Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41]) + \" \" + descriptor + \" for completing this challenge [First Time Bonus]!\";\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1) {\n        j.textContent = \"Completing the challenge adds \" + ((i > 5) ? 2 : 1) + \" to Ascension Bank and increase base Score by \" + scoreDisplay + \".\";\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\n        j.textContent = \"Gain 1 Wow! HYPERCUBE for completing this challenge (First Time Bonus)\";\n    }\n    (i <= 10 && player.researches[150] > 0) ?\n        (document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"block\", document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid green\") :\n        document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"none\";\n    let constructor = \"ON\";\n    if (!player.autoChallengeToggles[i]) {\n        constructor = \"OFF\";\n        document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid red\";\n    }\n    document.getElementById(\"toggleAutoChallengeIgnore\").textContent = \"Automatically Run Chal.\" + i + \" [\" + constructor + \"]\";\n    const ella = document.getElementById(\"toggleAutoChallengeStart\");\n    (player.autoChallengeRunning) ?\n        (ella.textContent = \"Auto Challenge Sweep [ON]\", ella.style.border = \"2px solid gold\") :\n        (ella.textContent = \"Auto Challenge Sweep [OFF]\", ella.style.border = \"2px solid red\");\n};\nexport const getChallengeConditions = (i) => {\n    if (player.currentChallenge.reincarnation === 9) {\n        G['rune1level'] = 1;\n        G['rune2level'] = 1;\n        G['rune3level'] = 1;\n        G['rune4level'] = 1;\n        G['rune5level'] = 1;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    G['prestigePointGain'] = new Decimal('0');\n    if (i >= 6) {\n        G['transcendPointGain'] = new Decimal('0');\n    }\n    if (i >= 11) {\n        G['reincarnationPointGain'] = new Decimal('0');\n    }\n    calculateRuneLevels();\n};\nexport const toggleRetryChallenges = () => {\n    document.getElementById(\"retryChallenge\").textContent = player.retrychallenges\n        ? \"Retry Challenges: OFF\"\n        : \"Retry Challenges: ON\";\n    player.retrychallenges = !player.retrychallenges;\n};\nexport const highestChallengeRewards = (chalNum, highestValue) => {\n    let multiplier = 1 / 10;\n    if (chalNum >= 6) {\n        multiplier = 1;\n    }\n    if (player.ascensionCount === 0) {\n        player.worlds += (1 + Math.floor(highestValue * multiplier) * 100 / 100);\n    }\n};\nconst calculateChallengeRequirementMultiplier = (type, completions, special = 0) => {\n    let requirementMultiplier = Math.max(1, G['hyperchallengedMultiplier'][player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5));\n    switch (type) {\n        case \"transcend\":\n            (completions >= 75) ?\n                requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\n                requirementMultiplier *= Math.pow(1 + completions, 2);\n            requirementMultiplier *= G['challenge15Rewards'].transcendChallengeReduction;\n            return (requirementMultiplier);\n        case \"reincarnation\":\n            if (completions >= 60) {\n                if (special === 8) {\n                    requirementMultiplier *= Math.pow(1 + completions, 1) / 60;\n                }\n                else if (special === 7) {\n                    requirementMultiplier *= Math.pow(1 + completions, 1) / 30;\n                }\n                else if (special === 6) {\n                    requirementMultiplier *= Math.pow(1 + completions, 2) / 360;\n                }\n                else {\n                    requirementMultiplier *= Math.pow(1 + completions, 5) / 7200;\n                }\n            }\n            if (completions >= 25) {\n                requirementMultiplier *= Math.pow(1 + completions, 5) / 625;\n            }\n            if (completions < 25) {\n                requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions));\n            }\n            requirementMultiplier *= G['challenge15Rewards'].reincarnationChallengeReduction;\n            return requirementMultiplier;\n        case \"ascension\":\n            (completions >= 10) ?\n                requirementMultiplier *= (2 * (1 + completions) - 10) :\n                requirementMultiplier *= (1 + completions);\n            return (requirementMultiplier);\n    }\n};\nexport const CalcECC = (type, completions) => {\n    let effective = 0;\n    switch (type) {\n        case \"transcend\":\n            effective += Math.min(100, completions);\n            effective += 1 / 20 * (Math.max(100, completions) - 100);\n            return (effective);\n        case \"reincarnation\":\n            effective += Math.min(25, completions);\n            effective += 1 / 2 * (Math.max(25, completions) - 25);\n            return (effective);\n        case \"ascension\":\n            effective += Math.min(10, completions);\n            effective += 1 / 2 * (Math.max(10, completions) - 10);\n            return (effective);\n    }\n};\nexport const challengeRequirement = (challenge, completion, special = 0) => {\n    const base = G['challengeBaseRequirements'][challenge - 1];\n    if (challenge <= 5) {\n        return Decimal.pow(10, base * calculateChallengeRequirementMultiplier(\"transcend\", completion, special));\n    }\n    else if (challenge <= 10) {\n        let c10Reduction = 0;\n        if (challenge === 10) {\n            c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * player.shopUpgrades.challengeTome);\n        }\n        return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special));\n    }\n    else if (challenge <= 14) {\n        return calculateChallengeRequirementMultiplier(\"ascension\", completion, special);\n    }\n    else if (challenge === 15) {\n        return Decimal.pow(10, 4 * Math.pow(10, 30));\n    }\n};\nexport const runChallengeSweep = (dt) => {\n    if (player.researches[150] > 0 &&\n        player.autoChallengeRunning &&\n        (player.reincarnationPoints.gte('0') || player.currentChallenge.ascension === 12)) {\n        G['autoChallengeTimerIncrement'] += dt;\n        if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.exit) {\n            if (player.currentChallenge.transcension !== 0 && player.autoChallengeIndex <= 5) {\n                resetCheck('challenge', undefined, true);\n                G['autoChallengeTimerIncrement'] = 0;\n                player.autoChallengeIndex += 1;\n                if (player.autoChallengeTimer.enter >= 1) {\n                    toggleAutoChallengeTextColors(3);\n                }\n            }\n            if (player.currentChallenge.reincarnation !== 0 && player.autoChallengeIndex > 5) {\n                resetCheck('reincarnationchallenge', undefined, true);\n                G['autoChallengeTimerIncrement'] = 0;\n                player.autoChallengeIndex += 1;\n                if (player.autoChallengeTimer.enter >= 1) {\n                    toggleAutoChallengeTextColors(3);\n                }\n            }\n            if (player.autoChallengeIndex > 10) {\n                player.autoChallengeIndex = 1;\n                if (player.autoChallengeTimer.start >= 1) {\n                    toggleAutoChallengeTextColors(1);\n                }\n            }\n        }\n        if (player.autoChallengeIndex === 1 && G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.start) {\n            while (!player.autoChallengeToggles[player.autoChallengeIndex]) {\n                player.autoChallengeIndex += (!player.autoChallengeToggles[player.autoChallengeIndex]) ? 1 : 0;\n                if (player.autoChallengeIndex === 10) {\n                    break;\n                }\n            }\n            if (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                G['autoChallengeTimerIncrement'] = 0;\n            }\n            toggleChallenges(player.autoChallengeIndex, true);\n            if (player.autoChallengeTimer.exit >= 1) {\n                toggleAutoChallengeTextColors(2);\n            }\n        }\n        if (player.autoChallengeIndex !== 1 && G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.enter) {\n            if (player.currentChallenge.transcension === 0 && player.autoChallengeIndex <= 5) {\n                while (!player.autoChallengeToggles[player.autoChallengeIndex]) {\n                    player.autoChallengeIndex += 1;\n                    if (player.autoChallengeIndex > 10) {\n                        player.autoChallengeIndex = 1;\n                        if (player.autoChallengeTimer.start >= 1) {\n                            toggleAutoChallengeTextColors(1);\n                        }\n                        break;\n                    }\n                }\n                if (player.autoChallengeIndex !== 1) {\n                    toggleChallenges(player.autoChallengeIndex, true);\n                    if (player.autoChallengeTimer.exit >= 1) {\n                        toggleAutoChallengeTextColors(2);\n                    }\n                }\n                G['autoChallengeTimerIncrement'] = 0;\n            }\n            if (player.currentChallenge.reincarnation === 0 && player.autoChallengeIndex > 5) {\n                while (player.challengecompletions[player.autoChallengeIndex] >= (25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5]) || !player.autoChallengeToggles[player.autoChallengeIndex]) {\n                    player.autoChallengeIndex += 1;\n                    if (player.autoChallengeIndex > 10) {\n                        player.autoChallengeIndex = 1;\n                        if (player.autoChallengeTimer.start >= 1) {\n                            toggleAutoChallengeTextColors(1);\n                        }\n                        break;\n                    }\n                }\n                if (player.autoChallengeIndex !== 1) {\n                    toggleChallenges(player.autoChallengeIndex, true);\n                    if (player.autoChallengeTimer.exit >= 1) {\n                        toggleAutoChallengeTextColors(2);\n                    }\n                }\n                G['autoChallengeTimerIncrement'] = 0;\n            }\n        }\n    }\n};\n","import { player, format, formatTimeShort } from './Synergism';\nimport Decimal from 'break_infinity.js';\nimport { antSacrificePointsToMultiplier } from './Ants';\nimport { Synergism } from './Events';\nconst formatDecimalSource = (numOrStr) => {\n    return format(typeof numOrStr === \"string\" ? new Decimal(numOrStr) : numOrStr);\n};\nconst conditionalFormatPerSecond = (numOrStr, data) => {\n    if (typeof numOrStr === \"string\") {\n        return formatDecimalSource(numOrStr);\n    }\n    if (typeof (numOrStr) === \"number\" && player.historyShowPerSecond && data.seconds !== 0) {\n        if (numOrStr === 0) {\n            return \"0.000/s\";\n        }\n        return format(numOrStr / data.seconds, 3, numOrStr < 1000) + \"/s\";\n    }\n    return format(numOrStr);\n};\nconst historyGains = {\n    offerings: {\n        img: \"Pictures/Offering.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Offerings\"\n    },\n    obtainium: {\n        img: \"Pictures/Obtainium.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Obtainium\"\n    },\n    particles: {\n        img: \"Pictures/Particle.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Particles\"\n    },\n    diamonds: {\n        img: \"Pictures/Diamond.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Diamonds\"\n    },\n    mythos: {\n        img: \"Pictures/Mythos.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Mythos\"\n    },\n    wowTesseracts: {\n        img: \"Pictures/WowTessaract.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Tesseracts\"\n    },\n    wowHypercubes: {\n        img: \"Pictures/WowHypercube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Hypercubes\",\n        onlyif: () => player.challengecompletions[13] > 0\n    },\n    wowCubes: {\n        img: \"Pictures/WowCube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Cubes\"\n    },\n    wowPlatonicCubes: {\n        img: \"Pictures/Platonic Cube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Platonic Cubes\",\n        onlyif: () => player.challengecompletions[14] > 0,\n    },\n};\nconst historyGainsOrder = [\n    \"offerings\", \"obtainium\",\n    \"particles\", \"diamonds\", \"mythos\",\n    \"wowCubes\", \"wowTesseracts\", \"wowHypercubes\", \"wowPlatonicCubes\",\n];\nconst historyKinds = {\n    \"antsacrifice\": { img: \"Pictures/AntSacrifice.png\" },\n    \"prestige\": { img: \"Pictures/Transparent Pics/Prestige.png\" },\n    \"transcend\": { img: \"Pictures/Transparent Pics/Transcend.png\" },\n    \"reincarnate\": { img: \"Pictures/Transparent Pics/Reincarnate.png\" },\n    \"ascend\": { img: \"Pictures/questionable.png\" },\n};\nconst resetHistoryTableMapping = {\n    \"ants\": \"historyAntsTable\",\n    \"reset\": \"historyResetTable\",\n    \"ascend\": \"historyAscendTable\",\n};\nconst resetHistoryCorruptionImages = [\n    \"Pictures/Divisiveness Level 7.png\",\n    \"Pictures/Maladaption Lvl 7.png\",\n    \"Pictures/Laziness Lvl 7.png\",\n    \"Pictures/Hyperchallenged Lvl 7.png\",\n    \"Pictures/Scientific Illiteracy Lvl 7.png\",\n    \"Pictures/Deflation Lvl 7.png\",\n    \"Pictures/Extinction Lvl 7.png\",\n    \"Pictures/Drought Lvl 7.png\",\n    \"Pictures/Financial Collapse Lvl 7.png\"\n];\nconst resetHistoryCorruptionTitles = [\n    \"Divisiveness [Multipliers]\",\n    \"Maladaption [Accelerators]\",\n    \"Spacial Dilation [Time]\",\n    \"Hyperchallenged [Challenge Requirements]\",\n    \"Scientific Illiteracy [Obtainium]\",\n    \"Market Deflation [Diamonds]\",\n    \"Extinction [Ants]\",\n    \"Drought [Offering EXP]\",\n    \"Financial Recession [Coins]\"\n];\nconst extractStringExponent = (str) => {\n    let m;\n    return (m = str.match(/e\\+?(.+)/)) !== null ? `e${m[1]}` : str;\n};\nconst resetHistoryAdd = (category, data) => {\n    if (player.history[category] === undefined) {\n        player.history[category] = [];\n    }\n    while (player.history[category].length > (player.historyCountMax - 1)) {\n        player.history[category].shift();\n    }\n    player.history[category].push(data);\n    resetHistoryPushNewRow(category, data);\n};\nSynergism.on('historyAdd', resetHistoryAdd);\nconst resetHistoryPushNewRow = (category, data) => {\n    const row = resetHistoryRenderRow(category, data);\n    const table = document.getElementById(resetHistoryTableMapping[category]);\n    const tbody = table.querySelector(\"tbody\");\n    tbody.insertBefore(row, tbody.childNodes[0]);\n    while (tbody.childNodes.length > player.historyCountMax) {\n        tbody.removeChild(tbody.lastChild);\n    }\n};\nconst resetHistoryRenderRow = (_category, data) => {\n    let colsUsed = 1;\n    const row = document.createElement(\"tr\");\n    let rowContentHtml = \"\";\n    const kindMeta = historyKinds[data.kind];\n    const localDate = new Date(data.date).toLocaleString();\n    rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img src=\"${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`;\n    const gains = [];\n    const dataIntersection = data;\n    historyGainsOrder.forEach((listable) => {\n        if (Object.prototype.hasOwnProperty.call(data, listable)) {\n            const gainInfo = historyGains[listable];\n            if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\n                return;\n            }\n            const formatter = gainInfo.formatter || (() => { });\n            const str = `<img alt=\"${gainInfo.imgTitle}\" src=\"${gainInfo.img}\" title=\"${gainInfo.imgTitle}\">${formatter(dataIntersection[listable], data)}`;\n            gains.push(str);\n        }\n    });\n    const extra = [];\n    if (data.kind === \"antsacrifice\") {\n        const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore);\n        const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter);\n        const diff = newMulti - oldMulti;\n        extra.push(`<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`, `<span title=\"+${formatDecimalSource(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/GalacticCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalSource(data.crumbs))}</span>`, `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/Transparent Pics/ELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`);\n    }\n    else if (data.kind === \"ascend\") {\n        extra.push(`<img alt=\"C10\" src=\"Pictures/Transparent Pics/ChallengeTen.png\" title=\"Challenge 10 completions\">${data.c10Completions}`);\n        const corruptions = resetHistoryFormatCorruptions(data);\n        if (corruptions !== null) {\n            extra.push(corruptions[0]);\n            extra.push(corruptions[1]);\n        }\n    }\n    colsUsed += gains.length;\n    rowContentHtml += gains.reduce((acc, value) => {\n        return `${acc}<td class=\"history-gain\">${value}</td>`;\n    }, \"\");\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${6 - colsUsed}\"></td>`;\n    rowContentHtml += extra.reduce((acc, value) => {\n        return `${acc}<td class=\"history-extra\">${value}</td>`;\n    }, \"\");\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`;\n    row.innerHTML = rowContentHtml;\n    return row;\n};\nconst resetHistoryRenderFullTable = (categoryToRender, targetTable) => {\n    const tbody = targetTable.querySelector(\"tbody\");\n    tbody.innerHTML = \"\";\n    if (!player.history[categoryToRender]) {\n        return;\n    }\n    if (player.history[categoryToRender].length > 0) {\n        for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\n            const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i]);\n            tbody.appendChild(row);\n        }\n    }\n};\nexport const resetHistoryRenderAllTables = () => {\n    Object.keys(resetHistoryTableMapping).forEach(key => resetHistoryRenderFullTable(key, document.getElementById(resetHistoryTableMapping[key])));\n};\nexport const resetHistoryTogglePerSecond = () => {\n    player.historyShowPerSecond = !player.historyShowPerSecond;\n    resetHistoryRenderAllTables();\n    const button = document.getElementById(\"historyTogglePerSecondButton\");\n    button.textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\n    button.style.borderColor = player.historyShowPerSecond ? \"green\" : \"red\";\n};\nconst resetHistoryFormatCorruptions = (data) => {\n    let score = \"Score: \" + format(data.corruptionScore, 0, false);\n    let corruptions = \"\";\n    for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\n        const corruptionIdx = i + 1;\n        if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\n            corruptions += ` <img alt=\"${resetHistoryCorruptionTitles[i]}\" src=\"${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`;\n        }\n    }\n    if (data.currentChallenge !== undefined) {\n        score += ` / C${data.currentChallenge}`;\n    }\n    return [score, corruptions];\n};\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { Synergism } from './Events';\nexport const openPlatonic = (value, max = false) => {\n    const toSpend = max\n        ? player.wowPlatonicCubes\n        : Math.min(player.wowPlatonicCubes, value);\n    player.wowPlatonicCubes -= toSpend;\n    let toSpendModulo = toSpend % 40000;\n    const toSpendDiv40000 = Math.floor(toSpend / 40000);\n    const blessings = {\n        cubes: { weight: 13200, pdf: (x) => 0 <= x && x <= 33.000 },\n        tesseracts: { weight: 13200, pdf: (x) => 33.000 < x && x <= 66.000 },\n        hypercubes: { weight: 13200, pdf: (x) => 66.000 < x && x <= 99.000 },\n        platonics: { weight: 396, pdf: (x) => 99.000 < x && x <= 99.990 },\n        hypercubeBonus: { weight: 1, pdf: (x) => 99.990 < x && x <= 99.9925 },\n        taxes: { weight: 1, pdf: (x) => 99.9925 < x && x <= 99.995 },\n        scoreBonus: { weight: 1, pdf: (x) => 99.995 < x && x <= 99.9975 },\n        globalSpeed: { weight: 1, pdf: (x) => 99.9975 < x && x <= 100 },\n    };\n    for (const key in player.platonicBlessings) {\n        player.platonicBlessings[key] += blessings[key].weight * toSpendDiv40000;\n    }\n    const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed'];\n    for (let i = 0; i < RNGesus.length; i++) {\n        const num = Math.random();\n        if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\n            player.platonicBlessings[RNGesus[i]] += 1;\n            toSpendModulo -= 1;\n        }\n    }\n    const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)];\n    const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'];\n    for (let i = 0; i < commonDrops.length; i++) {\n        player.platonicBlessings[commonDrops[i]] += gainValues[i];\n        toSpendModulo -= gainValues[i];\n    }\n    for (let i = 0; i < toSpendModulo; i++) {\n        const num = 100 * Math.random();\n        for (const key in player.platonicBlessings) {\n            if (blessings[key].pdf(num))\n                player.platonicBlessings[key] += 1;\n        }\n    }\n    calculatePlatonicBlessings();\n    Synergism.emit('openPlatonic', toSpend);\n};\nexport const calculatePlatonicBlessings = () => {\n    const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed];\n    const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4];\n    for (let i = 0; i < platonicArray.length; i++) {\n        let power = 1;\n        let mult = 1;\n        if (platonicArray[i] >= DRThreshold[i]) {\n            power = G['platonicDRPower'][i];\n            mult *= Math.pow(DRThreshold[i], (1 - G['platonicDRPower'][i]));\n        }\n        G['platonicBonusMultiplier'][i] = 1 + mult * G['platonicCubeBase'][i] * Math.pow(platonicArray[i], power);\n    }\n};\n","import { player, format } from './Synergism';\nimport { Synergism } from './Events';\nconst platonicUpgradeDesc = {\n    1: '+0.0075% cubes per corruption level per level!',\n    2: '+0.015% tesseracts per corruption level per level!',\n    3: '+0.045% hypercubes per corruption level per level!',\n    4: 'Gain +2% platonic cubes per level if >2.5 Trillion Score!',\n    5: 'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster constant production, +5/+3 Challenge caps, +100% Obtainium/Offerings, ^1.10 coin gain in C15!',\n    6: 'Raises corruption 1 and 2 exponent ^(1 + level/30), capacity of ^1 on Mult/Accel.',\n    7: 'Raises speed below 1x to the power of ^(1 - level/30).',\n    8: 'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x challenge req. multiplier!',\n    9: 'Gain more obtainium with the illiteracy corruption, up until 1e100 obtainium!',\n    10: 'C10 Exponent: 1.0375 --> 1.04, Const. tax exponent +0.20 and 10x faster constant production, +5/+3 Challenge caps, +250% Obtainium and Offerings, +100% Cubes/Tesseracts/Hypercubes/Platonics for 5T/7.5T/10T/20T score. ^1.25 ant exponent in C15!',\n    11: 'With this upgrade, you will gain diamonds equal to particle gain!',\n    12: 'Gain (1 + lvl/100)x ant multiplier per challenge completion, ignoring corruptions to ants.',\n    13: 'Effect of Drought is raised to the power of 0.5.',\n    14: 'Gain a small coin exponent dependent on your coins, up until 1e4T coins.',\n    15: 'I suppose that, after all, we all are Everywhere at the End of Time.'\n};\nexport const platUpgradeBaseCosts = {\n    1: {\n        obtainium: 1e70,\n        offerings: 1e45,\n        cubes: 1e13,\n        tesseracts: 1e6,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    2: {\n        obtainium: 3e70,\n        offerings: 2e45,\n        cubes: 1e11,\n        tesseracts: 1e8,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    3: {\n        obtainium: 1e71,\n        offerings: 4e45,\n        cubes: 1e11,\n        tesseracts: 1e6,\n        hypercubes: 1e7,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    4: {\n        obtainium: 4e71,\n        offerings: 1e46,\n        cubes: 1e12,\n        tesseracts: 1e7,\n        hypercubes: 1e6,\n        platonics: 1e6,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    5: {\n        obtainium: 1e80,\n        offerings: 1e60,\n        cubes: 1e14,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    6: {\n        obtainium: 1e82,\n        offerings: 1e61,\n        cubes: 1e15,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    7: {\n        obtainium: 1e84,\n        offerings: 3e62,\n        cubes: 2e15,\n        tesseracts: 2e9,\n        hypercubes: 2e8,\n        platonics: 1.5e7,\n        abyssals: 0,\n        maxLevel: 15\n    },\n    8: {\n        obtainium: 1e87,\n        offerings: 1e64,\n        cubes: 4e15,\n        tesseracts: 4e9,\n        hypercubes: 4e8,\n        platonics: 3e7,\n        abyssals: 0,\n        maxLevel: 5\n    },\n    9: {\n        obtainium: 1e90,\n        offerings: 1e66,\n        cubes: 1e16,\n        tesseracts: 1e10,\n        hypercubes: 1e9,\n        platonics: 5e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    10: {\n        obtainium: 1e93,\n        offerings: 1e68,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    11: {\n        obtainium: 2e96,\n        offerings: 1e70,\n        cubes: 2e17,\n        tesseracts: 2e11,\n        hypercubes: 2e10,\n        platonics: 2e8,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    12: {\n        obtainium: 1e100,\n        offerings: 1e72,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    13: {\n        obtainium: 2e104,\n        offerings: 1e74,\n        cubes: 2e19,\n        tesseracts: 4e12,\n        hypercubes: 4e11,\n        platonics: 4e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    14: {\n        obtainium: 1e108,\n        offerings: 1e77,\n        cubes: 4e20,\n        tesseracts: 1e13,\n        hypercubes: 1e12,\n        platonics: 1e10,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    15: {\n        obtainium: 1e115,\n        offerings: 1e80,\n        cubes: 1e23,\n        tesseracts: 1e15,\n        hypercubes: 1e14,\n        platonics: 1e12,\n        abyssals: 1,\n        maxLevel: 1\n    }\n};\nconst checkPlatonicUpgrade = (index) => {\n    let checksum = 0;\n    const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'];\n    const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'];\n    const checks = {\n        obtainium: false,\n        offerings: false,\n        cubes: false,\n        tesseracts: false,\n        hypercubes: false,\n        platonics: false,\n        abyssals: false,\n        canBuy: false,\n    };\n    for (let i = 0; i < resources.length; i++) {\n        if (platUpgradeBaseCosts[index][resources[i]] <= player[resourceNames[i]]) {\n            checksum++;\n            checks[resources[i]] = true;\n        }\n    }\n    if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        checks.canBuy = true;\n    }\n    return checks;\n};\nexport const createPlatonicDescription = (index) => {\n    let maxLevelAppend = \"\";\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        maxLevelAppend = \" [MAX]\";\n    }\n    const resourceCheck = checkPlatonicUpgrade(index);\n    document.getElementById('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index];\n    document.getElementById('platonicUpgradeLevel').textContent = \"Level: \" + format(player.platonicUpgrades[index]) + \"/\" + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend;\n    document.getElementById('platonicOfferingCost').textContent = format(player.runeshards) + \"/\" + format(platUpgradeBaseCosts[index].offerings) + \" Offerings\";\n    document.getElementById('platonicObtainiumCost').textContent = format(player.researchPoints) + \"/\" + format(platUpgradeBaseCosts[index].obtainium) + \" Obtainium\";\n    document.getElementById('platonicCubeCost').textContent = format(player.wowCubes) + \"/\" + format(platUpgradeBaseCosts[index].cubes) + \" Wow! Cubes\";\n    document.getElementById('platonicTesseractCost').textContent = format(player.wowTesseracts) + \"/\" + format(platUpgradeBaseCosts[index].tesseracts) + \" Wow! Tesseracts\";\n    document.getElementById('platonicHypercubeCost').textContent = format(player.wowHypercubes) + \"/\" + format(platUpgradeBaseCosts[index].hypercubes) + \" Wow! Hypercubes\";\n    document.getElementById('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + \"/\" + format(platUpgradeBaseCosts[index].platonics) + \" Platonic! Cubes\";\n    document.getElementById('platonicHepteractCost').textContent = format(player.wowAbyssals) + \"/\" + format(platUpgradeBaseCosts[index].abyssals) + \" Hepteracts of the Abyss\";\n    resourceCheck.offerings ?\n        document.getElementById('platonicOfferingCost').style.color = \"lime\" :\n        document.getElementById('platonicOfferingCost').style.color = \"crimson\";\n    resourceCheck.obtainium ?\n        document.getElementById('platonicObtainiumCost').style.color = \"lime\" :\n        document.getElementById('platonicObtainiumCost').style.color = \"crimson\";\n    resourceCheck.cubes ?\n        document.getElementById('platonicCubeCost').style.color = \"lime\" :\n        document.getElementById('platonicCubeCost').style.color = \"crimson\";\n    resourceCheck.tesseracts ?\n        document.getElementById('platonicTesseractCost').style.color = \"lime\" :\n        document.getElementById('platonicTesseractCost').style.color = \"crimson\";\n    resourceCheck.hypercubes ?\n        document.getElementById('platonicHypercubeCost').style.color = \"lime\" :\n        document.getElementById('platonicHypercubeCost').style.color = \"crimson\";\n    resourceCheck.platonics ?\n        document.getElementById('platonicPlatonicCost').style.color = \"lime\" :\n        document.getElementById('platonicPlatonicCost').style.color = \"crimson\";\n    resourceCheck.abyssals ?\n        document.getElementById('platonicHepteractCost').style.color = \"lime\" :\n        document.getElementById('platonicHepteractCost').style.color = \"crimson\";\n    if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        document.getElementById('platonicUpgradeLevel').style.color = 'cyan';\n        resourceCheck.canBuy ?\n            (document.getElementById('platonicCanBuy').style.color = \"gold\", document.getElementById('platonicCanBuy').textContent = \"===Affordable! Click to buy!===\") :\n            (document.getElementById('platonicCanBuy').style.color = \"crimson\", document.getElementById('platonicCanBuy').textContent = \"===You cannot afford this!===\");\n    }\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        document.getElementById('platonicUpgradeLevel').style.color = 'gold';\n        document.getElementById('platonicCanBuy').style.color = \"orchid\";\n        document.getElementById('platonicCanBuy').textContent = \"===Maxed===\";\n    }\n};\nexport const buyPlatonicUpgrades = (index) => {\n    const resourceCheck = checkPlatonicUpgrade(index);\n    if (resourceCheck.canBuy) {\n        player.platonicUpgrades[index] += 1;\n        player.researchPoints -= platUpgradeBaseCosts[index].obtainium;\n        player.runeshards -= platUpgradeBaseCosts[index].offerings;\n        player.wowCubes -= platUpgradeBaseCosts[index].cubes;\n        player.wowTesseracts -= platUpgradeBaseCosts[index].tesseracts;\n        player.wowHypercubes -= platUpgradeBaseCosts[index].hypercubes;\n        player.wowPlatonicCubes -= platUpgradeBaseCosts[index].platonics;\n        player.wowAbyssals -= platUpgradeBaseCosts[index].abyssals;\n        Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index]);\n    }\n    createPlatonicDescription(index);\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { player, saveSynergy, blankSave, clearInt, format, intervalHold, constantIntervals, createTimer, loadSynergy, isTesting } from './Synergism';\nimport { getElementById } from './Utility';\nimport LZString from 'lz-string';\nimport { achievementaward } from './Achievements';\nimport { Globals as G } from './Variables';\nimport { Synergism } from './Events';\nconst format24 = new Intl.DateTimeFormat(\"EN-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    hour12: false,\n    minute: \"2-digit\",\n    second: \"2-digit\"\n});\nconst format12 = new Intl.DateTimeFormat(\"EN-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    hour12: true,\n    minute: \"2-digit\",\n    second: \"2-digit\"\n});\nconst getRealTime = (use12 = false) => {\n    const format = use12 ? format12 : format24;\n    const dateParts = Object.assign({}, ...format\n        .formatToParts(new Date())\n        .filter((x) => x.type !== \"literal\")\n        .map(p => ({ [p.type]: p.value })));\n    const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : '';\n    return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`;\n};\nexport const updateSaveString = () => {\n    player.saveString = getElementById(\"saveStringInput\").value;\n};\nconst saveFilename = () => {\n    const s = player.saveString;\n    const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\n        switch (b) {\n            case 'VERSION': return `v${player.version}`;\n            case 'TIME': return getRealTime();\n            case 'TIME12': return getRealTime(true);\n        }\n    });\n    return t;\n};\nexport const exportSynergism = () => __awaiter(void 0, void 0, void 0, function* () {\n    player.offlinetick = Date.now();\n    if (player.quarkstimer >= 3600) {\n        player.worlds += (Math.floor(player.quarkstimer / 3600) * (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]));\n        player.quarkstimer = (player.quarkstimer % 3600);\n    }\n    document.getElementById('settingstab').setAttribute('full', '0');\n    saveSynergy();\n    const toClipboard = getElementById('saveType').checked;\n    const save = localStorage.getItem('Synergysave2');\n    if ('clipboard' in navigator && toClipboard) {\n        yield navigator.clipboard.writeText(save)\n            .catch(e => console.error(e));\n    }\n    else if (toClipboard) {\n        const textArea = document.createElement('textarea');\n        textArea.value = save;\n        textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;');\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        try {\n            document.execCommand('copy');\n        }\n        catch (_) {\n            console.error(\"Failed to copy savegame to clipboard.\");\n        }\n        document.body.removeChild(textArea);\n    }\n    else {\n        const a = document.createElement('a');\n        a.setAttribute('href', 'data:text/plain;charset=utf-8,' + save);\n        a.setAttribute('download', saveFilename());\n        a.setAttribute('id', 'downloadSave');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n    document.getElementById(\"exportinfo\").textContent = toClipboard\n        ? 'Copied save to your clipboard!'\n        : 'Savefile copied to file!';\n});\nexport const resetGame = () => {\n    const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n    const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n    if (+prompt(`Answer the question to confirm you'd like to reset: what is ${a}+${b}? (Hint: ${a + b})`) !== a + b) {\n        return;\n    }\n    const hold = Object.assign({}, blankSave, {\n        codes: Array.from(blankSave.codes)\n    });\n    importSynergism(btoa(JSON.stringify(hold)));\n};\nexport const importSynergism = (input) => {\n    const d = LZString.decompressFromBase64(input);\n    const f = d ? JSON.parse(d) : JSON.parse(atob(input));\n    if ((f.exporttest === \"YES!\" || f.exporttest === true) ||\n        (f.exporttest === false && isTesting)) {\n        intervalHold.forEach(clearInt);\n        intervalHold.length = 0;\n        localStorage.setItem('Synergysave2', btoa(JSON.stringify(f)));\n        constantIntervals();\n        createTimer();\n        loadSynergy();\n    }\n};\nexport const promocodes = () => {\n    const input = prompt(\"Got a code? Great! Enter it in (CaSe SeNsItIvE).\");\n    const el = document.getElementById(\"promocodeinfo\");\n    if (input === \"synergism2020\" && !player.codes.get(1)) {\n        player.codes.set(1, true);\n        player.runeshards += 25;\n        player.worlds += 50;\n        el.textContent = \"Promo Code 'synergism2020' Applied! +25 Offerings, +50 Quarks\";\n    }\n    else if (input === \":unsmith:\" && player.achievements[243] < 1) {\n        achievementaward(243);\n        el.textContent = \"It's Spaghetti Time! [Awarded an achievement!!!]\";\n    }\n    else if (input === \":antismith:\" && player.achievements[244] < 1) {\n        achievementaward(244);\n        el.textContent = \"Hey, isn't this just a reference to Antimatter Dimensions? Shh. [Awarded an achievement!!!]\";\n    }\n    else if (input === 'Khafra' && !player.codes.get(26)) {\n        player.codes.set(26, true);\n        const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100);\n        player.worlds += quarks;\n        el.textContent = 'Khafra has blessed you with ' + quarks + ' quarks!';\n    }\n    else if (input === 'november13' && !player.codes.get(27)) {\n        player.codes.set(27, true);\n        player.worlds += 300;\n        el.textContent = 'Be careful, on friday the thirteenth! [+300 Quarks]';\n    }\n    else if (input === '2million' && !player.codes.get(28)) {\n        player.codes.set(28, true);\n        player.worlds += 700;\n        el.textContent = 'Thank you for 2 million plays on kongregate!';\n    }\n    else if (input === 'version2.1.0' && !player.codes.get(29)) {\n        player.codes.set(29, true);\n        let quarkCounter = 250;\n        if (player.challengecompletions[11] > 0 || player.highestchallengecompletions[11] > 0) {\n            quarkCounter += 250;\n        }\n        if (player.challengecompletions[12] > 0 || player.highestchallengecompletions[12] > 0) {\n            quarkCounter += 250;\n        }\n        if (player.challengecompletions[13] > 0 || player.highestchallengecompletions[13] > 0) {\n            quarkCounter += 500;\n        }\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\n            quarkCounter += 500;\n        }\n        if (player.challengecompletions[13] >= 18 || player.highestchallengecompletions[13] >= 18) {\n            quarkCounter += 750;\n        }\n        if (player.challengecompletions[13] >= 22 || player.highestchallengecompletions[13] >= 22) {\n            quarkCounter += 1;\n        }\n        player.worlds += quarkCounter;\n        el.textContent = 'Welcome to the Abyss! Based on your progress, you gained ' + format(quarkCounter) + \" Quarks.\";\n    }\n    else if (input === 'add') {\n        if (player.rngCode >= (Date.now() - 3600000)) {\n            el.textContent = `You already used this promocode in the last hour!`;\n            return;\n        }\n        const amount = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n        const first = window.crypto.getRandomValues(new Uint8Array(1))[0];\n        const second = window.crypto.getRandomValues(new Uint8Array(1))[0];\n        const addPrompt = prompt(`What is ${first} + ${second}?`);\n        if (first + second === +addPrompt) {\n            player.worlds += amount;\n            el.textContent = `You were awarded ${amount} quarks! Wait an hour to use this code again!`;\n        }\n        else {\n            el.textContent = `You guessed ${addPrompt}, but the answer was ${first + second}. Try again in an hour!`;\n        }\n        player.rngCode = Date.now();\n    }\n    else if (input === 'holiday' && !player.codes.get(31)) {\n        player.codes.set(31, true);\n        let quarkCounter = 2500;\n        if (player.platonicUpgrades[5] > 0) {\n            quarkCounter += 1;\n        }\n        player.worlds += quarkCounter;\n        el.textContent = 'Happy holidays from Platonic, to you and yours! A gift of ' + format(quarkCounter) + \" Quarks, just for you.\";\n    }\n    else {\n        el.textContent = \"Your code is either invalid or already used. Try again!\";\n    }\n    saveSynergy();\n    Synergism.emit('promocode', input);\n    setTimeout(function () {\n        el.textContent = '';\n    }, 15000);\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toggleAscStatPerSecond, toggleTabs, toggleSubTab, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation } from \"./Toggles\";\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount } from \"./Reset\";\nimport { resetCheck, saveSynergy } from \"./Synergism\";\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyUpgrades, buyRuneBonusLevels } from \"./Buy\";\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions } from \"./Upgrades\";\nimport { buyAutobuyers } from \"./Automation\";\nimport { buyGenerator } from \"./Generators\";\nimport { achievementdescriptions } from \"./Achievements\";\nimport { displayRuneInformation, redeemShards } from \"./Runes\";\nimport { toggleTalismanBuy, buyTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from \"./Talismans\";\nimport { challengeDisplay, toggleRetryChallenges } from \"./Challenges\";\nimport { buyResearch, researchDescriptions } from \"./Research\";\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from \"./Ants\";\nimport { buyCubeUpgrades, openCube, cubeUpgradeDesc } from \"./Cubes\";\nimport { openTesseract } from \"./Tesseracts\";\nimport { openHypercube } from \"./Hypercubes\";\nimport { openPlatonic } from \"./PlatonicCubes\";\nimport { buyPlatonicUpgrades, createPlatonicDescription } from \"./Platonic\";\nimport { corruptionCleanseConfirm, corruptionDisplay } from \"./Corruptions\";\nimport { exportSynergism, updateSaveString, promocodes, importSynergism, resetGame } from \"./ImportExport\";\nimport { resetHistoryTogglePerSecond } from \"./History\";\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable } from \"./Shop\";\nimport { Globals as G } from './Variables';\nimport { changeTabColor } from \"./UpdateHTML\";\nexport const generateEventHandlers = () => {\n    const ordinals = ['null', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth'];\n    document.getElementById('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1));\n    document.getElementById('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2));\n    document.getElementById('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3));\n    document.getElementById('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4));\n    document.getElementById('prestigebtn').addEventListener('mouseover', () => resetrepeat(\"prestige\"));\n    document.getElementById('transcendbtn').addEventListener('mouseover', () => resetrepeat(\"transcension\"));\n    document.getElementById('reincarnatebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnation\"));\n    document.getElementById('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat(\"acceleratorBoost\"));\n    document.getElementById('challengebtn').addEventListener('mouseover', () => resetrepeat(\"transcensionChallenge\"));\n    document.getElementById('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnationChallenge\"));\n    document.getElementById('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat(\"ascensionChallenge\"));\n    document.getElementById('ascendbtn').addEventListener('mouseover', () => resetrepeat(\"ascension\"));\n    document.getElementById('prestigebtn').addEventListener('click', () => resetCheck('prestige'));\n    document.getElementById('transcendbtn').addEventListener('click', () => resetCheck('transcend'));\n    document.getElementById('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnate'));\n    document.getElementById('acceleratorboostbtn').addEventListener('click', () => boostAccelerator());\n    document.getElementById('challengebtn').addEventListener('click', () => resetCheck('challenge', undefined, true));\n    document.getElementById('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationchallenge', undefined, true));\n    document.getElementById('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge'));\n    document.getElementById('ascendbtn').addEventListener('click', () => resetCheck('ascend'));\n    document.getElementById('buildingstab').addEventListener('click', () => toggleTabs('buildings'));\n    document.getElementById('upgradestab').addEventListener('click', () => toggleTabs('upgrades'));\n    document.getElementById('settingstab').addEventListener('click', () => toggleTabs('settings'));\n    document.getElementById('achievementstab').addEventListener('click', () => toggleTabs('achievements'));\n    document.getElementById('runestab').addEventListener('click', () => toggleTabs('runes'));\n    document.getElementById('challengetab').addEventListener('click', () => toggleTabs('challenges'));\n    document.getElementById('researchtab').addEventListener('click', () => toggleTabs('researches'));\n    document.getElementById('shoptab').addEventListener('click', () => toggleTabs('shop'));\n    document.getElementById('anttab').addEventListener('click', () => toggleTabs('ants'));\n    document.getElementById('cubetab').addEventListener('click', () => toggleTabs('cubes'));\n    document.getElementById('traitstab').addEventListener('click', () => toggleTabs('traits'));\n    const buildingTypes = ['Coin', 'Diamond', 'Mythos', 'Particle', 'Tesseract'];\n    for (let index = 0; index < buildingTypes.length; index++) {\n        document.getElementById(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => toggleSubTab(1, index));\n    }\n    const buildingTypesAlternate = ['coin', 'crystal', 'mythos', 'particle', 'tesseract', 'offering'];\n    const buildingOrds = ['one', 'ten', 'hundred', 'thousand'];\n    const buildingOrdsToNum = [1, 10, 100, 1000];\n    for (let index = 0; index < buildingOrds.length; index++) {\n        for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\n            document.getElementById(buildingTypesAlternate[index2] + buildingOrds[index]).addEventListener('click', () => toggleBuyAmount(buildingOrdsToNum[index], buildingTypesAlternate[index2]));\n        }\n    }\n    document.getElementById('buyaccelerator').addEventListener('click', () => buyAccelerator());\n    document.getElementById('buymultiplier').addEventListener('click', () => buyMultiplier());\n    document.getElementById('buyacceleratorboost').addEventListener('click', () => boostAccelerator());\n    const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos'];\n    const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'];\n    for (let index = 0; index < 3; index++) {\n        for (let index2 = 1; index2 <= 5; index2++) {\n            document.getElementById(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () => buyProducer(ordinals[index2], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2 + 1) / 2));\n        }\n    }\n    for (let index = 1; index <= 5; index++) {\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index));\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index));\n    }\n    const particleBuildingCosts = [1, 100, 1e4, 1e8, 1e16];\n    const targets = ['first', 'second', 'third', 'fourth', 'fifth'];\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`buyparticles${index + 1}`).addEventListener('click', () => buyParticleBuilding(targets[index], particleBuildingCosts[index]));\n    }\n    const tesseractBuildingCosts = [1, 10, 100, 1000, 10000];\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`buyTesseracts${index + 1}`).addEventListener('click', () => buyTesseractBuilding(tesseractBuildingCosts[index], index + 1));\n        document.getElementById(`tesseractAutoToggle${index + 1}`).addEventListener('click', () => toggleAutoTesseracts(index + 1));\n    }\n    for (let index = 0; index < 10; index++) {\n        document.getElementById(`buyConstantUpgrade${index + 1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index + 1));\n        document.getElementById(`buyConstantUpgrade${index + 1}`).addEventListener('click', () => buyConstantUpgrades(index + 1));\n    }\n    for (let index = 0; index < 32; index++) {\n        document.getElementById(`toggle${index + 1}`).addEventListener('click', () => toggleSettings(index));\n    }\n    document.getElementById(\"prestigeautotoggle\").addEventListener('click', () => toggleautoreset(1));\n    document.getElementById(\"transcendautotoggle\").addEventListener('click', () => toggleautoreset(2));\n    document.getElementById(\"reincarnateautotoggle\").addEventListener('click', () => toggleautoreset(3));\n    document.getElementById(\"ascensionAutoToggle\").addEventListener('click', () => toggleautoreset(4));\n    document.getElementById(\"prestigeamount\").addEventListener('blur', () => updateAutoReset(1));\n    document.getElementById(\"transcendamount\").addEventListener('blur', () => updateAutoReset(2));\n    document.getElementById(\"reincarnationamount\").addEventListener('blur', () => updateAutoReset(3));\n    document.getElementById(\"ascensionAmount\").addEventListener('blur', () => updateAutoReset(4));\n    document.getElementById(\"autoAntSacrificeAmount\").addEventListener('blur', () => updateAutoReset(5));\n    document.getElementById(\"tesseractautobuytoggle\").addEventListener('click', () => toggleautobuytesseract());\n    document.getElementById(\"tesseractAmount\").addEventListener('blur', () => updateTesseractAutoBuyAmount());\n    for (let index = 1; index <= 125; index++) {\n        document.getElementById(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index));\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!');\n    }\n    const resourceTypes = ['coin', 'prestige', 'transcend', 'reincarnation'];\n    for (let index = 1; index <= 80; index++) {\n        const resourceType = resourceTypes[Math.floor((index - 1) / 20)];\n        document.getElementById(`upg${index}`).addEventListener('click', () => buyUpgrades(resourceType, index));\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!');\n    }\n    for (let index = 1; index <= 20; index++) {\n        document.getElementById(`upg${index + 80}`).addEventListener('click', () => buyAutobuyers(index));\n        console.log('Successfully added \"Onclick\" event to Autobuyer upgrade!');\n    }\n    for (let index = 1; index <= 20; index++) {\n        document.getElementById(`upg${index + 100}`).addEventListener('click', () => buyGenerator(index));\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!');\n    }\n    for (let index = 1; index <= 5; index++) {\n        document.getElementById(`upg${index + 120}`).addEventListener('click', () => buyUpgrades('coin', index));\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!');\n    }\n    document.getElementById('shoptogglecoin').addEventListener('click', () => toggleShops(1));\n    document.getElementById('shoptoggleprestige').addEventListener('click', () => toggleShops(2));\n    document.getElementById('shoptoggletranscend').addEventListener('click', () => toggleShops(3));\n    document.getElementById('shoptogglegenerator').addEventListener('click', () => toggleShops(4));\n    document.getElementById('particleAutoUpgrade').addEventListener('click', () => toggleShops(5));\n    for (let index = 1; index <= 252; index++) {\n        document.getElementById(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index));\n    }\n    document.getElementById('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0));\n    for (let index = 0; index < 4; index++) {\n        document.getElementById(`toggleRuneSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(4, index));\n    }\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`rune${index + 1}`).addEventListener('mouseover', () => displayRuneInformation(index + 1));\n        document.getElementById(`rune${index + 1}`).addEventListener('click', () => toggleAutoSacrifice(index + 1));\n        document.getElementById(`activaterune${index + 1}`).addEventListener('mouseover', () => displayRuneInformation(index + 1));\n        document.getElementById(`activaterune${index + 1}`).addEventListener('click', () => redeemShards(index + 1));\n    }\n    const talismanBuyPercents = [10, 25, 50, 100];\n    const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred'];\n    for (let index = 0; index < talismanBuyPercents.length; index++) {\n        document.getElementById(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(index));\n    }\n    document.getElementById('toggleautoenhance').addEventListener('click', () => toggleautoenhance());\n    document.getElementById('toggleautofortify').addEventListener('click', () => toggleautofortify());\n    const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'];\n    for (let index = 0; index < talismanItemNames.length; index++) {\n        document.getElementById(`buyTalismanItem${index + 1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]));\n        document.getElementById(`buyTalismanItem${index + 1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]));\n    }\n    for (let index = 0; index < 7; index++) {\n        document.getElementById(`talisman${index + 1}`).addEventListener('click', () => showTalismanEffect(index + 1));\n        document.getElementById(`leveluptalisman${index + 1}`).addEventListener('mouseover', () => showTalismanPrices(index + 1));\n        document.getElementById(`leveluptalisman${index + 1}`).addEventListener('click', () => buyTalismanLevels(index + 1));\n        document.getElementById(`enhancetalisman${index + 1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index + 1));\n        document.getElementById(`enhancetalisman${index + 1}`).addEventListener('click', () => buyTalismanEnhance(index + 1));\n        document.getElementById(`respectalisman${index + 1}`).addEventListener('click', () => showRespecInformation(index + 1));\n    }\n    document.getElementById('respecAllTalismans').addEventListener('click', () => showRespecInformation(8));\n    document.getElementById('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G['talismanRespec']));\n    document.getElementById('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G['talismanRespec']));\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`talismanRespecButton${index + 1}`).addEventListener('click', () => changeTalismanModifier(index + 1));\n    }\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`runeBlessingPurchase${index + 1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index + 1));\n        document.getElementById(`runeSpiritPurchase${index + 1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index + 1));\n    }\n    document.getElementById('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1));\n    document.getElementById('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2));\n    for (let index = 0; index < 15; index++) {\n        document.getElementById(`challenge${index + 1}`).addEventListener('click', () => challengeDisplay(index + 1));\n    }\n    document.getElementById('startChallenge').addEventListener('click', () => toggleChallenges(G['triggerChallenge'], false));\n    document.getElementById('retryChallenge').addEventListener('click', () => toggleRetryChallenges());\n    document.getElementById('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G['triggerChallenge']));\n    document.getElementById('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun());\n    document.getElementById('startAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(1));\n    document.getElementById('exitAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(2));\n    document.getElementById('enterAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(3));\n    for (let index = 1; index < 200; index++) {\n        document.getElementById(`res${index}`).addEventListener('click', () => buyResearch(index));\n        document.getElementById(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index));\n        console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to researches 1-199!');\n    }\n    document.getElementById(`res200`).addEventListener('click', () => buyResearch(200, false, 0.01));\n    document.getElementById(`res200`).addEventListener('mouseover', () => researchDescriptions(200, false, 0.01));\n    console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to research 200!');\n    document.getElementById('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy());\n    document.getElementById('toggleautoresearch').addEventListener('click', () => toggleAutoResearch());\n    const antProducerCostVals = ['null', '1e800', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300'];\n    for (let index = 1; index <= 8; index++) {\n        document.getElementById(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index));\n        document.getElementById(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index));\n        document.getElementById(`anttier${index}`).addEventListener('click', () => buyAntProducers(ordinals[index], 'Ants', antProducerCostVals[index], index));\n    }\n    const antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100'];\n    for (let index = 1; index <= 12; index++) {\n        document.getElementById(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index));\n        document.getElementById(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index));\n    }\n    document.getElementById('antSacrifice').addEventListener('click', () => sacrificeAnts());\n    document.getElementById('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy());\n    document.getElementById('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0));\n    document.getElementById('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1));\n    for (let index = 0; index < 6; index++) {\n        document.getElementById(`switchCubeSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(8, index));\n    }\n    for (let index = 0; index < 49; index++) {\n        document.getElementById(`cubeUpg${index + 1}`).addEventListener('mouseover', () => cubeUpgradeDesc(index + 1));\n        document.getElementById(`cubeUpg${index + 1}`).addEventListener('click', () => buyCubeUpgrades(index + 1));\n    }\n    document.getElementById('cubeUpg50').addEventListener('mouseover', () => cubeUpgradeDesc(50, 0.01));\n    document.getElementById('cubeUpg50').addEventListener('click', () => buyCubeUpgrades(50, 0.01));\n    document.getElementById('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube());\n    document.getElementById('open1Cube').addEventListener('click', () => openCube(1, false));\n    document.getElementById('open20Cube').addEventListener('click', () => openCube(20, false));\n    document.getElementById('open1000Cube').addEventListener('click', () => openCube(1000, false));\n    document.getElementById('openMostCube').addEventListener('click', () => openCube(1, true));\n    document.getElementById('open1Tesseract').addEventListener('click', () => openTesseract(1, false));\n    document.getElementById('open20Tesseract').addEventListener('click', () => openTesseract(20, false));\n    document.getElementById('open1000Tesseract').addEventListener('click', () => openTesseract(1000, false));\n    document.getElementById('openMostTesseract').addEventListener('click', () => openTesseract(1, true));\n    document.getElementById('open1Hypercube').addEventListener('click', () => openHypercube(1, false));\n    document.getElementById('open20Hypercube').addEventListener('click', () => openHypercube(20, false));\n    document.getElementById('open1000Hypercube').addEventListener('click', () => openHypercube(1000, false));\n    document.getElementById('openMostHypercube').addEventListener('click', () => openHypercube(1, true));\n    document.getElementById('open1PlatonicCube').addEventListener('click', () => openPlatonic(1, false));\n    document.getElementById('open40kPlatonicCube').addEventListener('click', () => openPlatonic(4e4, false));\n    document.getElementById('open1mPlatonicCube').addEventListener('click', () => openPlatonic(1e6, false));\n    document.getElementById('openMostPlatonicCube').addEventListener('click', () => openPlatonic(1, true));\n    const platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage');\n    for (let index = 0; index < platonicUpgrades.length; index++) {\n        platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index + 1));\n        platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index + 1));\n    }\n    document.getElementById('corrStatsBtn').addEventListener('click', () => toggleSubTab(9, 0));\n    document.getElementById('corrLoadoutsBtn').addEventListener('click', () => toggleSubTab(9, 1));\n    document.getElementById('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10));\n    document.getElementById('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm());\n    document.getElementById('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999));\n    document.getElementById('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend());\n    const settingSubTabs = Array.from(document.querySelectorAll('button[id^=\"switchSettingSubTab\"]'));\n    for (const subtab of settingSubTabs) {\n        subtab.addEventListener('click', () => toggleSubTab(-1, settingSubTabs.indexOf(subtab)));\n    }\n    document.getElementById('exportgame').addEventListener('click', () => exportSynergism());\n    document.getElementById('saveStringInput').addEventListener('blur', () => updateSaveString());\n    document.getElementById('savegame').addEventListener('click', () => saveSynergy(true));\n    document.getElementById('deleteGame').addEventListener('click', () => resetGame());\n    document.getElementById('promocodes').addEventListener('click', () => promocodes());\n    document.getElementById('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond());\n    document.getElementById('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades());\n    document.getElementById('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation());\n    document.getElementById('offeringPotions').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('useofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('buyofferingpotion').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"));\n    document.getElementById('useofferingpotion').addEventListener('click', () => useConsumable(\"offeringPotion\"));\n    document.getElementById('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"));\n    document.getElementById('useobtainiumpotion').addEventListener('click', () => useConsumable(\"obtainiumPotion\"));\n    document.getElementById('OfferingEX').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\n    document.getElementById('OfferingAuto').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\n    document.getElementById('ObtainiumEX').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\n    document.getElementById('ObtainiumAuto').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\n    document.getElementById('InstChallenge').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\n    document.getElementById('AntSpd').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\n    document.getElementById('CashUpgrade').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\n    document.getElementById('CashTalisman').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\n    document.getElementById('SeasonPass').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\n    document.getElementById('ShopChallenge').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\n    document.getElementById('ShopTome').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\n    document.getElementById('CubeQuark').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\n    document.getElementById('TesseractQuark').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\n    document.getElementById('HypercubeQuark').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\n    document.getElementById('offeringtimerlevel').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\n    document.getElementById('offeringautolevel').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\n    document.getElementById('obtainiumtimerlevel').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\n    document.getElementById('obtainiumautolevel').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\n    document.getElementById('instantchallenge').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\n    document.getElementById('antspeed').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\n    document.getElementById('cashgrab').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\n    document.getElementById('shoptalisman').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\n    document.getElementById('seasonPassLevel').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\n    document.getElementById('challengeUpgradeLevel').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\n    document.getElementById('challenge10TomeLevel').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\n    document.getElementById('cubeToQuark').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\n    document.getElementById('tesseractToQuark').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\n    document.getElementById('hypercubeToQuark').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\n    document.getElementById('offeringtimerbutton').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\n    document.getElementById('offeringtimerbutton').addEventListener('click', () => buyShopUpgrades(\"offeringEX\"));\n    document.getElementById('offeringautobutton').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\n    document.getElementById('offeringautobutton').addEventListener('click', () => buyShopUpgrades(\"offeringAuto\"));\n    document.getElementById('obtainiumtimerbutton').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\n    document.getElementById('obtainiumtimerbutton').addEventListener('click', () => buyShopUpgrades(\"obtainiumEX\"));\n    document.getElementById('obtainiumautobutton').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\n    document.getElementById('obtainiumautobutton').addEventListener('click', () => buyShopUpgrades(\"obtainiumAuto\"));\n    document.getElementById('instantchallengebutton').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\n    document.getElementById('instantchallengebutton').addEventListener('click', () => buyShopUpgrades(\"instantChallenge\"));\n    document.getElementById('antspeedbutton').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\n    document.getElementById('antspeedbutton').addEventListener('click', () => buyShopUpgrades(\"antSpeed\"));\n    document.getElementById('cashgrabbutton').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\n    document.getElementById('cashgrabbutton').addEventListener('click', () => buyShopUpgrades(\"cashGrab\"));\n    document.getElementById('shoptalismanbutton').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\n    document.getElementById('shoptalismanbutton').addEventListener('click', () => buyShopUpgrades(\"shopTalisman\"));\n    document.getElementById('seasonPassButton').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\n    document.getElementById('seasonPassButton').addEventListener('click', () => buyShopUpgrades(\"seasonPass\"));\n    document.getElementById('challengeUpgradeButton').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\n    document.getElementById('challengeUpgradeButton').addEventListener('click', () => buyShopUpgrades(\"challengeExtension\"));\n    document.getElementById('challenge10TomeButton').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\n    document.getElementById('challenge10TomeButton').addEventListener('click', () => buyShopUpgrades(\"challengeTome\"));\n    document.getElementById('cubeToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\n    document.getElementById('cubeToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"cubeToQuark\"));\n    document.getElementById('tesseractToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\n    document.getElementById('tesseractToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"tesseractToQuark\"));\n    document.getElementById('hypercubeToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\n    document.getElementById('hypercubeToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"hypercubeToQuark\"));\n    const tabs = document.querySelectorAll('#tabrow > li');\n    tabs.forEach(b => b.addEventListener('click', () => changeTabColor()));\n    document.getElementById('importfile').addEventListener('change', (e) => __awaiter(void 0, void 0, void 0, function* () {\n        const { files } = e.target;\n        const saveItem = files.item(0);\n        const save = yield saveItem.text();\n        return importSynergism(save);\n    }));\n};\n","import { CalcCorruptionStuff } from '../Calculate';\nimport { platUpgradeBaseCosts } from '../Platonic';\nimport { player, format } from '../Synergism';\nimport { toggleAntAutoSacrifice, toggleAutoChallengeRun, toggleAutoResearch, toggleAutoSacrifice } from '../Toggles';\nimport { visualUpdateCubes } from '../UpdateVisuals';\nimport { getElementById, stripIndents } from '../Utility';\nimport { Globals as G } from '../Variables';\nconst SplitTime = (numberOfHours) => {\n    const Days = Math.floor(numberOfHours / 24);\n    const Remainder = numberOfHours % 24;\n    const Hours = Math.floor(Remainder);\n    const Minutes = Math.floor(60 * (Remainder - Hours));\n    return ({ Days, Hours, Minutes });\n};\nconst getCubeTimes = (i = 5, levels = 1) => {\n    const [, , , , , tess, hyper, plat] = CalcCorruptionStuff();\n    const Upgrades = platUpgradeBaseCosts[i];\n    const tessCost = Upgrades.tesseracts * levels;\n    const hyperCost = Upgrades.hypercubes * levels;\n    const platCost = Upgrades.platonics * levels;\n    const time = player.ascensionCounter / 3600;\n    const platRate = plat / time;\n    const hyperRate = hyper / time;\n    const tessRate = tess / time;\n    const platTimeNeeded = (platCost - player.wowPlatonicCubes - plat) / platRate;\n    const hyperTimeNeeded = (hyperCost - player.wowHypercubes - hyper) / hyperRate;\n    const tessTimeNeeded = (tessCost - player.wowTesseracts - tess) / tessRate;\n    const Plats = SplitTime(Math.max(0, platTimeNeeded));\n    const Hypers = SplitTime(Math.max(0, hyperTimeNeeded));\n    const Tess = SplitTime(Math.max(0, tessTimeNeeded));\n    const totalTimeNeeded = Math.max(0, platTimeNeeded, hyperTimeNeeded, tessTimeNeeded);\n    const minutesToAdd = totalTimeNeeded * 60;\n    const futureDate = new Date(Date.now() + minutesToAdd * 60000);\n    return stripIndents `\n        Time left until next ${levels} level(s) of platonic upgrade ${i} purchase:\n        Plats: ${Plats.Days} Days, ${Plats.Hours} Hours, ${Plats.Minutes} Minutes\n        Hypers: ${Hypers.Days} Days, ${Hypers.Hours} Hours, ${Hypers.Minutes} Minutes\n        Tess: ${Tess.Days} Days, ${Tess.Hours} Hours, ${Tess.Minutes} Minutes\n\n        At your current rate, you are expected to get this at:\n        ${futureDate}\n\n        Leftovers after ${(totalTimeNeeded / 24).toPrecision(4)} days:\n        Platonics: ${(platRate * (totalTimeNeeded - platTimeNeeded)).toPrecision(4)}\n        Hypers: ${(hyperRate * (totalTimeNeeded - hyperTimeNeeded)).toPrecision(4)}\n        Tesseracts: ${(tessRate * (totalTimeNeeded - tessTimeNeeded)).toPrecision(4)}\n    `;\n};\nconst GM_addStyle = (css) => {\n    const style = document.createElement('style');\n    style.appendChild(document.createTextNode(css));\n    document.head.appendChild(style);\n};\nconst statValues = {\n    0: el => el.textContent = format(player.ascendShards),\n    1: el => el.textContent = document.getElementById(\"cubeBlessingTotalAmount\").textContent,\n    2: el => el.textContent = document.getElementById(\"tesseractBlessingTotalAmount\").textContent,\n    3: el => el.textContent = document.getElementById(\"hypercubeBlessingTotalAmount\").textContent,\n    4: el => el.textContent = document.getElementById(\"platonicBlessingTotalAmount\").textContent,\n    5: el => el.textContent = player.challengecompletions.slice(11, 15).join(' / '),\n    6: el => el.textContent = format(player.challenge15Exponent, 0),\n    7: el => el.textContent = player.runeBlessingLevels.slice(1, 6).map(x => format(x)).join(' / '),\n    8: el => el.textContent = player.runeSpiritLevels.slice(1, 6).map(x => format(x)).join(' / '),\n    9: el => el.textContent = player.usedCorruptions.slice(1, 10).join(' / '),\n    10: el => el.textContent = player.challengecompletions.slice(1, 6).join(' / '),\n    11: el => el.textContent = player.challengecompletions.slice(6, 11).join(' / '),\n    12: el => el.textContent = player.runelevels.join(' / '),\n    13: el => {\n        const talismanColors = ['white', 'limegreen', 'lightblue', 'plum', 'orange', 'crimson'];\n        el.querySelectorAll('span').forEach((span, i) => {\n            span.style.color = talismanColors[player.talismanRarity[i] - 1];\n            span.textContent = player.talismanLevels[i] + '';\n        });\n    },\n    14: el => {\n        const roomba = player.autoResearchToggle;\n        el.style.color = roomba ? 'green' : 'red';\n        el.textContent = roomba ? 'ON' : 'OFF';\n    },\n    15: el => {\n        const autorune = player.autoSacrificeToggle;\n        el.style.color = autorune ? 'green' : 'red';\n        el.textContent = autorune ? 'ON' : 'OFF';\n    },\n    16: el => {\n        const autoch = player.autoChallengeRunning;\n        el.style.color = autoch ? 'green' : 'red';\n        el.textContent = autoch ? 'ON' : 'OFF';\n    },\n    17: el => {\n        const autosac = player.autoAntSacrifice;\n        const realtime = player.autoAntSacrificeMode === 2;\n        const seconds = player.autoAntSacTimer;\n        const text = el.firstChild;\n        text.textContent = `(${seconds} ${realtime ? 'real' : 'igt'} seconds) `;\n        const button = el.lastElementChild;\n        button.style.color = autosac ? 'green' : 'red';\n        button.textContent = autosac ? 'ON' : 'OFF';\n    }\n};\nconst css = `\n    #dashboard {\n        text-align: left;\n    }\n    .db-table {\n        display: flex;\n        flex-wrap: wrap;\n        margin: 0;\n        padding: 0.5em;\n    }\n    .db-table-cell {\n        box-sizing: border-box;\n        flex-grow: 1;\n        width: 50%;\n        padding: 0.8em 1.2em;\n        overflow: hidden;\n        list-style: none;\n        border: none;\n    }\n    .db-stat-line {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\nconst tab = document.createElement('div');\ntab.id = 'dashboardSubTab';\ntab.style.display = 'none';\ntab.innerHTML = `\n<div id=\"dashboard\" class=\"db-table\" style=\"background-color: #111;\">\n    <div class=\"db-table-cell\" style=\"width: 35%;\">\n    <h3 style=\"color: plum\">Overall progress stats</h3>\n    <div class=\"db-stat-line\" style=\"color: orange\">Constant: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: yellow\">Cube tributes: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: orchid\">Tesseract gifts: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: crimson\">Hypercube benedictions: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: lightgoldenrodyellow\">Platonic Cubes opened: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: #ffac75\">C11-14 completions: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: gold\">C15 exponent: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\">Blessing levels: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\">Spirit levels: <span class=\"dashboardstat\"></span></div>\n\n    <h3 style=\"color: plum\">Current run stats</h3>\n    <div class=\"db-stat-line\" style=\"color: white\">Loadout: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: plum\">C1-5 completions: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: limegreen\">C6-10 completions: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\" style=\"color: cyan\">Rune levels: <span class=\"dashboardstat\"></span></div>\n    <div class=\"db-stat-line\">Talisman levels: <span class=\"dashboardstat\">\n        <span></span> / <span></span> / <span></span> / <span></span> / <span></span> / <span></span> / <span></span>\n    </span></div>\n\n    <h3 style=\"color: plum\">Settings</h3>\n    <div class=\"db-stat-line\">Autoresearch: <button class=\"dashboardstat dashboardstatResearch\"></button></div>\n    <div class=\"db-stat-line\">Autorunes: <button class=\"dashboardstat dashboardstatRunes\"></button></div>\n    <div class=\"db-stat-line\">Autochallenge: <button class=\"dashboardstat dashboardstatChallenge\"></button></div>\n    <div class=\"db-stat-line\">Ants Autosacrifice: <span class=\"dashboardstat\"> <button class=\"dashboardstatSac\"></button></span></div>\n    </div>\n    <div class=\"db-table-cell\">\n        <h3 style=\"color: plum\">Time to plat upgrade</h3>\n        Platonic upgrade: <input id=\"db-plat-number\" type=\"number\" min=\"1\" max=\"15\" step=\"1\" value=\"5\">\n        Number of levels: <input id=\"db-plat-amount\" type=\"number\" min=\"1\" max=\"100\" step=\"1\" value=\"1\">\n        <div><pre id=\"cubeTimes\"></pre></div>\n    </div>\n</div>\n`;\nconst settingsTab = document.getElementById('settings');\nconst button = document.createElement('button');\nbutton.className = 'ascendunlockib';\nbutton.style.border = '2px solid orange;';\nbutton.style.float = 'right';\nbutton.style.height = '30px';\nbutton.style.width = '150px';\nbutton.style.margin = '9px 0';\nlet dashboardLoopRefFast = null;\nlet dashboardLoopRefSlow = null;\nlet activeTab = null;\nlet open = false;\nconst renderDashboardSlow = () => {\n    const upgrade = Number(getElementById('db-plat-number').value);\n    const levels = Number(getElementById('db-plat-amount').value);\n    tab.querySelector('#cubeTimes').textContent = getCubeTimes(upgrade, levels);\n};\nconst renderDashboardFast = () => {\n    if (G['currentTab'] !== 'settings') {\n        open = false;\n        return exitDashboard();\n    }\n    tab.querySelectorAll('.dashboardstat').forEach((stat, i) => { var _a; return (_a = statValues[i]) === null || _a === void 0 ? void 0 : _a.call(statValues, stat); });\n};\nconst openDashboard = () => {\n    const n = player.subtabNumber;\n    G['currentTab'] = 'cubes';\n    [0, 1, 2, 3].forEach(i => {\n        player.subtabNumber = i;\n        visualUpdateCubes();\n    });\n    G['currentTab'] = 'settings';\n    player.subtabNumber = n;\n    renderDashboardFast();\n    renderDashboardSlow();\n    dashboardLoopRefFast = setInterval(renderDashboardFast, 100);\n    dashboardLoopRefSlow = setInterval(renderDashboardSlow, 1000);\n    activeTab = settingsTab.getElementsByClassName('subtabActive')[0];\n    activeTab.style.display = 'none';\n    tab.style.display = 'block';\n    button.innerText = 'Exit Dashboard';\n    button.style.marginLeft = '100%';\n    const buttons = settingsTab.getElementsByClassName('subtabSwitcher')[0];\n    buttons.style.display = 'none';\n};\nconst exitDashboard = () => {\n    clearInterval(dashboardLoopRefFast);\n    clearInterval(dashboardLoopRefSlow);\n    tab.style.display = 'none';\n    activeTab.style.display = null;\n    button.innerText = 'Dashboard';\n    button.style.marginLeft = null;\n    const buttons = settingsTab.getElementsByClassName('subtabSwitcher')[0];\n    buttons.style.display = null;\n};\nconst enable = () => {\n    console.log('hello synergism, dashboard installed in the settings tab');\n    GM_addStyle(css);\n    tab.querySelector('.dashboardstatResearch').addEventListener('click', () => toggleAutoResearch());\n    tab.querySelector('.dashboardstatRunes').addEventListener('click', () => toggleAutoSacrifice(0));\n    tab.querySelector('.dashboardstatChallenge').addEventListener('click', () => toggleAutoChallengeRun());\n    tab.querySelector('.dashboardstatSac').addEventListener('click', () => toggleAntAutoSacrifice(0));\n    settingsTab.appendChild(tab);\n    button.addEventListener('click', () => {\n        open = !open;\n        if (open) {\n            openDashboard();\n        }\n        else {\n            exitDashboard();\n        }\n    });\n    button.innerText = 'Dashboard';\n    settingsTab.firstElementChild.insertAdjacentElement('beforebegin', button);\n};\nexport const main = () => {\n    Object.defineProperty(window, 'dashboard', {\n        value: enable\n    });\n};\n","import { resetGame } from '../ImportExport';\nexport const main = () => {\n    Object.defineProperty(window, 'resetGame', {\n        value: resetGame\n    });\n};\n","import { openHypercube } from '../Hypercubes';\nimport { openPlatonic } from '../PlatonicCubes';\nimport { openTesseract } from '../Tesseracts';\nimport { openCube } from '../Cubes';\nexport const main = () => {\n    Object.defineProperties(window, {\n        'openHypercube': {\n            value: openHypercube\n        },\n        'openPlatonic': {\n            value: openPlatonic\n        },\n        'openTeseract': {\n            value: openTesseract\n        },\n        'openCube': {\n            value: openCube\n        }\n    });\n};\n","import { sacrificeAnts } from \"./Ants\";\nimport { calculateAutomaticObtainium, calculateMaxRunes, calculateObtainium, calculateTimeAcceleration } from \"./Calculate\";\nimport { redeemShards } from \"./Runes\";\nimport { player } from \"./Synergism\";\nimport { visualUpdateResearch } from \"./UpdateVisuals\";\nimport { Globals as G } from './Variables';\nexport const getMaxQuarkTime = () => {\n    let time = 90000;\n    time += 45000 * player.researches[195];\n    return time;\n};\nexport const addTimers = (input, time) => {\n    const timeMultiplier = (input === \"ascension\" || input === \"quarks\") ? 1 : calculateTimeAcceleration();\n    switch (input) {\n        case \"prestige\":\n            player.prestigecounter += time * timeMultiplier;\n            break;\n        case \"transcension\":\n            player.transcendcounter += time * timeMultiplier;\n            break;\n        case \"reincarnation\":\n            player.reincarnationcounter += time * timeMultiplier;\n            break;\n        case \"ascension\":\n            player.ascensionCounter += time * timeMultiplier;\n            break;\n        case \"quarks\": {\n            const maxQuarkTimer = getMaxQuarkTime();\n            player.quarkstimer += time * timeMultiplier;\n            player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer;\n            break;\n        }\n    }\n};\nexport const checkMaxRunes = () => {\n    let maxxed = 0;\n    for (let i = 1; i <= 5; i++) {\n        if (player.runelevels[i - 1] >= calculateMaxRunes(i))\n            maxxed++;\n    }\n    return maxxed;\n};\nexport const automaticTools = (input, time) => {\n    const timeMultiplier = (input === \"runeSacrifice\" || input === \"addOfferings\") ? 1 : calculateTimeAcceleration();\n    switch (input) {\n        case \"addObtainium\": {\n            calculateObtainium();\n            const obtainiumGain = calculateAutomaticObtainium();\n            player.researchPoints += obtainiumGain * time * timeMultiplier;\n            if (G['currentTab'] === \"researches\") {\n                visualUpdateResearch();\n            }\n            break;\n        }\n        case \"addOfferings\":\n            G['autoOfferingCounter'] += time;\n            player.runeshards += Math.floor(G['autoOfferingCounter']);\n            G['autoOfferingCounter'] %= 1;\n            break;\n        case \"runeSacrifice\":\n            player.sacrificeTimer += time;\n            if (player.sacrificeTimer >= 1) {\n                if (player.cubeUpgrades[20] === 1) {\n                    const notMaxed = (5 - checkMaxRunes());\n                    if (notMaxed > 0) {\n                        const baseAmount = Math.floor(player.runeshards / notMaxed);\n                        for (let i = 0; i < 5; i++) {\n                            redeemShards(i + 1, true, baseAmount);\n                        }\n                    }\n                }\n                else {\n                    const rune = player.autoSacrifice;\n                    redeemShards(rune, true, 0);\n                }\n                player.sacrificeTimer %= 1;\n            }\n            break;\n        case \"antSacrifice\": {\n            player.antSacrificeTimer += time * timeMultiplier;\n            player.antSacrificeTimerReal += time;\n            const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\n                player.antSacrificeTimerReal : player.antSacrificeTimer;\n            if (antSacrificeTimer >= player.autoAntSacTimer && player.researches[124] === 1\n                && player.autoAntSacrifice && player.antPoints.gte(\"1e40\")) {\n                sacrificeAnts(true);\n            }\n            break;\n        }\n    }\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Decimal from 'break_infinity.js';\nimport LZString from 'lz-string';\nimport { isDecimal, getElementById, sortWithIndeces, sumContents } from './Utility';\nimport { blankGlobals, Globals as G } from './Variables';\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep } from './Challenges';\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades } from './Upgrades';\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research';\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, CSSAscend, CSSRuneBlessings, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, hideStuff, changeTabColor } from './UpdateHTML';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration } from './Calculate';\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels } from './Talismans';\nimport { toggleAscStatPerSecond, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleChallenges, keyboardTabChange, toggleauto } from './Toggles';\nimport { c15RewardUpdate } from './Statistics';\nimport { resetHistoryRenderAllTables } from './History';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { antSacrificePointsToMultiplier, autoBuyAnts, sacrificeAnts, calculateCrumbToCoinExp } from './Ants';\nimport { calculatetax } from './Tax';\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements';\nimport { reset } from './Reset';\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, getTesseractCost } from './Buy';\nimport { autoUpgrades } from './Automation';\nimport { redeemShards } from './Runes';\nimport { checkVariablesOnLoad } from './CheckVariables';\nimport { updateCubeUpgradeBG } from './Cubes';\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate } from './Corruptions';\nimport { generateEventHandlers } from './EventListeners';\nimport * as Plugins from './Plugins/Plugins';\nimport { addTimers, automaticTools } from './Helper';\nimport './Logger';\nexport const isTesting = true;\nexport const intervalHold = [];\nexport const interval = new Proxy(setInterval, {\n    apply(target, thisArg, args) {\n        const set = target.apply(thisArg, args);\n        intervalHold.push(set);\n        return set;\n    }\n});\nexport const clearInt = new Proxy(clearInterval, {\n    apply(target, thisArg, args) {\n        const id = args[0];\n        intervalHold.splice(intervalHold.indexOf(id), 1);\n        return target.apply(thisArg, args);\n    }\n});\nexport const player = {\n    worlds: 0,\n    coins: new Decimal(\"1e2\"),\n    coinsThisPrestige: new Decimal(\"1e2\"),\n    coinsThisTranscension: new Decimal(\"1e2\"),\n    coinsThisReincarnation: new Decimal(\"1e2\"),\n    coinsTotal: new Decimal(\"100\"),\n    firstOwnedCoin: 0,\n    firstGeneratedCoin: new Decimal(\"0\"),\n    firstCostCoin: new Decimal(\"100\"),\n    firstProduceCoin: 0.25,\n    secondOwnedCoin: 0,\n    secondGeneratedCoin: new Decimal(\"0\"),\n    secondCostCoin: new Decimal(\"2e3\"),\n    secondProduceCoin: 2.5,\n    thirdOwnedCoin: 0,\n    thirdGeneratedCoin: new Decimal(\"0\"),\n    thirdCostCoin: new Decimal(\"4e4\"),\n    thirdProduceCoin: 25,\n    fourthOwnedCoin: 0,\n    fourthGeneratedCoin: new Decimal(\"0\"),\n    fourthCostCoin: new Decimal(\"8e5\"),\n    fourthProduceCoin: 250,\n    fifthOwnedCoin: 0,\n    fifthGeneratedCoin: new Decimal(\"0\"),\n    fifthCostCoin: new Decimal(\"16e6\"),\n    fifthProduceCoin: 2500,\n    firstOwnedDiamonds: 0,\n    firstGeneratedDiamonds: new Decimal(\"0\"),\n    firstCostDiamonds: new Decimal(\"100\"),\n    firstProduceDiamonds: 0.05,\n    secondOwnedDiamonds: 0,\n    secondGeneratedDiamonds: new Decimal(\"0\"),\n    secondCostDiamonds: new Decimal(\"1e5\"),\n    secondProduceDiamonds: 0.0005,\n    thirdOwnedDiamonds: 0,\n    thirdGeneratedDiamonds: new Decimal(\"0\"),\n    thirdCostDiamonds: new Decimal(\"1e15\"),\n    thirdProduceDiamonds: 0.00005,\n    fourthOwnedDiamonds: 0,\n    fourthGeneratedDiamonds: new Decimal(\"0\"),\n    fourthCostDiamonds: new Decimal(\"1e40\"),\n    fourthProduceDiamonds: 0.000005,\n    fifthOwnedDiamonds: 0,\n    fifthGeneratedDiamonds: new Decimal(\"0\"),\n    fifthCostDiamonds: new Decimal(\"1e100\"),\n    fifthProduceDiamonds: 0.000005,\n    firstOwnedMythos: 0,\n    firstGeneratedMythos: new Decimal(\"0\"),\n    firstCostMythos: new Decimal(\"1\"),\n    firstProduceMythos: 1,\n    secondOwnedMythos: 0,\n    secondGeneratedMythos: new Decimal(\"0\"),\n    secondCostMythos: new Decimal(\"100\"),\n    secondProduceMythos: 0.01,\n    thirdOwnedMythos: 0,\n    thirdGeneratedMythos: new Decimal(\"0\"),\n    thirdCostMythos: new Decimal(\"1e4\"),\n    thirdProduceMythos: 0.001,\n    fourthOwnedMythos: 0,\n    fourthGeneratedMythos: new Decimal(\"0\"),\n    fourthCostMythos: new Decimal(\"1e8\"),\n    fourthProduceMythos: 0.0002,\n    fifthOwnedMythos: 0,\n    fifthGeneratedMythos: new Decimal(\"0\"),\n    fifthCostMythos: new Decimal(\"1e16\"),\n    fifthProduceMythos: 0.00004,\n    firstOwnedParticles: 0,\n    firstGeneratedParticles: new Decimal(\"0\"),\n    firstCostParticles: new Decimal(\"1\"),\n    firstProduceParticles: .25,\n    secondOwnedParticles: 0,\n    secondGeneratedParticles: new Decimal(\"0\"),\n    secondCostParticles: new Decimal(\"100\"),\n    secondProduceParticles: .20,\n    thirdOwnedParticles: 0,\n    thirdGeneratedParticles: new Decimal(\"0\"),\n    thirdCostParticles: new Decimal(\"1e4\"),\n    thirdProduceParticles: .15,\n    fourthOwnedParticles: 0,\n    fourthGeneratedParticles: new Decimal(\"0\"),\n    fourthCostParticles: new Decimal(\"1e8\"),\n    fourthProduceParticles: .10,\n    fifthOwnedParticles: 0,\n    fifthGeneratedParticles: new Decimal(\"0\"),\n    fifthCostParticles: new Decimal(\"1e16\"),\n    fifthProduceParticles: .5,\n    firstOwnedAnts: 0,\n    firstGeneratedAnts: new Decimal(\"0\"),\n    firstCostAnts: new Decimal(\"1e800\"),\n    firstProduceAnts: .0001,\n    secondOwnedAnts: 0,\n    secondGeneratedAnts: new Decimal(\"0\"),\n    secondCostAnts: new Decimal(\"3\"),\n    secondProduceAnts: .00005,\n    thirdOwnedAnts: 0,\n    thirdGeneratedAnts: new Decimal(\"0\"),\n    thirdCostAnts: new Decimal(\"100\"),\n    thirdProduceAnts: .00002,\n    fourthOwnedAnts: 0,\n    fourthGeneratedAnts: new Decimal(\"0\"),\n    fourthCostAnts: new Decimal(\"1e4\"),\n    fourthProduceAnts: .00001,\n    fifthOwnedAnts: 0,\n    fifthGeneratedAnts: new Decimal(\"0\"),\n    fifthCostAnts: new Decimal(\"1e12\"),\n    fifthProduceAnts: .000005,\n    sixthOwnedAnts: 0,\n    sixthGeneratedAnts: new Decimal(\"0\"),\n    sixthCostAnts: new Decimal(\"1e36\"),\n    sixthProduceAnts: .000002,\n    seventhOwnedAnts: 0,\n    seventhGeneratedAnts: new Decimal(\"0\"),\n    seventhCostAnts: new Decimal(\"1e100\"),\n    seventhProduceAnts: .000001,\n    eighthOwnedAnts: 0,\n    eighthGeneratedAnts: new Decimal(\"0\"),\n    eighthCostAnts: new Decimal(\"1e300\"),\n    eighthProduceAnts: .00000001,\n    ascendBuilding1: {\n        cost: 1,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding2: {\n        cost: 10,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding3: {\n        cost: 100,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding4: {\n        cost: 1000,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding5: {\n        cost: 10000,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    multiplierCost: new Decimal(\"1e5\"),\n    multiplierBought: 0,\n    acceleratorCost: new Decimal(\"500\"),\n    acceleratorBought: 0,\n    acceleratorBoostBought: 0,\n    acceleratorBoostCost: new Decimal(\"1e3\"),\n    upgrades: Array(141).fill(0),\n    prestigeCount: 0,\n    transcendCount: 0,\n    reincarnationCount: 0,\n    prestigePoints: new Decimal(\"0\"),\n    transcendPoints: new Decimal(\"0\"),\n    reincarnationPoints: new Decimal(\"0\"),\n    prestigeShards: new Decimal(\"0\"),\n    transcendShards: new Decimal(\"0\"),\n    reincarnationShards: new Decimal(\"0\"),\n    toggles: {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false,\n        9: false,\n        10: false,\n        11: false,\n        12: false,\n        13: false,\n        14: false,\n        15: false,\n        16: false,\n        17: false,\n        18: false,\n        19: false,\n        20: false,\n        21: false,\n        22: false,\n        23: false,\n        24: false,\n        25: false,\n        26: false,\n        27: false,\n        28: true,\n        29: true,\n        30: true,\n        31: true,\n        32: true,\n        33: false,\n    },\n    challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    challenge15Exponent: 0,\n    highestChallenge15Exponent: 0,\n    retrychallenges: false,\n    currentChallenge: {\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0,\n    },\n    researchPoints: 0,\n    obtainiumtimer: 0,\n    obtainiumpersecond: 0,\n    maxobtainiumpersecond: 0,\n    maxobtainium: 0,\n    researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    unlocks: {\n        coinone: false,\n        cointwo: false,\n        cointhree: false,\n        coinfour: false,\n        prestige: false,\n        generation: false,\n        transcend: false,\n        reincarnate: false,\n        rrow1: false,\n        rrow2: false,\n        rrow3: false,\n        rrow4: false\n    },\n    achievements: Array(253).fill(0),\n    achievementPoints: 0,\n    prestigenomultiplier: true,\n    prestigenoaccelerator: true,\n    transcendnomultiplier: true,\n    transcendnoaccelerator: true,\n    reincarnatenomultiplier: true,\n    reincarnatenoaccelerator: true,\n    prestigenocoinupgrades: true,\n    transcendnocoinupgrades: true,\n    transcendnocoinorprestigeupgrades: true,\n    reincarnatenocoinupgrades: true,\n    reincarnatenocoinorprestigeupgrades: true,\n    reincarnatenocoinprestigeortranscendupgrades: true,\n    reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\n    crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\n    crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\n    runelevels: [1, 1, 1, 1, 1],\n    runeexp: [0, 0, 0, 0, 0,],\n    runeshards: 0,\n    maxofferings: 0,\n    offeringpersecond: 0,\n    prestigecounter: 0,\n    transcendcounter: 0,\n    reincarnationcounter: 0,\n    offlinetick: 0,\n    prestigeamount: 0,\n    transcendamount: 0,\n    reincarnationamount: 0,\n    fastestprestige: 9999999999,\n    fastesttranscend: 99999999999,\n    fastestreincarnate: 999999999999,\n    resettoggle1: 1,\n    resettoggle2: 1,\n    resettoggle3: 1,\n    tesseractAutoBuyerToggle: 0,\n    tesseractAutoBuyerAmount: 0,\n    coinbuyamount: 1,\n    crystalbuyamount: 1,\n    mythosbuyamount: 1,\n    particlebuyamount: 1,\n    offeringbuyamount: 1,\n    tesseractbuyamount: 1,\n    shoptoggles: {\n        coin: true,\n        prestige: true,\n        transcend: true,\n        generators: true,\n        reincarnate: true,\n    },\n    tabnumber: 1,\n    subtabNumber: 0,\n    codes: new Map(Array.from({ length: 30 }, (_, i) => [i + 1, false])),\n    loaded1009: true,\n    loaded1009hotfix1: true,\n    loaded10091: true,\n    loaded1010: true,\n    loaded10101: true,\n    shopUpgrades: {\n        offeringPotion: 1,\n        obtainiumPotion: 1,\n        offeringEX: 0,\n        offeringAuto: 0,\n        obtainiumEX: 0,\n        obtainiumAuto: 0,\n        instantChallenge: 0,\n        antSpeed: 0,\n        cashGrab: 0,\n        shopTalisman: 0,\n        seasonPass: 0,\n        challengeExtension: 0,\n        challengeTome: 0,\n        cubeToQuark: 0,\n        tesseractToQuark: 0,\n        hypercubeToQuark: 0,\n    },\n    autoSacrificeToggle: false,\n    autoFortifyToggle: false,\n    autoEnhanceToggle: false,\n    autoResearchToggle: false,\n    autoResearch: 0,\n    autoSacrifice: 0,\n    sacrificeTimer: 0,\n    quarkstimer: 90000,\n    antPoints: new Decimal(\"1\"),\n    antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    antSacrificePoints: 0,\n    antSacrificeTimer: 900,\n    antSacrificeTimerReal: 900,\n    talismanLevels: [0, 0, 0, 0, 0, 0, 0],\n    talismanRarity: [1, 1, 1, 1, 1, 1, 1],\n    talismanOne: [null, -1, 1, 1, 1, -1],\n    talismanTwo: [null, 1, 1, -1, -1, 1],\n    talismanThree: [null, 1, -1, 1, 1, -1],\n    talismanFour: [null, -1, -1, 1, 1, 1],\n    talismanFive: [null, 1, 1, -1, -1, 1],\n    talismanSix: [null, 1, 1, 1, -1, -1],\n    talismanSeven: [null, -1, 1, -1, 1, 1],\n    talismanShards: 0,\n    commonFragments: 0,\n    uncommonFragments: 0,\n    rareFragments: 0,\n    epicFragments: 0,\n    legendaryFragments: 0,\n    mythicalFragments: 0,\n    buyTalismanShardPercent: 10,\n    autoAntSacrifice: false,\n    autoAntSacTimer: 900,\n    autoAntSacrificeMode: 0,\n    antMax: false,\n    ascensionCount: 0,\n    ascensionCounter: 0,\n    cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    wowCubes: 0,\n    wowTesseracts: 0,\n    wowHypercubes: 0,\n    wowPlatonicCubes: 0,\n    wowAbyssals: 0,\n    cubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    tesseractBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    hypercubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    platonicBlessings: {\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 0,\n        platonics: 0,\n        hypercubeBonus: 0,\n        taxes: 0,\n        scoreBonus: 0,\n        globalSpeed: 0,\n    },\n    ascendShards: new Decimal(\"0\"),\n    autoAscend: false,\n    autoAscendMode: \"c10Completions\",\n    autoAscendThreshold: 1,\n    roombaResearchIndex: 0,\n    ascStatToggles: {\n        1: false,\n        2: false,\n        3: false,\n        4: false\n    },\n    prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    corruptionLoadouts: {\n        1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    corruptionShowStats: true,\n    constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    history: { ants: [], ascend: [], reset: [] },\n    historyCountMax: 10,\n    historyShowPerSecond: false,\n    autoChallengeRunning: false,\n    autoChallengeIndex: 1,\n    autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\n    autoChallengeStartExponent: 10,\n    autoChallengeTimer: {\n        start: 10,\n        exit: 2,\n        enter: 2\n    },\n    runeBlessingLevels: [0, 0, 0, 0, 0, 0],\n    runeSpiritLevels: [0, 0, 0, 0, 0, 0],\n    runeBlessingBuyAmount: 0,\n    runeSpiritBuyAmount: 0,\n    autoTesseracts: [false, false, false, false, false, false],\n    saveString: \"Synergism-$VERSION$-$TIME$.txt\",\n    exporttest: false,\n    dayCheck: null,\n    dayTimer: 0,\n    cubeOpenedDaily: 0,\n    cubeQuarkDaily: 0,\n    tesseractOpenedDaily: 0,\n    tesseractQuarkDaily: 0,\n    hypercubeOpenedDaily: 0,\n    hypercubeQuarkDaily: 0,\n    loadedOct4Hotfix: false,\n    loadedNov13Vers: true,\n    loadedDec16Vers: true,\n    version: '2.5.0~alpha-1',\n    rngCode: 0\n};\nexport const blankSave = Object.assign({}, player, {\n    codes: new Map(Array.from({ length: 31 }, (_, i) => [i + 1, false]))\n});\nexport const saveSynergy = (button) => {\n    player.offlinetick = Date.now();\n    player.loaded1009 = true;\n    player.loaded1009hotfix1 = true;\n    const p = Object.assign({}, player, {\n        codes: Array.from(player.codes)\n    });\n    localStorage.setItem('Synergysave2', btoa(JSON.stringify(p)));\n    if (button) {\n        const el = document.getElementById('saveinfo');\n        el.textContent = 'Game saved successfully!';\n        setTimeout(() => el.textContent = '', 4000);\n    }\n};\nexport const loadSynergy = () => {\n    const save = localStorage.getItem(\"Synergysave2\");\n    const data = save ? JSON.parse(atob(save)) : null;\n    if (isTesting) {\n        Object.defineProperty(window, 'player', {\n            value: player\n        });\n    }\n    Object.assign(G, Object.assign({}, blankGlobals));\n    if (data) {\n        const hasOwnProperty = {}.hasOwnProperty;\n        const oldCodesUsed = Array.from({ length: 24 }, (_, i) => 'offerpromo' + (i + 1) + 'used');\n        const size = player.codes.size;\n        const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'));\n        if (oldPromoKeys.length > 0) {\n            oldPromoKeys.forEach(k => {\n                const value = data[k];\n                const num = +k.replace(/[^\\d]/g, '');\n                player.codes.set(num, Boolean(value));\n            });\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (!hasOwnProperty.call(player, prop)) {\n                return;\n            }\n            if (isDecimal(player[prop])) {\n                return (player[prop] = new Decimal(data[prop]));\n            }\n            else if (prop === 'codes') {\n                return (player.codes = new Map(data[prop]));\n            }\n            else if (oldCodesUsed.includes(prop)) {\n                return;\n            }\n            else if (Array.isArray(data[prop])) {\n                if (player[prop].length < data[prop].length) {\n                    return player[prop] = data[prop].slice(data[prop].length - player[prop].length);\n                }\n            }\n            return (player[prop] = data[prop]);\n        });\n        if (data.offerpromo24used !== undefined) {\n            player.codes.set(25, false);\n        }\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n        if (!('rngCode' in data)) {\n            player.rngCode = 0;\n        }\n        if (data.loaded1009 === undefined || !data.loaded1009) {\n            player.loaded1009 = false;\n        }\n        if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = false;\n        }\n        if (data.loaded10091 === undefined) {\n            player.loaded10091 = false;\n        }\n        if (data.loaded1010 === undefined) {\n            player.loaded1010 = false;\n        }\n        if (data.loaded10101 === undefined) {\n            player.loaded10101 = false;\n        }\n        if (player.researches[76] === undefined) {\n            player.codes.set(13, false);\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.maxofferings = player.runeshards;\n            player.maxobtainium = player.researchPoints;\n            player.researchPoints += 51200 * player.researches[50];\n            player.researches[50] = 0;\n        }\n        player.maxofferings = player.maxofferings || 0;\n        player.maxobtainium = player.maxobtainium || 0;\n        player.runeshards = player.runeshards || 0;\n        player.researchPoints = player.researchPoints || 0;\n        if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades.offeringPotion === undefined) {\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal(\"1\");\n            player.secondCostParticles = new Decimal(\"1e2\");\n            player.thirdCostParticles = new Decimal(\"1e4\");\n            player.fourthCostParticles = new Decimal(\"1e8\");\n            player.fifthCostParticles = new Decimal(\"1e16\");\n            player.autoSacrificeToggle = false;\n            player.autoResearchToggle = false;\n            player.autoResearch = 0;\n            player.autoSacrifice = 0;\n            player.sacrificeTimer = 0;\n            player.loaded1009 = true;\n            player.codes.set(18, false);\n            player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades);\n        }\n        if (!data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = true;\n            player.codes.set(19, true);\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal(\"1\");\n            player.secondCostParticles = new Decimal(\"1e2\");\n            player.thirdCostParticles = new Decimal(\"1e4\");\n            player.fourthCostParticles = new Decimal(\"1e8\");\n            player.fifthCostParticles = new Decimal(\"1e16\");\n        }\n        if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\n            player.loaded10091 = true;\n            player.researchPoints += 7.5e8 * player.researches[82];\n            player.researchPoints += 2e8 * player.researches[83];\n            player.researchPoints += 4.5e9 * player.researches[84];\n            player.researchPoints += 2.5e7 * player.researches[86];\n            player.researchPoints += 7.5e7 * player.researches[87];\n            player.researchPoints += 3e8 * player.researches[88];\n            player.researchPoints += 1e9 * player.researches[89];\n            player.researchPoints += 2.5e7 * player.researches[90];\n            player.researchPoints += 1e8 * player.researches[91];\n            player.researchPoints += 2e9 * player.researches[92];\n            player.researchPoints += 9e9 * player.researches[93];\n            player.researchPoints += 7.25e10 * player.researches[94];\n            player.researches[86] = 0;\n            player.researches[87] = 0;\n            player.researches[88] = 0;\n            player.researches[89] = 0;\n            player.researches[90] = 0;\n            player.researches[91] = 0;\n            player.researches[92] = 0;\n        }\n        const shop = data.shopUpgrades;\n        if (data.achievements[169] === undefined ||\n            player.achievements[169] === undefined ||\n            (shop.antSpeed === undefined && shop.antSpeedLevel === undefined) ||\n            (shop.antSpeed === undefined && typeof shop.antSpeedLevel === 'undefined') ||\n            data.loaded1010 === undefined ||\n            data.loaded1010 === false) {\n            player.loaded1010 = true;\n            player.codes.set(21, false);\n            player.firstOwnedAnts = 0;\n            player.firstGeneratedAnts = new Decimal(\"0\");\n            player.firstCostAnts = new Decimal(\"1e800\");\n            player.firstProduceAnts = .0001;\n            player.secondOwnedAnts = 0;\n            player.secondGeneratedAnts = new Decimal(\"0\");\n            player.secondCostAnts = new Decimal(\"3\");\n            player.secondProduceAnts = .00005;\n            player.thirdOwnedAnts = 0;\n            player.thirdGeneratedAnts = new Decimal(\"0\");\n            player.thirdCostAnts = new Decimal(\"100\");\n            player.thirdProduceAnts = .00002;\n            player.fourthOwnedAnts = 0;\n            player.fourthGeneratedAnts = new Decimal(\"0\");\n            player.fourthCostAnts = new Decimal(\"1e4\");\n            player.fourthProduceAnts = .00001;\n            player.fifthOwnedAnts = 0;\n            player.fifthGeneratedAnts = new Decimal(\"0\");\n            player.fifthCostAnts = new Decimal(\"1e12\");\n            player.fifthProduceAnts = .000005;\n            player.sixthOwnedAnts = 0;\n            player.sixthGeneratedAnts = new Decimal(\"0\");\n            player.sixthCostAnts = new Decimal(\"1e36\");\n            player.sixthProduceAnts = .000002;\n            player.seventhOwnedAnts = 0;\n            player.seventhGeneratedAnts = new Decimal(\"0\");\n            player.seventhCostAnts = new Decimal(\"1e100\");\n            player.seventhProduceAnts = .000001;\n            player.eighthOwnedAnts = 0;\n            player.eighthGeneratedAnts = new Decimal(\"0\");\n            player.eighthCostAnts = new Decimal(\"1e300\");\n            player.eighthProduceAnts = .00000001;\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.antPoints = new Decimal(\"1\");\n            player.upgrades[38] = 0;\n            player.upgrades[39] = 0;\n            player.upgrades[40] = 0;\n            player.upgrades[76] = 0;\n            player.upgrades[77] = 0;\n            player.upgrades[78] = 0;\n            player.upgrades[79] = 0;\n            player.upgrades[80] = 0;\n            player.shopUpgrades.antSpeed = 0;\n            player.shopUpgrades.shopTalisman = 0;\n            player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            player.unlocks.rrow4 = false;\n            player.researchPoints += 3e7 * player.researches[50];\n            player.researchPoints += 2e9 * player.researches[96];\n            player.researchPoints += 5e9 * player.researches[97];\n            player.researchPoints += 3e10 * player.researches[98];\n            player.researches[50] = 0;\n            player.researches[96] = 0;\n            player.researches[97] = 0;\n            player.researches[98] = 0;\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n            player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n            player.talismanShards = 0;\n            player.commonFragments = 0;\n            player.uncommonFragments = 0;\n            player.rareFragments = 0;\n            player.epicFragments = 0;\n            player.legendaryFragments = 0;\n            player.mythicalFragments = 0;\n            player.buyTalismanShardPercent = 10;\n            player.talismanOne = [null, -1, 1, 1, 1, -1];\n            player.talismanTwo = [null, 1, 1, -1, -1, 1];\n            player.talismanThree = [null, 1, -1, 1, 1, -1];\n            player.talismanFour = [null, -1, -1, 1, 1, 1];\n            player.talismanFive = [null, 1, 1, -1, -1, 1];\n            player.talismanSix = [null, 1, 1, 1, -1, -1];\n            player.talismanSeven = [null, -1, 1, -1, 1, 1];\n            player.antSacrificePoints = 0;\n            player.antSacrificeTimer = 0;\n            player.obtainiumpersecond = 0;\n            player.maxobtainiumpersecond = 0;\n        }\n        if (data.loaded10101 === undefined || data.loaded10101 === false) {\n            player.loaded10101 = true;\n            const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\n                81, 98, 104, 105, 106, 107, 108,\n                109, 110, 111, 112, 113, 114, 115, 116,\n                117, 118, 119, 120, 121, 122, 123, 125];\n            const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\n                2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\n                2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\n                2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20];\n            for (let i = 1; i < refundThese.length; i++) {\n                player.researchPoints += player.researches[refundThese[i]] * refundReward[i];\n                player.researches[refundThese[i]] = 0;\n            }\n            player.autoAntSacrifice = false;\n            player.antMax = false;\n        }\n        if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte(\"1e1200\")) {\n            player.firstCostAnts = new Decimal(\"1e800\");\n            player.firstOwnedAnts = 0;\n        }\n        checkVariablesOnLoad(data);\n        if (data.ascensionCount === undefined || player.ascensionCount === 0) {\n            player.ascensionCount = 0;\n            if (player.ascensionCounter === undefined || (player.ascensionCounter === 0 && player.prestigeCount > 0)) {\n                player.ascensionCounter = 86400 * 90;\n            }\n            player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            player.wowCubes = 0;\n            player.wowTesseracts = 0;\n            player.wowHypercubes = 0;\n            player.cubeBlessings = {\n                accelerator: 0,\n                multiplier: 0,\n                offering: 0,\n                runeExp: 0,\n                obtainium: 0,\n                antSpeed: 0,\n                antSacrifice: 0,\n                antELO: 0,\n                talismanBonus: 0,\n                globalSpeed: 0\n            };\n        }\n        if (data.autoAntSacTimer === undefined) {\n            player.autoAntSacTimer = 900;\n        }\n        if (data.autoAntSacrificeMode === undefined) {\n            player.autoAntSacrificeMode = 0;\n        }\n        if (player.cubeUpgrades[7] === 0 && player.toggles[22]) {\n            for (let i = 22; i <= 26; i++) {\n                player.toggles[i] = false;\n            }\n        }\n        if (player.transcendCount < 0) {\n            player.transcendCount = 0;\n        }\n        if (player.reincarnationCount < 0) {\n            player.reincarnationCount = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n        if (player.resettoggle1 === 0) {\n            player.resettoggle1 = 1;\n            player.resettoggle2 = 1;\n            player.resettoggle3 = 1;\n        }\n        if (player.tesseractAutoBuyerToggle === 0) {\n            player.tesseractAutoBuyerToggle = 1;\n        }\n        if (player.reincarnationCount < 0.5 && player.unlocks.rrow4 === true) {\n            player.unlocks = {\n                coinone: false,\n                cointwo: false,\n                cointhree: false,\n                coinfour: false,\n                prestige: false,\n                generation: false,\n                transcend: false,\n                reincarnate: false,\n                rrow1: false,\n                rrow2: false,\n                rrow3: false,\n                rrow4: false\n            };\n        }\n        if (data.history === undefined || player.history === undefined) {\n            player.history = { ants: [], ascend: [], reset: [] };\n        }\n        if (data.historyShowPerSecond === undefined || player.historyShowPerSecond === undefined) {\n            player.historyShowPerSecond = false;\n            player.historyCountMax = 10;\n        }\n        if (player.currentChallenge.transcension === undefined) {\n            player.currentChallenge = {\n                transcension: 0,\n                reincarnation: 0,\n                ascension: 0,\n            };\n        }\n        if (!Number.isInteger(player.ascendBuilding1.cost)) {\n            player.ascendBuilding1.cost = 1;\n            player.ascendBuilding1.owned = 0;\n            player.ascendBuilding2.cost = 10;\n            player.ascendBuilding2.owned = 0;\n            player.ascendBuilding3.cost = 100;\n            player.ascendBuilding3.owned = 0;\n            player.ascendBuilding4.cost = 1000;\n            player.ascendBuilding4.owned = 0;\n            player.ascendBuilding5.cost = 10000;\n            player.ascendBuilding5.owned = 0;\n        }\n        if (!player.dayCheck) {\n            player.dayCheck = new Date(player.dayCheck);\n        }\n        for (let i = 1; i <= 5; i++) {\n            player['ascendBuilding' + i].generated = new Decimal(player['ascendBuilding' + i].generated);\n        }\n        while (player.achievements[252] === undefined) {\n            player.achievements.push(0);\n        }\n        while (player.researches[200] === undefined) {\n            player.researches.push(0);\n        }\n        while (player.upgrades[140] === undefined) {\n            player.upgrades.push(0);\n        }\n        if (player.saveString === undefined || player.saveString === \"\" || player.saveString === \"Synergism-v1011Test.txt\") {\n            player.saveString = \"Synergism-$VERSION$-$TIME$.txt\";\n        }\n        getElementById(\"saveStringInput\").value = player.saveString;\n        player.wowCubes = player.wowCubes || 0;\n        for (let j = 1; j < 126; j++) {\n            upgradeupdate(j);\n        }\n        for (let j = 1; j <= (200); j++) {\n            updateResearchBG(j);\n        }\n        for (let j = 1; j <= 50; j++) {\n            updateCubeUpgradeBG(j);\n        }\n        player.subtabNumber = 0;\n        G['runescreen'] = \"runes\";\n        document.getElementById(\"toggleRuneSubTab1\").style.backgroundColor = 'crimson';\n        document.getElementById(\"toggleRuneSubTab1\").style.border = '2px solid gold';\n        const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'];\n        if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\n            player.coinbuyamount = 1;\n        }\n        if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\n            player.crystalbuyamount = 1;\n        }\n        if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\n            player.mythosbuyamount = 1;\n        }\n        if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\n            player.particlebuyamount = 1;\n        }\n        if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\n            player.offeringbuyamount = 1;\n        }\n        if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\n            player.tesseractbuyamount = 1;\n        }\n        for (let j = 0; j <= 5; j++) {\n            for (let k = 0; k < 4; k++) {\n                let d;\n                if (k === 0) {\n                    d = 'one';\n                }\n                if (k === 1) {\n                    d = 'ten';\n                }\n                if (k === 2) {\n                    d = 'hundred';\n                }\n                if (k === 3) {\n                    d = 'thousand';\n                }\n                const e = q[j] + d;\n                document.getElementById(e).style.backgroundColor = \"#000000\";\n            }\n            let c;\n            if (player[q[j] + 'buyamount'] === 1) {\n                c = 'one';\n            }\n            if (player[q[j] + 'buyamount'] === 10) {\n                c = 'ten';\n            }\n            if (player[q[j] + 'buyamount'] === 100) {\n                c = 'hundred';\n            }\n            if (player[q[j] + 'buyamount'] === 1000) {\n                c = 'thousand';\n            }\n            const b = q[j] + c;\n            document.getElementById(b).style.backgroundColor = \"green\";\n        }\n        const testArray = [];\n        for (let i = 0; i < G['researchBaseCosts'].length; i++) {\n            testArray.push(G['researchBaseCosts'][i]);\n        }\n        G['researchOrderByCost'] = sortWithIndeces(testArray);\n        player.roombaResearchIndex = 0;\n        if (player.shoptoggles.coin === false) {\n            document.getElementById(\"shoptogglecoin\").textContent = \"Auto: OFF\";\n        }\n        if (player.shoptoggles.prestige === false) {\n            document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: OFF\";\n        }\n        if (player.shoptoggles.transcend === false) {\n            document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: OFF\";\n        }\n        if (player.shoptoggles.generators === false) {\n            document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: OFF\";\n        }\n        if (!player.shoptoggles.reincarnate) {\n            document.getElementById('particleAutoUpgrade').textContent = \"Auto: OFF\";\n        }\n        getChallengeConditions();\n        updateChallengeDisplay();\n        revealStuff();\n        toggleauto();\n        document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\n        getElementById(\"startAutoChallengeTimerInput\").value = player.autoChallengeTimer.start + '';\n        document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\n        getElementById(\"exitAutoChallengeTimerInput\").value = player.autoChallengeTimer.exit + '';\n        document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\n        getElementById(\"enterAutoChallengeTimerInput\").value = player.autoChallengeTimer.enter + '';\n        for (let i = 0; i < 4; i++) {\n            corruptionLoadoutTableUpdate(i);\n        }\n        showCorruptionStatsLoadouts();\n        for (let j = 1; j <= 5; j++) {\n            const ouch = document.getElementById(\"tesseractAutoToggle\" + j);\n            (player.autoTesseracts[j]) ?\n                (ouch.textContent = \"Auto [ON]\", ouch.style.border = \"2px solid green\") :\n                (ouch.textContent = \"Auto [OFF]\", ouch.style.border = \"2px solid red\");\n        }\n        document.getElementById(\"buyRuneBlessingToggleValue\").textContent = format(player.runeBlessingBuyAmount, 0, true);\n        document.getElementById(\"buyRuneSpiritToggleValue\").textContent = format(player.runeSpiritBuyAmount, 0, true);\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\n        document.getElementById(\"talismanlevelup\").style.display = \"none\";\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\n        calculatePlatonicBlessings();\n        calculateHypercubeBlessings();\n        calculateTesseractBlessings();\n        calculateCubeBlessings();\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        updateTalismanAppearance(7);\n        for (const id in player.ascStatToggles) {\n            toggleAscStatPerSecond(+id);\n            toggleAscStatPerSecond(+id);\n        }\n        if (player.resettoggle1 === 1) {\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n        if (player.resettoggle2 === 1) {\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n        if (player.resettoggle3 === 1) {\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n        if (player.resettoggle1 === 2) {\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\";\n        }\n        if (player.resettoggle2 === 2) {\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\";\n        }\n        if (player.resettoggle3 === 2) {\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\";\n        }\n        if (player.tesseractAutoBuyerToggle === 1) {\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\";\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\";\n        }\n        if (player.tesseractAutoBuyerToggle === 2) {\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\";\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\";\n        }\n        if (player.autoResearchToggle) {\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: ON\";\n        }\n        if (!player.autoResearchToggle) {\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: OFF\";\n        }\n        if (player.autoSacrificeToggle == true) {\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: ON\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\";\n        }\n        if (player.autoSacrificeToggle == false) {\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: OFF\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\";\n        }\n        if (player.autoFortifyToggle == true) {\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: ON\";\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid green\";\n        }\n        if (player.autoFortifyToggle == false) {\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: OFF\";\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid red\";\n        }\n        if (player.autoEnhanceToggle == true) {\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: ON\";\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid green\";\n        }\n        if (player.autoEnhanceToggle == false) {\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: OFF\";\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid red\";\n        }\n        if (!player.autoAscend) {\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\";\n        }\n        for (let i = 1; i <= 2; i++) {\n            toggleAntMaxBuy();\n            toggleAntAutoSacrifice(0);\n            toggleAntAutoSacrifice(1);\n        }\n        document.getElementById(\"historyTogglePerSecondButton\").textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\n        document.getElementById(\"historyTogglePerSecondButton\").style.borderColor = (player.historyShowPerSecond ? \"green\" : \"red\");\n        if (!player.autoAscend) {\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\";\n        }\n        player.autoResearch = Math.min(200, player.autoResearch);\n        player.autoSacrifice = Math.min(5, player.autoSacrifice);\n        if (player.researches[61] === 0) {\n            document.getElementById('automaticobtainium').textContent = \"[LOCKED - Buy Research 3x11]\";\n        }\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"orange\";\n        }\n        if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\n            document.getElementById(\"rune\" + player.autoSacrifice).style.backgroundColor = \"orange\";\n        }\n        calculateOffline();\n        toggleTalismanBuy(player.buyTalismanShardPercent);\n        updateTalismanInventory();\n        calculateObtainium();\n        calculateAnts();\n        calculateRuneLevels();\n        resetHistoryRenderAllTables();\n        c15RewardUpdate();\n    }\n    CSSAscend();\n    CSSRuneBlessings();\n    updateAchievementBG();\n    const d = new Date();\n    const h = d.getHours();\n    const m = d.getMinutes();\n    const s = d.getSeconds();\n    player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h));\n};\nexport const format = (input, accuracy = 0, long = false) => {\n    if (!(input instanceof Decimal) && typeof input !== 'number') {\n        return '0 [und.]';\n    }\n    let power;\n    let mantissa;\n    if (isDecimal(input)) {\n        power = input.e;\n        mantissa = input.mantissa;\n    }\n    else if (typeof input === 'number') {\n        if (input === 0) {\n            return '0';\n        }\n        power = Math.floor(Math.log10(Math.abs(input)));\n        mantissa = input / Math.pow(10, power);\n    }\n    if (mantissa > 9.9999999) {\n        mantissa = 1;\n        ++power;\n    }\n    if (mantissa < 1 && mantissa > 0.9999999) {\n        mantissa = 1;\n    }\n    if (power < -12) {\n        return '0';\n    }\n    else if (power < 6 || (long && power < 13)) {\n        let standard = mantissa * Math.pow(10, power);\n        let standardString;\n        if (standard - Math.floor(standard) > 0.9999999) {\n            standard = Math.ceil(standard);\n        }\n        if ((power < 1 || (long && power < 3)) && accuracy > 0) {\n            standardString = standard.toFixed(accuracy);\n        }\n        else {\n            standard = Math.floor(standard);\n            standardString = standard.toString();\n        }\n        const [front, back] = standardString.split('.');\n        const frontFormatted = typeof BigInt === 'function'\n            ? BigInt(front).toLocaleString()\n            : front.replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n        return !back\n            ? frontFormatted\n            : `${frontFormatted}.${back}`;\n    }\n    else if (power < 1e6) {\n        const mantissaLook = (Math.floor(mantissa * 100) / 100).toFixed(2);\n        const powerLook = typeof BigInt === 'function'\n            ? BigInt(power).toLocaleString()\n            : power.toString().replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n        return `${mantissaLook}e${powerLook}`;\n    }\n    else if (power >= 1e6) {\n        let mantissaLook = (Math.floor(mantissa * 100) / 100).toFixed(2);\n        if (isTesting) {\n            mantissaLook = \"\";\n        }\n        const powerDigits = Math.ceil(Math.log10(power));\n        let powerFront = ((powerDigits - 1) % 3) + 1;\n        let powerLook = power / Math.pow(10, powerDigits - powerFront);\n        if (powerLook === 1000) {\n            powerLook = 1;\n            powerFront = 1;\n        }\n        const powerLookF = powerLook.toFixed(4 - powerFront);\n        if (power < 1e9) {\n            return `${mantissaLook}e${powerLookF}M`;\n        }\n        if (power < 1e12) {\n            return `${mantissaLook}e${powerLookF}B`;\n        }\n        if (power < 1e15) {\n            return `${mantissaLook}e${powerLookF}T`;\n        }\n        if (power < 1e18) {\n            return `${mantissaLook}e${powerLookF}Qa`;\n        }\n        if (power < 1e21) {\n            return `${mantissaLook}e${powerLookF}Qi`;\n        }\n        if (power < 1e24) {\n            return `${mantissaLook}e${powerLookF}Sx`;\n        }\n        if (power < 1e27) {\n            return `${mantissaLook}e${powerLookF}Sp`;\n        }\n        if (power < 1e30) {\n            return `${mantissaLook}e${powerLookF}Oc`;\n        }\n        if (power < 1e33) {\n            return `${mantissaLook}e${powerLookF}No`;\n        }\n        if (power < 1e36) {\n            return `${mantissaLook}e${powerLookF}Dc`;\n        }\n        if (power < 1e39) {\n            return `${mantissaLook}e${powerLookF}UDc`;\n        }\n        if (power < 1e42) {\n            return `${mantissaLook}e${powerLookF}DDc`;\n        }\n        if (power < 1e45) {\n            return `${mantissaLook}e${powerLookF}TDc`;\n        }\n        if (power < 1e48) {\n            return `${mantissaLook}e${powerLookF}QaDc`;\n        }\n        if (power < 1e51) {\n            return `${mantissaLook}e${powerLookF}QaDc`;\n        }\n        return `${mantissa}e${power}`;\n    }\n    else {\n        return `0 [und.]`;\n    }\n};\nexport const formatTimeShort = (seconds, msMaxSeconds) => {\n    return ((seconds >= 86400)\n        ? format(Math.floor(seconds / 86400)) + \"d\"\n        : '') +\n        ((seconds >= 3600)\n            ? format(Math.floor(seconds / 3600) % 24) + \"h\"\n            : '') +\n        ((seconds >= 60)\n            ? format(Math.floor(seconds / 60) % 60) + \"m\"\n            : '') +\n        format(Math.floor(seconds) % 60) +\n        ((msMaxSeconds && seconds < msMaxSeconds)\n            ? \".\" + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0'))\n            : '') + \"s\";\n};\nexport const updateAllTick = () => {\n    let a = 0;\n    G['totalAccelerator'] = player.acceleratorBought;\n    G['costDivisor'] = 1;\n    if (player.upgrades[8] !== 0) {\n        a += Math.floor(player.multiplierBought / 7);\n    }\n    if (player.upgrades[21] !== 0) {\n        a += 5;\n    }\n    if (player.upgrades[22] !== 0) {\n        a += 4;\n    }\n    if (player.upgrades[23] !== 0) {\n        a += 3;\n    }\n    if (player.upgrades[24] !== 0) {\n        a += 2;\n    }\n    if (player.upgrades[25] !== 0) {\n        a += 1;\n    }\n    if (player.upgrades[27] !== 0) {\n        a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50));\n    }\n    if (player.upgrades[29] !== 0) {\n        a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80));\n    }\n    if (player.upgrades[32] !== 0) {\n        a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)));\n    }\n    if (player.upgrades[45] !== 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)));\n    }\n    if (player.achievements[5] !== 0) {\n        a += Math.floor(player.firstOwnedCoin / 500);\n    }\n    if (player.achievements[12] !== 0) {\n        a += Math.floor(player.secondOwnedCoin / 500);\n    }\n    if (player.achievements[19] !== 0) {\n        a += Math.floor(player.thirdOwnedCoin / 500);\n    }\n    if (player.achievements[26] !== 0) {\n        a += Math.floor(player.fourthOwnedCoin / 500);\n    }\n    if (player.achievements[33] !== 0) {\n        a += Math.floor(player.fifthOwnedCoin / 500);\n    }\n    if (player.achievements[60] !== 0) {\n        a += 2;\n    }\n    if (player.achievements[61] !== 0) {\n        a += 2;\n    }\n    if (player.achievements[62] !== 0) {\n        a += 2;\n    }\n    a += 5 * CalcECC('transcend', player.challengecompletions[2]);\n    G['freeUpgradeAccelerator'] = a;\n    a += G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]);\n    if (player.unlocks.prestige === true) {\n        a += Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 4, 1.25));\n        a *= (1 + G['rune1level'] * 1 / 400 * G['effectiveLevelMult']);\n    }\n    calculateAcceleratorMultiplier();\n    a *= G['acceleratorMultiplier'];\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))));\n    a *= G['challenge15Rewards'].accelerator;\n    a = Math.floor(a);\n    G['freeAccelerator'] = a;\n    G['totalAccelerator'] += G['freeAccelerator'];\n    G['tuSevenMulti'] = 1;\n    if (player.upgrades[46] > 0.5) {\n        G['tuSevenMulti'] = 1.05;\n    }\n    G['acceleratorPower'] = Math.pow(1.1 + G['tuSevenMulti'] *\n        (G['totalAcceleratorBoost'] / 100)\n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20), 1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]));\n    G['acceleratorPower'] += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100;\n    for (let i = 1; i <= 5; i++) {\n        if (player.achievements[7 * i - 4] > 0) {\n            G['acceleratorPower'] += 0.0005 * i;\n        }\n    }\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['acceleratorPower'] *= 25 / (50 + player.challengecompletions[1]);\n            G['acceleratorPower'] += 0.55;\n            G['acceleratorPower'] = Math.max(1, G['acceleratorPower']);\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['acceleratorPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 3) {\n            G['acceleratorPower'] =\n                1.05 +\n                    2 * G['tuSevenMulti'] *\n                        (G['totalAcceleratorBoost'] / 300) *\n                        (1 + CalcECC('transcend', player.challengecompletions[2]) / 20);\n        }\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        G['acceleratorPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorPower'] = 1;\n    }\n    if (player.currentChallenge.transcension !== 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator']);\n    }\n    if (player.currentChallenge.transcension === 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator'] + G['totalMultiplier']);\n    }\n    G['acceleratorEffectDisplay'] = new Decimal(G['acceleratorPower'] * 100 - 100);\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorEffect'] = new Decimal(1);\n    }\n    G['generatorPower'] = new Decimal(1);\n    if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\n        G['generatorPower'] = Decimal.pow(1.02, G['totalAccelerator']);\n    }\n};\nexport const updateAllMultiplier = () => {\n    let a = 0;\n    if (player.upgrades[7] > 0) {\n        a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)));\n    }\n    if (player.upgrades[9] > 0) {\n        a += Math.floor(player.acceleratorBought / 10);\n    }\n    if (player.upgrades[21] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[22] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[23] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[24] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[25] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[28] > 0) {\n        a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160));\n    }\n    if (player.upgrades[30] > 0) {\n        a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)));\n    }\n    if (player.upgrades[33] > 0) {\n        a += G['totalAcceleratorBoost'];\n    }\n    if (player.upgrades[49] > 0) {\n        a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)));\n    }\n    if (player.upgrades[68] > 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(G['taxdivisor'], 10) * 1 / 1000));\n    }\n    if (player.challengecompletions[1] > 0) {\n        a += 1;\n    }\n    if (player.achievements[6] > 0.5) {\n        a += Math.floor(player.firstOwnedCoin / 1000);\n    }\n    if (player.achievements[13] > 0.5) {\n        a += Math.floor(player.secondOwnedCoin / 1000);\n    }\n    if (player.achievements[20] > 0.5) {\n        a += Math.floor(player.thirdOwnedCoin / 1000);\n    }\n    if (player.achievements[27] > 0.5) {\n        a += Math.floor(player.fourthOwnedCoin / 1000);\n    }\n    if (player.achievements[34] > 0.5) {\n        a += Math.floor(player.fifthOwnedCoin / 1000);\n    }\n    if (player.achievements[57] > 0.5) {\n        a += 1;\n    }\n    if (player.achievements[58] > 0.5) {\n        a += 1;\n    }\n    if (player.achievements[59] > 0.5) {\n        a += 1;\n    }\n    a += 20 * player.researches[94] * Math.floor((G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']) / 8);\n    G['freeUpgradeMultiplier'] = a;\n    if (player.achievements[38] > 0.5) {\n        a += Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) *\n            Math.floor(1 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100;\n    }\n    a *= (1 + player.achievements[57] / 100);\n    a *= (1 + player.achievements[58] / 100);\n    a *= (1 + player.achievements[59] / 100);\n    a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]);\n    if (player.upgrades[34] > 0.5) {\n        a *= 1.03 * 100 / 100;\n    }\n    if (player.upgrades[35] > 0.5) {\n        a *= 1.05 / 1.03 * 100 / 100;\n    }\n    a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15]);\n    a *= (1 + G['rune2level'] / 400 * G['effectiveLevelMult']);\n    a *= (1 + 1 / 20 * player.researches[87]);\n    a *= (1 + 1 / 100 * player.researches[128]);\n    a *= (1 + 0.8 / 100 * player.researches[143]);\n    a *= (1 + 0.6 / 100 * player.researches[158]);\n    a *= (1 + 0.4 / 100 * player.researches[173]);\n    a *= (1 + 0.2 / 100 * player.researches[188]);\n    a *= (1 + 0.01 / 100 * player.researches[200]);\n    a *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\n    a *= calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39);\n    a *= G['cubeBonusMultiplier'][2];\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        a *= 1.25;\n    }\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))));\n    a *= G['challenge15Rewards'].multiplier;\n    a = Math.floor(a);\n    G['freeMultiplier'] = a;\n    G['totalMultiplier'] = G['freeMultiplier'] + player.multiplierBought;\n    G['challengeOneLog'] = 3;\n    let b = 0;\n    let c = 0;\n    b += Decimal.log(player.transcendShards.add(1), 3);\n    b *= (1 + 11 * player.researches[33] / 100);\n    b *= (1 + 11 * player.researches[34] / 100);\n    b *= (1 + 11 * player.researches[35] / 100);\n    b *= (1 + player.researches[89] / 5);\n    b *= (1 + 10 * G['effectiveRuneBlessingPower'][2]);\n    c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])));\n    c += (CalcECC('transcend', player.challengecompletions[1]) * 10);\n    G['freeMultiplierBoost'] = c;\n    G['totalMultiplierBoost'] = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04);\n    let c7 = 1;\n    if (player.challengecompletions[7] > 0.5) {\n        c7 = 1.25;\n    }\n    G['multiplierPower'] = 2 + 0.005 * G['totalMultiplierBoost'] * c7;\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['multiplierPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['multiplierPower'] = (1.25 + 0.0012 * (b + c) * c7);\n        }\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        G['multiplierPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['multiplierPower'] = 1;\n    }\n    G['multiplierEffect'] = Decimal.pow(G['multiplierPower'], G['totalMultiplier']);\n};\nexport const multipliers = () => {\n    let s = new Decimal(1);\n    let c = new Decimal(1);\n    let crystalExponent = 1 / 3;\n    crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3], 0.05 * player.crystalUpgrades[3]);\n    crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3]);\n    crystalExponent += 0.08 * player.researches[28];\n    crystalExponent += 0.08 * player.researches[29];\n    crystalExponent += 0.04 * player.researches[30];\n    crystalExponent += 8 * player.cubeUpgrades[17];\n    G['prestigeMultiplier'] = Decimal.pow(player.prestigeShards, crystalExponent).add(1);\n    let c7 = 1;\n    if (player.currentChallenge.reincarnation === 7) {\n        c7 = 0.05;\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        c7 = 0;\n    }\n    G['buildingPower'] =\n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(player.reincarnationShards.add(1), 10) *\n            (1 + 1 / 20 * player.researches[36] +\n                1 / 40 * player.researches[37] + 1 / 40 *\n                player.researches[38]) +\n            (c7 + 0.2) * 0.25 / 1.2 *\n                CalcECC('reincarnation', player.challengecompletions[8]);\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[12] * 0.09);\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[36] * 0.05);\n    G['reincarnationMultiplier'] = Decimal.pow(G['buildingPower'], G['totalCoinOwned']);\n    G['antMultiplier'] = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp());\n    s = s.times(G['multiplierEffect']);\n    s = s.times(G['acceleratorEffect']);\n    s = s.times(G['prestigeMultiplier']);\n    s = s.times(G['reincarnationMultiplier']);\n    s = s.times(G['antMultiplier']);\n    const first6CoinUp = new Decimal(G['totalCoinOwned'] + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G['totalCoinOwned'])));\n    if (player.upgrades[6] > 0.5) {\n        s = s.times(first6CoinUp);\n    }\n    if (player.upgrades[12] > 0.5) {\n        s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)));\n    }\n    if (player.upgrades[20] > 0.5) {\n        s = s.times(Math.pow(G['totalCoinOwned'] / 4 + 1, 10));\n    }\n    if (player.upgrades[41] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)));\n    }\n    if (player.upgrades[43] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)));\n    }\n    if (player.upgrades[48] > 0.5) {\n        s = s.times(Decimal.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8));\n    }\n    if (player.currentChallenge.reincarnation === 6) {\n        s = s.dividedBy(1e250);\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        s = s.dividedBy(\"1e1250\");\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        s = s.dividedBy(\"1e2000000\");\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        s = s.dividedBy(\"1e12500000\");\n    }\n    c = Decimal.pow(s, 1 + 0.001 * player.researches[17]);\n    let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123]);\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\n        lol = Decimal.pow(lol, 1.1);\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\n        lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)));\n    }\n    lol = Decimal.pow(lol, G['challenge15Rewards'].coinExponent);\n    G['globalCoinMultiplier'] = lol;\n    G['globalCoinMultiplier'] = Decimal.pow(G['globalCoinMultiplier'], G['financialcollapsePower'][player.usedCorruptions[9]]);\n    G['coinOneMulti'] = new Decimal(1);\n    if (player.upgrades[1] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[10] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)));\n    }\n    if (player.upgrades[56] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(\"1e5000\");\n    }\n    G['coinTwoMulti'] = new Decimal(1);\n    if (player.upgrades[2] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[13] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)));\n    }\n    if (player.upgrades[19] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)));\n    }\n    if (player.upgrades[57] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(\"1e7500\");\n    }\n    G['coinThreeMulti'] = new Decimal(1);\n    if (player.upgrades[3] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[18] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(Decimal.min(1e125, player.transcendShards.add(1)));\n    }\n    if (player.upgrades[58] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(\"1e15000\");\n    }\n    G['coinFourMulti'] = new Decimal(1);\n    if (player.upgrades[4] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[17] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(1e100);\n    }\n    if (player.upgrades[59] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(\"1e25000\");\n    }\n    G['coinFiveMulti'] = new Decimal(1);\n    if (player.upgrades[5] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[60] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(\"1e35000\");\n    }\n    G['globalCrystalMultiplier'] = new Decimal(1);\n    if (player.achievements[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(2);\n    }\n    if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.log(player.prestigePoints.add(1), 10));\n    }\n    if (player.achievements[43] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier']\n            .times(Decimal.pow(G['rune3level'] / 2 * G['effectiveLevelMult'], 2)\n            .times(Decimal.pow(2, G['rune3level'] * G['effectiveLevelMult'] / 2 - 8))\n            .add(1));\n    }\n    if (player.upgrades[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)));\n    }\n    if (player.upgrades[63] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6)));\n    }\n    if (player.researches[39] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 50));\n    }\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[26]));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[27]));\n    G['globalMythosMultiplier'] = new Decimal(1);\n    if (player.upgrades[37] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2));\n    }\n    if (player.upgrades[42] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)));\n    }\n    if (player.upgrades[47] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Math.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1);\n    }\n    if (player.upgrades[51] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['totalAcceleratorBoost'], 2));\n    }\n    if (player.upgrades[52] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['globalMythosMultiplier'], 0.025));\n    }\n    if (player.upgrades[64] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(player.reincarnationPoints.add(1), 2));\n    }\n    if (player.researches[40] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 250));\n    }\n    G['grandmasterMultiplier'] = new Decimal(1);\n    G['totalMythosOwned'] = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos;\n    G['mythosBuildingPower'] = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200);\n    G['challengeThreeMultiplier'] = Decimal.pow(G['mythosBuildingPower'], G['totalMythosOwned']);\n    G['grandmasterMultiplier'] = G['grandmasterMultiplier'].times(G['challengeThreeMultiplier']);\n    G['mythosupgrade13'] = new Decimal(1);\n    G['mythosupgrade14'] = new Decimal(1);\n    G['mythosupgrade15'] = new Decimal(1);\n    if (player.upgrades[53] === 1) {\n        G['mythosupgrade13'] = G['mythosupgrade13'].times(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)));\n    }\n    if (player.upgrades[54] === 1) {\n        G['mythosupgrade14'] = G['mythosupgrade14'].times(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)));\n    }\n    if (player.upgrades[55] === 1) {\n        G['mythosupgrade15'] = G['mythosupgrade15'].times(Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1)));\n    }\n    G['globalAntMult'] = new Decimal(1);\n    G['globalAntMult'] = G['globalAntMult'].times(1 + 1 / 2500 * Math.pow(G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)), 2));\n    if (player.upgrades[76] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(5);\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts));\n    G['globalAntMult'] = G['globalAntMult'].times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2));\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.125, player.shopUpgrades.antSpeed));\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[1 - 1] + G['bonusant1']));\n    G['globalAntMult'] = G['globalAntMult'].times(antSacrificePointsToMultiplier(player.antSacrificePoints));\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Math.max(1, player.researchPoints), G['effectiveRuneBlessingPower'][5]));\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1 + G['runeSum'] / 100, G['talisman6Power']));\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])));\n    G['globalAntMult'] = G['globalAntMult'].times(G['cubeBonusMultiplier'][6]);\n    if (player.achievements[169] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10));\n    }\n    if (player.achievements[171] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.16666);\n    }\n    if (player.achievements[172] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))));\n    }\n    if (player.upgrades[39] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.60);\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]));\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])));\n    if (player.researches[147] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10));\n    }\n    if (player.researches[177] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]));\n    }\n    if (player.currentChallenge.ascension === 12) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.5);\n    }\n    if (player.currentChallenge.ascension === 13) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.23);\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.2);\n    }\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)));\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], G['extinctionMultiplier'][player.usedCorruptions[7]]);\n    G['globalAntMult'] = G['globalAntMult'].times(G['challenge15Rewards'].antSpeed);\n    if (player.platonicUpgrades[12] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)));\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1.25);\n    }\n    G['globalConstantMult'] = new Decimal(\"1\");\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1.05, player.constantUpgrades[1]));\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1 + 0.001 * Math.min(100, player.constantUpgrades[2]), player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned));\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 2 / 100 * player.researches[139]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 3 / 100 * player.researches[154]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 4 / 100 * player.researches[169]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 5 / 100 * player.researches[184]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 10 / 100 * player.researches[199]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(G['challenge15Rewards'].constantBonus);\n    if (player.platonicUpgrades[5] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(2);\n    }\n    if (player.platonicUpgrades[10] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(10);\n    }\n    if (player.platonicUpgrades[15] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(1e5);\n    }\n};\nexport const resourceGain = (dt) => {\n    calculateTotalCoinOwned();\n    calculateTotalAcceleratorBoost();\n    updateAllTick();\n    updateAllMultiplier();\n    multipliers();\n    calculatetax();\n    if (G['produceTotal'].gte(0.001)) {\n        const addcoin = Decimal.min(G['produceTotal'].dividedBy(G['taxdivisor']), Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)));\n        player.coins = player.coins.add(addcoin.times(dt / 0.025));\n        player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin.times(dt / 0.025));\n        player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin.times(dt / 0.025));\n        player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin.times(dt / 0.025));\n        player.coinsTotal = player.coinsTotal.add(addcoin.times(dt / 0.025));\n    }\n    resetCurrency();\n    if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\n        player.prestigePoints = player.prestigePoints.add(Decimal.floor(G['prestigePointGain'].dividedBy(4000).times(dt / 0.025)));\n    }\n    if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\n        player.transcendPoints = player.transcendPoints.add(Decimal.floor(G['transcendPointGain'].dividedBy(4000).times(dt / 0.025)));\n    }\n    if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\n        player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G['reincarnationPointGain'].dividedBy(4000).times(dt / 0.025)));\n    }\n    G['produceFirstDiamonds'] = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceSecondDiamonds'] = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceThirdDiamonds'] = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceFourthDiamonds'] = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceFifthDiamonds'] = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G['globalCrystalMultiplier']);\n    player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G['produceFifthDiamonds'].times(dt / 0.025));\n    player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G['produceFourthDiamonds'].times(dt / 0.025));\n    player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G['produceThirdDiamonds'].times(dt / 0.025));\n    player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G['produceSecondDiamonds'].times(dt / 0.025));\n    G['produceDiamonds'] = G['produceFirstDiamonds'];\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.prestigeShards = player.prestigeShards.add(G['produceDiamonds'].times(dt / 0.025));\n    }\n    G['produceFifthMythos'] = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G['globalMythosMultiplier']).times(G['grandmasterMultiplier']).times(G['mythosupgrade15']);\n    G['produceFourthMythos'] = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G['globalMythosMultiplier']);\n    G['produceThirdMythos'] = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade14']);\n    G['produceSecondMythos'] = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G['globalMythosMultiplier']);\n    G['produceFirstMythos'] = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\n    player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G['produceFifthMythos'].times(dt / 0.025));\n    player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G['produceFourthMythos'].times(dt / 0.025));\n    player.secondGeneratedMythos = player.secondGeneratedMythos.add(G['produceThirdMythos'].times(dt / 0.025));\n    player.firstGeneratedMythos = player.firstGeneratedMythos.add(G['produceSecondMythos'].times(dt / 0.025));\n    G['produceMythos'] = new Decimal(\"0\");\n    G['produceMythos'] = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\n    G['producePerSecondMythos'] = G['produceMythos'].times(40);\n    let pm = new Decimal('1');\n    if (player.upgrades[67] > 0.5) {\n        pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles));\n    }\n    G['produceFifthParticles'] = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles);\n    G['produceFourthParticles'] = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles);\n    G['produceThirdParticles'] = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles);\n    G['produceSecondParticles'] = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles);\n    G['produceFirstParticles'] = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm);\n    player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G['produceFifthParticles'].times(dt / 0.025));\n    player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G['produceFourthParticles'].times(dt / 0.025));\n    player.secondGeneratedParticles = player.secondGeneratedParticles.add(G['produceThirdParticles'].times(dt / 0.025));\n    player.firstGeneratedParticles = player.firstGeneratedParticles.add(G['produceSecondParticles'].times(dt / 0.025));\n    G['produceParticles'] = new Decimal(\"0\");\n    G['produceParticles'] = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm);\n    G['producePerSecondParticles'] = G['produceParticles'].times(40);\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.transcendShards = player.transcendShards.add(G['produceMythos'].times(dt / 0.025));\n    }\n    if (player.currentChallenge.reincarnation !== 10) {\n        player.reincarnationShards = player.reincarnationShards.add(G['produceParticles'].times(dt / 0.025));\n    }\n    G['antEightProduce'] = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G['globalAntMult']);\n    G['antSevenProduce'] = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G['globalAntMult']);\n    G['antSixProduce'] = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G['globalAntMult']);\n    G['antFiveProduce'] = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G['globalAntMult']);\n    G['antFourProduce'] = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G['globalAntMult']);\n    G['antThreeProduce'] = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G['globalAntMult']);\n    G['antTwoProduce'] = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G['globalAntMult']);\n    G['antOneProduce'] = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G['globalAntMult']);\n    player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G['antEightProduce'].times(dt / 1));\n    player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G['antSevenProduce'].times(dt / 1));\n    player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G['antSixProduce'].times(dt / 1));\n    player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G['antFiveProduce'].times(dt / 1));\n    player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G['antFourProduce'].times(dt / 1));\n    player.secondGeneratedAnts = player.secondGeneratedAnts.add(G['antThreeProduce'].times(dt / 1));\n    player.firstGeneratedAnts = player.firstGeneratedAnts.add(G['antTwoProduce'].times(dt / 1));\n    player.antPoints = player.antPoints.add(G['antOneProduce'].times(dt / 1));\n    for (let i = 1; i <= 5; i++) {\n        G['ascendBuildingProduction'][G['ordinals'][5 - i]] = (player['ascendBuilding' + (6 - i)]['generated']).add(player['ascendBuilding' + (6 - i)]['owned']).times(player['ascendBuilding' + i]['multiplier']).times(G['globalConstantMult']);\n        if (i !== 5) {\n            player['ascendBuilding' + (5 - i)]['generated'] = player['ascendBuilding' + (5 - i)]['generated']\n                .add(G['ascendBuildingProduction'][G['ordinals'][5 - i]].times(dt));\n        }\n    }\n    player.ascendShards = player.ascendShards.add(G['ascendBuildingProduction'].first.times(dt));\n    if (player.ascensionCount > 0) {\n        ascensionAchievementCheck(2);\n    }\n    if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G['challengeBaseRequirements'][0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\n        player.challengecompletions[1] += 1;\n        challengeDisplay(1, false);\n        challengeachievementcheck(1, true);\n    }\n    if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G['challengeBaseRequirements'][1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\n        player.challengecompletions[2] += 1;\n        challengeDisplay(2, false);\n        challengeachievementcheck(2, true);\n    }\n    if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G['challengeBaseRequirements'][2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\n        player.challengecompletions[3] += 1;\n        challengeDisplay(3, false);\n        challengeachievementcheck(3, true);\n    }\n    if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G['challengeBaseRequirements'][3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\n        player.challengecompletions[4] += 1;\n        challengeDisplay(4, false);\n        challengeachievementcheck(4, true);\n    }\n    if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G['challengeBaseRequirements'][4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\n        player.challengecompletions[5] += 1;\n        challengeDisplay(5, false);\n        challengeachievementcheck(5, true);\n    }\n    if (player.coins.gte(1000) && player.unlocks.coinone === false) {\n        player.unlocks.coinone = true;\n        revealStuff();\n    }\n    if (player.coins.gte(20000) && player.unlocks.cointwo === false) {\n        player.unlocks.cointwo = true;\n        revealStuff();\n    }\n    if (player.coins.gte(100000) && player.unlocks.cointhree === false) {\n        player.unlocks.cointhree = true;\n        revealStuff();\n    }\n    if (player.coins.gte(8e6) && player.unlocks.coinfour === false) {\n        player.unlocks.coinfour = true;\n        revealStuff();\n    }\n    if (player.antPoints.gte(3) && player.achievements[169] === 0) {\n        achievementaward(169);\n    }\n    if (player.antPoints.gte(1e5) && player.achievements[170] === 0) {\n        achievementaward(170);\n    }\n    if (player.antPoints.gte(666666666) && player.achievements[171] === 0) {\n        achievementaward(171);\n    }\n    if (player.antPoints.gte(1e20) && player.achievements[172] === 0) {\n        achievementaward(172);\n    }\n    if (player.antPoints.gte(1e40) && player.achievements[173] === 0) {\n        achievementaward(173);\n    }\n    if (player.antPoints.gte(\"1e500\") && player.achievements[174] === 0) {\n        achievementaward(174);\n    }\n    if (player.antPoints.gte(\"1e2500\") && player.achievements[175] === 0) {\n        achievementaward(175);\n    }\n    const chal = player.currentChallenge.transcension;\n    const reinchal = player.currentChallenge.reincarnation;\n    const ascendchal = player.currentChallenge.ascension;\n    if (chal !== 0) {\n        if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) {\n            resetCheck('challenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal < 9 && reinchal !== 0) {\n        if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            resetCheck('reincarnationchallenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n            if (player.challengecompletions[reinchal] >= (25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension)) {\n                player.autoChallengeIndex += 1;\n            }\n        }\n    }\n    if (reinchal >= 9) {\n        if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            resetCheck('reincarnationchallenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n            if (player.challengecompletions[reinchal] >= (25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension)) {\n                player.autoChallengeIndex += 1;\n                if (player.autoChallengeIndex > 10) {\n                    player.autoChallengeIndex = 1;\n                }\n            }\n        }\n    }\n    if (ascendchal !== 0 && ascendchal < 15) {\n        if (player.challengecompletions[10] >= challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal)) {\n            resetCheck('ascensionChallenge', false);\n            challengeachievementcheck(ascendchal, true);\n        }\n    }\n    if (ascendchal === 15) {\n        if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\n            resetCheck('ascensionChallenge', false);\n        }\n    }\n};\nexport const resetCurrency = () => {\n    let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100;\n    let transcendPow = 0.03;\n    if (player.currentChallenge.transcension === 5) {\n        prestigePow = 0.01 / (1 + player.challengecompletions[5]);\n        transcendPow = 0.001;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        prestigePow = (1e-4) / (1 + player.challengecompletions[10]);\n        transcendPow = 0.001;\n    }\n    prestigePow *= G['deflationMultiplier'][player.usedCorruptions[6]];\n    G['prestigePointGain'] = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow));\n    if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['prestigePointGain'] = G['prestigePointGain'].times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G['acceleratorEffect'], 1 / 3 * G['deflationMultiplier'][player.usedCorruptions[6]])));\n    }\n    G['transcendPointGain'] = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow));\n    if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['transcendPointGain'] = G['transcendPointGain'].times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)));\n    }\n    G['reincarnationPointGain'] = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01));\n    if (player.currentChallenge.reincarnation !== 0) {\n        G['reincarnationPointGain'] = Decimal.pow(G['reincarnationPointGain'], 0.01);\n    }\n    if (player.achievements[50] === 1) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(2);\n    }\n    if (player.upgrades[65] > 0.5) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(5);\n    }\n    if (player.currentChallenge.ascension === 12) {\n        G['reincarnationPointGain'] = new Decimal(\"0\");\n    }\n};\nexport const resetCheck = (i, manual = true, leaving = false) => {\n    if (i === 'prestige') {\n        if (player.coinsThisPrestige.gte(1e16) || G['prestigePointGain'].gte(100)) {\n            if (manual) {\n                resetConfirmation('prestige');\n            }\n            else {\n                resetachievementcheck(1);\n                reset(\"prestige\");\n            }\n        }\n    }\n    if (i === 'transcend') {\n        if ((player.coinsThisTranscension.gte(1e100) || G['transcendPointGain'].gte(0.5)) && player.currentChallenge.transcension === 0) {\n            if (manual) {\n                resetConfirmation('transcend');\n            }\n            if (!manual) {\n                resetachievementcheck(2);\n                reset(\"transcension\");\n            }\n        }\n    }\n    if (i === 'challenge') {\n        const q = player.currentChallenge.transcension;\n        const x = q + 65;\n        if (player.currentChallenge.transcension !== 0) {\n            const reqCheck = (comp) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q));\n            const maxCompletions = 25 + 5 * player.researches[x] + 925 * player.researches[105];\n            if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n                const maxInc = player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.ascension !== 13 ? 10 : 1;\n                let counter = 0;\n                let comp = player.challengecompletions[q];\n                while (counter < maxInc) {\n                    if (reqCheck(comp) && comp < maxCompletions) {\n                        comp++;\n                    }\n                    counter++;\n                }\n                player.challengecompletions[q] = comp;\n                const y = x - 65;\n                challengeDisplay(y, false);\n                updateChallengeLevel(y);\n            }\n            if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                    player.highestchallengecompletions[q] += 1;\n                    const y = x - 65;\n                    challengeDisplay(y, false);\n                    updateChallengeLevel(y);\n                    highestChallengeRewards(q, player.highestchallengecompletions[q]);\n                    calculateCubeBlessings();\n                }\n            }\n            challengeachievementcheck(q);\n            if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n                reset(\"transcensionChallenge\", false, \"leaveChallenge\");\n                player.transcendCount -= 1;\n            }\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[q] >= (25 + 5 * player.researches[x] + 925 * player.researches[105])) {\n            player.currentChallenge.transcension = 0;\n            updateChallengeDisplay();\n        }\n    }\n    if (i === \"reincarnate\") {\n        if (G['reincarnationPointGain'].gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n            if (manual) {\n                resetConfirmation('reincarnate');\n            }\n            if (!manual) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\");\n            }\n        }\n    }\n    if (i === \"reincarnationchallenge\" && player.currentChallenge.reincarnation !== 0) {\n        const q = player.currentChallenge.reincarnation;\n        if (player.currentChallenge.transcension !== 0) {\n            player.currentChallenge.transcension = 0;\n        }\n        const reqCheck = (comp) => {\n            if (q <= 8) {\n                return player.transcendShards.gte(challengeRequirement(q, comp, q));\n            }\n            else {\n                return player.coins.gte(challengeRequirement(q, comp, q));\n            }\n        };\n        const maxCompletions = 25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15];\n        if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n            const maxInc = player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.ascension !== 13 ? 10 : 1;\n            let counter = 0;\n            let comp = player.challengecompletions[q];\n            while (counter < maxInc) {\n                if (reqCheck(comp) && comp < maxCompletions) {\n                    comp++;\n                }\n                counter++;\n            }\n            player.challengecompletions[q] = comp;\n            challengeDisplay(q, true);\n            updateChallengeLevel(q);\n        }\n        if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\n            player.reincarnationCount -= 1;\n        }\n        challengeachievementcheck(q);\n        if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n            while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                player.highestchallengecompletions[q] += 1;\n                highestChallengeRewards(q, player.highestchallengecompletions[q]);\n                calculateHypercubeBlessings();\n                calculateTesseractBlessings();\n                calculateCubeBlessings();\n            }\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[q] > 24 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15]) {\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\n            player.currentChallenge.reincarnation = 0;\n            if (player.shopUpgrades.instantChallenge > 0) {\n                for (let i = 1; i <= 5; i++) {\n                    player.challengecompletions[i] = player.highestchallengecompletions[i];\n                }\n            }\n            updateChallengeDisplay();\n            calculateRuneLevels();\n            calculateAnts();\n        }\n    }\n    if (i === \"ascend\") {\n        if (player.challengecompletions[10] > 0) {\n            if (manual) {\n                resetConfirmation('ascend');\n            }\n        }\n    }\n    if (i === \"ascensionChallenge\" && player.currentChallenge.ascension !== 0) {\n        let conf = true;\n        if (manual) {\n            conf = confirm('Are you absolutely sure that you want to exit the Ascension Challenge? You will need to clear challenge 10 again before you can attempt the challenge again!');\n        }\n        if (!conf) {\n            return;\n        }\n        const a = player.currentChallenge.ascension;\n        const r = player.currentChallenge.reincarnation;\n        const t = player.currentChallenge.transcension;\n        if (player.challengecompletions[10] >= 50 && a === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\n            achievementaward(247);\n        }\n        const maxCompletions = a < 15 ? 30 + 3 * player.platonicUpgrades[5] + 3 * player.platonicUpgrades[10] + 4 * player.platonicUpgrades[15] : 1;\n        if (a !== 0 && a < 15) {\n            if (player.challengecompletions[10] >= challengeRequirement(a, player.challengecompletions[a], a) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n            }\n        }\n        if (a === 15) {\n            if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n            }\n            else {\n                if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent))) {\n                    player.challenge15Exponent = Decimal.log(player.coins.add(1), 10);\n                    c15RewardUpdate();\n                }\n            }\n        }\n        if (r !== 0) {\n            if (typeof player.currentChallenge === 'string') {\n                player.currentChallenge = Object.assign({}, blankSave.currentChallenge);\n            }\n        }\n        if (t !== 0) {\n            player.currentChallenge.transcension = 0;\n        }\n        challengeDisplay(a, true);\n        reset(\"ascensionChallenge\");\n        if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\n            player.highestchallengecompletions[a] += 1;\n            player.wowHypercubes += 1;\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[a] >= maxCompletions || a === 15) {\n            player.currentChallenge.ascension = 0;\n        }\n        updateChallengeDisplay();\n        challengeachievementcheck(a, true);\n    }\n};\nexport const resetConfirmation = (i) => {\n    if (i === 'prestige') {\n        if (player.toggles[28] === true) {\n            const r = confirm(\"Prestige will reset coin upgrades, coin producers AND crystals. The first prestige unlocks new features. Would you like to prestige? [Toggle this message in settings.]\");\n            if (r === true) {\n                resetachievementcheck(1);\n                reset(\"prestige\");\n            }\n        }\n        else {\n            resetachievementcheck(1);\n            reset(\"prestige\");\n        }\n    }\n    if (i === 'transcend') {\n        if (player.toggles[29] === true) {\n            const z = confirm(\"Transcends will reset coin and prestige upgrades, coin producers, crystal producers AND diamonds. The first transcension unlocks new features. Would you like to prestige? [Toggle this message in settings.]\");\n            if (z === true) {\n                resetachievementcheck(2);\n                reset(\"transcension\");\n            }\n        }\n        else {\n            resetachievementcheck(2);\n            reset(\"transcension\");\n        }\n    }\n    if (i === 'reincarnate') {\n        if (player.currentChallenge.ascension !== 12) {\n            if (player.toggles[30] === true) {\n                const z = confirm(\"Reincarnating will reset EVERYTHING but in return you will get extraordinarily powerful Particles, and unlock some very strong upgrades and some new features. would you like to Reincarnate? [Disable this message in settings]\");\n                if (z === true) {\n                    resetachievementcheck(3);\n                    reset(\"reincarnation\");\n                }\n            }\n            else {\n                resetachievementcheck(3);\n                reset(\"reincarnation\");\n            }\n        }\n    }\n    if (i === 'ascend') {\n        const z = !player.toggles[31] || confirm(\"Ascending will reset all buildings, rune levels [NOT CAP!], talismans, most researches, and the anthill feature for Cubes of Power. Continue? [It is strongly advised you get R5x24 first.]\");\n        if (z) {\n            reset(\"ascension\");\n        }\n    }\n};\nexport const updateAll = () => {\n    G['uFourteenMulti'] = new Decimal(1);\n    G['uFifteenMulti'] = new Decimal(1);\n    if (player.upgrades[14] > 0.5) {\n        G['uFourteenMulti'] = Decimal.pow(1.15, G['freeAccelerator']);\n    }\n    if (player.upgrades[15] > 0.5) {\n        G['uFifteenMulti'] = Decimal.pow(1.15, G['freeAccelerator']);\n    }\n    if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\n        achievementaward(250);\n    }\n    if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\n        achievementaward(251);\n    }\n    if (player.toggles[1] === true && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\n        buyMax('first', 'Coin', 1, 100);\n    }\n    if (player.toggles[2] === true && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\n        buyMax('second', 'Coin', 2, 2e3);\n    }\n    if (player.toggles[3] === true && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\n        buyMax('third', 'Coin', 3, 4e4);\n    }\n    if (player.toggles[4] === true && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\n        buyMax('fourth', 'Coin', 4, 8e5);\n    }\n    if (player.toggles[5] === true && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\n        buyMax('fifth', 'Coin', 5, 1.6e7);\n    }\n    if (player.toggles[6] === true && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\n        buyAccelerator(true);\n    }\n    if (player.toggles[7] === true && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\n        buyMultiplier(true);\n    }\n    if (player.toggles[8] === true && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\n        boostAccelerator(true);\n    }\n    if (player.toggles[10] === true && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\n        buyMax('first', 'Diamonds', 1, 1e2);\n    }\n    if (player.toggles[11] === true && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\n        buyMax('second', 'Diamonds', 3, 1e5);\n    }\n    if (player.toggles[12] === true && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\n        buyMax('third', 'Diamonds', 6, 1e15);\n    }\n    if (player.toggles[13] === true && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\n        buyMax('fourth', 'Diamonds', 10, 1e40);\n    }\n    if (player.toggles[14] === true && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\n        buyMax('fifth', 'Diamonds', 15, 1e100);\n    }\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10;\n    }\n    if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(1, true);\n    }\n    if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(2, true);\n    }\n    if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(3, true);\n    }\n    if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(4, true);\n    }\n    if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(5, true);\n    }\n    if (player.toggles[16] === true && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\n        buyMax('first', 'Mythos', 1, 1);\n    }\n    if (player.toggles[17] === true && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\n        buyMax('second', 'Mythos', 3, 1e2);\n    }\n    if (player.toggles[18] === true && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\n        buyMax('third', 'Mythos', 6, 1e4);\n    }\n    if (player.toggles[19] === true && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\n        buyMax('fourth', 'Mythos', 10, 1e8);\n    }\n    if (player.toggles[20] === true && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\n        buyMax('fifth', 'Mythos', 15, 1e16);\n    }\n    if (player.toggles[22] === true && player.reincarnationPoints.gte(player.firstCostParticles)) {\n        buyParticleBuilding('first', 1, true);\n    }\n    if (player.toggles[23] === true && player.reincarnationPoints.gte(player.secondCostParticles)) {\n        buyParticleBuilding('second', 1e2, true);\n    }\n    if (player.toggles[24] === true && player.reincarnationPoints.gte(player.thirdCostParticles)) {\n        buyParticleBuilding('third', 1e4, true);\n    }\n    if (player.toggles[25] === true && player.reincarnationPoints.gte(player.fourthCostParticles)) {\n        buyParticleBuilding('fourth', 1e8, true);\n    }\n    if (player.toggles[26] === true && player.reincarnationPoints.gte(player.fifthCostParticles)) {\n        buyParticleBuilding('fifth', 1e16, true);\n    }\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop())) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n    if ((player.researches[190] > 0) && (player.tesseractAutoBuyerToggle == 1)) {\n        const cheapestTesseractBuilding = { cost: 0, intCost: 0, index: 0, intCostArray: [1, 10, 100, 1000, 10000] };\n        for (let i = 0; i < cheapestTesseractBuilding.intCostArray.length; i++) {\n            if ((player.wowTesseracts >= cheapestTesseractBuilding.intCostArray[i] * Math.pow(1 + player['ascendBuilding' + (i + 1)]['owned'], 3) + player.tesseractAutoBuyerAmount) && player.autoTesseracts[i + 1]) {\n                if ((getTesseractCost(cheapestTesseractBuilding.intCostArray[i], i + 1)[1] < cheapestTesseractBuilding.cost) || (cheapestTesseractBuilding.cost == 0)) {\n                    cheapestTesseractBuilding.cost = getTesseractCost(cheapestTesseractBuilding.intCostArray[i], i + 1)[1];\n                    cheapestTesseractBuilding.intCost = cheapestTesseractBuilding.intCostArray[i];\n                    cheapestTesseractBuilding.index = i + 1;\n                }\n            }\n        }\n        if (cheapestTesseractBuilding.index > 0) {\n            buyTesseractBuilding(cheapestTesseractBuilding.intCost, cheapestTesseractBuilding.index);\n        }\n    }\n    if (player.upgrades[101] > 0.5) {\n        player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['uFifteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[102] > 0.5) {\n        player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['uFourteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[103] > 0.5) {\n        player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[104] > 0.5) {\n        player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[105] > 0.5) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin);\n    }\n    let p = 1;\n    p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77]);\n    let a = 0;\n    if (player.upgrades[106] > 0.5) {\n        a += 0.10;\n    }\n    if (player.upgrades[107] > 0.5) {\n        a += 0.15;\n    }\n    if (player.upgrades[108] > 0.5) {\n        a += 0.25;\n    }\n    if (player.upgrades[109] > 0.5) {\n        a += 0.25;\n    }\n    if (player.upgrades[110] > 0.5) {\n        a += 0.25;\n    }\n    a *= p;\n    let b = 0;\n    if (player.upgrades[111] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[112] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[113] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[114] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[115] > 0.5) {\n        b += 0.08;\n    }\n    b *= p;\n    c = 0;\n    if (player.upgrades[116] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[117] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[118] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[119] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[120] > 0.5) {\n        c += 0.05;\n    }\n    c *= p;\n    if (a !== 0) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a));\n    }\n    if (b !== 0) {\n        player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b));\n    }\n    if (c !== 0) {\n        player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c));\n    }\n    if (player.runeshards > player.maxofferings) {\n        player.maxofferings = player.runeshards;\n    }\n    if (player.researchPoints > player.maxobtainium) {\n        player.maxobtainium = player.researchPoints;\n    }\n    G['effectiveLevelMult'] = 1;\n    G['effectiveLevelMult'] *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    G['effectiveLevelMult'] *= (1 + player.researches[21] / 100);\n    G['effectiveLevelMult'] *= (1 + player.researches[90] / 100);\n    G['effectiveLevelMult'] *= (1 + player.researches[131] / 200);\n    G['effectiveLevelMult'] *= (1 + player.researches[161] / 200 * 3 / 5);\n    G['effectiveLevelMult'] *= (1 + player.researches[176] / 200 * 2 / 5);\n    G['effectiveLevelMult'] *= (1 + player.researches[191] / 200 * 1 / 5);\n    G['effectiveLevelMult'] *= (1 + player.researches[146] / 200 * 4 / 5);\n    G['effectiveLevelMult'] *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]));\n    G['effectiveLevelMult'] *= G['challenge15Rewards'].runeBonus;\n    G['optimalOfferingTimer'] = 600 + 30 * player.researches[85] + 0.4 * G['rune5level'] + 120 * player.shopUpgrades.offeringEX;\n    G['optimalObtainiumTimer'] = 3600 + 120 * player.shopUpgrades.obtainiumEX;\n    autoBuyAnts();\n    if (player.autoAscend) {\n        if (player.autoAscendMode === \"c10Completions\" && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\n            reset(\"ascension\", true);\n        }\n    }\n    let metaData = null;\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            metaData = getConstUpgradeMetadata(i);\n            if (player.ascendShards.gte(metaData[1])) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n    const reductionValue = getReductionValue();\n    if (reductionValue !== G['prevReductionValue']) {\n        G['prevReductionValue'] = reductionValue;\n        const resources = [\"Coin\", \"Diamonds\", \"Mythos\"];\n        const scalings = [\n            (value) => value,\n            (value) => value * (value + 1) / 2,\n            (value) => value * (value + 1) / 2\n        ];\n        const originalCosts = [\n            [100, 2e3, 4e4, 8e5, 1.6e7],\n            [1e2, 1e5, 1e15, 1e40, 1e100],\n            [1, 1e2, 1e4, 1e8, 1e16],\n        ];\n        for (let res = 0; res < resources.length; ++res) {\n            const resource = resources[res];\n            for (let ord = 0; ord < 5; ++ord) {\n                const num = G['ordinals'][ord];\n                player[num + \"Cost\" + resource] = getCost(originalCosts[res][ord], player[num + \"Owned\" + resource] + 1, resource, scalings[res](ord + 1), reductionValue);\n            }\n        }\n        for (let i = 0; i <= 4; i++) {\n            const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16];\n            const array = ['first', 'second', 'third', 'fourth', 'fifth'];\n            const buyTo = player[array[i] + 'OwnedParticles'] + 1;\n            player[array[i] + 'CostParticles'] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i]);\n        }\n    }\n};\nexport const constantIntervals = () => {\n    interval(saveSynergy, 5000);\n    interval(autoUpgrades, 200);\n    interval(buttoncolorchange, 200);\n    interval(htmlInserts, 16);\n    interval(updateAll, 100);\n    interval(buildingAchievementCheck, 200);\n    if (!G['timeWarp']) {\n        document.getElementById(\"preload\").style.display = \"none\";\n        document.getElementById(\"offlineprogressbar\").style.display = \"none\";\n    }\n};\nlet lastUpdate = 0;\nexport const createTimer = () => {\n    lastUpdate = performance.now();\n    interval(tick, 5);\n};\nconst dt = 5;\nconst filterStrength = 20;\nlet deltaMean = 0;\nconst tick = () => {\n    const now = performance.now();\n    let delta = now - lastUpdate;\n    deltaMean += (delta - deltaMean) / filterStrength;\n    let dtEffective;\n    while (delta > 5) {\n        dtEffective = dt;\n        dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0;\n        dtEffective = Math.min(delta, dtEffective);\n        tack(dtEffective / 1000);\n        lastUpdate += dtEffective;\n        delta -= dtEffective;\n    }\n};\nfunction tack(dt) {\n    if (!G['timeWarp']) {\n        dailyResetCheck();\n        const timeMult = calculateTimeAcceleration();\n        resourceGain(dt * timeMult);\n        addTimers(\"prestige\", dt);\n        addTimers(\"transcension\", dt);\n        addTimers(\"reincarnation\", dt);\n        addTimers(\"ascension\", dt);\n        addTimers(\"quarks\", dt);\n        if (player.shopUpgrades.offeringAuto > 0.5 && player.autoSacrificeToggle) {\n            automaticTools(\"runeSacrifice\", dt);\n        }\n        if (player.achievements[173] === 1) {\n            automaticTools(\"antSacrifice\", dt);\n        }\n        if (player.researches[61] === 1) {\n            automaticTools(\"addObtainium\", dt);\n        }\n        else {\n            calculateObtainium();\n        }\n        if (player.autoResearchToggle && player.autoResearch <= maxRoombaResearchIndex(player)) {\n            let counter = 0;\n            const maxCount = 1 + player.challengecompletions[14];\n            while (counter < maxCount) {\n                if (player.autoResearch > 0) {\n                    const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                    if (!buyResearch(player.autoResearch, true, linGrowth)) {\n                        break;\n                    }\n                }\n                else {\n                    break;\n                }\n                counter++;\n            }\n        }\n    }\n    if (player.highestchallengecompletions[3] > 0) {\n        automaticTools(\"addOfferings\", dt / 2);\n    }\n    if (player.cubeUpgrades[2] > 0) {\n        automaticTools(\"addOfferings\", dt * player.cubeUpgrades[2]);\n    }\n    if (player.researches[130] > 0 || player.researches[135] > 0) {\n        const talismansUnlocked = [\n            player.achievements[119] > 0,\n            player.achievements[126] > 0,\n            player.achievements[133] > 0,\n            player.achievements[140] > 0,\n            player.achievements[147] > 0,\n            player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0,\n            player.shopUpgrades.shopTalisman > 0,\n        ];\n        let upgradedTalisman = false;\n        if (player.autoEnhanceToggle) {\n            for (let i = 0; i < talismansUnlocked.length; ++i) {\n                if (talismansUnlocked[i]) {\n                    upgradedTalisman = buyTalismanEnhance(i + 1, true) || upgradedTalisman;\n                }\n            }\n        }\n        if (player.autoFortifyToggle) {\n            for (let i = 0; i < talismansUnlocked.length; ++i) {\n                if (talismansUnlocked[i]) {\n                    upgradedTalisman = buyTalismanLevels(i + 1, true) || upgradedTalisman;\n                }\n            }\n        }\n        if (upgradedTalisman) {\n            updateTalismanInventory();\n            calculateRuneLevels();\n        }\n    }\n    runChallengeSweep(dt);\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['prestigePointGain'].gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\n            resetachievementcheck(1);\n            reset(\"prestige\", true);\n        }\n    }\n    if (player.resettoggle1 === 2) {\n        G['autoResetTimers'].prestige += dt;\n        const time = Math.max(0.01, player.prestigeamount);\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['autoResetTimers'].prestige >= time && player.coinsThisPrestige.gte(1e16)) {\n            resetachievementcheck(1);\n            reset(\"prestige\", true);\n        }\n    }\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['transcendPointGain'].gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n            resetachievementcheck(2);\n            reset(\"transcension\", true);\n        }\n    }\n    if (player.resettoggle2 === 2) {\n        G['autoResetTimers'].transcension += dt;\n        const time = Math.max(0.01, player.transcendamount);\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['autoResetTimers'].transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n            resetachievementcheck(2);\n            reset(\"transcension\", true);\n        }\n    }\n    if (player.currentChallenge.ascension !== 12) {\n        G['autoResetTimers'].reincarnation += dt;\n        if (player.resettoggle3 === 2) {\n            const time = Math.max(0.01, player.reincarnationamount);\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && player.transcendShards.gte(\"1e300\") && G['autoResetTimers'].reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\", true);\n            }\n        }\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && G['reincarnationPointGain'].gte(player.reincarnationPoints.times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\", true);\n            }\n        }\n    }\n    calculateOfferings(\"reincarnation\");\n}\nconst loadPlugins = () => __awaiter(void 0, void 0, void 0, function* () {\n    for (const obj of Object.keys(Plugins)) {\n        const plugin = Plugins[obj];\n        plugin.main();\n    }\n});\ndocument.addEventListener('keydown', (event) => {\n    if (document.activeElement && document.activeElement.localName === 'input') {\n        event.stopPropagation();\n        return;\n    }\n    let type = \"\";\n    let num = 0;\n    let cost = [null, 1, 100, 1e4, 1e8, 1e16];\n    if (G['buildingSubTab'] === \"coin\") {\n        cost = [null, 100, 2000, 4e4, 8e5, 1.6e7];\n        type = \"Coin\";\n    }\n    if (G['buildingSubTab'] === \"diamond\") {\n        cost = [null, 100, 1e5, 1e15, 1e40, 1e100];\n        type = \"Diamonds\";\n    }\n    if (G['buildingSubTab'] === \"mythos\") {\n        type = \"Mythos\";\n    }\n    const key = event.key.toUpperCase();\n    switch (key) {\n        case \"1\":\n            num = 1;\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding('first', cost[1]) : buyMax('first', type, num, cost[1]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(1);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 1);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 1);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(1);\n                challengeDisplay(1);\n            }\n            break;\n        case \"2\":\n            G['buildingSubTab'] === \"coin\" ? num = 2 : num = 3;\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding('second', cost[2]) : buyMax('second', type, num, cost[2]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(2);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 2);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 2);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(2);\n                challengeDisplay(2);\n            }\n            break;\n        case \"3\":\n            G['buildingSubTab'] === \"coin\" ? num = 3 : num = 6;\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding('third', cost[3]) : buyMax('third', type, num, cost[3]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(3);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 3);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 3);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(3);\n                challengeDisplay(3);\n            }\n            break;\n        case \"4\":\n            G['buildingSubTab'] === \"coin\" ? num = 4 : num = 10;\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding('fourth', cost[4]) : buyMax('fourth', type, num, cost[4]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(4);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 4);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 4);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(4);\n                challengeDisplay(4);\n            }\n            break;\n        case \"5\":\n            G['buildingSubTab'] === \"coin\" ? num = 5 : num = 15;\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding('fifth', cost[5]) : buyMax('fifth', type, num, cost[5]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(5);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 5);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 5);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(5);\n                challengeDisplay(5);\n            }\n            break;\n        case \"6\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(1);\n            }\n            if (G['currentTab'] === \"challenges\" && player.reincarnationCount > 0) {\n                toggleChallenges(6);\n                challengeDisplay(6);\n            }\n            break;\n        case \"7\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(2);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[113] === 1) {\n                toggleChallenges(7);\n                challengeDisplay(7);\n            }\n            break;\n        case \"8\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(3);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[120] === 1) {\n                toggleChallenges(8);\n                challengeDisplay(8);\n            }\n            break;\n        case \"9\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(4);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[127] === 1) {\n                toggleChallenges(9);\n                challengeDisplay(9);\n            }\n            break;\n        case \"0\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(5);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[134] === 1) {\n                toggleChallenges(10);\n                challengeDisplay(10);\n            }\n            break;\n        case \"A\":\n            buyAccelerator();\n            break;\n        case \"B\":\n            boostAccelerator();\n            break;\n        case \"E\":\n            if (player.currentChallenge.reincarnation !== 0) {\n                resetCheck('reincarnationchallenge', undefined, true);\n            }\n            if (player.currentChallenge.transcension !== 0) {\n                resetCheck('challenge', undefined, true);\n            }\n            break;\n        case \"M\":\n            buyMultiplier();\n            break;\n        case \"P\":\n            resetCheck('prestige');\n            break;\n        case \"R\":\n            resetCheck('reincarnate');\n            break;\n        case \"S\":\n            sacrificeAnts();\n            break;\n        case \"T\":\n            resetCheck('transcend');\n            break;\n        case \"ARROWLEFT\":\n            event.preventDefault();\n            keyboardTabChange(-1);\n            break;\n        case \"ARROWRIGHT\":\n            event.preventDefault();\n            keyboardTabChange(1);\n            break;\n        case \"ARROWUP\":\n            event.preventDefault();\n            keyboardTabChange(-1, false);\n            break;\n        case \"ARROWDOWN\":\n            event.preventDefault();\n            keyboardTabChange(1, false);\n            break;\n    }\n});\nwindow.addEventListener('load', () => {\n    if (location.href.includes('kong')) {\n        const script = document.createElement('script');\n        script.setAttribute('src', 'https://cdn1.kongregate.com/javascripts/kongregate_api.js');\n        document.head.appendChild(script);\n    }\n    const ver = document.getElementById('versionnumber');\n    ver && (ver.textContent = `You're Testing v${player.version} - Seal of the Merchant [Last Update: 6:15PM UTC-8 08-Feb-2021]. Savefiles cannot be used in live!`);\n    document.title = 'Synergism v' + player.version;\n    const dec = LZString.decompressFromBase64(localStorage.getItem('Synergysave2'));\n    const isLZString = dec !== '';\n    if (isLZString) {\n        localStorage.clear();\n        localStorage.setItem('Synergysave2', btoa(dec));\n        alert('Transferred save to new format successfully!');\n    }\n    corruptionButtonsAdd();\n    corruptionLoadoutTableCreate();\n    setTimeout(() => {\n        generateEventHandlers();\n        loadSynergy();\n        saveSynergy();\n        toggleauto();\n        revealStuff();\n        hideStuff();\n        htmlInserts();\n        createTimer();\n        constantIntervals();\n        loadPlugins();\n        changeTabColor();\n    }, 0);\n});\n","import { player, format, resetCheck, isTesting } from './Synergism';\nimport Decimal from 'break_infinity.js';\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate';\nimport { buyResearch } from './Research';\nimport { c15RewardUpdate } from './Statistics';\nexport const checkVariablesOnLoad = (data) => {\n    var _a;\n    if (data.wowCubes === undefined) {\n        player.wowCubes = 0;\n        player.wowTesseracts = 0;\n        player.wowHypercubes = 0;\n        player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (data.shoptoggles.reincarnate === undefined) {\n        player.shoptoggles.reincarnate = true;\n    }\n    if (data.ascendBuilding1 === undefined) {\n        player.ascendBuilding1 = {\n            cost: 1,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding2 = {\n            cost: 10,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding3 = {\n            cost: 100,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding4 = {\n            cost: 1000,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding5 = {\n            cost: 10000,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n    }\n    if (data.tesseractbuyamount === undefined) {\n        player.tesseractbuyamount = 1;\n    }\n    if (data.tesseractBlessings === undefined) {\n        player.tesseractBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        };\n        player.hypercubeBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        };\n    }\n    if (data.prototypeCorruptions === undefined) {\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (data.constantUpgrades === undefined) {\n        player.ascendShards = new Decimal(\"0\");\n        player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (data.roombaResearchIndex === undefined) {\n        player.roombaResearchIndex = 0;\n    }\n    if (data.history === undefined) {\n        player.history = { ants: [], ascend: [], reset: [] };\n        player.historyCountMax = 10;\n    }\n    if (data.autoChallengeRunning === undefined) {\n        player.autoChallengeRunning = false;\n        player.autoChallengeIndex = 1;\n        player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false];\n        player.autoChallengeStartExponent = 10;\n        player.autoChallengeTimer = {\n            start: 10,\n            exit: 2,\n            enter: 2\n        };\n    }\n    if (data.autoAscend === undefined) {\n        player.autoAscend = false;\n        player.autoAscendMode = \"c10Completions\";\n        player.autoAscendThreshold = 1;\n    }\n    if (data.runeBlessingLevels === undefined) {\n        player.runeBlessingLevels = [0, 0, 0, 0, 0, 0];\n        player.runeSpiritLevels = [0, 0, 0, 0, 0, 0];\n        player.runeBlessingBuyAmount = 0;\n        player.runeSpiritBuyAmount = 0;\n    }\n    if (player.researches[180] > 1) {\n        player.researches[180] = 1;\n    }\n    if (data.autoTesseracts === undefined) {\n        player.autoTesseracts = [false, false, false, false, false, false];\n    }\n    if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (player.corruptionLoadouts === undefined) {\n        player.corruptionLoadouts = {\n            1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        };\n        player.corruptionShowStats = true;\n    }\n    for (let i = 0; i <= 4; i++) {\n        if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\n            player.runelevels[i] = 0;\n        }\n    }\n    if (((_a = data.shopUpgrades) === null || _a === void 0 ? void 0 : _a.challengeExtension) === undefined) {\n        player.shopUpgrades.challengeExtension = 0;\n        player.shopUpgrades.challengeTome = 0;\n        player.shopUpgrades.seasonPass = 0;\n        player.shopUpgrades.cubeToQuark = 0;\n        player.shopUpgrades.tesseractToQuark = 0;\n        player.shopUpgrades.hypercubeToQuark = 0;\n    }\n    if (data.cubeUpgrades === undefined || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\n        for (let i = 121; i <= 125; i++) {\n            player.upgrades[i] = 0;\n        }\n    }\n    Object.assign(player.toggles, data.toggles);\n    if (data.ascensionCount === 0) {\n        player.toggles[31] = true;\n        player.toggles[32] = true;\n    }\n    if (data.dayCheck === undefined) {\n        player.dayCheck = null;\n        player.dayTimer = 0;\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n    }\n    if (data.loadedOct4Hotfix === undefined || player.loadedOct4Hotfix === false) {\n        player.loadedOct4Hotfix = true;\n        if (player.researches.length > 200) {\n            player.researchPoints += player.researches[200] * 1e56;\n            player.researches[200] = 0;\n            buyResearch(200, true, 0.01);\n            console.log('Refunded 8x25, and gave you ' + format(player.researches[200]) + ' levels of new cost 8x25. Sorry!');\n            player.researchPoints += player.researches[195] * 1e60;\n            player.worlds += 250 * player.researches[195];\n            player.researches[195] = 0;\n            console.log('Refunded 8x20 and gave 250 quarks for each level you had prior to loading up the game.');\n            player.wowCubes += player.cubeUpgrades[50] * 5e10;\n            player.cubeUpgrades[50] = 0;\n            console.log('Refunded w5x10. Enjoy!');\n        }\n    }\n    if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\n        player.ascStatToggles = {\n            1: false,\n            2: false,\n            3: false,\n            4: false\n        };\n    }\n    if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\n        player.ascStatToggles[4] = false;\n    }\n    if (player.usedCorruptions[0] > 0 ||\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\n        player.prototypeCorruptions[0] = 0;\n        player.usedCorruptions[0] = 0;\n    }\n    if (player.antSacrificeTimerReal === undefined) {\n        player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration();\n    }\n    if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\n        player.subtabNumber = 0;\n    }\n    if (data.wowPlatonicCubes === undefined) {\n        player.wowPlatonicCubes = 0;\n        player.wowAbyssals = 0;\n    }\n    if (data.platonicBlessings === undefined) {\n        const ascCount = player.ascensionCount;\n        if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\n            resetCheck('ascensionChallenge', false, true);\n        }\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.ascensionCount = ascCount;\n        player.challengecompletions[15] = 0;\n        player.highestchallengecompletions[15] = 0;\n        player.platonicBlessings = {\n            cubes: 0,\n            tesseracts: 0,\n            hypercubes: 0,\n            platonics: 0,\n            hypercubeBonus: 0,\n            taxes: 0,\n            scoreBonus: 0,\n            globalSpeed: 0,\n        };\n        player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.challenge15Exponent = 0;\n        player.loadedNov13Vers = false;\n    }\n    if (player.researches.includes(null)) {\n        for (let i = 0; i < 200; i++) {\n            player.researches[i + 1] = player.researches[i + 1] || 0;\n        }\n    }\n    if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined) {\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.challenge15Exponent = 0;\n        c15RewardUpdate();\n        player.loadedDec16Vers = true;\n    }\n    if (typeof data.exporttest === 'string') {\n        player.exporttest = !isTesting;\n    }\n    const shop = data.shopUpgrades;\n    if ('offeringTimerLevel' in shop && typeof shop.offeringTimerLevel !== 'undefined') {\n        player.shopUpgrades = {\n            offeringPotion: shop.offeringPotion,\n            obtainiumPotion: shop.obtainiumPotion,\n            offeringEX: 0,\n            offeringAuto: 0,\n            obtainiumEX: 0,\n            obtainiumAuto: 0,\n            instantChallenge: Number(shop.instantChallengeBought),\n            antSpeed: 0,\n            cashGrab: 0,\n            shopTalisman: Number(shop.talismanBought),\n            seasonPass: 0,\n            challengeExtension: shop.challengeExtension,\n            challengeTome: shop.challenge10Tomes,\n            cubeToQuark: Number(shop.cubeToQuarkBought),\n            tesseractToQuark: Number(shop.tesseractToQuarkBought),\n            hypercubeToQuark: Number(shop.hypercubeToQuarkBought),\n        };\n        const initialQuarks = player.worlds;\n        player.worlds += 150 * shop.offeringTimerLevel + 25 / 2 * (shop.offeringTimerLevel - 1) * (shop.offeringTimerLevel);\n        player.worlds += 150 * shop.obtainiumTimerLevel + 25 / 2 * (shop.obtainiumTimerLevel - 1) * (shop.obtainiumTimerLevel);\n        player.worlds += 150 * shop.offeringAutoLevel + 25 / 2 * (shop.offeringAutoLevel - 1) * (shop.offeringAutoLevel);\n        player.worlds += 150 * shop.obtainiumAutoLevel + 25 / 2 * (shop.obtainiumAutoLevel - 1) * (shop.obtainiumAutoLevel);\n        player.worlds += 100 * shop.cashGrabLevel + 100 / 2 * (shop.cashGrabLevel - 1) * (shop.cashGrabLevel);\n        player.worlds += 200 * shop.antSpeedLevel + 80 / 2 * (shop.antSpeedLevel - 1) * (shop.antSpeedLevel);\n        player.worlds += 500 * shop.seasonPassLevel + 250 / 2 * (shop.seasonPassLevel - 1) * (shop.seasonPassLevel);\n        console.log('Because of the v2.5.0 update, you have been refunded ' + format(player.worlds - initialQuarks) + ' Quarks! If this appears wrong let Platonic know :)');\n    }\n};\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { sumContents } from './Utility';\nimport Decimal from 'break_infinity.js';\nimport { CalcECC } from './Challenges';\nimport { achievementaward } from './Achievements';\nexport const calculatetax = () => {\n    let c = 0;\n    let e = 1;\n    let f = 1;\n    let compareC = 0;\n    G['produceFirst'] = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinOneMulti']).times(player.firstProduceCoin);\n    G['produceSecond'] = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinTwoMulti']).times(player.secondProduceCoin);\n    G['produceThird'] = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinThreeMulti']).times(player.thirdProduceCoin);\n    G['produceFourth'] = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFourMulti']).times(player.fourthProduceCoin);\n    G['produceFifth'] = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFiveMulti']).times(player.fifthProduceCoin);\n    G['produceTotal'] = G['produceFirst'].add(G['produceSecond']).add(G['produceThird']).add(G['produceFourth']).add(G['produceFifth']);\n    if (G['produceFirst'].lte(.0001)) {\n        G['produceFirst'] = new Decimal(0);\n    }\n    if (G['produceSecond'].lte(.0001)) {\n        G['produceSecond'] = new Decimal(0);\n    }\n    if (G['produceThird'].lte(.0001)) {\n        G['produceThird'] = new Decimal(0);\n    }\n    if (G['produceFourth'].lte(.0001)) {\n        G['produceFourth'] = new Decimal(0);\n    }\n    if (G['produceFifth'].lte(.0001)) {\n        G['produceFifth'] = new Decimal(0);\n    }\n    G['producePerSecond'] = G['produceTotal'].times(40);\n    if (player.currentChallenge.reincarnation === 6) {\n        e = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2);\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        e = 0.005;\n    }\n    if (player.currentChallenge.ascension === 15) {\n        e = 0.000005;\n    }\n    if (player.currentChallenge.ascension === 13) {\n        e *= 700 * (1 + 1 / 6 * player.challengecompletions[13]);\n        e *= Math.pow(1.05, Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49]));\n    }\n    if (player.challengecompletions[6] > 0) {\n        f /= 1.075;\n    }\n    let exponent = 1;\n    exponent *= e;\n    exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55]);\n    exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800));\n    exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]));\n    exponent *= (0.001 + .999 * (Math.pow(6, -(G['rune2level'] * G['effectiveLevelMult']) / 1000)));\n    exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100))));\n    exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131]);\n    exponent *= f;\n    exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]));\n    exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3 - 1] + G['bonusant3']));\n    exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + 0.5 * player.platonicUpgrades[15] + (G['platonicBonusMultiplier'][5] - 1));\n    exponent *= (1 - 0.10 * (player.talismanRarity[1 - 1] - 1));\n    exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159]);\n    exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]));\n    exponent *= (1 - 0.666 * player.researches[200] / 100000);\n    exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000);\n    exponent *= G['challenge15Rewards'].taxes;\n    if (player.upgrades[121] > 0) {\n        exponent *= 0.5;\n    }\n    G['maxexponent'] = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1;\n    const a2 = Math.min(G['maxexponent'], Math.floor(Decimal.log(G['produceTotal'].add(1), 10)));\n    if (player.currentChallenge.ascension === 13 && G['maxexponent'] <= 99999 && player.achievements[249] < 1) {\n        achievementaward(249);\n    }\n    if (a2 >= 1) {\n        c = Math.pow(a2, 2) / 550;\n    }\n    compareC = Math.pow(G['maxexponent'], 2) / 550;\n    G['taxdivisor'] = Decimal.pow(1.01, (c) * (exponent));\n    G['taxdivisorcheck'] = Decimal.pow(1.01, (compareC) * (exponent));\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(914);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}