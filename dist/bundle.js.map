{"version":3,"sources":["webpack://synergismofficial/webpack/runtime/load script","webpack://synergismofficial/./node_modules/break_infinity.js/dist/break_infinity.esm.js","webpack://synergismofficial/./node_modules/eventemitter3/index.js","webpack://synergismofficial/./node_modules/lz-string/libs/lz-string.js","webpack://synergismofficial/./node_modules/pad-end/index.js","webpack://synergismofficial/./src/Achievements.ts","webpack://synergismofficial/./src/Ants.ts","webpack://synergismofficial/./src/Automation.ts","webpack://synergismofficial/./src/Buy.ts","webpack://synergismofficial/./src/Calculate.ts","webpack://synergismofficial/./src/Challenges.ts","webpack://synergismofficial/./src/Corruptions.ts","webpack://synergismofficial/./src/Events.ts","webpack://synergismofficial/./src/Generators.ts","webpack://synergismofficial/./src/Hepteracts.ts","webpack://synergismofficial/./src/Hypercubes.ts","webpack://synergismofficial/./src/Platonic.ts","webpack://synergismofficial/./src/Quark.ts","webpack://synergismofficial/./src/Research.ts","webpack://synergismofficial/./src/Reset.ts","webpack://synergismofficial/./src/Runes.ts","webpack://synergismofficial/./src/Shop.ts","webpack://synergismofficial/./src/Statistics.ts","webpack://synergismofficial/./src/History.ts","webpack://synergismofficial/./src/PlatonicCubes.ts","webpack://synergismofficial/./src/Cubes.ts","webpack://synergismofficial/./src/ImportExport.ts","webpack://synergismofficial/./src/EventListeners.ts","webpack://synergismofficial/./src/Helper.ts","webpack://synergismofficial/./src/CubeExperimental.ts","webpack://synergismofficial/./src/Synergism.ts","webpack://synergismofficial/./src/Tax.ts","webpack://synergismofficial/./src/CheckVariables.ts","webpack://synergismofficial/./src/Talismans.ts","webpack://synergismofficial/./src/Tesseracts.ts","webpack://synergismofficial/./src/Toggles.ts","webpack://synergismofficial/./src/UpdateHTML.ts","webpack://synergismofficial/./src/UpdateVisuals.ts","webpack://synergismofficial/./src/Upgrades.ts","webpack://synergismofficial/./src/Utility.ts","webpack://synergismofficial/./src/Variables.ts","webpack://synergismofficial/./src/Plugins|lazy|/^\\.\\/.*$/|groupOptions: {}|namespace object","webpack://synergismofficial/webpack/bootstrap","webpack://synergismofficial/webpack/runtime/compat get default export","webpack://synergismofficial/webpack/runtime/define property getters","webpack://synergismofficial/webpack/runtime/ensure chunk","webpack://synergismofficial/webpack/runtime/get javascript chunk filename","webpack://synergismofficial/webpack/runtime/hasOwnProperty shorthand","webpack://synergismofficial/webpack/runtime/make namespace object","webpack://synergismofficial/webpack/runtime/publicPath","webpack://synergismofficial/webpack/runtime/jsonp chunk loading","webpack://synergismofficial/webpack/startup"],"names":["inProgress","dataWebpackPrefix","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","NUMBER_EXP_MIN","powerOf10","powersOf10","i","push","Number","power","D","value","Decimal","ME","mantissa","exponent","fromMantissaExponent","ME_NN","fromMantissaExponent_noNormalize","affordGeometricSeries","resourcesAvailable","priceStart","priceRatio","currentOwned","actualStart","mul","pow","floor","div","sub","add","log10","sumGeometricSeries","numItems","this","NaN","undefined","m","e","fromDecimal","fromNumber","fromString","Object","defineProperty","prototype","get","set","enumerable","configurable","sign","sgn","fromValue","fromValue_noAlloc","abs","neg","negate","negated","round","ceil","trunc","other","plus","subtract","minus","multiply","times","divide","recip","reciprocal","reciprocate","cmp","compare","eq","equals","neq","notEquals","lt","lte","gt","gte","max","min","clamp","clampMin","clampMax","cmp_tolerance","tolerance","compare_tolerance","eq_tolerance","equals_tolerance","neq_tolerance","notEquals_tolerance","lt_tolerance","lte_tolerance","gt_tolerance","gte_tolerance","absLog10","pLog10","log","base","log2","ln","logarithm","pow10","isInteger","Math","exp","sqr","sqrt","cube","cbrt","dp","decimalPlaces","affordArithmeticSeries","priceAdd","b","b2","sumArithmeticSeries","efficiencyOfPurchase","cost","currentRpS","deltaRpS","randomDecimalForTesting","absMaxExponent","random","normalize","tempExponent","isFinite","isNaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","indexOf","parts","split","parseFloat","Error","toNumber","result","resultRounded","mantissaWithDecimalPlaces","places","len","numDigits","rounded","toFixed","toString","toExponential","replace","padEnd","toPrecision","valueOf","toJSON","toStringWithDecimalPlaces","biggerDecimal","smallerDecimal","decimal","divideBy","dividedBy","LN10","newMantissa","numberValue","temp","isSafeInteger","newExponent","residue","pow_base","factorial","n","E","sinh","PI","x","mod","cosh","tanh","asinh","acosh","atanh","ascensionPenalty","ascensions","egg","lessThanOrEqualTo","lessThan","greaterThanOrEqualTo","greaterThan","MAX_VALUE","MIN_VALUE","NUMBER_MAX_VALUE","NUMBER_MIN_VALUE","has","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","module","exports","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","charAt","compressToBase64","input","res","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","forEach","c","join","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","resetValue","getNextValue","w","bits","resb","maxpower","dictionary","enlargeIn","dictSize","numBits","entry","data","val","position","string","maxLength","fillString","targetLen","parseInt","filled","fillLen","substr","achievementpointvalues","totalachievementpoints","reduce","adesc","adesc1","adesc2","adesc3","adesc4","adesc5","adesc6","adesc7","adesc8","adesc9","adesc10","adesc11","adesc12","adesc13","adesc14","adesc15","adesc16","adesc17","adesc18","adesc19","adesc20","adesc21","adesc22","adesc23","adesc24","adesc25","adesc26","adesc27","adesc28","adesc29","adesc30","adesc31","adesc32","adesc33","adesc34","adesc35","adesc36","adesc37","adesc38","adesc39","adesc40","adesc41","adesc42","adesc43","adesc44","adesc45","adesc46","adesc47","adesc48","adesc49","adesc50","adesc51","adesc52","adesc53","adesc54","adesc55","adesc56","adesc57","adesc58","adesc59","adesc60","adesc61","adesc62","adesc63","adesc64","adesc65","adesc66","adesc67","adesc68","adesc69","adesc70","adesc71","adesc72","adesc73","adesc74","adesc75","adesc76","adesc77","adesc78","adesc79","adesc80","adesc81","adesc82","adesc83","adesc84","adesc85","adesc86","adesc87","adesc88","adesc89","adesc90","adesc91","adesc92","adesc93","adesc94","adesc95","adesc96","adesc97","adesc98","adesc99","adesc100","adesc101","adesc102","adesc103","adesc104","adesc105","adesc106","adesc107","adesc108","adesc109","adesc110","adesc111","adesc112","adesc113","adesc114","adesc115","adesc116","adesc117","adesc118","adesc119","adesc120","adesc121","adesc122","adesc123","adesc124","adesc125","adesc126","adesc127","adesc128","adesc129","adesc130","adesc131","adesc132","adesc133","adesc134","adesc135","adesc136","adesc137","adesc138","adesc139","adesc140","adesc141","adesc142","adesc143","adesc144","adesc145","adesc146","adesc147","adesc148","adesc149","adesc150","adesc151","adesc152","adesc153","adesc154","adesc155","adesc156","adesc157","adesc158","adesc159","adesc160","adesc161","adesc162","adesc163","adesc164","adesc165","adesc166","adesc167","adesc168","adesc169","adesc170","adesc171","adesc172","adesc173","adesc174","adesc175","adesc176","adesc177","adesc178","adesc179","adesc180","adesc181","adesc182","adesc183","adesc184","adesc185","adesc186","adesc187","adesc188","adesc189","adesc190","adesc191","adesc192","adesc193","adesc194","adesc195","adesc196","adesc197","adesc198","adesc199","adesc200","adesc201","adesc202","adesc203","adesc204","adesc205","adesc206","adesc207","adesc208","adesc209","adesc210","adesc211","adesc212","adesc213","adesc214","adesc215","adesc216","adesc217","adesc218","adesc219","adesc220","adesc221","adesc222","adesc223","adesc224","adesc225","adesc226","adesc227","adesc228","adesc229","adesc230","adesc231","adesc232","adesc233","adesc234","adesc235","adesc236","adesc237","adesc238","adesc239","adesc240","adesc241","adesc242","adesc243","adesc244","adesc245","adesc246","adesc247","adesc248","adesc249","adesc250","adesc251","adesc252","adesc253","adesc254","adesc255","adesc256","adesc257","adesc258","adesc259","adesc260","adesc261","adesc262","adesc263","adesc264","adesc265","adesc266","adesc267","adesc268","adesc269","adesc270","adesc271","adesc272","adesc273","adesc274","adesc275","adesc276","adesc277","adesc278","adesc279","adesc280","areward","areward3","areward4","areward5","areward6","areward7","areward10","areward11","areward12","areward13","areward14","areward17","areward18","areward19","areward20","areward21","areward24","areward25","areward26","areward27","areward28","areward31","areward32","areward33","areward34","areward35","areward36","areward37","areward38","areward43","areward44","areward45","areward46","areward47","areward50","areward51","areward52","areward53","areward57","areward58","areward59","areward60","areward61","areward62","areward71","areward72","areward73","areward74","areward75","areward76","areward77","areward78","areward79","areward80","areward82","areward84","areward85","areward86","areward87","areward89","areward91","areward92","areward93","areward94","areward96","areward98","areward99","areward100","areward101","areward102","areward103","areward105","areward106","areward107","areward108","areward110","areward112","areward115","areward117","areward118","areward119","areward122","areward124","areward126","areward127","areward128","areward129","areward131","areward132","areward133","areward134","areward135","areward136","areward137","areward140","areward141","areward147","areward169","areward171","areward172","areward173","areward174","areward176","areward177","areward178","areward179","areward180","areward181","areward182","areward187","areward188","areward189","areward193","areward195","areward196","areward197","areward198","areward199","areward200","areward201","areward202","areward204","areward205","areward206","areward207","areward208","areward209","areward211","areward212","areward213","areward214","areward215","areward216","areward218","areward219","areward220","areward221","areward222","areward223","areward240","areward250","areward251","areward253","areward254","areward255","areward256","areward257","areward258","areward259","areward260","areward261","areward262","areward263","areward264","areward265","areward266","areward267","areward270","areward273","resetachievementcheck","achievementaward","challengeCompletionsBar","challengeCompletionsNotAuto","1","2","3","5","challengeachievementcheck","auto","generatorcheck","bar","ach","filter","o","includes","challengeArray","buildAchievementReq","buildingAchievementCheck","req","idx","ascensionAchievementCheck","score","ascendCountArray","constantArray","scoreArray","achievementdescriptions","y","z","k","multiplier","document","getElementById","textContent","style","color","num","console","backgroundColor","antdesc","antdesc1","antdesc2","antdesc3","antdesc4","antdesc5","antdesc6","antdesc7","antdesc8","antspecies","antspecies1","antspecies2","antspecies3","antspecies4","antspecies5","antspecies6","antspecies7","antspecies8","antspecies9","antspecies10","antspecies11","antspecies12","antupgdesc","antupgdesc1","antupgdesc2","antupgdesc3","antupgdesc4","antupgdesc5","antupgdesc6","antupgdesc7","antupgdesc8","antupgdesc9","antupgdesc10","antupgdesc11","antupgdesc12","calculateCrumbToCoinExp","antUpgradeTexts","repeatAnt","antRepeat","updateAntDescription","el","la","ti","me","priceType","tier","getAntCost","originalCost","buyTo","getAntUpgradeCost","buyAntProducers","pos","sacrificeMult","antSacrificePointsToMultiplier","tag","key","cashToBuy","stepdown","buyFrom","thisCost","achRequirements","buyAntUpgrade","antUpgradeDescription","al","content1","content2","bonuslevel","c11","childNodes","points","showSacrifice","sacRewards","display","antSacrificePoints","offerings","obtainium","talismanShards","commonFragments","uncommonFragments","rareFragments","epicFragments","legendaryFragments","mythicalFragments","sacrificeAnts","__awaiter","thisArg","_arguments","generator","p","antSacrificePointsBefore","historyEntry","date","Date","now","seconds","kind","antSacrificePointsAfter","baseELO","effectiveELO","crumbs","crumbsPerSecond","unmaxed","baseAmount","linGrowth","P","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","autoBuyAnts","_ach","_cost","buyGenerator","state","q","type","achievementCheck","buyAutobuyers","autoUpgrades","getReductionValue","reduction","getCostAccelerator","buyingTo","factorialBit","multBit","sumNum","sumBit","buyAccelerator","autobuyer","getCostMultiplier","powBit","buyMultiplier","mantissaFactorialPartExtra","exponentFactorialPartExtra","factorialByExponent","fact","fact100exponent","known_log10s","needed","nums","obj","need","getCost","r","mlog10125","fastFactMultBuyTo","fr","fastFactMultBuyTo100","extra","buyMax","BUYMAX","buyStart","buyInc","buyProducerTypes","Diamonds","Mythos","Particles","Coin","buyProducer","amounttype","buythisamount","buyUpgrades","addendum","buyCrystalUpgrades","u","toBuy","calculateCrystalBuy","boostAccelerator","automated","buyamount","getAcceleratorBoostCost","level","eff","linSum","getParticleCost","DR","buyParticleBuilding","getTesseractCost","intCost","subCost","buyTesseractBuilding","actualCost","buyRuneBonusLevels","baseCost","baseLevels","levelCap","requirementArray","blessingMultiplierArray","t","spiritMultiplierArray","calculateTotalCoinOwned","calculateTotalAcceleratorBoost","calculateSigmoidExponential","calculateAcceleratorMultiplier","calculateRecycleMultiplier","calculateRuneExpGiven","runeIndex","all","runeLevel","returnFactors","recycleMultiplier","allRuneExpAdditiveMultiplier","lookupTableRuneExp","calculateRuneExpToLevel","from","_","lookupTableGen","calculateMaxRunes","increaseAll","calculateOfferings","calcMult","statistic","arr","persecond","calculateObtainium","calculateCorruptionPoints","calculateAutomaticObtainium","calculateTalismanEffects","positiveBonus","negativeBonus","talismansEffects","runesTalisman","talismanEffect","levels","runeNumber","calculateRuneLevels","calculateRuneBonuses","calculateAnts","bonusLevels","c11bonus","calculateAntSacrificeELO","antUpgradeSum","calculateAntSacrificeRewards","rewardsMult","calculateOffline","forceTime","maximumTimer","updatedTime","timeAdd","simulatedTicks","tickValue","timeMultiplier","maxSimulatedTicks","progressBarWidth","automaticObtainium","maxTime","runOffline","calculateTimeAcceleration","rune","width","ascCount","calculateSigmoid","constant","factor","divisor","coefficient","calculateCubeBlessings","cubeArray","powerBonus","mult","calculateCubeMultiplier","timeMult","basePoints","calculateSummationLinear","baseLevel","resourceAvailable","differenceCap","subtractCost","buyToLevel","calculateSummationNonLinear","diffPerLevel","buyAmount","alreadySpent","v","totalCost","CalcCorruptionStuff","corruptionArrayMultiplier","corruptionLevelSum","cubeBank","challengeModifier","corruptionMultiplier","bankMultiplier","effectiveScore","speed","baseScore","challengeScoreArrays1","challengeScoreArrays2","challengeScoreArrays3","cubeGain","tesseractGain","hypercubeGain","platonicGain","hepteractGain","dailyResetCheck","d","h","getHours","getMinutes","s","getSeconds","getDate","getMonth","getFullYear","getMaxChallenges","maxChallenge","challengeDisplay","changefocus","quarksMultiplier","maxChallenges","CalcECC","descriptor","g","challengeRequirement","scoreArray1","scoreArray2","scoreArray3","scoreDisplay","border","constructor","ella","getChallengeConditions","toggleRetryChallenges","highestChallengeRewards","chalNum","highestValue","calculateChallengeRequirementMultiplier","completions","special","requirementMultiplier","effective","challenge","completion","c10Reduction","runChallengeSweep","dt","challengeType","action","startChallenge","item","corruptionDisplay","visibility","text","description","current","planned","spiritContribution","image","setAttribute","corruptionStatsUpdate","corruptionButtonsAdd","rows","getElementsByClassName","row","createElement","className","createTextNode","appendChild","btn","span","id","onclick","addEventListener","corruptionLoadoutTableCreate","table","keys","insertRow","cell","insertCell","textAlign","corruptionLoadoutSaveLoad","corruptionLoadoutTableUpdate","updateRow","cells","save","loadout","corruptionCleanseConfirm","corrupt","setTimeout","Synergism","HepteractCraft","_a","_b","_c","_d","UNLOCKED","BAL","CAP","BASE_CAP","HEPTERACT_CONVERSION","DISCOUNT","unlock","hepteractName","craft","craftingPrompt","craftAmount","hepteractLimit","itemLimits","OTHER_CONVERSIONS","smallestItemLimit","amountToCraft","expand","amount","EPSILON","hepteractEffectiveValues","LIMIT","createHepteract","hepteractEffective","effectiveValue","hepteractDescriptions","unlockedText","effectText","currentEffectText","balanceText","costText","ChronosHepteract","HyperrealismHepteract","QuarkHepteract","ChallengeHepteract","AbyssHepteract","AcceleratorHepteract","AcceleratorBoostHepteract","MultiplierHepteract","calculateHypercubeBlessings","platonicUpgradeDesc","platUpgradeBaseCosts","cubes","tesseracts","hypercubes","platonics","abyssals","maxLevel","4","6","7","8","9","10","11","12","13","14","15","checkPlatonicUpgrade","checksum","resources","resourceNames","checks","canBuy","createPlatonicDescription","maxLevelAppend","resourceCheck","buyPlatonicUpgrades","getQuarkMultiplier","quarkHandler","baseQuarkPerHour","quarkPerHour","perHour","capacity","gain","QuarkHandler","bonus","quarks","BONUS","QUARKS","Symbol","toPrimitive","getBonus","applyBonus","fetch","headers","json","files","content","getResearchCost","metaData","buyResearch","isResearchUnlocked","isResearchMaxed","classList","remove","researchDescriptions","rrow1","rrow2","rrow3","rrow4","doc","updateAutoResearch","maxRoombaResearchIndex","ascensionCount","challengecompletions","cumuSum","sum","indices","map","chievos","resdesc","updateResearchBG","repeatreset","resetrepeat","resetdetails","transcensionChallenge","reincarnationChallenge","offering","offeringImage","offeringText","currencyImage1","resetObtainiumImage","resetObtainiumText","resetInfo","resetCurrencyGain","src","goal","goaldesc","updateAutoReset","updateTesseractAutoBuyAmount","reset","fast","offeringsGiven","isChallenge","diamonds","mythos","particles","corruptionMetaData","c10Completions","usedCorruptions","corruptionScore","wowCubes","wowTesseracts","wowHypercubes","wowPlatonicCubes","currentChallenge","resetAddHistoryEntry","resetUpgrades","opscheck","resetResearches","resetAnts","resetTalismans","ant12","destroy","displayRuneInformation","updatelevelup","SILevelMult","amountPerOffering","calculateOfferingsToLevelXTimes","check","resetofferings","redeemShards","runeIndexPlusOne","cubeUpgraded","unlockedRune","levelsToAdd","levelsAdded","amountArr","toSpendTotal","expPerOff","toSpend","runeToUpdate","shopData","offeringPotion","price","priceIncrease","refundable","refundMinimumLevel","obtainiumPotion","offeringEX","offeringAuto","obtainiumEX","obtainiumAuto","instantChallenge","antSpeed","cashGrab","shopTalisman","seasonPass","challengeExtension","challengeTome","cubeToQuark","tesseractToQuark","hypercubeToQuark","seasonPass2","seasonPass3","chronometer","infiniteAscent","getShopCosts","priceIncreaseMult","shopDescriptions","rofl","lmao","lol","buyShopUpgrades","useConsumable","resetShopUpgrades","initialQuarks","shopItem","doNotRefund","loadStatisticsAccelerator","loadStatisticsMultiplier","loadStatisticsCubeMultipliers","acc","desc","16","17","18","19","20","21","22","23","24","25","26","27","loadStatisticsOfferingMultipliers","c15RewardUpdate","exponentRequirements","updateDisplayC15Rewards","values","keepExponent","formatDecimalSource","numOrStr","format","conditionalFormatPerSecond","player","historyShowPerSecond","historyGains","img","formatter","imgTitle","onlyif","historyGainsOrder","historyKinds","resetHistoryTableMapping","resetHistoryCorruptionImages","resetHistoryCorruptionTitles","category","history","historyCountMax","shift","resetHistoryPushNewRow","resetHistoryRenderRow","tbody","querySelector","insertBefore","removeChild","lastChild","_category","colsUsed","rowContentHtml","kindMeta","toLocaleString","formatTimeShort","gains","dataIntersection","listable","gainInfo","str","oldMulti","newMulti","diff","match","extractStringExponent","corruptions","resetHistoryFormatCorruptions","innerHTML","resetHistoryRenderAllTables","categoryToRender","targetTable","resetHistoryRenderFullTable","corruptionIdx","calculatePlatonicBlessings","platonicArray","platonicBlessings","DRThreshold","cubeUpgradeName","cubeBaseCost","cubeMaxLevel","cubeUpgradeDescriptions","getCubeCost","amountToBuy","cubeUpgrades","cubeUpgradeDesc","updateCubeUpgradeBG","buyCubeUpgrades","upgrades","format24","Intl","DateTimeFormat","year","month","day","hour","hour12","minute","second","format12","getRealTime","use12","dateParts","assign","formatToParts","period","dayPeriod","toUpperCase","importSynergism","JSON","parse","atob","exporttest","isTesting","localStorage","setItem","btoa","stringify","reloadShit","generateEventHandlers","ordinals","resetCheck","buildingTypes","buildingTypesAlternate","buildingOrds","buildingOrdsToNum","index2","buildingTypesAlternate2","buildingTypesAlternate3","particleBuildingCosts","targets","tesseractBuildingCosts","resourceTypes","resourceType","talismanBuyPercents","talismanBuyPercentsOrd","talismanItemNames","antProducerCostVals","antUpgradeCostVals","open","openCustom","platonicUpgrades","hepteractCrafts","chronos","hyperrealism","quark","abyss","accelerator","acceleratorBoost","settingSubTabs","querySelectorAll","subtab","offlinetick","quarkData","worlds","quarkstimer","saveSynergy","toClipboard","checked","getItem","navigator","clipboard","writeText","catch","error","textArea","body","focus","select","execCommand","saveString","version","click","window","crypto","getRandomValues","Uint16Array","hold","blankSave","codes","achievements","rngCode","first","addPrompt","skillCode","bet","dice","won","runeshards","button","borderColor","resetHistoryTogglePerSecond","target","saveItem","loadPlugins","addTimers","time","prestigecounter","transcendcounter","reincarnationcounter","shopUpgrades","ascensionCounter","maxQuarkTimer","automaticTools","obtainiumGain","researchPoints","sacrificeTimer","notMaxed","maxxed","runelevels","checkMaxRunes","autoSacrifice","antSacrificeTimer","antSacrificeTimerReal","autoAntSacrificeMode","autoAntSacTimer","researches","autoAntSacrifice","antPoints","blessings","weight","pdf","runeExp","antSacrifice","antELO","talismanBonus","globalSpeed","hypercubeBonus","taxes","scoreBonus","Cube","cubesToOpen","WowCubes","super","cubeBlessings","cubeOpenedDaily","quarkMult","gainQuarks","checkQuarkGain","actualQuarksGain","cubeQuarkDaily","toSpendModulo","toSpendDiv20","WowTesseracts","tesseractOpenedDaily","tesseractQuarkDaily","tesseractBlessings","extraCubeBlessings","WowHypercubes","hypercubeOpenedDaily","hypercubeQuarkDaily","hypercubeBlessings","extraTesseractBlessings","WowPlatonicCubes","platonicCubeOpenedDaily","platonicCubeQuarkDaily","toSpendDiv40000","RNGesus","gainValues","commonDrops","extraHypercubes","intervalHold","Set","interval","Proxy","setInterval","clearInt","clearInterval","delete","Quark","coins","coinsThisPrestige","coinsThisTranscension","coinsThisReincarnation","coinsTotal","firstOwnedCoin","firstGeneratedCoin","firstCostCoin","firstProduceCoin","secondOwnedCoin","secondGeneratedCoin","secondCostCoin","secondProduceCoin","thirdOwnedCoin","thirdGeneratedCoin","thirdCostCoin","thirdProduceCoin","fourthOwnedCoin","fourthGeneratedCoin","fourthCostCoin","fourthProduceCoin","fifthOwnedCoin","fifthGeneratedCoin","fifthCostCoin","fifthProduceCoin","firstOwnedDiamonds","firstGeneratedDiamonds","firstCostDiamonds","firstProduceDiamonds","secondOwnedDiamonds","secondGeneratedDiamonds","secondCostDiamonds","secondProduceDiamonds","thirdOwnedDiamonds","thirdGeneratedDiamonds","thirdCostDiamonds","thirdProduceDiamonds","fourthOwnedDiamonds","fourthGeneratedDiamonds","fourthCostDiamonds","fourthProduceDiamonds","fifthOwnedDiamonds","fifthGeneratedDiamonds","fifthCostDiamonds","fifthProduceDiamonds","firstOwnedMythos","firstGeneratedMythos","firstCostMythos","firstProduceMythos","secondOwnedMythos","secondGeneratedMythos","secondCostMythos","secondProduceMythos","thirdOwnedMythos","thirdGeneratedMythos","thirdCostMythos","thirdProduceMythos","fourthOwnedMythos","fourthGeneratedMythos","fourthCostMythos","fourthProduceMythos","fifthOwnedMythos","fifthGeneratedMythos","fifthCostMythos","fifthProduceMythos","firstOwnedParticles","firstGeneratedParticles","firstCostParticles","firstProduceParticles","secondOwnedParticles","secondGeneratedParticles","secondCostParticles","secondProduceParticles","thirdOwnedParticles","thirdGeneratedParticles","thirdCostParticles","thirdProduceParticles","fourthOwnedParticles","fourthGeneratedParticles","fourthCostParticles","fourthProduceParticles","fifthOwnedParticles","fifthGeneratedParticles","fifthCostParticles","fifthProduceParticles","firstOwnedAnts","firstGeneratedAnts","firstCostAnts","firstProduceAnts","secondOwnedAnts","secondGeneratedAnts","secondCostAnts","secondProduceAnts","thirdOwnedAnts","thirdGeneratedAnts","thirdCostAnts","thirdProduceAnts","fourthOwnedAnts","fourthGeneratedAnts","fourthCostAnts","fourthProduceAnts","fifthOwnedAnts","fifthGeneratedAnts","fifthCostAnts","fifthProduceAnts","sixthOwnedAnts","sixthGeneratedAnts","sixthCostAnts","sixthProduceAnts","seventhOwnedAnts","seventhGeneratedAnts","seventhCostAnts","seventhProduceAnts","eighthOwnedAnts","eighthGeneratedAnts","eighthCostAnts","eighthProduceAnts","ascendBuilding1","owned","generated","ascendBuilding2","ascendBuilding3","ascendBuilding4","ascendBuilding5","multiplierCost","multiplierBought","acceleratorCost","acceleratorBought","acceleratorBoostBought","acceleratorBoostCost","fill","prestigeCount","transcendCount","reincarnationCount","prestigePoints","transcendPoints","reincarnationPoints","prestigeShards","transcendShards","reincarnationShards","toggles","28","29","30","31","32","33","highestchallengecompletions","challenge15Exponent","highestChallenge15Exponent","retrychallenges","transcension","reincarnation","ascension","obtainiumtimer","obtainiumpersecond","maxobtainiumpersecond","maxobtainium","unlocks","coinone","cointwo","cointhree","coinfour","prestige","generation","transcend","reincarnate","achievementPoints","prestigenomultiplier","prestigenoaccelerator","transcendnomultiplier","transcendnoaccelerator","reincarnatenomultiplier","reincarnatenoaccelerator","prestigenocoinupgrades","transcendnocoinupgrades","transcendnocoinorprestigeupgrades","reincarnatenocoinupgrades","reincarnatenocoinorprestigeupgrades","reincarnatenocoinprestigeortranscendupgrades","reincarnatenocoinprestigetranscendorgeneratorupgrades","crystalUpgrades","crystalUpgradesCost","runeexp","maxofferings","offeringpersecond","prestigeamount","transcendamount","reincarnationamount","fastestprestige","fastesttranscend","fastestreincarnate","resettoggle1","resettoggle2","resettoggle3","tesseractAutoBuyerToggle","tesseractAutoBuyerAmount","coinbuyamount","crystalbuyamount","mythosbuyamount","particlebuyamount","offeringbuyamount","tesseractbuyamount","shoptoggles","coin","generators","tabnumber","subtabNumber","Map","loaded1009","loaded1009hotfix1","loaded10091","loaded1010","loaded10101","autoSacrificeToggle","autoFortifyToggle","autoEnhanceToggle","autoResearchToggle","autoResearch","antUpgrades","talismanLevels","talismanRarity","talismanOne","talismanTwo","talismanThree","talismanFour","talismanFive","talismanSix","talismanSeven","buyTalismanShardPercent","antMax","wowAbyssals","ascendShards","autoAscend","autoAscendMode","autoAscendThreshold","roombaResearchIndex","ascStatToggles","prototypeCorruptions","corruptionLoadouts","corruptionShowStats","constantUpgrades","ants","ascend","autoChallengeRunning","autoChallengeIndex","autoChallengeToggles","autoChallengeStartExponent","autoChallengeTimer","start","exit","enter","runeBlessingLevels","runeSpiritLevels","runeBlessingBuyAmount","runeSpiritBuyAmount","autoTesseracts","dayCheck","dayTimer","loadedOct4Hotfix","loadedNov13Vers","loadedDec16Vers","removeItem","toAdapt","IntlFormatter","NumberFormat","part","group","dec","locOpts","minimumFractionDigits","maximumFractionDigits","accuracy","long","truncate","standardString","standard","front","back","frontFormatted","BigInt","mantissaLook","powerDigits","powerFront","powerLook","powerLookF","msMaxSeconds","padStart","updateAllTick","updateAllMultiplier","c7","resourceGain","crystalExponent","first6CoinUp","multipliers","compareC","calculatetax","addcoin","resetCurrency","pm","chal","reinchal","ascendchal","prestigePow","transcendPow","manual","leaving","resetConfirmation","maxCompletions","reqCheck","comp","maxInc","counter","conf","updateAll","pop","cheapestTesseractBuilding","intCostArray","reductionValue","scalings","originalCosts","resource","ord","particleOriginalCost","array","lastUpdate","deltaMean","tick","dtEffective","delta","performance","tack","maxCount","talismansUnlocked","upgradedTalisman","imp","main","keysPressed","activeElement","localName","stopPropagation","costs","default","diamond","preventDefault","timer","clear","oldCodesUsed","size","oldPromoKeys","Boolean","prop","isArray","offerpromo24used","refundThese","refundReward","shop","obtainiumAutoLevel","instantChallengeBought","talismanBought","cubeToQuarkBought","tesseractToQuarkBought","hypercubeToQuarkBought","offeringTimerLevel","obtainiumTimerLevel","offeringAutoLevel","cashGrabLevel","antSpeedLevel","seasonPassLevel","checkVariablesOnLoad","testArray","ouch","ver","title","talismanResourceCosts","shard","commonFragment","uncommonFragment","rareFragment","epicFragment","legendaryFragment","mythicalFragment","getTalismanResourceInfo","percentage","obtainiumCost","offeringCost","maxBuyObtainium","maxBuyOffering","updateTalismanCostDisplay","talismanCostInfo","TalismanName","toggleTalismanBuy","updateTalismanInventory","buyTalismanResources","talismanResourcesData","showTalismanEffect","showTalismanPrices","showEnhanceTalismanPrices","costArray","showRespecInformation","runeName","runeModifier","changeTalismanModifier","checkSum","respecTalismanConfirm","respecTalismanCancel","updateTalismanAppearance","rarity","buyTalismanLevels","hasPurchased","priceMult","buyTalismanEnhance","calculateTesseractBlessings","tesseractArray","tabNumberConst","toggleTabs","subTabList","subTabsInMainTab","buttonID","btns","contains","toggleSettings","toggleauto","toggleChallenges","toggleAutoChallengeRun","toggleBuyAmount","quantity","toggleShops","tabs","mainTab","tabName","unlocked","0","tabSwitcher","setActiveSettingScreen","subTabID","toggleBuildingScreen","toggleRuneScreen","toggleCubeSubTab","toggleCorruptionLoadoutsStats","keyboardTabChange","dir","maxTab","minTab","Infinity","handleLoopBack","numSubTabs","toggleSubTab","subTab","children","toggleautoreset","toggleautobuytesseract","autos","getAttribute","toggleId","finishedString","toggleResearchBuy","toggleAutoResearch","toggleAutoSacrifice","screen","toggleautofortify","toggleautoenhance","clickedButton","subtabEl","parentNode","refreshStats","credits","artists","childElementCount","contributor","Image","avatar_url","alt","login","href","user","toggleShopConfirmation","toggleAntMaxBuy","toggleAntAutoSacrifice","mode","toggleMaxBuyCube","cubeTab","updateAutoChallenge","toggleAutoChallengesIgnore","toggleAutoChallengeModeText","toggleAutoAscend","updateRuneBlessingBuyAmount","toggleAutoTesseracts","toggleCorruptionLevel","stats","toggleAscStatPerSecond","revealStuff","example","example2","example3","example4","example5","example6","example7","example8","example9","example10","example11","example12","example13","example14","example15","example16","example17","example18","example19","example20","example21","example22","example23","example24","example25","example26","example27","example28","example29","example30","example31","ex","example32","automationUnlocks","hideStuff","settingsTab","visualTab","buildings","runes","challenges","research","settings","traits","htmlInserts","updateAscensionStats","buttoncolorchange","toggle","costParticles","ascendBuilding","costAnts","updateChallengeDisplay","updateChallengeLevel","updateAchievementBG","fixDisplay1","fixDisplay2","CSSAscend","top","left","showCorruptionStatsLoadouts","tess","hyper","platonic","splice","fillers","tabColors","changeTabColor","tab","Alert","cb","alertWrap","popup","ok","removeEventListener","kbListener","AlertCB","Prompt","confWrap","cancel","targetEl","PromptCB","Confirm","ConfirmCB","ev","isOnPage","hover","popunder","setProperty","offsetHeight","offsetWidth","offsetTop","offsetLeft","visualUpdateBuildings","upper","totalProductionDivisor","place","warning","perSecNames","visualUpdateUpgrades","visualUpdateAchievements","visualUpdateRunes","talismans","levelsPurchasable","visualUpdateChallenges","visualUpdateResearch","visualUpdateAnts","visualUpdateCubes","cubeMult","tesseractMult","hypercubeMult","augmentAccuracy","hypercubeArray","visualUpdateCorruptions","visualUpdateSettings","onExportQuarks","maxExportQuarks","visualUpdateShop","upgdesc","upgdesc1","upgdesc2","upgdesc3","upgdesc4","upgdesc5","upgdesc6","upgdesc7","upgdesc8","upgdesc9","upgdesc10","upgdesc11","upgdesc12","upgdesc13","upgdesc14","upgdesc15","upgdesc16","upgdesc17","upgdesc18","upgdesc19","upgdesc20","upgdesc21","upgdesc22","upgdesc23","upgdesc24","upgdesc25","upgdesc26","upgdesc27","upgdesc28","upgdesc29","upgdesc30","upgdesc31","upgdesc32","upgdesc33","upgdesc34","upgdesc35","upgdesc36","upgdesc37","upgdesc38","upgdesc39","upgdesc40","upgdesc41","upgdesc42","upgdesc43","upgdesc44","upgdesc45","upgdesc46","upgdesc47","upgdesc48","upgdesc49","upgdesc50","upgdesc51","upgdesc52","upgdesc53","upgdesc54","upgdesc55","upgdesc56","upgdesc57","upgdesc58","upgdesc59","upgdesc60","upgdesc61","upgdesc62","upgdesc63","upgdesc64","upgdesc65","upgdesc66","upgdesc67","upgdesc68","upgdesc69","upgdesc70","upgdesc71","upgdesc72","upgdesc73","upgdesc74","upgdesc75","upgdesc76","upgdesc77","upgdesc78","upgdesc79","upgdesc80","upgdesc81","upgdesc82","upgdesc83","upgdesc84","upgdesc85","upgdesc86","upgdesc87","upgdesc88","upgdesc89","upgdesc90","upgdesc91","upgdesc92","upgdesc93","upgdesc94","upgdesc95","upgdesc96","upgdesc97","upgdesc98","upgdesc99","upgdesc100","upgdesc101","upgdesc102","upgdesc103","upgdesc104","upgdesc105","upgdesc106","upgdesc107","upgdesc108","upgdesc109","upgdesc110","upgdesc111","upgdesc112","upgdesc113","upgdesc114","upgdesc115","upgdesc116","upgdesc117","upgdesc118","upgdesc119","upgdesc120","upgdesc121","upgdesc122","upgdesc123","upgdesc124","upgdesc125","crystalupgdesc","crystalupgdesc1","crystalupgdesc2","crystalupgdesc3","crystalupgdesc4","crystalupgdesc5","crystalupgdesc6","crystalupgdesc7","crystalupgdesc8","constantUpgDesc","constantUpgDesc1","constantUpgDesc2","constantUpgDesc3","constantUpgDesc4","constantUpgDesc5","constantUpgDesc6","constantUpgDesc7","constantUpgDesc8","constantUpgDesc9","constantUpgDesc10","upgradetexts","upgradedescriptions","currency","upgradeeffects","crystalupgradedescriptions","upgradeupdate","constUpgEffect","getConstUpgradeMetadata","constantUpgradeDescriptions","returnConstUpgEffect","buyConstantUpgrades","isDecimal","smallestInc","MAX_SAFE_INTEGER","sumContents","productContents","sortWithIndeces","toSort","sort","stripIndents","raw","trim","padArray","updateClassList","targetElement","additions","removals","addition","removal","Globals","runediv","runeexpbase","upgradeCosts","crystalUpgradeCostIncrement","researchBaseCosts","researchMaxLevels","ticker","costDivisor","freeAccelerator","totalAccelerator","freeAcceleratorBoost","totalAcceleratorBoost","acceleratorPower","acceleratorEffect","acceleratorEffectDisplay","generatorPower","freeMultiplier","totalMultiplier","multiplierPower","multiplierEffect","challengeOneLog","freeMultiplierBoost","totalMultiplierBoost","globalCoinMultiplier","totalCoinOwned","prestigeMultiplier","buildingPower","reincarnationMultiplier","coinOneMulti","coinTwoMulti","coinThreeMulti","coinFourMulti","coinFiveMulti","globalCrystalMultiplier","globalMythosMultiplier","grandmasterMultiplier","atomsMultiplier","mythosBuildingPower","challengeThreeMultiplier","totalMythosOwned","prestigePointGain","challengeFivePower","transcendPointGain","reincarnationPointGain","produceFirst","produceSecond","produceThird","produceFourth","produceFifth","produceTotal","produceFirstDiamonds","produceSecondDiamonds","produceThirdDiamonds","produceFourthDiamonds","produceFifthDiamonds","produceDiamonds","produceFirstMythos","produceSecondMythos","produceThirdMythos","produceFourthMythos","produceFifthMythos","produceMythos","produceFirstParticles","produceSecondParticles","produceThirdParticles","produceFourthParticles","produceFifthParticles","produceParticles","producePerSecond","producePerSecondDiamonds","producePerSecondMythos","producePerSecondParticles","uFourteenMulti","uFifteenMulti","tuSevenMulti","currentTab","researchfiller1","researchfiller2","cardinals","challengeBaseRequirements","taxdivisor","taxdivisorcheck","runemultiplierincrease","one","two","three","four","five","mythosupgrade13","mythosupgrade14","mythosupgrade15","challengefocus","maxexponent","maxbuyresearch","effectiveLevelMult","optimalOfferingTimer","optimalObtainiumTimer","runeSum","shopConfirmation","globalAntMult","antMultiplier","antOneProduce","antTwoProduce","antThreeProduce","antFourProduce","antFiveProduce","antSixProduce","antSevenProduce","antEightProduce","antCostGrowth","antUpgradeBaseCost","antUpgradeCostIncreases","bonusant1","bonusant2","bonusant3","bonusant4","bonusant5","bonusant6","bonusant7","bonusant8","bonusant9","bonusant10","bonusant11","bonusant12","rune1level","rune2level","rune3level","rune4level","rune5level","rune1Talisman","rune2Talisman","rune3Talisman","rune4Talisman","rune5Talisman","talisman1Effect","talisman2Effect","talisman3Effect","talisman4Effect","talisman5Effect","talisman6Effect","talisman7Effect","talisman6Power","talisman7Quarks","runescreen","settingscreen","talismanResourceObtainiumCosts","talismanResourceOfferingCosts","talismanLevelCostMultiplier","talismanPositiveModifier","talismanNegativeModifier","commonTalismanEnhanceCost","uncommonTalismanEnchanceCost","rareTalismanEnchanceCost","epicTalismanEnhanceCost","legendaryTalismanEnchanceCost","mythicalTalismanEnchanceCost","talismanRespec","mirrorTalismanStats","timeWarp","blessingMultiplier","spiritMultiplier","runeBlessings","runeSpirits","effectiveRuneBlessingPower","effectiveRuneSpiritPower","blessingBaseCost","spiritBaseCost","triggerChallenge","prevReductionValue","buildingSubTab","blessingbase","blessingDRPower","giftbase","giftDRPower","benedictionbase","benedictionDRPower","platonicCubeBase","platonicDRPower","cubeBonusMultiplier","tesseractBonusMultiplier","hypercubeBonusMultiplier","platonicBonusMultiplier","buyMaxCubeUpgrades","autoOfferingCounter","researchOrderByCost","divisivenessPower","maladaptivePower","lazinessMultiplier","hyperchallengedMultiplier","illiteracyPower","deflationMultiplier","extinctionMultiplier","droughtMultiplier","financialcollapsePower","corruptionPointMultipliers","ascendBuildingProduction","third","fourth","fifth","freeUpgradeAccelerator","freeUpgradeMultiplier","acceleratorMultiplier","multiplierMultiplier","constUpgradeCosts","globalConstantMult","autoTalismanTimer","autoChallengeTimerIncrement","corruptionTrigger","challenge15Rewards","cube1","coinExponent","runeBonus","cube2","transcendChallengeReduction","reincarnationChallengeReduction","bonusAntLevel","cube3","blessingBonus","constantBonus","cube4","spiritBonus","hepteractUnlocked","autoResetTimers","upgradeMultiplier","blankGlobals","webpackAsyncContext","__webpack_require__","code","ids","__webpack_module_cache__","moduleId","__webpack_modules__","getter","__esModule","definition","chunkId","promises","url","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","bind","head","toStringTag","installedChunks","179","installedChunkData","promise","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","resolves","chunkLoadingGlobal","self"],"mappings":"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EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIC,IAAIH,GAC1DI,EAAU,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7D,IAAK,IAAIzwC,EAAI,EAAGA,EAAIuwC,EAAQjjC,OAAQtN,IAAK,CACrC,GAAU,IAANA,IAAsB,MAAV6P,GAA2B,MAAVA,GAA2B,MAAVA,GAC9C,OAAO,kBAAoB4gC,EAAQzwC,IAAM,EAE7C,GAAI6P,GAAS0gC,EAAQvwC,GACjB,OAAO,kBAAoBywC,EAAQzwC,IAAM,EAGjD,OAAO,GAELwvC,EAAmB3/B,GAAU,sBAAuBA,IAAU,gBAAkBA,GAChF6gC,EAAU,CACZ,iFACA,gFACA,uFACA,+EACA,iEACA,8CACA,8CACA,8CACA,8CACA,+CACA,8CACA,8CACA,gDACA,gDACA,gDACA,qDACA,qDACA,yDACA,yDACA,yDACA,8FACA,iEACA,yEACA,iFACA,qEACA,qFACA,qFACA,sDACA,8DACA,8DACA,uGACA,8GACA,uEACA,+EACA,gFACA,oDACA,sDACA,sDACA,sEACA,2EACA,yHACA,kEACA,kEACA,kEACA,0EACA,0DACA,0FACA,gGACA,8FACA,oGACA,4DACA,4DACA,+DACA,iEACA,mEACA,0DACA,0DACA,0DACA,0DACA,2DACA,oEACA,kFACA,yFACA,yFACA,yFACA,qFACA,sFACA,gFACA,4EACA,uFACA,kFACA,kFACA,kFACA,kFACA,kFACA,sGACA,wGACA,uGACA,uGACA,6GACA,6GACA,kGACA,mFACA,oGACA,wEACA,6DACA,sDACA,2DACA,mEACA,4FACA,8CACA,oDACA,uEACA,gEACA,mGACA,wFACA,kEACA,kEACA,+GACA,oJACA,wGACA,qEACA,6DACA,4FACA,+HACA,qGACA,wHACA,yEACA,wFACA,uEACA,kFACA,yFACA,qFACA,2FACA,wFACA,uFACA,iFACA,sEACA,0DACA,4DACA,wEACA,kDACA,0CACA,0EACA,kDACA,mFACA,8DACA,sEACA,oGACA,yFACA,4FACA,oGACA,wFACA,oEACA,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","file":"bundle.js","sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"synergismofficial:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => fn(event));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import padEnd from 'pad-end';\n\n// consider adding them together pointless, just return the larger one\n\nvar MAX_SIGNIFICANT_DIGITS = 17; // Highest value you can safely put here is Number.MAX_SAFE_INTEGER-MAX_SIGNIFICANT_DIGITS\n\nvar EXP_LIMIT = 9e15; // The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MAX = 308; // The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; // Tolerance which is used for Number conversion to compensate floating-point error.\n\nvar ROUND_TOLERANCE = 1e-10;\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}();\n\nvar D = function D(value) {\n  return value instanceof Decimal ? value : new Decimal(value);\n};\n\nvar ME = function ME(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent(mantissa, exponent);\n};\n\nvar ME_NN = function ME_NN(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n};\n\nfunction affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n  var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n  return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10() / priceRatio.log10());\n}\n\nfunction sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n  return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n}\n\nfunction affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n  // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n  // where a is actualStart, d is priceAdd and S is resourcesAvailable\n  // then floor it and you're done!\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n  var b = actualStart.sub(priceAdd.div(2));\n  var b2 = b.pow(2);\n  return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n}\n\nfunction sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n  return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n}\n\nfunction efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n  return cost.div(currentRpS).add(cost.div(deltaRpS));\n}\n/**\n * The Decimal's value is simply mantissa * 10^exponent.\n */\n\n\nvar Decimal =\n/** @class */\nfunction () {\n  function Decimal(value) {\n    /**\n     * A number (double) with absolute value between [1, 10) OR exactly 0.\n     * If mantissa is ever 10 or greater, it should be normalized\n     * (divide by 10 and add 1 to exponent until it is less than 10,\n     * or multiply by 10 and subtract 1 from exponent until it is 1 or greater).\n     * Infinity/-Infinity/NaN will cause bad things to happen.\n     */\n    this.mantissa = NaN;\n    /**\n     * A number (integer) between -EXP_LIMIT and EXP_LIMIT.\n     * Non-integral/out of bounds will cause bad things to happen.\n     */\n\n    this.exponent = NaN;\n\n    if (value === undefined) {\n      this.m = 0;\n      this.e = 0;\n    } else if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else {\n      this.fromString(value);\n    }\n  }\n\n  Object.defineProperty(Decimal.prototype, \"m\", {\n    get: function get() {\n      return this.mantissa;\n    },\n    set: function set(value) {\n      this.mantissa = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"e\", {\n    get: function get() {\n      return this.exponent;\n    },\n    set: function set(value) {\n      this.exponent = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"s\", {\n    get: function get() {\n      return this.sign();\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.e = 0;\n        this.m = 0;\n        return;\n      }\n\n      if (this.sgn() !== value) {\n        this.m = -this.m;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Decimal.fromMantissaExponent = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent(mantissa, exponent);\n  };\n\n  Decimal.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n  };\n\n  Decimal.fromDecimal = function (value) {\n    return new Decimal().fromDecimal(value);\n  };\n\n  Decimal.fromNumber = function (value) {\n    return new Decimal().fromNumber(value);\n  };\n\n  Decimal.fromString = function (value) {\n    return new Decimal().fromString(value);\n  };\n\n  Decimal.fromValue = function (value) {\n    return new Decimal().fromValue(value);\n  };\n\n  Decimal.fromValue_noAlloc = function (value) {\n    return value instanceof Decimal ? value : new Decimal(value);\n  };\n\n  Decimal.abs = function (value) {\n    return D(value).abs();\n  };\n\n  Decimal.neg = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negate = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negated = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.sign = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.sgn = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.round = function (value) {\n    return D(value).round();\n  };\n\n  Decimal.floor = function (value) {\n    return D(value).floor();\n  };\n\n  Decimal.ceil = function (value) {\n    return D(value).ceil();\n  };\n\n  Decimal.trunc = function (value) {\n    return D(value).trunc();\n  };\n\n  Decimal.add = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.plus = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.sub = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.subtract = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.minus = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.mul = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.multiply = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.times = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.div = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.divide = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.recip = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocal = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocate = function (value) {\n    return D(value).reciprocate();\n  };\n\n  Decimal.cmp = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.compare = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.eq = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.equals = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.neq = function (value, other) {\n    return D(value).neq(other);\n  };\n\n  Decimal.notEquals = function (value, other) {\n    return D(value).notEquals(other);\n  };\n\n  Decimal.lt = function (value, other) {\n    return D(value).lt(other);\n  };\n\n  Decimal.lte = function (value, other) {\n    return D(value).lte(other);\n  };\n\n  Decimal.gt = function (value, other) {\n    return D(value).gt(other);\n  };\n\n  Decimal.gte = function (value, other) {\n    return D(value).gte(other);\n  };\n\n  Decimal.max = function (value, other) {\n    return D(value).max(other);\n  };\n\n  Decimal.min = function (value, other) {\n    return D(value).min(other);\n  };\n\n  Decimal.clamp = function (value, min, max) {\n    return D(value).clamp(min, max);\n  };\n\n  Decimal.clampMin = function (value, min) {\n    return D(value).clampMin(min);\n  };\n\n  Decimal.clampMax = function (value, max) {\n    return D(value).clampMax(max);\n  };\n\n  Decimal.cmp_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.compare_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.eq_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.equals_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.neq_tolerance = function (value, other, tolerance) {\n    return D(value).neq_tolerance(other, tolerance);\n  };\n\n  Decimal.notEquals_tolerance = function (value, other, tolerance) {\n    return D(value).notEquals_tolerance(other, tolerance);\n  };\n\n  Decimal.lt_tolerance = function (value, other, tolerance) {\n    return D(value).lt_tolerance(other, tolerance);\n  };\n\n  Decimal.lte_tolerance = function (value, other, tolerance) {\n    return D(value).lte_tolerance(other, tolerance);\n  };\n\n  Decimal.gt_tolerance = function (value, other, tolerance) {\n    return D(value).gt_tolerance(other, tolerance);\n  };\n\n  Decimal.gte_tolerance = function (value, other, tolerance) {\n    return D(value).gte_tolerance(other, tolerance);\n  };\n\n  Decimal.log10 = function (value) {\n    return D(value).log10();\n  };\n\n  Decimal.absLog10 = function (value) {\n    return D(value).absLog10();\n  };\n\n  Decimal.pLog10 = function (value) {\n    return D(value).pLog10();\n  };\n\n  Decimal.log = function (value, base) {\n    return D(value).log(base);\n  };\n\n  Decimal.log2 = function (value) {\n    return D(value).log2();\n  };\n\n  Decimal.ln = function (value) {\n    return D(value).ln();\n  };\n\n  Decimal.logarithm = function (value, base) {\n    return D(value).logarithm(base);\n  };\n\n  Decimal.pow10 = function (value) {\n    if (Number.isInteger(value)) {\n      return ME_NN(1, value);\n    }\n\n    return ME(Math.pow(10, value % 1), Math.trunc(value));\n  };\n\n  Decimal.pow = function (value, other) {\n    // Fast track: 10^integer\n    if (typeof value === \"number\" && value === 10 && typeof other === \"number\" && Number.isInteger(other)) {\n      return ME_NN(1, other);\n    }\n\n    return D(value).pow(other);\n  };\n\n  Decimal.exp = function (value) {\n    return D(value).exp();\n  };\n\n  Decimal.sqr = function (value) {\n    return D(value).sqr();\n  };\n\n  Decimal.sqrt = function (value) {\n    return D(value).sqrt();\n  };\n\n  Decimal.cube = function (value) {\n    return D(value).cube();\n  };\n\n  Decimal.cbrt = function (value) {\n    return D(value).cbrt();\n  };\n\n  Decimal.dp = function (value) {\n    return D(value).dp();\n  };\n\n  Decimal.decimalPlaces = function (value) {\n    return D(value).dp();\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something\n   * with exponentially increasing cost each purchase (start at priceStart,\n   * multiply by priceRatio, already own currentOwned), how much of it can you buy?\n   * Adapted from Trimps source code.\n   */\n\n\n  Decimal.affordGeometricSeries = function (resourcesAvailable, priceStart, priceRatio, currentOwned) {\n    return affordGeometricSeries(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it multiplies by priceRatio each purchase?\n   */\n\n\n  Decimal.sumGeometricSeries = function (numItems, priceStart, priceRatio, currentOwned) {\n    return sumGeometricSeries(numItems, D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\n   * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\n   * how much of it can you buy?\n   */\n\n\n  Decimal.affordArithmeticSeries = function (resourcesAvailable, priceStart, priceAdd, currentOwned) {\n    return affordArithmeticSeries(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it adds priceAdd each purchase?\n   * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\n   */\n\n\n  Decimal.sumArithmeticSeries = function (numItems, priceStart, priceAdd, currentOwned) {\n    return sumArithmeticSeries(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\n   * the lowest efficiency score is the better one to purchase.\n   * From Frozen Cookies:\n   * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\n   */\n\n\n  Decimal.efficiencyOfPurchase = function (cost, currentRpS, deltaRpS) {\n    return efficiencyOfPurchase(D(cost), D(currentRpS), D(deltaRpS));\n  };\n\n  Decimal.randomDecimalForTesting = function (absMaxExponent) {\n    // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n    // 5% of the time, have a mantissa of 0\n    if (Math.random() * 20 < 1) {\n      return ME_NN(0, 0);\n    }\n\n    var mantissa = Math.random() * 10; // 10% of the time, have a simple mantissa\n\n    if (Math.random() * 10 < 1) {\n      mantissa = Math.round(mantissa);\n    }\n\n    mantissa *= Math.sign(Math.random() * 2 - 1);\n    var exponent = Math.floor(Math.random() * absMaxExponent * 2) - absMaxExponent;\n    return ME(mantissa, exponent);\n    /*\n      Examples:\n            randomly test pow:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var pow = Math.random()*20-10;\n      if (Math.random()*2 < 1) { pow = Math.round(pow); }\n      var result = Decimal.pow(a, pow);\n      [\"(\" + a.toString() + \")^\" + pow.toString(), result.toString()]\n            randomly test add:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var b = Decimal.randomDecimalForTesting(17);\n      var c = a.mul(b);\n      var result = a.add(c);\n      [a.toString() + \"+\" + c.toString(), result.toString()]\n    */\n  };\n  /**\n   * When mantissa is very denormalized, use this to normalize much faster.\n   */\n\n\n  Decimal.prototype.normalize = function () {\n    if (this.m >= 1 && this.m < 10) {\n      return this;\n    } // TODO: I'm worried about mantissa being negative 0 here which is why I set it again, but it may never matter\n\n\n    if (this.m === 0) {\n      this.m = 0;\n      this.e = 0;\n      return this;\n    }\n\n    var tempExponent = Math.floor(Math.log10(Math.abs(this.m)));\n    this.m = tempExponent === NUMBER_EXP_MIN ? this.m * 10 / 1e-323 : this.m / powerOf10(tempExponent);\n    this.e += tempExponent;\n    return this;\n  };\n\n  Decimal.prototype.fromMantissaExponent = function (mantissa, exponent) {\n    // SAFETY: don't let in non-numbers\n    if (!isFinite(mantissa) || !isFinite(exponent)) {\n      mantissa = Number.NaN;\n      exponent = Number.NaN;\n      return this;\n    }\n\n    this.m = mantissa;\n    this.e = exponent; // Non-normalized mantissas can easily get here, so this is mandatory.\n\n    this.normalize();\n    return this;\n  };\n  /**\n   * Well, you know what you're doing!\n   */\n\n\n  Decimal.prototype.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    this.m = mantissa;\n    this.e = exponent;\n    return this;\n  };\n\n  Decimal.prototype.fromDecimal = function (value) {\n    this.m = value.m;\n    this.e = value.e;\n    return this;\n  };\n\n  Decimal.prototype.fromNumber = function (value) {\n    // SAFETY: Handle Infinity and NaN in a somewhat meaningful way.\n    if (isNaN(value)) {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else if (value === Number.POSITIVE_INFINITY) {\n      this.m = 1;\n      this.e = EXP_LIMIT;\n    } else if (value === Number.NEGATIVE_INFINITY) {\n      this.m = -1;\n      this.e = EXP_LIMIT;\n    } else if (value === 0) {\n      this.m = 0;\n      this.e = 0;\n    } else {\n      this.e = Math.floor(Math.log10(Math.abs(value))); // SAFETY: handle 5e-324, -5e-324 separately\n\n      this.m = this.e === NUMBER_EXP_MIN ? value * 10 / 1e-323 : value / powerOf10(this.e); // SAFETY: Prevent weirdness.\n\n      this.normalize();\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromString = function (value) {\n    if (value.indexOf(\"e\") !== -1) {\n      var parts = value.split(\"e\");\n      this.m = parseFloat(parts[0]);\n      this.e = parseFloat(parts[1]); // Non-normalized mantissas can easily get here, so this is mandatory.\n\n      this.normalize();\n    } else if (value === \"NaN\") {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else {\n      this.fromNumber(parseFloat(value));\n\n      if (isNaN(this.m)) {\n        throw Error(\"[DecimalError] Invalid argument: \" + value);\n      }\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromValue = function (value) {\n    if (value instanceof Decimal) {\n      return this.fromDecimal(value);\n    }\n\n    if (typeof value === \"number\") {\n      return this.fromNumber(value);\n    }\n\n    if (typeof value === \"string\") {\n      return this.fromString(value);\n    }\n\n    this.m = 0;\n    this.e = 0;\n    return this;\n  };\n\n  Decimal.prototype.toNumber = function () {\n    // Problem: new Decimal(116).toNumber() returns 115.99999999999999.\n    // TODO: How to fix in general case? It's clear that if toNumber() is\n    //  VERY close to an integer, we want exactly the integer.\n    //  But it's not clear how to specifically write that.\n    //  So I'll just settle with 'exponent >= 0 and difference between rounded\n    //  and not rounded < 1e-9' as a quick fix.\n    // var result = this.m*Math.pow(10, this.e);\n    if (!isFinite(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.e > NUMBER_EXP_MAX) {\n      return this.m > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    }\n\n    if (this.e < NUMBER_EXP_MIN) {\n      return 0;\n    } // SAFETY: again, handle 5e-324, -5e-324 separately\n\n\n    if (this.e === NUMBER_EXP_MIN) {\n      return this.m > 0 ? 5e-324 : -5e-324;\n    }\n\n    var result = this.m * powerOf10(this.e);\n\n    if (!isFinite(result) || this.e < 0) {\n      return result;\n    }\n\n    var resultRounded = Math.round(result);\n\n    if (Math.abs(resultRounded - result) < ROUND_TOLERANCE) {\n      return resultRounded;\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.mantissaWithDecimalPlaces = function (places) {\n    // https://stackoverflow.com/a/37425022\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.m === 0) {\n      return 0;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.ceil(Math.log10(Math.abs(this.m)));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n  };\n\n  Decimal.prototype.toString = function () {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\";\n    }\n\n    if (this.e < 21 && this.e > -7) {\n      return this.toNumber().toString();\n    }\n\n    return this.m + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toExponential = function (places) {\n    // https://stackoverflow.com/a/37425022\n    // TODO: Some unfixed cases:\n    //  new Decimal(\"1.2345e-999\").toExponential()\n    //  \"1.23450000000000015e-999\"\n    //  new Decimal(\"1e-999\").toExponential()\n    //  \"1.000000000000000000e-999\"\n    // TBH I'm tempted to just say it's a feature.\n    // If you're doing pretty formatting then why don't you know how many decimal places you want...?\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\") + \"e+0\";\n    } // two cases:\n    // 1) exponent is < 308 and > -324: use basic toFixed\n    // 2) everything else: we have to do it ourselves!\n\n\n    if (this.e > NUMBER_EXP_MIN && this.e < NUMBER_EXP_MAX) {\n      return this.toNumber().toExponential(places);\n    }\n\n    if (!isFinite(places)) {\n      places = MAX_SIGNIFICANT_DIGITS;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.max(1, Math.ceil(Math.log10(Math.abs(this.m))));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return rounded.toFixed(Math.max(len - numDigits, 0)) + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toFixed = function (places) {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    } // two cases:\n    // 1) exponent is 17 or greater: just print out mantissa with the appropriate number of zeroes after it\n    // 2) exponent is 16 or less: use basic toFixed\n\n\n    if (this.e >= MAX_SIGNIFICANT_DIGITS) {\n      return this.m.toString().replace(\".\", \"\").padEnd(this.e + 1, \"0\") + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    }\n\n    return this.toNumber().toFixed(places);\n  };\n\n  Decimal.prototype.toPrecision = function (places) {\n    if (this.e <= -7) {\n      return this.toExponential(places - 1);\n    }\n\n    if (places > this.e) {\n      return this.toFixed(places - this.e - 1);\n    }\n\n    return this.toExponential(places - 1);\n  };\n\n  Decimal.prototype.valueOf = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toStringWithDecimalPlaces = function (places) {\n    return this.toExponential(places);\n  };\n\n  Decimal.prototype.abs = function () {\n    return ME_NN(Math.abs(this.m), this.e);\n  };\n\n  Decimal.prototype.neg = function () {\n    return ME_NN(-this.m, this.e);\n  };\n\n  Decimal.prototype.negate = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.negated = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.sign = function () {\n    return Math.sign(this.m);\n  };\n\n  Decimal.prototype.sgn = function () {\n    return this.sign();\n  };\n\n  Decimal.prototype.round = function () {\n    if (this.e < -1) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.round(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.floor = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) >= 0 ? new Decimal(0) : new Decimal(-1);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.floor(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.ceil = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) > 0 ? new Decimal(1) : new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.ceil(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.trunc = function () {\n    if (this.e < 0) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.trunc(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.add = function (value) {\n    // figure out which is bigger, shrink the mantissa of the smaller\n    // by the difference in exponents, add mantissas, normalize and return\n    // TODO: Optimizations and simplification may be possible, see https://github.com/Patashu/break_infinity.js/issues/8\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal;\n    }\n\n    if (decimal.m === 0) {\n      return this;\n    }\n\n    var biggerDecimal;\n    var smallerDecimal;\n\n    if (this.e >= decimal.e) {\n      biggerDecimal = this;\n      smallerDecimal = decimal;\n    } else {\n      biggerDecimal = decimal;\n      smallerDecimal = this;\n    }\n\n    if (biggerDecimal.e - smallerDecimal.e > MAX_SIGNIFICANT_DIGITS) {\n      return biggerDecimal;\n    } // Have to do this because adding numbers that were once integers but scaled down is imprecise.\n    // Example: 299 + 18\n\n\n    return ME(Math.round(1e14 * biggerDecimal.m + 1e14 * smallerDecimal.m * powerOf10(smallerDecimal.e - biggerDecimal.e)), biggerDecimal.e - 14);\n  };\n\n  Decimal.prototype.plus = function (value) {\n    return this.add(value);\n  };\n\n  Decimal.prototype.sub = function (value) {\n    return this.add(D(value).neg());\n  };\n\n  Decimal.prototype.subtract = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.minus = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.mul = function (value) {\n    // This version avoids an extra conversion to Decimal, if possible. Since the\n    // mantissa is -10...10, any number short of MAX/10 can be safely multiplied in\n    if (typeof value === \"number\") {\n      if (value < 1e307 && value > -1e307) {\n        return ME(this.m * value, this.e);\n      } // If the value is larger than 1e307, we can divide that out of mantissa (since it's\n      // greater than 1, it won't underflow)\n\n\n      return ME(this.m * 1e-307 * value, this.e + 307);\n    }\n\n    var decimal = typeof value === \"string\" ? new Decimal(value) : value;\n    return ME(this.m * decimal.m, this.e + decimal.e);\n  };\n\n  Decimal.prototype.multiply = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.times = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.div = function (value) {\n    return this.mul(D(value).recip());\n  };\n\n  Decimal.prototype.divide = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.divideBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.dividedBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.recip = function () {\n    return ME(1 / this.m, -this.e);\n  };\n\n  Decimal.prototype.reciprocal = function () {\n    return this.recip();\n  };\n\n  Decimal.prototype.reciprocate = function () {\n    return this.recip();\n  };\n  /**\n   * -1 for less than value, 0 for equals value, 1 for greater than value\n   */\n\n\n  Decimal.prototype.cmp = function (value) {\n    var decimal = D(value); // TODO: sign(a-b) might be better? https://github.com/Patashu/break_infinity.js/issues/12\n\n    /*\n    from smallest to largest:\n          -3e100\n    -1e100\n    -3e99\n    -1e99\n    -3e0\n    -1e0\n    -3e-99\n    -1e-99\n    -3e-100\n    -1e-100\n    0\n    1e-100\n    3e-100\n    1e-99\n    3e-99\n    1e0\n    3e0\n    1e99\n    3e99\n    1e100\n    3e100\n          */\n\n    if (this.m === 0) {\n      if (decimal.m === 0) {\n        return 0;\n      }\n\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (decimal.m > 0) {\n        return -1;\n      }\n    }\n\n    if (decimal.m === 0) {\n      if (this.m < 0) {\n        return -1;\n      }\n\n      if (this.m > 0) {\n        return 1;\n      }\n    }\n\n    if (this.m > 0) {\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (this.e > decimal.e) {\n        return 1;\n      }\n\n      if (this.e < decimal.e) {\n        return -1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    if (this.m < 0) {\n      if (decimal.m > 0) {\n        return -1;\n      }\n\n      if (this.e > decimal.e) {\n        return -1;\n      }\n\n      if (this.e < decimal.e) {\n        return 1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    throw Error(\"Unreachable code\");\n  };\n\n  Decimal.prototype.compare = function (value) {\n    return this.cmp(value);\n  };\n\n  Decimal.prototype.eq = function (value) {\n    var decimal = D(value);\n    return this.e === decimal.e && this.m === decimal.m;\n  };\n\n  Decimal.prototype.equals = function (value) {\n    return this.eq(value);\n  };\n\n  Decimal.prototype.neq = function (value) {\n    return !this.eq(value);\n  };\n\n  Decimal.prototype.notEquals = function (value) {\n    return this.neq(value);\n  };\n\n  Decimal.prototype.lt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m > 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m <= 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m < decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m > 0 && this.e < decimal.e;\n    }\n\n    return decimal.m > 0 || this.e > decimal.e;\n  };\n\n  Decimal.prototype.lte = function (value) {\n    return !this.gt(value);\n  };\n\n  Decimal.prototype.gt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m < 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m > 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m > decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m < 0 || this.e > decimal.e;\n    }\n\n    return decimal.m < 0 && this.e < decimal.e;\n  };\n\n  Decimal.prototype.gte = function (value) {\n    return !this.lt(value);\n  };\n\n  Decimal.prototype.max = function (value) {\n    var decimal = D(value);\n    return this.lt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.min = function (value) {\n    var decimal = D(value);\n    return this.gt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.clamp = function (min, max) {\n    return this.max(min).min(max);\n  };\n\n  Decimal.prototype.clampMin = function (min) {\n    return this.max(min);\n  };\n\n  Decimal.prototype.clampMax = function (max) {\n    return this.min(max);\n  };\n\n  Decimal.prototype.cmp_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n  };\n\n  Decimal.prototype.compare_tolerance = function (value, tolerance) {\n    return this.cmp_tolerance(value, tolerance);\n  };\n  /**\n   * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\n   * For example, if you put in 1e-9, then any number closer to the\n   * larger number than (larger number)*1e-9 will be considered equal.\n   */\n\n\n  Decimal.prototype.eq_tolerance = function (value, tolerance) {\n    var decimal = D(value); // https://stackoverflow.com/a/33024979\n    // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n    return Decimal.lte(this.sub(decimal).abs(), Decimal.max(this.abs(), decimal.abs()).mul(tolerance));\n  };\n\n  Decimal.prototype.equals_tolerance = function (value, tolerance) {\n    return this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.neq_tolerance = function (value, tolerance) {\n    return !this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.notEquals_tolerance = function (value, tolerance) {\n    return this.neq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.lt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n  };\n\n  Decimal.prototype.lte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n  };\n\n  Decimal.prototype.gt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n  };\n\n  Decimal.prototype.gte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n  };\n\n  Decimal.prototype.log10 = function () {\n    return this.e + Math.log10(this.m);\n  };\n\n  Decimal.prototype.absLog10 = function () {\n    return this.e + Math.log10(Math.abs(this.m));\n  };\n\n  Decimal.prototype.pLog10 = function () {\n    return this.m <= 0 || this.e < 0 ? 0 : this.log10();\n  };\n\n  Decimal.prototype.log = function (base) {\n    // UN-SAFETY: Most incremental game cases are log(number := 1 or greater, base := 2 or greater).\n    // We assume this to be true and thus only need to return a number, not a Decimal,\n    return Math.LN10 / Math.log(base) * this.log10();\n  };\n\n  Decimal.prototype.log2 = function () {\n    return 3.32192809488736234787 * this.log10();\n  };\n\n  Decimal.prototype.ln = function () {\n    return 2.30258509299404568402 * this.log10();\n  };\n\n  Decimal.prototype.logarithm = function (base) {\n    return this.log(base);\n  };\n\n  Decimal.prototype.pow = function (value) {\n    // UN-SAFETY: Accuracy not guaranteed beyond ~9~11 decimal places.\n    // TODO: Decimal.pow(new Decimal(0.5), 0); or Decimal.pow(new Decimal(1), -1);\n    //  makes an exponent of -0! Is a negative zero ever a problem?\n    var numberValue = value instanceof Decimal ? value.toNumber() : value; // TODO: Fast track seems about neutral for performance.\n    //  It might become faster if an integer pow is implemented,\n    //  or it might not be worth doing (see https://github.com/Patashu/break_infinity.js/issues/4 )\n    // Fast track: If (this.e*value) is an integer and mantissa^value\n    // fits in a Number, we can do a very fast method.\n\n    var temp = this.e * numberValue;\n    var newMantissa;\n\n    if (Number.isSafeInteger(temp)) {\n      newMantissa = Math.pow(this.m, numberValue);\n\n      if (isFinite(newMantissa) && newMantissa !== 0) {\n        return ME(newMantissa, temp);\n      }\n    } // Same speed and usually more accurate.\n\n\n    var newExponent = Math.trunc(temp);\n    var residue = temp - newExponent;\n    newMantissa = Math.pow(10, numberValue * Math.log10(this.m) + residue);\n\n    if (isFinite(newMantissa) && newMantissa !== 0) {\n      return ME(newMantissa, newExponent);\n    } // return Decimal.exp(value*this.ln());\n    // UN-SAFETY: This should return NaN when mantissa is negative and value is non-integer.\n\n\n    var result = Decimal.pow10(numberValue * this.absLog10()); // this is 2x faster and gives same values AFAIK\n\n    if (this.sign() === -1 && numberValue % 2 === 1) {\n      return result.neg();\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.pow_base = function (value) {\n    return D(value).pow(this);\n  };\n\n  Decimal.prototype.factorial = function () {\n    // Using Stirling's Approximation.\n    // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\n    var n = this.toNumber() + 1;\n    return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\n  };\n\n  Decimal.prototype.exp = function () {\n    var x = this.toNumber(); // Fast track: if -706 < this < 709, we can use regular exp.\n\n    if (-706 < x && x < 709) {\n      return Decimal.fromNumber(Math.exp(x));\n    }\n\n    return Decimal.pow(Math.E, x);\n  };\n\n  Decimal.prototype.sqr = function () {\n    return ME(Math.pow(this.m, 2), this.e * 2);\n  };\n\n  Decimal.prototype.sqrt = function () {\n    if (this.m < 0) {\n      return new Decimal(Number.NaN);\n    }\n\n    if (this.e % 2 !== 0) {\n      return ME(Math.sqrt(this.m) * 3.16227766016838, Math.floor(this.e / 2));\n    } // Mod of a negative number is negative, so != means '1 or -1'\n\n\n    return ME(Math.sqrt(this.m), Math.floor(this.e / 2));\n  };\n\n  Decimal.prototype.cube = function () {\n    return ME(Math.pow(this.m, 3), this.e * 3);\n  };\n\n  Decimal.prototype.cbrt = function () {\n    var sign = 1;\n    var mantissa = this.m;\n\n    if (mantissa < 0) {\n      sign = -1;\n      mantissa = -mantissa;\n    }\n\n    var newMantissa = sign * Math.pow(mantissa, 1 / 3);\n    var mod = this.e % 3;\n\n    if (mod === 1 || mod === -1) {\n      return ME(newMantissa * 2.1544346900318837, Math.floor(this.e / 3));\n    }\n\n    if (mod !== 0) {\n      return ME(newMantissa * 4.6415888336127789, Math.floor(this.e / 3));\n    } // mod != 0 at this point means 'mod == 2 || mod == -2'\n\n\n    return ME(newMantissa, Math.floor(this.e / 3));\n  }; // Some hyperbolic trig functions that happen to be easy\n\n\n  Decimal.prototype.sinh = function () {\n    return this.exp().sub(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.cosh = function () {\n    return this.exp().add(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.tanh = function () {\n    return this.sinh().div(this.cosh());\n  };\n\n  Decimal.prototype.asinh = function () {\n    return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n  };\n\n  Decimal.prototype.acosh = function () {\n    return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n  };\n\n  Decimal.prototype.atanh = function () {\n    if (this.abs().gte(1)) {\n      return Number.NaN;\n    }\n\n    return Decimal.ln(this.add(1).div(new Decimal(1).sub(this))) / 2;\n  };\n  /**\n   * Joke function from Realm Grinder\n   */\n\n\n  Decimal.prototype.ascensionPenalty = function (ascensions) {\n    if (ascensions === 0) {\n      return this;\n    }\n\n    return this.pow(Math.pow(10, -ascensions));\n  };\n  /**\n   * Joke function from Cookie Clicker. It's 'egg'\n   */\n\n\n  Decimal.prototype.egg = function () {\n    return this.add(9);\n  };\n\n  Decimal.prototype.lessThanOrEqualTo = function (other) {\n    return this.cmp(other) < 1;\n  };\n\n  Decimal.prototype.lessThan = function (other) {\n    return this.cmp(other) < 0;\n  };\n\n  Decimal.prototype.greaterThanOrEqualTo = function (other) {\n    return this.cmp(other) > -1;\n  };\n\n  Decimal.prototype.greaterThan = function (other) {\n    return this.cmp(other) > 0;\n  };\n\n  Decimal.prototype.decimalPlaces = function () {\n    return this.dp();\n  };\n\n  Decimal.prototype.dp = function () {\n    if (!isFinite(this.mantissa)) {\n      return NaN;\n    }\n\n    if (this.exponent >= MAX_SIGNIFICANT_DIGITS) {\n      return 0;\n    }\n\n    var mantissa = this.mantissa;\n    var places = -this.exponent;\n    var e = 1;\n\n    while (Math.abs(Math.round(mantissa * e) / e - mantissa) > ROUND_TOLERANCE) {\n      e *= 10;\n      places++;\n    }\n\n    return places > 0 ? places : 0;\n  };\n\n  Object.defineProperty(Decimal, \"MAX_VALUE\", {\n    get: function get() {\n      return MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"MIN_VALUE\", {\n    get: function get() {\n      return MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MAX_VALUE\", {\n    get: function get() {\n      return NUMBER_MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MIN_VALUE\", {\n    get: function get() {\n      return NUMBER_MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Decimal;\n}();\nvar MAX_VALUE = ME_NN(1, EXP_LIMIT);\nvar MIN_VALUE = ME_NN(1, -EXP_LIMIT);\nvar NUMBER_MAX_VALUE = D(Number.MAX_VALUE);\nvar NUMBER_MIN_VALUE = D(Number.MIN_VALUE);\n\nexport default Decimal;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n","import { format, player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { revealStuff } from './UpdateHTML';\nimport { Synergism } from './Events';\nimport { sumContents } from './Utility';\nconst achievementpointvalues = [0,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    2, 8, 10, 2, 8, 10, 10,\n    2, 8, 10, 10, 10, 10, 10,\n    2, 4, 6, 8, 10, 10, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    20, 20, 20, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 40, 40, 40, 60, 60, 100,\n    40, 40, 40, 60, 60, 100, 100,\n    40, 40, 60, 60, 100, 100, 100,\n    20, 40, 40, 60, 60, 100, 100,\n    40, 60, 100, 60, 100, 100, 40,\n    40, 40, 40, 40, 40, 40, 40,\n    40, 40, 40, 40, 100, 100, 0,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 50, 50, 75, 75, 75, 250\n];\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0);\nconst adesc = {\n    adesc1: \"[1] A Loyal Employee: Hire your first worker.\",\n    adesc2: \"[2] Small Business: Hire 10 workers.\",\n    adesc3: \"[3] Now we're synergizing!: Hire 100 workers.\",\n    adesc4: \"[4] Gaining Redundancies: Hire 1,000 workers.\",\n    adesc5: \"[5] A cog in the machine: Hire 5,000 workers.\",\n    adesc6: \"[6] A nail in the machine: Hire 10,000 workers.\",\n    adesc7: \"[7] Are we even in the machine anymore?: Hire 20,000 workers.\",\n    adesc8: \"[8] STONKS!!!: Purchase 1 Investment.\",\n    adesc9: \"[9] Planning ahead: Purchase 10 Investments.\",\n    adesc10: \"[10] Inside Trading: Purchase 100 Investments.\",\n    adesc11: \"[11] Outside Trading?: Purchase 1,000 Investments.\",\n    adesc12: \"[12] Market Takeover: Purchase 5,000 Investments.\",\n    adesc13: \"[13] Trickle-Down Economics: Purchase 10,000 Investments.\",\n    adesc14: \"[14] Eliminated Regulation: Purchase 20,000 Investments.\",\n    adesc15: \"[15] Stationery!: Build 1 Printer.\",\n    adesc16: \"[16] Printing Press: Build 10 Printers.\",\n    adesc17: \"[17] It prints free money!: Build 100 Printers.\",\n    adesc18: \"[18] Solving Our Debts: Build 1,000 Printers.\",\n    adesc19: \"[19] Monopolizing the market: Build 5,000 Printers.\",\n    adesc20: \"[20] We're running out of Ink!: Build 10,000 Printers.\",\n    adesc21: \"[21] 3D-printing the universe: Build 20,000 Printers.\",\n    adesc22: \"[22] A national treasure: Establish 1 Coin Mint.\",\n    adesc23: \"[23] Now with competition!: Establish 10 Coin Mints.\",\n    adesc24: \"[24] Counterfeiting with Style!: Establish 100 Coin Mints.\",\n    adesc25: \"[25] Why do we need all these?: Establish 1000 Coin Mints.\",\n    adesc26: \"[26] No really, why??: Establish 5,000 Coin Mints.\",\n    adesc27: \"[27] Is no one to stop us???: Establish 10,000 Coin Mints.\",\n    adesc28: \"[28] Oh well, time to mint: Establish 20,000 Coin Mints.\",\n    adesc29: \"[29] Newton's Apprentice: Create 1 Alchemy.\",\n    adesc30: \"[30] Lab Work: Create 10 Alchemies.\",\n    adesc31: \"[31] Satanic Becomings: Create 66 Alchemies.\",\n    adesc32: \"[32] Satan Incarnate: Create 666 Alchemies.\",\n    adesc33: \"[33] Is this more demonic?: Create 6,666 Alchemies.\",\n    adesc34: \"[34] Golden Paradise: Create 17,777 Alchemies.\",\n    adesc35: \"[35] Unlocking secrets to the world: Create 42,777 Alchemies.\",\n    adesc36: \"[36] Leveling up: Prestige for at least 1 Diamond.\",\n    adesc37: \"[37] High-Tiered: Prestige for at least 1e+6 Diamonds.\",\n    adesc38: \"[38] Highly Regarded: Prestige for at least 1e+100 Diamonds.\",\n    adesc39: \"[39] Prestigious: Prestige for at least 1e+1000 Diamonds.\",\n    adesc40: \"[40] Legendary: Prestige for at least 1e+10000 Diamonds.\",\n    adesc41: \"[41] Divine: Prestige for at least 1e+77777 Diamonds.\",\n    adesc42: \"[42] Perfectly Respected: Prestige for at least 1e+250000 Diamonds.\",\n    adesc43: \"[43] A Simple Detour: Transcend for at least 1 Mythos.\",\n    adesc44: \"[44] Tunnel Vision: Transcend for at least 1e+6 Mythos.\",\n    adesc45: \"[45] Risen from the Ashes: Transcend for at least 1e+50 Mythos.\",\n    adesc46: \"[46] Paradigm Shift: Transcend for at least 1e+308 Mythos.\",\n    adesc47: \"[47] Preparation: Transcend for at least 1e+2000 Mythos.\",\n    adesc48: \"[48] Revising the Plan: Transcend for at least 1e+25000 Mythos.\",\n    adesc49: \"[49] Leaving the Universe: Transcend for at least 1e+100000 Mythos.\",\n    adesc50: \"[50] Going Quantum: Reincarnate for at least 1 Particle.\",\n    adesc51: \"[51] Tunneling Vision: Reincarnate for at least 100,000 Particles.\",\n    adesc52: \"[52] Simulating the World: Reincarnate for at least 1e+30 Particles.\",\n    adesc53: \"[53] Multidimensional Creation: Reincarnate for at least 1e+200 Particles.\",\n    adesc54: \"[54] Lepton Dance: Reincarnate for at least 1e+1500 Particles.\",\n    adesc55: \"[55] Do we have enough yet?: Reincarnate for at least 1e+5000 Particles.\",\n    adesc56: \"[56] I Feel Luck in My Cells: Reincarnate for at least 1e+7777 Particles.\",\n    adesc57: \"[57] One Way Only: Prestige without buying multipliers.\",\n    adesc58: \"[58] Authentic Shifting: Transcend without having bought a multiplier.\",\n    adesc59: \"[59] The Singularity: Reincarnate without having bought a multiplier.\",\n    adesc60: \"[60] Gotta go SLOW!: Prestige without buying Accelerators or Accelerator Boosts.\",\n    adesc61: \"[61] I'm really going slow: Transcend without having bought Accelerators or Boosts.\",\n    adesc62: \"[62] Are we there yet?: Reincarnate without having bought Accelerators or Boosts.\",\n    adesc63: \"[63] A careful search for Diamonds: Get 1e120,000 Coins in [Reduced Diamonds] without buying Accelerators or Boosts.\",\n    adesc64: \"[64] Very Based: Prestige without purchasing Coin Upgrades.\",\n    adesc65: \"[65] Miser: Transcend without purchasing Coin Upgrades.\",\n    adesc66: \"[66] True Miser: Transcend without purchasing Coin or Diamond Upgrades.\",\n    adesc67: \"[67] Coinless Pursuit: Reincarnate without purchasing Coin Upgrades.\",\n    adesc68: \"[68] Diamonds don't matter to me!: Reincarnate without purchasing Coin or Diamond Upgrades.\",\n    adesc69: \"[69] Leave nothing behind: Reincarnate without purchasing Coin, Diamond or Mythos Upgrades.\",\n    adesc70: \"[70] Leave NOTHING behind.: Reincarnate without purchasing Coin, Diamond, Mythos, or Generator Upgrades.\",\n    adesc71: \"[71] Out of Order: Buy Generator Upgrade Row 1, #2 first in a transcension (IV -> III)\",\n    adesc72: \"[72] More Out of Order: Buy Generator Upgrade Row 1, #3 first in a transcension (III -> II)\",\n    adesc73: \"[73] Four's a Company: Buy Generator Upgrade Row 1, #4 first in a transcension (II -> I)\",\n    adesc74: \"[74] Five's a Croud: Buy Generator Upgrade Row 1, #5 first in a transcension (I -> V)\",\n    adesc75: \"[75] Vaseline without the Machine: Exit [No Multiplier] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\n    adesc76: \"[76] Rage against the Machine: Exit [No Accelerator] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\n    adesc77: \"[77] Amish Paradise: Exit [No Shards] with at least 1e99,999 coins and without any of the row 1 generator upgrades.\",\n    adesc78: \"[78] Single-Cell: Complete [No Multiplier] once.\",\n    adesc79: \"[79] Solidarity: Complete [No Multiplier] three times.\",\n    adesc80: \"[80] Duplication-Free!: Complete [No Multiplier] five times.\",\n    adesc81: \"[81] Multitasking Challenged: Complete [No Multiplier] ten times.\",\n    adesc82: \"[82] No Deaths: Complete [No Multiplier] twenty times.\",\n    adesc83: \"[83] Population One: Complete [No Multiplier] fifty times.\",\n    adesc84: \"[84] Insert Another Token: Complete [No Multiplier] seventy-five times.\",\n    adesc85: \"[85] Slow Start: Complete [No Accelerator] once\",\n    adesc86: \"[86] Respawn Rate -12%: Complete [No Accelerator] three times.\",\n    adesc87: \"[87] Putting the Breaks On: Complete [No Accelerator] five times.\",\n    adesc88: \"[88] Racing a Sloth...: Complete [No Accelerator] ten times.\",\n    adesc89: \"[89] ... and Losing.: Complete [No Accelerator] twenty times.\",\n    adesc90: \"[90] Planck Distance Traveled: Complete [No Accelerator] fifty times.\",\n    adesc91: \"[91] Inverse-Ackermann Growth: Complete [No Accelerator] seventy-five times.\",\n    adesc92: \"[92] Intact: Complete [No Shards] once.\",\n    adesc93: \"[93] Augments are Stupid!: Complete [No Shards] three times.\",\n    adesc94: \"[94] Grandmasters are Brilliant!: Complete [No Shards] five times.\",\n    adesc95: \"[95] Gotta get those Grandmasters Stronger: Complete [No Shards] ten times.\",\n    adesc96: \"[96] Summoning Enhancements: Complete [No Shards] twenty times.\",\n    adesc97: \"[97] Magic 99/99: Complete [No Shards] fifty times.\",\n    adesc98: \"[98] Perfect Foresight: Complete [No Shards] seventy-five times.\",\n    adesc99: \"[99] Inflation: Complete [Cost+] once.\",\n    adesc100: \"[100] Hyperinflation: Complete [Cost+] three times.\",\n    adesc101: \"[101] Market Bubble: Complete [Cost+] five times.\",\n    adesc102: \"[102] Bull Market: Complete [Cost+] ten times.\",\n    adesc103: \"[103] Wealth Inequality: Complete [Cost+] twenty times.\",\n    adesc104: \"[104] Severe Overpay: Complete [Cost+] fifty times.\",\n    adesc105: \"[105] Societal Collapse: Complete [Cost+] seventy-five times.\",\n    adesc106: \"[106] Excavation: Complete [Reduced Diamonds] once.\",\n    adesc107: \"[107] Digging Deep: Complete [Reduced Diamonds] three times.\",\n    adesc108: \"[108] Frack As Needed: Complete [Reduced Diamonds] five times.\",\n    adesc109: \"[109] Unobtainium Pickaxe: Complete [Reduced Diamonds] ten times.\",\n    adesc110: \"[110] Fortune III: Complete [Reduced Diamonds] twenty times.\",\n    adesc111: \"[111] Every kiss...: Complete [Reduced Diamonds] fifty times.\",\n    adesc112: \"[112] ...begins with K.: Complete [Reduced Diamonds] seventy-five times.\",\n    adesc113: \"[113] Tax evasion!: Complete {[Tax+]} once.\",\n    adesc114: \"[114] Keeping up with the Joneses: Complete {[Tax+]} twice.\",\n    adesc115: \"[115] Offshore deposits: Complete {[Tax+]} three times.\",\n    adesc116: \"[116] Bribing officials: Complete {[Tax+]} five times.\",\n    adesc117: \"[117] Becoming President: Complete {[Tax+]} ten times.\",\n    adesc118: \"[118] Charitable Donation: Complete {[Tax+]} fifteen times.\",\n    adesc119: \"[119] IRS Audit: Complete {[Tax+]} twenty-five times.\",\n    adesc120: \"[120] Is there anybody in there?: Complete {[No Accelerator/Multiplier]} once.\",\n    adesc121: \"[121] Human being: Complete {[No Accelerator/Multiplier]} twice.\",\n    adesc122: \"[122] Interdimensional: Complete {[No Accelerator/Multiplier]} three times.\",\n    adesc123: \"[123] A slow nickel: Complete {[No Accelerator/Multiplier]} five times.\",\n    adesc124: \"[124] Multipliers don't even work 0/5: Complete {[No Accelerator/Multiplier]} ten times.\",\n    adesc125: \"[125] Accelerators don't even work -5/5: Complete {[No Accelerator/Multiplier]} fifteen times.\",\n    adesc126: \"[126] ACCELERATOR BOOSTS DON'T EVEN WORK -100/5: Complete {[No Accelerator/Multiplier]} twenty-five times.\",\n    adesc127: \"[127] I hate this challenge: Complete Cost++ Once.\",\n    adesc128: \"[128] A costly mistake: Complete Cost++ Twice.\",\n    adesc129: \"[129] Impetus: Complete Cost++ Three Times.\",\n    adesc130: \"[130] Are you broke yet? Complete Cost++ Five Times.\",\n    adesc131: \"[131] The world of Finance: Complete Cost++ Ten Times.\",\n    adesc132: \"[132] Marginal Gains: Complete Cost++ Twenty Times.\",\n    adesc133: \"[133] I buy these: Complete Cost++ Twenty-Five Times.\",\n    adesc134: \"[134] Agnostic: Complete No Runes Once.\",\n    adesc135: \"[135] Ant-i Runes: Complete No Runes Twice.\",\n    adesc136: \"[136] Isn't it getting tiresome?: Complete No Runes Three Times.\",\n    adesc137: \"[137] Machine does not accept offerings: Complete No Runes Five Times.\",\n    adesc138: \"[138] Runes Suck 1/5: Complete No Runes Ten Times.\",\n    adesc139: \"[139] I didn't even notice Prism was gone: Complete No Runes Twenty Times.\",\n    adesc140: \"[140] Atheist: Complete No Runes Twenty-Five Times.\",\n    adesc141: \"[141] Sadism: Complete {[Sadistic I]} Once.\",\n    adesc142: \"[142] Masochism: Complete {[Sadistic I]} Twice.\",\n    adesc143: \"[143] Insanity: Complete {[Sadistic I]} Three Times.\",\n    adesc144: \"[144] How? Complete {[Sadistic I]} Five Times.\",\n    adesc145: \"[145] Why? Complete {[Sadistic I]} Ten Times.\",\n    adesc146: \"[146] Descend: Complete {[Sadistic I]} Twenty Times.\",\n    adesc147: \"[147] End of the Universe: Complete {[Sadistic I]} Twenty-Five Times.\",\n    adesc148: \"[148] Gas gas gas: Purchase 5 Accelerators.\",\n    adesc149: \"[149] 0 to 25: Purchase 25 Accelerators.\",\n    adesc150: \"[150] 0 to 100: Purchase 100 Accelerators\",\n    adesc151: \"[151] Highway to Hell: Purchase 666 Accelerators.\",\n    adesc152: \"[152] Perhaps you should brake: Purchase 2,000 Accelerators.\",\n    adesc153: \"[153] Exit the vehicle now!: Purchase 12,500 Accelerators.\",\n    adesc154: \"[154] Faster than light: Purchase 100,000 Accelerators.\",\n    adesc155: \"[155] I've been duped!: Purchase 2 Multipliers.\",\n    adesc156: \"[156] Funhouse Mirrors: Purchase 20 Multipliers.\",\n    adesc157: \"[157] Friend of binary: Purchase 100 Multipliers.\",\n    adesc158: \"[158] Feeling the cost growth yet?: Purchase 500 Multipliers.\",\n    adesc159: \"[159] Perhaps you'll feel the cost now: Purchase 2,000 Multipliers.\",\n    adesc160: \"[160] Exponential Synergy: Purchase 12,500 Multipliers.\",\n    adesc161: \"[161] Cloned: Purchase 100,000 Multipliers.\",\n    adesc162: \"[162] Jerk > 0: Purchase 2 Accelerator Boosts.\",\n    adesc163: \"[163] Can't the speedometer move any faster?: Purchase 10 Accelerator Boosts.\",\n    adesc164: \"[164] 50 G rotations: Purchase 50 Accelerator Boosts.\",\n    adesc165: \"[165] Dematerialize: Purchase 200 Accelerator Boosts.\",\n    adesc166: \"[166] Breaking the laws of Physics: Purchase 1,000 Accelerator Boosts.\",\n    adesc167: \"[167] Decayed Realism: Purchase 5,000 Accelerator Boosts.\",\n    adesc168: \"[168] Kinda fast: Purchase 15,000 Accelerator Boosts.\",\n    adesc169: \"[169] The Galactic Feast: Obtain 3 Galactic Crumbs.\",\n    adesc170: \"[170] Only the finest: Obtain 100,000 Galactic Crumbs.\",\n    adesc171: \"[171] Six-Course Meal: Obtain 666,666,666 Galactic Crumbs.\",\n    adesc172: \"[172] Accumulation of Food: Obtain 1e20 Galactic Crumbs.\",\n    adesc173: \"[173] Cookie Clicking: Obtain 1e40 Galactic Crumbs.\",\n    adesc174: \"[174] Unlimited Bread Sticks!: Obtain 1e500 Galactic Crumbs.\",\n    adesc175: \"[175] Restaurant at the end of the Universe: Obtain 1e2500 Galactic Crumbs.\",\n    adesc176: \"[176] Ant-icipation!: Amass a 2x Ant Multiplier through sacrifice and own a Tier 2 ant.\",\n    adesc177: \"[177] Ant-ecedent: Amass a 6x Ant Multiplier through sacrifice and own a Tier 3 ant.\",\n    adesc178: \"[178] Ants are friends, not food!: Amass a 20x Ant Multiplier through sacrifice and own a Tier 4 Ant.\",\n    adesc179: \"[179] Ant Devil?: Amass a 100x Ant Multiplier through sacrifice and own a Tier 5 Ant.\",\n    adesc180: \"[180] The world's best chef: Amass a 500x Ant Multiplier through sacrifice and own a Tier 6 Ant.\",\n    adesc181: \"[181] 6 Michelin Stars: Amass a 6,666x Ant Multiplier through sacrifice and own a Tier 7 Ant.\",\n    adesc182: \"[182] Keys to the Restaurant at the end of the Universe: Amass a 77,777x Ant Multiplier through sacrifice and own a Tier 8 Ant.\",\n    adesc183: \"[183] Up: Ascend Once.\",\n    adesc184: \"[184] Double-Up: Ascend Twice.\",\n    adesc185: \"[185] Give me Ten!: Ascend Ten Times.\",\n    adesc186: \"[186] Give me a Hundred: Ascend 100 Times.\",\n    adesc187: \"[187] Give me a Thousand: Ascend 1,000 Times.\",\n    adesc188: \"[188] Give me some arbitrary number I: Ascend 14,142 Times.\",\n    adesc189: \"[189] Give me some arbitrary number II: Ascend 141,421 Times.\",\n    adesc190: \"[190] Now that's what I call getting some Pi!: Attain a constant of 3.14.\",\n    adesc191: \"[191] One in a million: Attain a constant of 1,000,000 [1e6].\",\n    adesc192: \"[192] A number: Attain a constant of 4.32e10.\",\n    adesc193: \"[193] The coolest of numbers: Attain a constant of 6.9e21.\",\n    adesc194: \"[194] Planck^(-1): Attain a constant of 1.509e33.\",\n    adesc195: \"[195] Epsilon > a lot: Attain a constant of 1e66.\",\n    adesc196: \"[196] NUM_MAX: Attain a constant of 1.8e308.\",\n    adesc197: \"[197] Casualties: Clear 'Reduced Ants' challenge once.\",\n    adesc198: \"[198] Fatalities: Clear 'Reduced Ants' challenge twice.\",\n    adesc199: \"[199] Destruction: Clear 'Reduced Ants' challenge three times.\",\n    adesc200: \"[200] War, what is it good for?: Clear 'Reduced Ants' challenge five times.\",\n    adesc201: \"[201] Absolutely everything.: Clear 'Reduced Ants' challenge ten times.\",\n    adesc202: \"[202] Perfect Storm: Clear 'Reduced Ants' challenge twenty times.\",\n    adesc203: \"[203] Immaculate Storm: Clear 'Reduced Ants' challenge thirty times.\",\n    adesc204: \"[204] I didn't need those stupid reincarnations anyway!: Clear 'No Reincarnation' challenge once.\",\n    adesc205: \"[205] [x1,x2,0,x3]: Clear 'No Reincarnation' challenge twice.\",\n    adesc206: \"[206] Nonmetaphysical: Clear 'No Reincarnation' challenge three times.\",\n    adesc207: \"[207] Living alone: Clear 'No Reincarnation' challenge five times.\",\n    adesc208: \"[208] DM me on discord if you read these names: Clear 'No Reincarnation' challenge ten times.\",\n    adesc209: \"[209] Yeah: Clear 'No Reincarnation' challenge twenty times.\",\n    adesc210: \"[210] Science! Clear 'No Reincarnation' challenge thirty times.\",\n    adesc211: \"[211] The IRS strikes back: Clear 'Tax+++' challenge once.\",\n    adesc212: \"[212] Fiscal Policy: Clear 'Tax+++' challenge twice.\",\n    adesc213: \"[213] Economic Boom: Clear 'Tax+++' challenge three times.\",\n    adesc214: \"[214] Ant-onomics: Clear 'Tax+++' challenge five times.\",\n    adesc215: \"[215] 'Wow Platonic Tax sucks 1/5': Clear 'Tax+++' challenge ten times.\",\n    adesc216: \"[216] Haha this is hard for some reason: Clear 'Tax+++' challenge twenty times.\",\n    adesc217: \"[217] Taxes are hard: Clear 'Tax+++' challenge thirty times.\",\n    adesc218: \"[218] Shiny Blue Rock: Clear 'No Research' once.\",\n    adesc219: \"[219] It's like Avatar: Clear 'No Research' twice.\",\n    adesc220: \"[220] It's like Unobtainium: Clear 'No Research' three times.\",\n    adesc221: \"[221] It's like a thing: Clear 'No Research' five times.\",\n    adesc222: \"[222] It's like: Clear 'No Research' ten times.\",\n    adesc223: \"[223] It's: Clear 'No Research' twenty times.\",\n    adesc224: \"[224] It: Clear 'No Research' thirty times.\",\n    adesc225: \"[225] Pretty Corrupt: Clear an Ascension with above 100,000 score.\",\n    adesc226: \"[226] Bought out: Clear an Ascension with above 1 million score.\",\n    adesc227: \"[227] Utterly Corrupt: Clear an Ascension with above 10 million score.\",\n    adesc228: \"[228] Antitrust: Clear an Ascension with above 100 million score.\",\n    adesc229: \"[229] Ant-i-trust: Clear an Ascension with above 1 billion score.\",\n    adesc230: \"[230] This is pretty unfair: Clear an Ascension with above 5 billion score.\",\n    adesc231: \"[231] Antichrist: Clear an Ascension with above 25 billion score.\",\n    adesc232: \"[232] Highly Blessed: Level your Speed Rune blessing to 100,000.\",\n    adesc233: \"[233] Divine Blessing: Level your Speed Rune blessing to 100,000,000.\",\n    adesc234: \"[234] Blessing III: Level your Speed Rune blessing to 100 billion.\",\n    adesc235: \"[235] Spirit I: Level your Speed Spirit to 1 Million.\",\n    adesc236: \"[236] Spirit II: Level your Speed Spirit to 1 Billion.\",\n    adesc237: \"[237] Spirit III: Level your Speed Spirit to 1 Trillion.\",\n    adesc238: \"[238] Three-folded: [Hint: you may want to look into the inception]\",\n    adesc239: \"[239] Seeing red: [Hint: you may need a lot of red items]\",\n    adesc240: \"[240] ASCENDED: [Hint: you may need a LOT of ascensions OR an particularly amazing ascension]\",\n    adesc241: \"[241] Aesop: [Hint: you gotta be pretty dang slow]\",\n    adesc242: \"[242] Aesop's Revenge: [Hint: you gotta be pretty dang fast]\",\n    adesc243: \"[243] Unsmith: [Hint: unsmith emoji :unsmith: can be a pretty good input]\",\n    adesc244: \"[244] Smith: [Hint: :antismith: looks promising as well]\",\n    adesc245: \"[245] BLESSED: [Hint: Your Speed Blessing best be unreasonably high!]\",\n    adesc246: \"[246] Why? [Hint: Sometimes even 1 in over a Trillion counts!]\",\n    adesc247: \"[247] Challenging! [Hint: Challenge 11 is calling your name, but with even less ants]\",\n    adesc248: \"[248] Seeing Red but not Blue: [Hint: Can you get red stuff without getting blue stuff?]\",\n    adesc249: \"[249] Overtaxed: [Hint: It might pay not to read!]\",\n    adesc250: \"[250] The Thousand Suns: [Hint: You need to fully research into becoming GOD]\",\n    adesc251: \"[251] The Thousand Moons: [Hint: You may need to cube yourself up]\",\n    adesc252: \"[252] Ultimate: Complete 'SADISTIC II' challenge.\",\n    adesc253: \"[253] WIP: Clear an ascension with 1e12 score.\",\n    adesc254: \"[254] WIP: Clear an ascension with 1e13 score.\",\n    adesc255: \"[255] WIP: Clear an ascension with 1e14 score.\",\n    adesc256: \"[256] WIP: Clear an ascension with 1e15 score.\",\n    adesc257: \"[257] WIP: Clear an ascension with 1e16 score.\",\n    adesc258: \"[258] WIP: Clear an ascension with 1e17 score.\",\n    adesc259: \"[259] WIP: Clear an ascension with 1e18 score.\",\n    adesc260: \"[260] WIP: Ascend a total of 10 million times.\",\n    adesc261: \"[261] WIP: Ascend a total of 30 million times.\",\n    adesc262: \"[262] WIP: Ascend a total of 90 million times.\",\n    adesc263: \"[263] WIP: Ascend a total of 270 million times.\",\n    adesc264: \"[264] WIP: Ascend a total of 810 million times.\",\n    adesc265: \"[265] WIP: Ascend a total of 2.430 billion times.\",\n    adesc266: \"[266] WIP: Ascend a total of 9.999 billion times.\",\n    adesc267: \"[267] WIP: Achieve a constant of 1e1,000.\",\n    adesc268: \"[268] WIP: Achieve a constant of 1e2,000.\",\n    adesc269: \"[269] WIP: Achieve a constant of 1e4,000.\",\n    adesc270: \"[270] WIP: Achieve a constant of 1e10,000.\",\n    adesc271: \"[271] WIP: Achieve a constant of 1e20,000.\",\n    adesc272: \"[272] WIP: Achieve a constant of 1e40,000.\",\n    adesc273: \"[273] WIP: Achieve a constant of 1e100,000.\",\n    adesc274: \"[274] WIP: I don't know yet.\",\n    adesc275: \"[275] WIP: I don't know yet.\",\n    adesc276: \"[276] WIP: I don't know yet.\",\n    adesc277: \"[277] WIP: I don't know yet.\",\n    adesc278: \"[278] WIP: I don't know yet.\",\n    adesc279: \"[279] WIP: I don't know yet.\",\n    adesc280: \"[280] WIP: I don't know yet.\",\n};\nconst areward = {\n    areward3: \"Gain +.05% to Accelerator Power.\",\n    areward4: \"Start transcensions/challenges with Worker Autobuyer unlocked.\",\n    areward5: \"Gain +1 Accelerator per 500 Workers owned.\",\n    areward6: \"Gain +1 Multiplier per 1,000 Workers owned.\",\n    areward7: \"Gain +1 Accelerator Boost per 2,000 workers owned.\",\n    areward10: \"Gain +.10% to Accelerator Power.\",\n    areward11: \"Start transcensions/challenges with Investment Autobuyer unlocked.\",\n    areward12: \"Gain +1 Accelerator per 500 Investments owned.\",\n    areward13: \"Gain +1 Multiplier per 1,000 Investments owned.\",\n    areward14: \"Gain +1 Accelerator Boost per 2,000 Investments owned.\",\n    areward17: \"Gain +.15% to Accelerator Power.\",\n    areward18: \"Start transcensions/challenges with Printer Autobuyer unlocked.\",\n    areward19: \"Gain +1 Accelerator per 500 Printers owned.\",\n    areward20: \"Gain +1 Multiplier per 1,000 Printers owned.\",\n    areward21: \"Gain +1 Accelerator Boost per 2,000 Printers owned.\",\n    areward24: \"Gain +.20% to Accelerator Power.\",\n    areward25: \"Start transcensions/challenges with Coin Mint Autobuyer unlocked.\",\n    areward26: \"Gain +1 Accelerator per 500 Mints owned.\",\n    areward27: \"Gain +1 Multiplier per 1,000 Mints owned.\",\n    areward28: \"Gain +1 Accelerator Boost per 2,000 Mints owned.\",\n    areward31: \"Gain +.25% to Accelerator Power.\",\n    areward32: \"Start transcensions/challenges with Alchemy Autobuyer unlocked.\",\n    areward33: \"Gain 10% more offerings from resets || +1 Accelerator per 500 Alchemies!\",\n    areward34: \"Gain 15% more offerings from resets (stacks multiplicatively!) || +1 Multiplier per 1,000 Alchemies!\",\n    areward35: \"Gain 25% more offerings from resets (stacks multiplicatively!) || +1 Accelerator Boost per 2,000 Alchemies!\",\n    areward36: \"Multiply Crystal Production by 2x.\",\n    areward37: \"Multiply Crystal Production by the common logarithm of owned Diamonds. Prestiges give more offerings based on time spent (Up to +15 at 1800 seconds)\",\n    areward38: \"Unlock the Duplication rune!\",\n    areward43: \"Accelerator Boosts can be purchased from any screen. Unlock the Auto-Prestige feature.\",\n    areward44: \"Unlock the Prism Rune! Transcensions give more offerings based on time spent (Up to +15 at 1800 seconds)\",\n    areward45: \"Reduce tax scaling by up to 5%, depending on the length of prestige.\",\n    areward46: \"Reduce tax scaling by up to another 5%, depending on length of prestige.\",\n    areward47: \"Reduce tax scaling by up to ANOTHER 10%, depending on length of prestige!\",\n    areward50: \"Unlock new Atomic production and unlock 3 new incredibly difficult challenges! Gain 2x particles on all future Reincarnations!\",\n    areward51: \"Manual Reincarnations give +4 Obtainium (unaffected by multipliers except time multiplier)!\",\n    areward52: \"Reincarnations give more offerings based on time spent (Up to +25 at 1800 seconds)\",\n    areward53: \"Increase the amount of obtainium gained through all features by 0.125% additive for each rune level.\",\n    areward57: \"Gain +1, +1% free Multipliers!\",\n    areward58: \"Gain +1, +1% more free Multipliers!\",\n    areward59: \"Gain +1, +1% more, MORE free Multipliers!\",\n    areward60: \"Gain +2, +1% free Accelerators!\",\n    areward61: \"Gain +2, +1% more free Accelerators!\",\n    areward62: \"Gain +2, +1% more, MORE free Accelerators!\",\n    areward71: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward72: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward73: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward74: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward75: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward76: \"+1% Conversion Exponent on all generator upgrades!\",\n    areward77: \"+1% Conversion Exponent on all generator upgrades! They're in overdrive now!\",\n    areward78: \"Start transcensions/challenges with 1 Refinery and automatically buy Refineries.\",\n    areward79: \"Automatically buy the first crystal upgrade if you can afford it!\",\n    areward80: \"Start transcensions/challenges with Multiplier Autobuyer unlocked. +5% offering recycle.\",\n    areward82: \"Delay tax growth by 4%.\",\n    areward84: \"+1% obtainium (stacks additively with other achievement rewards)\",\n    areward85: \"Start transcensions/challenges with 1 Coal Plant and automatically buy Coal Plants.\",\n    areward86: \"Automatically buy the second crystal upgrade if you can afford it!\",\n    areward87: \"Start transcensions/challenges with Accelerator Autobuyer unlocked. +5% offering recycle.\",\n    areward89: \"Delay tax growth by 4%.\",\n    areward91: \"+3% obtainium (stacks additively with other achievement rewards)\",\n    areward92: \"Start transcensions/challenges with 1 Coal Rig and automatically buy Coal Rigs.\",\n    areward93: \"Automatically buy the third crystal upgrade if you can afford it!\",\n    areward94: \"+5% offering recycle.\",\n    areward96: \"Delay tax growth by 4%.\",\n    areward98: \"+5% obtainium (stacks additively with other achievement rewards)\",\n    areward99: \"Start transcensions/challenges with 1 Diamond Pickaxe and automatically buy Diamond Pickaxes.\",\n    areward100: \"Automatically buy the fourth crystal upgrade if you can afford it!\",\n    areward101: \"+5% offering recycle.\",\n    areward102: \"Unlock the Thrift rune!\",\n    areward103: \"Delay tax growth by 4%.\",\n    areward105: \"+7% obtainium (stacks additively with other achievement rewards)\",\n    areward106: \"Start transcensions/challenges with 1 Pandora's Box and automatically buy Pandora's Boxes.\",\n    areward107: \"Automatically buy the fifth crystal upgrade if you can afford it!\",\n    areward108: \"+5% offering recycle.\",\n    areward110: \"Delay tax growth by 4%.\",\n    areward112: \"+9% obtainium (stacks additively with other achievement rewards)\",\n    areward115: \"+5% offering recycle.\",\n    areward117: \"Delay tax growth by 5.66%.\",\n    areward118: \"Each Reincarnation challenge completion delays tax growth by 0.75% per level, multiplicative\",\n    areward119: \"+11% obtainium. Unlock a nice trinket somewhere...\",\n    areward122: \"+7.5% offering recycle.\",\n    areward124: \"Delay tax growth by 5.66%. Unlock 5 new incredibly powerful researches!\",\n    areward126: \"+13% obtainium. You get an accessory to commemorate this moment!\",\n    areward127: \"Unlock 20 new incredibly expensive yet good researches. Unlock the [Anthill] feature!\",\n    areward128: \"Make researches go Cost-- with 1.5x Obtainium!\",\n    areward129: \"+7.5% offering recycle. Gain another 1.25x Obtainium multiplier!\",\n    areward131: \"Delay tax growth by 5.66%.\",\n    areward132: \"Permanently gain +25% more sacrifice reward!\",\n    areward133: \"+15% obtainium. Obtain the gift of Midas himself.\",\n    areward134: \"Unlock 10 newer incredibly expensive yet good researches. Unlock <<Talismans>> in the Runes Tab!\",\n    areward135: \"Talisman positive bonuses are now +0.05 stronger per level.\",\n    areward136: \"Talisman positive bonuses are now +0.05 even stronger per level.\",\n    areward137: \"Permanently gain +25% more sacrifice reward!\",\n    areward140: \"+17% obtainium. Lazy joke about not leaking talismans here [You get a new one]\",\n    areward141: \"Unlock a new reset tier!\",\n    areward147: \"+19% obtainium (Achievement total is up to 100%!). Gain the Polymath Talisman!\",\n    areward169: \"ALL Ant speed multiplied by log10(crumbs + 10)\",\n    areward171: \"+16.666% ALL Ant speed!\",\n    areward172: \"Gain more ants the longer your reincarnation lasts (max speed achieved in 2 hours)\",\n    areward173: \"Unlock Ant Sacrifice, allowing you to reset your ants and ant upgrades in exchange for amazing rewards! Automatically buy Worker Ants.\",\n    areward174: \"Ant Multiplier from sacrifice is multiplied by another logarithm (Multiply by 0.4 * log10(points + 1))\",\n    areward176: \"Unlock Tier 2 Ant autobuy, and autobuy Inceptus and Fortunae ants! Add +25 Base Ant ELO.\",\n    areward177: \"Unlock Tier 3 Ant autobuy, and autobuy Tributum ants! Add +50 Base Ant ELO.\",\n    areward178: \"Unlock Tier 4 Ant autobuy, and autobuy Celeritas and Multa ants! Add +75 Base Ant ELO.\",\n    areward179: \"Unlock Tier 5 Ant autobuy, and autobuy Sacrificium ants! Add +100 Base Ant ELO.\",\n    areward180: \"Unlock Tier 6 Ant autobuy, and autobuy Hic and Experientia ants! Add +1% Base Ant ELO.\",\n    areward181: \"Unlock Tier 7 Ant autobuy, and autobuy Praemoenio ants! Add +2% Base Ant ELO.\",\n    areward182: \"Unlock Tier 8 Ant autobuy, and autobuy Scientia and Phylacterium ants! Add +3% Base Ant ELO.\",\n    areward187: \"Gain an ascension gain multiplier based on your score (log10(score) - 7)x for Corruption Score > 100 Million. Gain +1% Offerings per 10,000 ascensions, up to +100%!\",\n    areward188: \"Gain +100 ascension count for all ascensions longer than 10 seconds. Gain +1% Obtainium per 50,000 ascensions, up to +100%!\",\n    areward189: \"Gain 20% of excess time after 10 seconds each Ascension as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Cubes per 250,000 ascensions, up to +200%!\",\n    areward193: \"Gain (log10(Constant+1)/4)% more Cubes on ascension!\",\n    areward195: \"Gain (log10(Constant+1)/4)% more Cubes and Tesseracts on ascension! Multiplicative with the other Ach. bonus.\",\n    areward196: \"Gain (log10(Constant+1)/50)% more Platonic Cubes on ascension!\",\n    areward197: \"You will unlock a stat tracker for ascensions.\",\n    areward198: \"Gain +4% Cubes on ascension!\",\n    areward199: \"Gain +4% Cubes on ascension!\",\n    areward200: \"Gain +4% Cubs on ascension! Did I spell that wrong? You bet I did.\",\n    areward201: \"Gain +3% Cubes on ascension!\",\n    areward202: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Tesseracts per 500,000 ascensions, up to +200%!\",\n    areward204: \"You will gain 25% of excess time after 10 seconds each Ascension as a linear multiplier to rewards.\",\n    areward205: \"Gain +4% Tesseracts on ascension!\",\n    areward206: \"Gain +4% Tesseracts on ascension!\",\n    areward207: \"Gain +4% Tesseracts on ascension!\",\n    areward208: \"Gain +3% Tesseracts on ascension!\",\n    areward209: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours).\",\n    areward211: \"You will gain 25% MORE excess time (Total: 50%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\n    areward212: \"Gain +4% Hypercubes on ascension!\",\n    areward213: \"Gain +4% Hypercubes on ascension!\",\n    areward214: \"Gain +4% Hypercubes on ascension!\",\n    areward215: \"Gain +3% Hypercubes on ascension!\",\n    areward216: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Hypercubes per 1,000,000 ascensions, up to +200%!\",\n    areward218: \"You gain gain 50% MORE MORE excess time (Total: 100%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\n    areward219: \"Gain +4% Platonic Cubes on ascension!\",\n    areward220: \"Gain +4% Platonic Cubes on ascension!\",\n    areward221: \"Gain +4% Platonic Cubes on ascension!\",\n    areward222: \"Gain +3% Platonic Cubes on ascension!\",\n    areward223: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Platonic Cubes per 1,337,000 ascensions, up to +200%!\",\n    areward240: \"Ascension Cube Gain Multipliers is VERY slightly affected by global speed multipliers: 1 + log10(Speed)/20 (Min: 1.10x, Max: 1.50x)\",\n    areward250: \"You gain a permanent +60% Obtainium and Offering bonus, with +6% all cube types!\",\n    areward251: \"You gain a permanent +100% Obtainium and Offering bonus, with +10% all cube types!\",\n    areward253: \"You will gain +10% Hypercubes! Why? I don't know.\",\n    areward254: \"You will gain +log(score)% Cubes from ascensions! Max: +20%\",\n    areward255: \"You will gain +log(score)% Tesseracts from ascensions! Max: +20%\",\n    areward256: \"You will gain +log(score)% Hypercubes from ascensions! Max: +20%\",\n    areward257: \"You will gain +log(score)% Platonics from ascensions! Max: +20%\",\n    areward258: \"You will gain +log(score)% Hepteracts from ascensions! Max: +20%\",\n    areward259: \"Ascensions are 25% faster, forever!\",\n    areward260: \"You will gain 25% more ascension count, forever!\",\n    areward261: \"You will gain 25% more ascension count, forever!\",\n    areward262: \"Ascensions are log(ascension count)% faster, forever! Max: +10%\",\n    areward263: \"Ascensions are log(ascension count)% faster, forever! Max: +10%\",\n    areward264: \"You will gain +1% Hepteracts for every 100,000,000 ascension count, up to +200%!\",\n    areward265: \"You will gain +1% Hypercubes for every 250,000,000 ascension count, up to +200%!\",\n    areward266: \"You will gain +1% Quarks for every 10,000,000,000 ascension count, up to +10%!\",\n    areward267: \"Ascension Score is boosted by (log(constant)/1000)%, up to +100%!\",\n    areward270: \"Hepteract Gain is boosted by (log(constant)/1000)%!\",\n    areward273: \"Every time you open a platonic cube, you also open a hypercube!\"\n};\nexport const resetachievementcheck = (i) => {\n    if (i === 1) {\n        if (player.prestigenoaccelerator === true) {\n            achievementaward(60);\n        }\n        if (player.prestigenomultiplier === true) {\n            achievementaward(57);\n        }\n        if (player.prestigenocoinupgrades === true) {\n            achievementaward(64);\n        }\n        if (G['prestigePointGain'].gte(1)) {\n            achievementaward(36);\n        }\n        if (G['prestigePointGain'].gte(1e6)) {\n            achievementaward(37);\n        }\n        if (G['prestigePointGain'].gte(1e100)) {\n            achievementaward(38);\n        }\n        if (G['prestigePointGain'].gte(\"1e1000\")) {\n            achievementaward(39);\n        }\n        if (G['prestigePointGain'].gte(\"1e10000\")) {\n            achievementaward(40);\n        }\n        if (G['prestigePointGain'].gte(\"1e77777\")) {\n            achievementaward(41);\n        }\n        if (G['prestigePointGain'].gte(\"1e250000\")) {\n            achievementaward(42);\n        }\n    }\n    if (i === 2) {\n        if (player.transcendnoaccelerator === true) {\n            achievementaward(61);\n        }\n        if (player.transcendnomultiplier === true) {\n            achievementaward(58);\n        }\n        if (player.transcendnocoinupgrades === true) {\n            achievementaward(65);\n        }\n        if (player.transcendnocoinorprestigeupgrades === true) {\n            achievementaward(66);\n        }\n        if (G['transcendPointGain'].gte(1)) {\n            achievementaward(43);\n        }\n        if (G['transcendPointGain'].gte(1e6)) {\n            achievementaward(44);\n        }\n        if (G['transcendPointGain'].gte(1e50)) {\n            achievementaward(45);\n        }\n        if (G['transcendPointGain'].gte(1e308)) {\n            achievementaward(46);\n        }\n        if (G['transcendPointGain'].gte(\"1e1500\")) {\n            achievementaward(47);\n        }\n        if (G['transcendPointGain'].gte(\"1e25000\")) {\n            achievementaward(48);\n        }\n        if (G['transcendPointGain'].gte(\"1e100000\")) {\n            achievementaward(49);\n        }\n    }\n    if (i === 3) {\n        if (player.reincarnatenoaccelerator === true) {\n            achievementaward(62);\n        }\n        if (player.reincarnatenomultiplier === true) {\n            achievementaward(59);\n        }\n        if (player.reincarnatenocoinupgrades === true) {\n            achievementaward(67);\n        }\n        if (player.reincarnatenocoinorprestigeupgrades === true) {\n            achievementaward(68);\n        }\n        if (player.reincarnatenocoinprestigeortranscendupgrades === true) {\n            achievementaward(69);\n        }\n        if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades === true) {\n            achievementaward(70);\n        }\n        if (G['reincarnationPointGain'].gte(1)) {\n            achievementaward(50);\n        }\n        if (G['reincarnationPointGain'].gte(1e5)) {\n            achievementaward(51);\n        }\n        if (G['reincarnationPointGain'].gte(1e30)) {\n            achievementaward(52);\n        }\n        if (G['reincarnationPointGain'].gte(1e200)) {\n            achievementaward(53);\n        }\n        if (G['reincarnationPointGain'].gte(\"1e1500\")) {\n            achievementaward(54);\n        }\n        if (G['reincarnationPointGain'].gte(\"1e5000\")) {\n            achievementaward(55);\n        }\n        if (G['reincarnationPointGain'].gte(\"1e7777\")) {\n            achievementaward(56);\n        }\n    }\n};\nconst challengeCompletionsBar = [\n    [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\n    [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\n    [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98],\n    [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\n    [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\n    [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\n    [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\n    [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\n    [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\n    [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147]\n];\nconst challengeCompletionsNotAuto = {\n    1: ['1e1000', 75],\n    2: ['1e1000', 76],\n    3: ['1e99999', 77],\n    5: ['1e120000', 63]\n};\nexport const challengeachievementcheck = (i, auto) => {\n    const generatorcheck = sumContents(player.upgrades.slice(101, 106));\n    for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\n        if (player.challengecompletions[i] > bar) {\n            achievementaward(ach);\n        }\n    }\n    if ([1, 2, 3, 5].includes(i) && !auto) {\n        const [gte, ach] = challengeCompletionsNotAuto[i];\n        if (i === 5) {\n            if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\n                achievementaward(ach);\n            }\n        }\n        else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\n            achievementaward(ach);\n        }\n    }\n    if (i >= 11 && i <= 14) {\n        const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30];\n        for (let j = 1; j <= 7; j++) {\n            if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\n                achievementaward(119 + 7 * i + j);\n            }\n        }\n    }\n};\nconst buildAchievementReq = [\n    () => player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5,\n    () => player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5,\n    () => player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5,\n    () => player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5,\n    () => player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5,\n    () => player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5,\n    () => player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5,\n    () => player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5,\n    () => player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5,\n    () => player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5,\n    () => player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5,\n    () => player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5,\n    () => player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5,\n    () => player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5,\n    () => player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5,\n    () => player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5,\n    () => player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5,\n    () => player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5,\n    () => player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5,\n    () => player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5,\n    () => player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5,\n    () => player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5,\n    () => player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5,\n    () => player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5,\n    () => player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5,\n    () => player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5,\n    () => player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5,\n    () => player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5,\n    () => player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5,\n    () => player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5,\n    () => player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5,\n    () => player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5,\n    () => player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5,\n    () => player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5,\n    () => player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5,\n];\nexport const buildingAchievementCheck = () => {\n    for (const req of buildAchievementReq) {\n        if (req()) {\n            const idx = buildAchievementReq.indexOf(req) + 1;\n            achievementaward(idx);\n        }\n    }\n};\nexport const ascensionAchievementCheck = (i, score = 0) => {\n    if (i === 1) {\n        const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213,\n            1e7, 3e7, 9e7, 2.7e8, 8.1e8, 2.43e9, 9.999e9];\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\n                achievementaward(182 + j);\n            }\n            if (player.ascensionCount >= ascendCountArray[j + 8] && player.achievements[259 + j] < 1) {\n                achievementaward(259 + j);\n            }\n        }\n        if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\n            achievementaward(240);\n        }\n    }\n    if (i === 2) {\n        const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, \"1.8e308\",\n            \"1e1000\", \"1e2000\", \"1e4000\", \"1e10000\", \"1e20000\", \"1e40000\", \"1e100000\"];\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\n                achievementaward(189 + j);\n            }\n            if (player.ascendShards.gte(constantArray[j + 7]) && player.achievements[266 + j] < 1) {\n                achievementaward(266 + j);\n            }\n        }\n    }\n    if (i === 3) {\n        const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10,\n            1e12, 1e13, 1e14, 1e15, 1e16, 1e17, 1e18];\n        for (let j = 1; j <= 7; j++) {\n            if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\n                achievementaward(224 + j);\n            }\n            if (score >= scoreArray[7 + j] && player.achievements[252 + j] < 1) {\n                achievementaward(252 + j);\n            }\n        }\n    }\n};\nexport const achievementdescriptions = (i) => {\n    const y = adesc[`adesc${i}`];\n    const z = player.achievements[i] > 0.5 ? ' COMPLETED!' : '';\n    const k = areward[`areward${i}`] || '';\n    let multiplier = 1;\n    if (i >= 183)\n        multiplier = 5;\n    if (i >= 253)\n        multiplier = 40;\n    document.getElementById(\"achievementdescription\").textContent = y + z;\n    document.getElementById(\"achievementreward\").textContent = \"Reward: \" + achievementpointvalues[i] + \" AP. \" + format(achievementpointvalues[i] * multiplier) + \" Quarks! \" + k;\n    if (player.achievements[i] > 0.5) {\n        document.getElementById(\"achievementdescription\").style.color = \"gold\";\n    }\n    else {\n        document.getElementById(\"achievementdescription\").style.color = \"white\";\n    }\n};\nexport const achievementaward = (num) => {\n    if (player.achievements[num] < 1) {\n        player.achievementPoints += achievementpointvalues[num];\n        let multiplier = 1;\n        if (num >= 183)\n            multiplier = 5;\n        if (num >= 253)\n            multiplier = 40;\n        console.log(multiplier);\n        player.worlds.add(achievementpointvalues[num] * multiplier);\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\";\n        player.achievements[num] = 1;\n        revealStuff();\n    }\n    document.getElementById(`ach${num}`).style.backgroundColor = \"Green\";\n    Synergism.emit('achievement', num);\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { player, format, clearInt, interval } from './Synergism';\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateMaxRunes, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { Confirm, revealStuff } from './UpdateHTML';\nimport { redeemShards } from './Runes';\nimport { updateTalismanInventory } from './Talismans';\nimport { buyResearch } from './Research';\nimport { resetAnts } from './Reset';\nimport { Synergism } from './Events';\nconst antdesc = {\n    antdesc1: \"Gain a worker ant for your everyday life. Gathers Galactic Crumbs. Essential!\",\n    antdesc2: \"Gain a breeder ant that produces worker ants automatically!\",\n    antdesc3: \"Gain a meta-breeder ant that produces breeder ants automatically!\",\n    antdesc4: \"Gain a mega-breeder ant that produces meta-breeder ants automatically!\",\n    antdesc5: \"Gain a Queen ant that produces mega-breeder ants automatically!\",\n    antdesc6: \"Gain a Lord Royal ant that produces Queen ants automatically!\",\n    antdesc7: \"Gain an ALMIGHTY ANT that produces Lord Royal ants automatically!\",\n    antdesc8: \"Gain a DISCIPLE OF ANT GOD that produces ALMIGHTY ANTS automatically!\"\n};\nconst antspecies = {\n    antspecies1: \"Inceptus Formicidae\",\n    antspecies2: \"Fortunae Formicidae\",\n    antspecies3: \"Tributum Formicidae\",\n    antspecies4: \"Celeritas Formicidae\",\n    antspecies5: \"Multa Formicidae\",\n    antspecies6: \"Sacrificium Formicidae\",\n    antspecies7: \"Hic Formicidae\",\n    antspecies8: \"Experientia Formicidae\",\n    antspecies9: \"Praemoenio Formicidae\",\n    antspecies10: \"Scientia Formicidae\",\n    antspecies11: \"Phylacterium Formicidae\",\n    antspecies12: \"Mortuus Est Formicidae\"\n};\nconst antupgdesc = {\n    antupgdesc1: \"Promotes romance and unity within the colony. [+12% Ant Speed / level]\",\n    antupgdesc2: \"Sweetens crumbs to increase their value [Each level increases Crumb --> Coin Conversion efficiency, up to ^50,000,000]\",\n    antupgdesc3: \"Swarms the Taxman into submission [Up to -99% taxes!]\",\n    antupgdesc4: \"Scares you into running faster [up to x20]\",\n    antupgdesc5: \"Imitates your body through magic shape-shifting powers [up to x40]\",\n    antupgdesc6: \"Tries to please Ant God... but fails [Additional Offerings!]\",\n    antupgdesc7: \"Helps you build a few things here and there [+3% Building Cost Delay / level, Cap 9,999,999%]\",\n    antupgdesc8: \"Knows how to salt and pepper food [Up to 1,000x Rune EXP!]\",\n    antupgdesc9: \"Can make your message to Ant God a little more clear [+1 all Rune Levels / level, Cap 10 Million]\",\n    antupgdesc10: \"Has big brain energy [Additional Obtainium!]\",\n    antupgdesc11: \"A valuable offering to the Ant God [Gain up to 3x Sacrifice Rewards!]\",\n    antupgdesc12: \"Betray Ant God increasing the fragility of your dimension [Unlocks ant talisman, Up to 2x faster timers on most things]\"\n};\nexport const calculateCrumbToCoinExp = () => {\n    const exponent = player.currentChallenge.ascension !== 15\n        ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499)\n        : 1 / 10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499));\n    return exponent;\n};\nconst antUpgradeTexts = [\n    () => \"ALL Ants work at \" + format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1 - 1] + G['bonusant1']), 2) + \"x speed.\",\n    () => \"Crumb --> Coin exponent is ^\" + format(calculateCrumbToCoinExp()),\n    () => \"Tax growth is multiplied by \" + format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3 - 1] + G['bonusant3']), 4),\n    () => \"Accelerator Boosts +\" + format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4 - 1] + G['bonusant4']) / 1000 * 20 / 19) - 1), 3) + \"%\",\n    () => \"Multipliers +\" + format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39) - 1), 3) + \"%\",\n    () => \"Offerings x\" + format(1 + Math.pow((player.antUpgrades[6 - 1] + G['bonusant6']), 0.66), 4),\n    () => \"Building Costs scale \" + format(Math.min(9999999, 3 * player.antUpgrades[7 - 1] + 3 * G['bonusant7']), 0, true) + \"% slower!\",\n    () => \"Rune EXP is multiplied by \" + format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8 - 1] + G['bonusant8'], 1.1)), 3) + \"!\",\n    () => \"Each rune has +\" + format(1 * Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])), 0, true) + \" effective levels.\",\n    () => \"Obtainium x\" + format(1 + 2 * Math.pow((player.antUpgrades[10 - 1] + G['bonusant10']) / 50, 0.75), 4),\n    () => \"Sacrificing is \" + format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11 - 1] + G['bonusant11']) / 125)), 4) + \"x as effective\",\n    () => \"Global timer is sped up by a factor of \" + format(calculateSigmoid(2, player.antUpgrades[12 - 1] + G['bonusant12'], 69), 4)\n];\nlet repeatAnt = null;\nexport const antRepeat = (i) => {\n    clearInt(repeatAnt);\n    repeatAnt = interval(() => updateAntDescription(i), 50);\n};\nexport const updateAntDescription = (i) => {\n    const el = document.getElementById(\"anttierdescription\");\n    const la = document.getElementById(\"antprice\");\n    const ti = document.getElementById(\"antquantity\");\n    const me = document.getElementById(\"generateant\");\n    let priceType = \"Galactic Crumbs\";\n    let tier = \"\";\n    el.textContent = antdesc[\"antdesc\" + i];\n    switch (i) {\n        case 1:\n            priceType = \"Particles\";\n            tier = \"first\";\n            me.textContent = \"Generates \" + format(G['antOneProduce'], 5) + \" Crumbs/sec\";\n            break;\n        case 2:\n            tier = \"second\";\n            me.textContent = \"Generates \" + format(G['antTwoProduce'], 5) + \" Workers/sec\";\n            break;\n        case 3:\n            tier = \"third\";\n            me.textContent = \"Generates \" + format(G['antThreeProduce'], 5) + \" Breeders/sec\";\n            break;\n        case 4:\n            tier = \"fourth\";\n            me.textContent = \"Generates \" + format(G['antFourProduce'], 5) + \" MetaBreeders/sec\";\n            break;\n        case 5:\n            tier = \"fifth\";\n            me.textContent = \"Generates \" + format(G['antFiveProduce'], 5) + \" MegaBreeders/sec\";\n            break;\n        case 6:\n            tier = \"sixth\";\n            me.textContent = \"Generates \" + format(G['antSixProduce'], 5) + \" Queens/sec\";\n            break;\n        case 7:\n            tier = \"seventh\";\n            me.textContent = \"Generates \" + format(G['antSevenProduce'], 5) + \" Royals/sec\";\n            break;\n        case 8:\n            tier = \"eighth\";\n            me.textContent = \"Generates \" + format(G['antEightProduce'], 5) + \" ALMIGHTIES/sec\";\n            break;\n    }\n    la.textContent = \"Cost: \" + format(player[tier + \"CostAnts\"]) + \" \" + priceType;\n    ti.textContent = \"Owned: \" + format(player[tier + \"OwnedAnts\"]) + \" [+\" + format(player[tier + \"GeneratedAnts\"], 2) + \"]\";\n};\nconst getAntCost = (originalCost, buyTo, index) => {\n    --buyTo;\n    const cost = originalCost\n        .times(Decimal.pow(G['antCostGrowth'][index - 1], buyTo))\n        .add(1 * buyTo);\n    return cost;\n};\nconst getAntUpgradeCost = (originalCost, buyTo, index) => {\n    --buyTo;\n    const cost = originalCost.times(Decimal.pow(G['antUpgradeCostIncreases'][index - 1], buyTo));\n    return cost;\n};\nexport const buyAntProducers = (pos, originalCost, index) => {\n    const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints);\n    originalCost = new Decimal(originalCost);\n    const tag = index === 1 ? 'reincarnationPoints' : 'antPoints';\n    const key = `${pos}OwnedAnts`;\n    let buyTo = player[key] + 1;\n    let cashToBuy = getAntCost(originalCost, buyTo, index);\n    while (player[tag].gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getAntCost(originalCost, buyTo, index);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!player.antMax) {\n        if (1 + player[key] < buyTo) {\n            buyTo = player[key] + 1;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player[key] + 1);\n    let thisCost = getAntCost(originalCost, buyFrom, index);\n    while (buyFrom <= buyTo && player[tag].gte(getAntCost(originalCost, buyFrom, index))) {\n        player[tag] = player[tag].sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getAntCost(originalCost, buyFrom, index);\n        player[`${pos}CostAnts`] = thisCost;\n    }\n    if (player.reincarnationPoints.lt(0)) {\n        player.reincarnationPoints = new Decimal(\"0\");\n    }\n    if (player.antPoints.lt(0)) {\n        player.antPoints = new Decimal(\"0\");\n    }\n    calculateAntSacrificeELO();\n    const achRequirements = [2, 6, 20, 100, 500, 6666, 77777];\n    for (let j = 0; j < achRequirements.length; j++) {\n        if (sacrificeMult > achRequirements[j] && player[G['ordinals'][j + 1] + \"OwnedAnts\"] > 0 && player.achievements[176 + j] === 0) {\n            achievementaward(176 + j);\n        }\n    }\n    if (player.firstOwnedAnts > 6.9e7) {\n        player.firstOwnedAnts = 6.9e7;\n    }\n};\nexport const buyAntUpgrade = (originalCost, auto, index) => {\n    if (player.currentChallenge.ascension !== 11) {\n        originalCost = new Decimal(originalCost);\n        let buyTo = 1 + player.antUpgrades[index - 1];\n        let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        while (player.antPoints.gte(cashToBuy)) {\n            buyTo = buyTo * 4;\n            cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        }\n        let stepdown = Math.floor(buyTo / 8);\n        while (stepdown !== 0) {\n            if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            }\n            else {\n                buyTo = buyTo - stepdown;\n            }\n        }\n        if (!player.antMax) {\n            if (player.antUpgrades[index - 1] + 1 < buyTo) {\n                buyTo = 1 + player.antUpgrades[index - 1];\n            }\n        }\n        let buyFrom = Math.max(buyTo - 7, 1 + player.antUpgrades[index - 1]);\n        let thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\n            player.antPoints = player.antPoints.sub(thisCost);\n            player.antUpgrades[index - 1] = buyFrom;\n            buyFrom = buyFrom + 1;\n            thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        }\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        if (!auto) {\n            antUpgradeDescription(index);\n        }\n        if (player.antUpgrades[12 - 1] === 1 && index === 12) {\n            revealStuff();\n        }\n    }\n};\nexport const antUpgradeDescription = (i) => {\n    const el = document.getElementById(\"antspecies\");\n    const al = document.getElementById(\"antlevelbonus\");\n    const la = document.getElementById(\"antupgradedescription\");\n    const ti = document.getElementById(\"antupgradecost\");\n    const me = document.getElementById(\"antupgradeeffect\");\n    const content1 = antspecies[\"antspecies\" + i];\n    const content2 = antupgdesc[\"antupgdesc\" + i];\n    const bonuslevel = G[`bonusant${i}`];\n    const c11 = player.currentChallenge.ascension === 11 ? 999 : 0;\n    el.childNodes[0].textContent = content1 + \" Level \" + format(player.antUpgrades[i - 1]);\n    al.textContent = \" [+\" + format(Math.min(player.antUpgrades[i - 1] + c11, bonuslevel)) + \"]\";\n    la.textContent = content2;\n    ti.textContent = \"Cost: \" + format(Decimal.pow(G['antUpgradeCostIncreases'][i - 1], player.antUpgrades[i - 1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i - 1])) + \" Galactic Crumbs\";\n    me.textContent = \"CURRENT EFFECT: \" + antUpgradeTexts[i - 1]();\n};\nexport const antSacrificePointsToMultiplier = (points) => {\n    let multiplier = Math.pow(1 + points / 5000, 2);\n    multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10));\n    if (player.achievements[174] > 0) {\n        multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10));\n    }\n    return multiplier;\n};\nexport const showSacrifice = () => {\n    const sacRewards = calculateAntSacrificeRewards();\n    document.getElementById(\"antSacrificeSummary\").style.display = \"block\";\n    document.getElementById(\"antELO\").childNodes[0].textContent = \"Your Ant ELO is \";\n    document.getElementById(\"ELO\").textContent = format(G['antELO'], 2);\n    document.getElementById(\"effectiveELO\").textContent = \"[\" + format(G['effectiveELO'], 2, false) + \" effective]\";\n    document.getElementById(\"antSacrificeMultiplier\").childNodes[0].textContent = \"Ant Multiplier x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false) + \" --> \";\n    document.getElementById(\"SacrificeMultiplier\").textContent = \"x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false);\n    document.getElementById(\"SacrificeUpgradeMultiplier\").textContent = format(G['upgradeMultiplier'], 3, true) + \"x\";\n    document.getElementById(\"SacrificeTimeMultiplier\").textContent = format(G['timeMultiplier'], 3, true) + \"x\";\n    document.getElementById(\"antSacrificeOffering\").textContent = \"+\" + format(sacRewards.offerings);\n    document.getElementById(\"antSacrificeObtainium\").textContent = \"+\" + format(sacRewards.obtainium);\n    if (player.challengecompletions[9] > 0) {\n        document.getElementById(\"antSacrificeTalismanShard\").textContent = \"+\" + format(sacRewards.talismanShards) + \" [>500 ELO]\";\n        document.getElementById(\"antSacrificeCommonFragment\").textContent = \"+\" + format(sacRewards.commonFragments) + \" [>750 ELO]\";\n        document.getElementById(\"antSacrificeUncommonFragment\").textContent = \"+\" + format(sacRewards.uncommonFragments) + \" [>1,000 ELO]\";\n        document.getElementById(\"antSacrificeRareFragment\").textContent = \"+\" + format(sacRewards.rareFragments) + \" [>1,500 ELO]\";\n        document.getElementById(\"antSacrificeEpicFragment\").textContent = \"+\" + format(sacRewards.epicFragments) + \" [>2,000 ELO]\";\n        document.getElementById(\"antSacrificeLegendaryFragment\").textContent = \"+\" + format(sacRewards.legendaryFragments) + \" [>3,000 ELO]\";\n        document.getElementById(\"antSacrificeMythicalFragment\").textContent = \"+\" + format(sacRewards.mythicalFragments) + \" [>5,000 ELO]\";\n    }\n};\nexport const sacrificeAnts = (auto = false) => __awaiter(void 0, void 0, void 0, function* () {\n    let p = true;\n    if (player.antPoints.gte(\"1e40\")) {\n        if (!auto && player.antSacrificePoints < 100 && player.toggles[32]) {\n            p = yield Confirm(\"This resets your Crumbs, Ants and Ant Upgrades in exchange for some multiplier and resources. Continue?\");\n        }\n        if (p) {\n            const antSacrificePointsBefore = player.antSacrificePoints;\n            const sacRewards = calculateAntSacrificeRewards();\n            player.antSacrificePoints += sacRewards.antSacrificePoints;\n            player.runeshards += sacRewards.offerings;\n            player.researchPoints += sacRewards.obtainium;\n            const historyEntry = {\n                date: Date.now(),\n                seconds: player.antSacrificeTimer,\n                kind: 'antsacrifice',\n                offerings: sacRewards.offerings,\n                obtainium: sacRewards.obtainium,\n                antSacrificePointsBefore: antSacrificePointsBefore,\n                antSacrificePointsAfter: player.antSacrificePoints,\n                baseELO: G['antELO'],\n                effectiveELO: G['effectiveELO'],\n                crumbs: player.antPoints.toString(),\n                crumbsPerSecond: G['antOneProduce'].toString(),\n            };\n            if (player.challengecompletions[9] > 0) {\n                player.talismanShards += sacRewards.talismanShards;\n                player.commonFragments += sacRewards.commonFragments;\n                player.uncommonFragments += sacRewards.uncommonFragments;\n                player.rareFragments += sacRewards.rareFragments;\n                player.epicFragments += sacRewards.epicFragments;\n                player.legendaryFragments += sacRewards.legendaryFragments;\n                player.mythicalFragments += sacRewards.mythicalFragments;\n            }\n            if (player.shopUpgrades.offeringAuto > 0.5 && player.autoSacrificeToggle) {\n                if (player.cubeUpgrades[20] === 1 && player.runeshards >= 5) {\n                    let unmaxed = 0;\n                    for (let i = 1; i <= 5; i++) {\n                        if (player.runelevels[i - 1] < calculateMaxRunes(i))\n                            unmaxed++;\n                    }\n                    if (unmaxed > 0) {\n                        const baseAmount = Math.floor(player.runeshards / unmaxed);\n                        for (let i = 1; i <= 5; i++) {\n                            redeemShards(i, true, baseAmount);\n                        }\n                        player.sacrificeTimer = 0;\n                    }\n                }\n            }\n            resetAnts();\n            player.antSacrificeTimer = 0;\n            player.antSacrificeTimerReal = 0;\n            updateTalismanInventory();\n            if (player.autoResearch > 0 && player.autoResearchToggle) {\n                const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                buyResearch(player.autoResearch, true, linGrowth);\n            }\n            calculateAntSacrificeELO();\n            Synergism.emit('historyAdd', 'ants', historyEntry);\n        }\n    }\n    if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\n        achievementaward(248);\n    }\n});\nexport const autoBuyAnts = () => {\n    const canAffordUpgrade = (x, m) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G['antUpgradeBaseCost'][x - 1]), player.antUpgrades[x - 1] + 1, x).times(m));\n    const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145];\n    const cost = [\"100\", \"100\", \"1000\", \"1000\", \"1e5\", \"1e6\", \"1e8\", \"1e11\", \"1e15\", \"1e20\", \"1e40\", \"1e100\"];\n    if (player.currentChallenge.ascension !== 11) {\n        for (let i = 1; i <= ach.length; i++) {\n            const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]];\n            if (check && canAffordUpgrade(i, 2)) {\n                buyAntUpgrade(cost[i - 1], true, i);\n            }\n        }\n    }\n    const _ach = [173, 176, 177, 178, 179, 180, 181, 182];\n    const _cost = [\"1e800\", \"3\", \"100\", \"10000\", \"1e12\", \"1e36\", \"1e100\", \"1e300\"];\n    for (let i = 1; i <= _ach.length; i++) {\n        const res = i === 1 ? player.reincarnationPoints : player.antPoints;\n        const m = i === 1 ? 1 : 2;\n        if (player.achievements[_ach[i - 1]] && res.gte(player[G['ordinals'][i - 1] + \"CostAnts\"].times(m))) {\n            buyAntProducers(G['ordinals'][i - 1], _cost[i - 1], i);\n        }\n    }\n};\n","import { player } from './Synergism';\nimport { achievementaward } from './Achievements';\nimport Decimal from 'break_infinity.js';\nimport { upgradeupdate } from './Upgrades';\nimport { revealStuff } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { buyUpgrades } from './Buy';\nconst buyGenerator = (i, state, auto) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true;\n    }\n    const q = 100 + i;\n    let type = \"transcendPoints\";\n    if (q <= 110 && q >= 106) {\n        type = \"coins\";\n    }\n    else if (q <= 115) {\n        type = \"prestigePoints\";\n    }\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105]);\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        if (achievementCheck === 0 && q >= 102 && q <= 105) {\n            achievementaward(q - 31);\n        }\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n    }\n    if (!auto) {\n        revealStuff();\n    }\n};\nexport const buyAutobuyers = (i, state) => {\n    const q = i + 80;\n    let type = \"\";\n    if (q <= 87) {\n        type = \"prestigePoints\";\n    }\n    else if (q <= 93) {\n        type = \"transcendPoints\";\n    }\n    else {\n        type = \"reincarnationPoints\";\n    }\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    if (player[type].gte(cost) && player.upgrades[q] === 0) {\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n    }\n};\nexport const autoUpgrades = () => {\n    if (player.upgrades[90] > 0.5 && player.shoptoggles.generators === true) {\n        for (let i = 1; i < 6; i++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + i)])) && player.shoptoggles.generators === true) {\n                buyGenerator(i, true, true);\n            }\n        }\n        for (let j = 6; j < 11; j++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][(100 + j)])) && player.shoptoggles.generators === true) {\n                buyGenerator(j, true, true);\n            }\n        }\n        for (let k = 11; k < 16; k++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + k)])) && player.shoptoggles.generators === true) {\n                buyGenerator(k, true, true);\n            }\n        }\n        for (let l = 16; l < 21; l++) {\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + l)])) && player.shoptoggles.generators === true) {\n                buyGenerator(l, true, true);\n            }\n        }\n    }\n    if (player.upgrades[91] > 0.5) {\n        for (let i = 1; i < 21; i++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true) {\n                buyUpgrades('coin', i, true);\n            }\n        }\n        for (let i = 121; i <= 125; i++) {\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true && player.cubeUpgrades[19] > 0) {\n                buyUpgrades('coin', i, true);\n            }\n        }\n    }\n    if (player.upgrades[92] > 0.5) {\n        for (let i = 21; i < 38; i++) {\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.prestige === true) {\n                buyUpgrades('prestige', i, true);\n            }\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige === true && player.achievements[120] === 1) {\n            buyUpgrades('prestige', 38, true);\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige === true && player.achievements[127] === 1) {\n            buyUpgrades('prestige', 39, true);\n        }\n        if (player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige === true && player.achievements[134] === 1) {\n            buyUpgrades('prestige', 40, true);\n        }\n    }\n    if (player.upgrades[99] > 0.5) {\n        for (let i = 41; i < 61; i++) {\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.transcend === true) {\n                buyUpgrades('transcend', i, true);\n            }\n        }\n    }\n    if (player.cubeUpgrades[8] > 0) {\n        for (let i = 61; i <= 80; i++) {\n            if (player.reincarnationPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.reincarnate) {\n                buyUpgrades('reincarnation', i, true);\n            }\n        }\n    }\n};\n","import { player, updateAllTick, updateAllMultiplier, format } from './Synergism';\nimport { CalcECC } from './Challenges';\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { smallestInc } from './Utility';\nimport { upgradeupdate, crystalupgradedescriptions } from './Upgrades';\nimport { reset } from './Reset';\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate';\nimport { Globals as G } from './Variables';\nexport const getReductionValue = () => {\n    let reduction = 1;\n    reduction += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    reduction += CalcECC('transcend', player.challengecompletions[4]) / 200;\n    reduction += Math.min(99999.9, (3 * (player.antUpgrades[7 - 1] + G['bonusant7'])) / 100);\n    return reduction;\n};\nconst getCostAccelerator = (buyingTo) => {\n    --buyingTo;\n    const originalCost = 500;\n    let cost = new Decimal(originalCost);\n    cost = cost.times(Decimal.pow(4 / G['costDivisor'], buyingTo));\n    if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const multBit = Decimal.pow(4, num);\n        cost = cost.times(multBit.times(factorialBit));\n    }\n    if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2;\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    return cost;\n};\nexport const buyAccelerator = (autobuyer) => {\n    let buyTo = player.acceleratorBought + 1;\n    if (player.acceleratorBought >= 1e15 || player.coins.gte(Decimal.pow(10, 1e30))) {\n        player.acceleratorBought = 1e15;\n        player.acceleratorCost = Decimal.pow(10, 1e30);\n        return;\n    }\n    let cashToBuy = getCostAccelerator(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getCostAccelerator(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!autobuyer && player.coinbuyamount !== \"max\") {\n        if (player.acceleratorBought + player.coinbuyamount < buyTo) {\n            buyTo = player.acceleratorBought + player.coinbuyamount;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player.acceleratorBought + 1);\n    let thisCost = getCostAccelerator(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        player.coins = player.coins.sub(thisCost);\n        player.acceleratorBought = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getCostAccelerator(buyFrom);\n        player.acceleratorCost = thisCost;\n    }\n    player.prestigenoaccelerator = false;\n    player.transcendnoaccelerator = false;\n    player.reincarnatenoaccelerator = false;\n    updateAllTick();\n    if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\n        achievementaward(148);\n    }\n    if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\n        achievementaward(149);\n    }\n    if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\n        achievementaward(150);\n    }\n    if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\n        achievementaward(151);\n    }\n    if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\n        achievementaward(152);\n    }\n    if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\n        achievementaward(153);\n    }\n    if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\n        achievementaward(154);\n    }\n};\nconst getCostMultiplier = (buyingTo) => {\n    --buyingTo;\n    const originalCost = 1e5;\n    let cost = new Decimal(originalCost);\n    cost = cost.times(Decimal.pow(10, buyingTo / G['costDivisor']));\n    if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const powBit = Decimal.pow(10, num);\n        cost = cost.times(factorialBit.times(powBit));\n    }\n    if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2;\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    return cost;\n};\nexport const buyMultiplier = (autobuyer) => {\n    let buyTo = player.multiplierBought + 1;\n    if (player.multiplierBought >= 1e15 || player.coins.gte(Decimal.pow(10, 1e30))) {\n        player.multiplierBought = 1e15;\n        player.multiplierCost = Decimal.pow(10, 1e30);\n        return;\n    }\n    let cashToBuy = getCostMultiplier(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getCostMultiplier(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!autobuyer && player.coinbuyamount !== \"max\") {\n        if (player.multiplierBought + player.coinbuyamount < buyTo) {\n            buyTo = player.multiplierBought + player.coinbuyamount;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player.multiplierBought + 1);\n    let thisCost = getCostMultiplier(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        player.coins = player.coins.sub(thisCost);\n        player.multiplierBought = buyFrom;\n        if (buyFrom >= 1e15) {\n            player.multiplierBought = 1e15;\n            return;\n        }\n        buyFrom = buyFrom + 1;\n        thisCost = getCostMultiplier(buyFrom);\n        player.multiplierCost = thisCost;\n    }\n    player.prestigenomultiplier = false;\n    player.transcendnomultiplier = false;\n    player.reincarnatenomultiplier = false;\n    updateAllMultiplier();\n    if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\n        achievementaward(155);\n    }\n    if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\n        achievementaward(156);\n    }\n    if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\n        achievementaward(157);\n    }\n    if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\n        achievementaward(158);\n    }\n    if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\n        achievementaward(159);\n    }\n    if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\n        achievementaward(160);\n    }\n    if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\n        achievementaward(161);\n    }\n};\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI);\nconst exponentFactorialPartExtra = Math.log10(Math.E);\nconst factorialByExponent = (fact) => {\n    if (++fact === 0) {\n        return 0;\n    }\n    return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2);\n};\nconst fact100exponent = Math.log10(9.3326215443944152681699238856267e+157);\nconst precision16_loss_addition_of_ones = 188.582;\nconst known_log10s = function () {\n    const needed = [1.03, 1.25];\n    const nums = [1, 2, 3, 4, 5, 6, 10, 15];\n    for (const num of nums) {\n        needed.push(100 + (100 * num));\n        needed.push(10 + (10 * num));\n    }\n    const chalcompletions = 1000;\n    for (let i = 0; i < chalcompletions; ++i) {\n        needed.push(1 + (i / 2));\n    }\n    const obj = {};\n    for (const need of needed) {\n        if (obj[need] === undefined) {\n            obj[need] = Math.log10(need);\n        }\n    }\n    return obj;\n}();\nexport const getCost = (originalCost, buyingTo, type, num, r) => {\n    --buyingTo;\n    const cost = new Decimal(originalCost);\n    let mlog10125 = num * buyingTo;\n    if (buyingTo < precision16_loss_addition_of_ones / num) {\n        cost.mantissa += buyingTo / Math.pow(10, cost.exponent);\n    }\n    let fastFactMultBuyTo = 0;\n    let fr = Math.floor(r * 1000);\n    if (buyingTo >= r * 1000) {\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr);\n    }\n    fr = Math.floor(r * 5000);\n    if (buyingTo >= r * 5000) {\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1;\n    }\n    fr = Math.floor(r * 20000);\n    if (buyingTo >= r * 20000) {\n        fastFactMultBuyTo += 3;\n        cost.exponent -= factorialByExponent(fr) * 3;\n        cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr);\n    }\n    fr = Math.floor(r * 250000);\n    if (buyingTo >= r * 250000) {\n        cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2);\n    }\n    cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo;\n    let fastFactMultBuyTo100 = 0;\n    if ((player.currentChallenge.transcension === 4) && (type === \"Coin\" || type === \"Diamonds\")) {\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    if ((player.currentChallenge.reincarnation === 10) && (type === \"Coin\" || type === \"Diamonds\")) {\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (r * 25000)) {\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)));\n    cost.exponent += known_log10s[1.25] * mlog10125;\n    fr = Math.floor(r * 1000 * player.challengecompletions[8]);\n    if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\n        cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr);\n    }\n    const extra = cost.exponent - Math.floor(cost.exponent);\n    cost.exponent = Math.floor(cost.exponent);\n    cost.mantissa *= Math.pow(10, extra);\n    cost.normalize();\n    return cost;\n};\nexport const buyMax = (pos, type, num, originalCost) => {\n    const BUYMAX = (Math.pow(10, 99) - 1);\n    const COINMAX = 1e99;\n    const r = getReductionValue();\n    let tag = '';\n    switch (type) {\n        case 'Diamonds':\n            tag = 'prestigePoints';\n            break;\n        case 'Mythos':\n            tag = 'transcendPoints';\n            break;\n        case 'Particles':\n            tag = 'reincarnationPoints';\n            break;\n        case 'Coin':\n            tag = 'coins';\n            break;\n    }\n    const buyStart = player[pos + 'Owned' + type];\n    if (buyStart >= BUYMAX) {\n        player[pos + 'Owned' + type] = BUYMAX;\n        return;\n    }\n    if (player[tag].gte(Decimal.pow(10, COINMAX))) {\n        player[pos + 'Owned' + type] = BUYMAX;\n        return;\n    }\n    let buyInc = 1;\n    let cashToBuy = getCost(originalCost, buyStart + buyInc, type, num, r);\n    while (player[tag].gte(cashToBuy)) {\n        buyInc = buyInc * 4;\n        cashToBuy = getCost(originalCost, buyStart + buyInc, type, num, r);\n    }\n    let stepdown = Math.floor(buyInc / 8);\n    while (stepdown !== 0) {\n        if (getCost(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\n        }\n    }\n    let buyFrom = Math.max(buyStart + buyInc - 7, player[pos + 'Owned' + type] + 1);\n    let thisCost = getCost(originalCost, buyFrom, type, num, r);\n    while (buyFrom < buyStart + buyInc && player[tag].gte(thisCost)) {\n        player[tag] = player[tag].sub(thisCost);\n        player[pos + 'Owned' + type] = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getCost(originalCost, buyFrom, type, num, r);\n        player[pos + 'Cost' + type] = thisCost;\n    }\n};\nconst buyProducerTypes = {\n    Diamonds: ['prestigePoints', 'crystal'],\n    Mythos: ['transcendPoints', 'mythos'],\n    Particles: ['reincarnationPoints', 'particle'],\n    Coin: ['coins', 'coin']\n};\nexport const buyProducer = (pos, type, num, autobuyer) => {\n    const [tag, amounttype] = buyProducerTypes[type];\n    const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount`];\n    let r = 1;\n    r += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    r += CalcECC('transcend', player.challengecompletions[4]) / 200;\n    r += (3 * (G['bonusant7'] + player.antUpgrades[7 - 1])) / 100;\n    while (player[tag].gte(player[pos + 'Cost' + type]) && G['ticker'] < buythisamount) {\n        player[tag] = player[tag].sub(player[pos + 'Cost' + type]);\n        player[pos + 'Owned' + type] += 1;\n        player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.25, num));\n        player[pos + 'Cost' + type] = player[pos + 'Cost' + type].add(1);\n        if (player[pos + 'Owned' + type] >= (1000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(player[pos + 'Owned' + type]).dividedBy(1000).times(1 + num / 2);\n        }\n        if (player[pos + 'Owned' + type] >= (5000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(player[pos + 'Owned' + type]).times(10).times(10 + num * 10);\n        }\n        if (player[pos + 'Owned' + type] >= (20000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(player[pos + 'Owned' + type], 3)).times(100000).times(100 + num * 100);\n        }\n        if (player[pos + 'Owned' + type] >= (250000 * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.03, player[pos + 'Owned' + type] - 250000 * r));\n        }\n        if (player.currentChallenge.transcension === 4 && (type === \"Coin\" || type === \"Diamonds\")) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Math.pow(100 * player[pos + 'Owned' + type] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]));\n            if (player[pos + 'Owned' + type] >= 1000 - (10 * player.challengecompletions[4])) {\n                player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.25, player[pos + 'Owned' + type]));\n            }\n        }\n        if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && player[pos + 'Owned' + type] >= (1000 * player.challengecompletions[8] * r)) {\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(2, (player[pos + 'Owned' + type] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))));\n        }\n        G['ticker'] += 1;\n    }\n    G['ticker'] = 0;\n};\nexport const buyUpgrades = (type, pos, state) => {\n    let addendum = \"\";\n    if (type === \"prestige\" || type === \"transcend\" || type === \"reincarnation\") {\n        addendum = \"Point\";\n    }\n    if (player[type + addendum + 's'].gte(Decimal.pow(10, G['upgradeCosts'][pos])) && player.upgrades[pos] === 0) {\n        player[type + addendum + 's'] = player[type + addendum + 's'].sub(Decimal.pow(10, G['upgradeCosts'][pos]));\n        player.upgrades[pos] = 1;\n        upgradeupdate(pos, state);\n    }\n    if (type === \"transcend\") {\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === \"prestige\") {\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === \"coin\") {\n        player.prestigenocoinupgrades = false;\n        player.transcendnocoinupgrades = false;\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n};\nexport const calculateCrystalBuy = (i) => {\n    const u = i - 1;\n    const exponent = Decimal.log(player.prestigeShards.add(1), 10);\n    const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G['crystalUpgradesCost'][u]) / G['crystalUpgradeCostIncrement'][u] + 1 / 4), 1 / 2) + 1 / 2);\n    return toBuy;\n};\nexport const buyCrystalUpgrades = (i, auto = false) => {\n    const u = i - 1;\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10;\n    }\n    const toBuy = calculateCrystalBuy(i);\n    if (toBuy + c > player.crystalUpgrades[u]) {\n        player.crystalUpgrades[u] = 100 / 100 * (toBuy + c);\n        if (toBuy > 0) {\n            player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G['crystalUpgradesCost'][u] + G['crystalUpgradeCostIncrement'][u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)));\n            if (!auto) {\n                crystalupgradedescriptions(i);\n            }\n        }\n    }\n};\nexport const boostAccelerator = (automated) => {\n    let buyamount = 1;\n    if (player.upgrades[46] === 1) {\n        buyamount = automated ? 9999 : player.coinbuyamount;\n    }\n    if (player.upgrades[46] < 1) {\n        while (player.prestigePoints.gte(player.acceleratorBoostCost) && G['ticker'] < buyamount) {\n            if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\n                player.acceleratorBoostBought += 1;\n                player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought));\n                if (player.acceleratorBoostBought > (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4]))) {\n                    player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4])), 2) / (1 + 2 * G['effectiveRuneBlessingPower'][4])));\n                }\n                player.transcendnoaccelerator = false;\n                player.reincarnatenoaccelerator = false;\n                if (player.upgrades[46] < 0.5) {\n                    for (let j = 21; j < 41; j++) {\n                        player.upgrades[j] = 0;\n                    }\n                    reset(\"prestige\");\n                    player.prestigePoints = new Decimal(0);\n                }\n            }\n        }\n    }\n    else {\n        const buyStart = player.acceleratorBoostBought;\n        let buyInc = 1;\n        let cost = getAcceleratorBoostCost(buyStart + buyInc);\n        while (player.prestigePoints.gte(cost)) {\n            buyInc *= 4;\n            cost = getAcceleratorBoostCost(buyStart + buyInc);\n        }\n        let stepdown = Math.floor(buyInc / 8);\n        while (stepdown !== 0) {\n            if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            }\n            else {\n                buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\n            }\n        }\n        let buyFrom = Math.max(buyStart + buyInc - 7, player.acceleratorBoostBought + 1);\n        let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought);\n        while (buyFrom < buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\n            player.prestigePoints = player.prestigePoints.sub(thisCost);\n            player.acceleratorBoostBought = buyFrom;\n            buyFrom = buyFrom + smallestInc(buyInc);\n            thisCost = getAcceleratorBoostCost(buyFrom);\n            player.acceleratorBoostCost = thisCost;\n            player.transcendnoaccelerator = false;\n            player.reincarnatenoaccelerator = false;\n        }\n    }\n    G['ticker'] = 0;\n    if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\n        achievementaward(162);\n    }\n    if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\n        achievementaward(163);\n    }\n    if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\n        achievementaward(164);\n    }\n    if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\n        achievementaward(165);\n    }\n    if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\n        achievementaward(166);\n    }\n    if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\n        achievementaward(167);\n    }\n    if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\n        achievementaward(168);\n    }\n};\nconst getAcceleratorBoostCost = (level = 1) => {\n    level--;\n    const base = new Decimal(1e3);\n    const eff = 1 + 2 * G['effectiveRuneBlessingPower'][4];\n    const linSum = (n) => n * (n + 1) / 2;\n    const sqrSum = (n) => n * (n + 1) * (2 * n + 1) / 6;\n    if (level > 1000 * eff) {\n        return base.times(Decimal.pow(10, 10 * level\n            + linSum(level)\n            + sqrSum(level - 1000 * eff) / eff));\n    }\n    else {\n        return base.times(Decimal.pow(10, 10 * level + linSum(level)));\n    }\n};\nconst getParticleCost = (originalCost, buyTo) => {\n    --buyTo;\n    originalCost = new Decimal(originalCost);\n    let cost = originalCost.times(Decimal.pow(2, buyTo));\n    const DR = (player.currentChallenge.ascension !== 15) ? 325000 : 1000;\n    if (buyTo > DR) {\n        cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)));\n    }\n    return (cost);\n};\nexport const buyParticleBuilding = (pos, originalCost, autobuyer = false) => {\n    const key = `${pos}OwnedParticles`;\n    let buyTo = player[key] + 1;\n    let cashToBuy = getParticleCost(originalCost, buyTo);\n    while (player.reincarnationPoints.gte(cashToBuy)) {\n        buyTo = buyTo * 4;\n        cashToBuy = getParticleCost(originalCost, buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown !== 0) {\n        if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\n            stepdown = Math.floor(stepdown / 2);\n        }\n        else {\n            buyTo = buyTo - stepdown;\n        }\n    }\n    if (!autobuyer) {\n        if (player.particlebuyamount + player[key] < buyTo) {\n            buyTo = player[key] + player.particlebuyamount + 1;\n        }\n    }\n    let buyFrom = Math.max(buyTo - 7, player[key] + 1);\n    let thisCost = getParticleCost(originalCost, buyFrom);\n    while (buyFrom < buyTo && player.reincarnationPoints.gte(getParticleCost(originalCost, buyFrom))) {\n        player.reincarnationPoints = player.reincarnationPoints.sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + 1;\n        thisCost = getParticleCost(originalCost, buyFrom);\n        player[`${pos}CostParticles`] = thisCost;\n    }\n};\nexport const getTesseractCost = (intCost, index) => {\n    const buyFrom = player['ascendBuilding' + index]['owned'];\n    const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2);\n    let buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((Number(player.wowTesseracts) + subCost) / intCost, 1 / 2), 1 / 2));\n    buyTo = Math.min(buyTo, player.tesseractbuyamount + player['ascendBuilding' + index]['owned']);\n    const actualCost = intCost * Math.pow(buyTo * (buyTo + 1) / 2, 2) - subCost;\n    return [buyTo, actualCost];\n};\nexport const buyTesseractBuilding = (intCost, index) => {\n    const buyTo = getTesseractCost(intCost, index)[0];\n    const actualCost = getTesseractCost(intCost, index)[1];\n    player['ascendBuilding' + index]['owned'] = buyTo;\n    player.wowTesseracts.sub(actualCost);\n    player['ascendBuilding' + index]['cost'] = intCost * Math.pow(1 + player['ascendBuilding' + index]['owned'], 3);\n};\nexport const buyRuneBonusLevels = (type, index) => {\n    let baseCost;\n    let baseLevels;\n    let levelCap;\n    (type === 'Spirits') ?\n        (baseCost = G['spiritBaseCost'], baseLevels = player.runeSpiritLevels[index], levelCap = player.runeSpiritBuyAmount) :\n        (baseCost = G['blessingBaseCost'], baseLevels = player.runeBlessingLevels[index], levelCap = player.runeBlessingBuyAmount);\n    const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap);\n    (type === 'Spirits') ?\n        player.runeSpiritLevels[index] = level :\n        player.runeBlessingLevels[index] = level;\n    player.runeshards -= cost;\n    if (index === 1) {\n        const requirementArray = [0, 1e5, 1e8, 1e11];\n        for (let i = 1; i <= 3; i++) {\n            if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\n                achievementaward(231 + i);\n            }\n            if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\n                achievementaward(234 + i);\n            }\n        }\n        if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\n            achievementaward(245);\n        }\n    }\n    calculateRuneBonuses();\n    if (type === 'Blessings') {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1];\n        const t = (index === 5) ? 1 : 0;\n        document.getElementById('runeBlessingPower' + index + 'Value1').textContent = format(G['runeBlessings'][index]);\n        document.getElementById('runeBlessingPower' + index + 'Value2').textContent = format(1 - t + blessingMultiplierArray[index] * G['effectiveRuneBlessingPower'][index], 4, true);\n    }\n    if (type === 'Spirits') {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100];\n        spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400);\n        const t = (index === 3) ? 1 : 0;\n        document.getElementById('runeSpiritPower' + index + 'Value1').textContent = format(G['runeSpirits'][index]);\n        document.getElementById('runeSpiritPower' + index + 'Value2').textContent = format(1 - t + spiritMultiplierArray[index] * G['effectiveRuneSpiritPower'][index], 4, true);\n    }\n};\n","import { player, format, interval, clearInt, saveSynergy, resourceGain, updateAll } from './Synergism';\nimport { sumContents, productContents } from './Utility';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport Decimal from 'break_infinity.js';\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport { redeemShards } from './Runes';\nimport { quarkHandler } from './Quark';\nimport { hepteractEffective } from './Hepteracts';\nexport const calculateTotalCoinOwned = () => {\n    G['totalCoinOwned'] =\n        player.firstOwnedCoin +\n            player.secondOwnedCoin +\n            player.thirdOwnedCoin +\n            player.fourthOwnedCoin +\n            player.fifthOwnedCoin;\n};\nexport const calculateTotalAcceleratorBoost = () => {\n    let b = 0;\n    if (player.upgrades[26] > 0.5) {\n        b += 1;\n    }\n    if (player.upgrades[31] > 0.5) {\n        b += Math.floor(G['totalCoinOwned'] / 2000) * 100 / 100;\n    }\n    if (player.achievements[7] > 0.5) {\n        b += Math.floor(player.firstOwnedCoin / 2000);\n    }\n    if (player.achievements[14] > 0.5) {\n        b += Math.floor(player.secondOwnedCoin / 2000);\n    }\n    if (player.achievements[21] > 0.5) {\n        b += Math.floor(player.thirdOwnedCoin / 2000);\n    }\n    if (player.achievements[28] > 0.5) {\n        b += Math.floor(player.fourthOwnedCoin / 2000);\n    }\n    if (player.achievements[35] > 0.5) {\n        b += Math.floor(player.fifthOwnedCoin / 2000);\n    }\n    b += player.researches[93] * Math.floor(1 / 20 * (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']));\n    b += Math.floor((0.01 + G['rune1level']) * G['effectiveLevelMult'] / 20);\n    b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17]);\n    b *= (1 + 1 / 20 * player.researches[88]);\n    b *= calculateSigmoidExponential(20, (player.antUpgrades[4 - 1] + G['bonusant4']) / 1000 * 20 / 19);\n    b *= (1 + 1 / 100 * player.researches[127]);\n    b *= (1 + 0.8 / 100 * player.researches[142]);\n    b *= (1 + 0.6 / 100 * player.researches[157]);\n    b *= (1 + 0.4 / 100 * player.researches[172]);\n    b *= (1 + 0.2 / 100 * player.researches[187]);\n    b *= (1 + 0.01 / 100 * player.researches[200]);\n    b *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\n    b *= (1 + 3 / 10000 * hepteractEffective('acceleratorBoost'));\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        b *= 2;\n    }\n    b = Math.floor(b);\n    G['freeAcceleratorBoost'] = b;\n    G['totalAcceleratorBoost'] = Math.floor(player.acceleratorBoostBought + G['freeAcceleratorBoost']) * 100 / 100;\n};\nexport const calculateAcceleratorMultiplier = () => {\n    G['acceleratorMultiplier'] = 1;\n    G['acceleratorMultiplier'] *= (1 + player.achievements[60] / 100);\n    G['acceleratorMultiplier'] *= (1 + player.achievements[61] / 100);\n    G['acceleratorMultiplier'] *= (1 + player.achievements[62] / 100);\n    G['acceleratorMultiplier'] *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10]);\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[86]);\n    G['acceleratorMultiplier'] *= (1 + 1 / 100 * player.researches[126]);\n    G['acceleratorMultiplier'] *= (1 + 0.8 / 100 * player.researches[141]);\n    G['acceleratorMultiplier'] *= (1 + 0.6 / 100 * player.researches[156]);\n    G['acceleratorMultiplier'] *= (1 + 0.4 / 100 * player.researches[171]);\n    G['acceleratorMultiplier'] *= (1 + 0.2 / 100 * player.researches[186]);\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.researches[200]);\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\n    G['acceleratorMultiplier'] *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]);\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        G['acceleratorMultiplier'] *= 1.25;\n    }\n};\nexport const calculateRecycleMultiplier = () => {\n    const recycleFactors = sumContents([\n        0.05 * player.achievements[80],\n        0.05 * player.achievements[87],\n        0.05 * player.achievements[94],\n        0.05 * player.achievements[101],\n        0.05 * player.achievements[108],\n        0.05 * player.achievements[115],\n        0.075 * player.achievements[122],\n        0.075 * player.achievements[129],\n        0.05 * player.upgrades[61],\n        0.25 * Math.min(1, G['rune4level'] / 400),\n        0.005 * player.cubeUpgrades[2]\n    ]);\n    return 1 / (1 - recycleFactors);\n};\nexport function calculateRuneExpGiven(runeIndex, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\n    const recycleMultiplier = calculateRecycleMultiplier();\n    let allRuneExpAdditiveMultiplier = null;\n    if (all) {\n        allRuneExpAdditiveMultiplier = sumContents([\n            1 / 100 * player.highestchallengecompletions[3],\n            1 * player.upgrades[66]\n        ]);\n    }\n    else {\n        allRuneExpAdditiveMultiplier = sumContents([\n            1,\n            Math.min(1, player.highestchallengecompletions[1]),\n            0.4 / 10 * player.highestchallengecompletions[1],\n            0.6 * player.researches[22],\n            0.3 * player.researches[23],\n            2 * player.upgrades[61],\n            player.upgrades[71] * runeLevel / 25\n        ]);\n    }\n    const allRuneExpMultiplier = productContents([\n        1 + (player.researches[91] / 20),\n        1 + (player.researches[92] / 20),\n        calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8 - 1] + G['bonusant8'], 1.1)),\n        G['cubeBonusMultiplier'][4],\n        (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\n        1 / Math.pow(G['droughtMultiplier'][player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13]),\n        1 + 1 / 10 * player.constantUpgrades[8],\n        G['challenge15Rewards'].runeExp\n    ]);\n    const runeExpMultiplier = [\n        productContents([\n            1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5)\n        ]),\n        productContents([\n            1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10)\n        ]),\n        productContents([\n            1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5)\n        ]),\n        productContents([1]),\n        productContents([1])\n    ];\n    const fact = [\n        allRuneExpAdditiveMultiplier,\n        allRuneExpMultiplier,\n        recycleMultiplier,\n        runeExpMultiplier[runeIndex]\n    ];\n    return returnFactors ? fact : productContents(fact);\n}\nexport const lookupTableGen = (runeLevel) => {\n    const allRuneExpRequiredMultiplier = productContents([\n        Math.pow((runeLevel + 1) / 2, 3),\n        ((3.5 * runeLevel) + 100) / 500,\n        Math.max(1, (runeLevel - 200) / 9),\n        Math.max(1, (runeLevel - 400) / 12),\n        Math.max(1, (runeLevel - 600) / 15),\n        Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\n    ]);\n    return allRuneExpRequiredMultiplier;\n};\nlet lookupTableRuneExp = null;\nexport const calculateRuneExpToLevel = (runeIndex, runeLevel = player.runelevels[runeIndex]) => {\n    lookupTableRuneExp !== null && lookupTableRuneExp !== void 0 ? lookupTableRuneExp : (lookupTableRuneExp = Array.from({ length: 40000 }, (_, i) => lookupTableGen(i)));\n    let multiplier = lookupTableRuneExp[runeLevel];\n    if (runeIndex === 5) {\n        multiplier = Math.pow(10, runeLevel);\n    }\n    if (runeIndex === 6) {\n        multiplier = Math.pow(1e25, runeLevel);\n    }\n    return multiplier * G['runeexpbase'][runeIndex];\n};\nexport const calculateMaxRunes = (i) => {\n    let max = 1000;\n    const increaseAll = 10 * (2 * player.cubeUpgrades[16] + 2 * player.cubeUpgrades[37])\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50]);\n    const increaseMaxLevel = [\n        null,\n        10 * (player.researches[78] + player.researches[111]) + increaseAll,\n        10 * (player.researches[80] + player.researches[112]) + increaseAll,\n        10 * (player.researches[79] + player.researches[113]) + increaseAll,\n        10 * (player.researches[77] + player.researches[114]) + increaseAll,\n        10 * player.researches[115] + increaseAll,\n        -925,\n        -998\n    ];\n    max += increaseMaxLevel[i];\n    return max;\n};\nexport function calculateOfferings(input, calcMult = true, statistic = false) {\n    if (input == \"acceleratorBoost\" || input == \"ascension\" || input == \"ascensionChallenge\") {\n        return 0;\n    }\n    let q = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\n        a += 3;\n        if (player.achievements[52] > 0.5) {\n            a += (25 * Math.min(player.reincarnationcounter / 1800, 1));\n        }\n        if (player.upgrades[62] > 0.5) {\n            a += 1 / 50 * (sumContents(player.challengecompletions));\n        }\n        a += 0.6 * player.researches[25];\n        if (player.researches[95] === 1) {\n            a += 4;\n        }\n        a += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\n        a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4);\n        a *= Math.min(Math.pow(player.reincarnationcounter / 10, 2), 1);\n        if (player.reincarnationcounter >= 5) {\n            a *= Math.max(1, player.reincarnationcounter / 10);\n        }\n    }\n    if (input == \"transcension\" || input == \"transcensionChallenge\" || input == \"reincarnation\" ||\n        input == \"reincarnationChallenge\") {\n        b += 2;\n        if (player.reincarnationCount > 0) {\n            b += 2;\n        }\n        if (player.achievements[44] > 0.5) {\n            b += (15 * Math.min(player.transcendcounter / 1800, 1));\n        }\n        if (player.challengecompletions[2] > 0) {\n            b += 1;\n        }\n        b += 0.2 * player.researches[24];\n        b += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\n        b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5);\n        b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25);\n        b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1);\n        if (player.transcendCount >= 5) {\n            b *= Math.max(1, player.transcendcounter / 10);\n        }\n    }\n    c += 1;\n    if (player.transcendCount > 0 || player.reincarnationCount > 0) {\n        c += 1;\n    }\n    if (player.reincarnationCount > 0) {\n        c += 2;\n    }\n    if (player.achievements[37] > 0.5) {\n        c += (15 * Math.min(player.prestigecounter / 1800, 1));\n    }\n    if (player.challengecompletions[2] > 0) {\n        c += 1;\n    }\n    c += 0.2 * player.researches[24];\n    c += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\n    c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5);\n    c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50);\n    c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1);\n    if (player.prestigeCount >= 5) {\n        c *= Math.max(1, player.prestigecounter / 10);\n    }\n    q = a + b + c;\n    const arr = [\n        1 + 10 * player.achievements[33] / 100,\n        1 + 15 * player.achievements[34] / 100,\n        1 + 25 * player.achievements[35] / 100,\n        1 + 20 * player.upgrades[38] / 100,\n        1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)),\n        1 + 1 / 50 * player.shopUpgrades.offeringAuto,\n        1 + 1 / 25 * player.shopUpgrades.offeringEX,\n        1 + 1 / 100 * player.shopUpgrades.cashGrab,\n        1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85],\n        1 + Math.pow((player.antUpgrades[6 - 1] + G['bonusant6']), .66),\n        G['cubeBonusMultiplier'][3],\n        1 + 0.02 * player.constantUpgrades[3],\n        1 + 0.0003 * player.talismanLevels[3 - 1] * player.researches[149] + 0.0004 * player.talismanLevels[3 - 1] * player.researches[179],\n        1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]),\n        1 + 0.01 / 100 * player.researches[200],\n        1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187],\n        1 + .6 * player.achievements[250] + 1 * player.achievements[251],\n        1 + 0.05 * player.cubeUpgrades[46],\n        1 + 0.02 / 100 * player.cubeUpgrades[50],\n        1 + player.platonicUpgrades[5],\n        1 + 2.5 * player.platonicUpgrades[10],\n        1 + 5 * player.platonicUpgrades[15],\n        G['challenge15Rewards'].offering,\n    ];\n    if (calcMult) {\n        q *= productContents(arr);\n    }\n    else if (!calcMult) {\n        return arr;\n    }\n    if (statistic) {\n        return productContents(arr);\n    }\n    q = Math.floor(q) * 100 / 100;\n    let persecond = 0;\n    if (input === \"prestige\") {\n        persecond = q / (1 + player.prestigecounter);\n    }\n    if (input === \"transcension\" || input == \"transcensionChallenge\") {\n        persecond = q / (1 + player.transcendcounter);\n    }\n    if (input === \"reincarnation\" || input == \"reincarnationChallenge\") {\n        persecond = q / (1 + player.reincarnationcounter);\n    }\n    if (persecond > player.offeringpersecond) {\n        player.offeringpersecond = persecond;\n    }\n    return q;\n}\nexport const calculateObtainium = () => {\n    G['obtainiumGain'] = 1;\n    if (player.upgrades[69] > 0) {\n        G['obtainiumGain'] *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5)).toNumber());\n    }\n    if (player.upgrades[72] > 0) {\n        G['obtainiumGain'] *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]));\n    }\n    if (player.upgrades[74] > 0) {\n        G['obtainiumGain'] *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)));\n    }\n    G['obtainiumGain'] *= (1 + player.researches[65] / 5);\n    G['obtainiumGain'] *= (1 + player.researches[76] / 10);\n    G['obtainiumGain'] *= (1 + player.researches[81] / 10);\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.obtainiumAuto / 50);\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.cashGrab / 100);\n    G['obtainiumGain'] *= (1 + G['rune5level'] / 200 * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)));\n    G['obtainiumGain'] *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07 * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15 * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147]);\n    G['obtainiumGain'] *= (1 + 2 * Math.pow((player.antUpgrades[10 - 1] + G['bonusant10']) / 50, 2 / 3));\n    G['obtainiumGain'] *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6));\n    G['obtainiumGain'] *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251]);\n    G['obtainiumGain'] *= G['cubeBonusMultiplier'][5];\n    G['obtainiumGain'] *= (1 + 0.04 * player.constantUpgrades[4]);\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[47]);\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[3]);\n    G['obtainiumGain'] *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]));\n    G['obtainiumGain'] *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][4]);\n    G['obtainiumGain'] *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144]);\n    G['obtainiumGain'] *= (1 + 0.02 / 100 * player.cubeUpgrades[50]);\n    if (player.achievements[53] > 0) {\n        G['obtainiumGain'] *= (1 + 1 / 800 * (G['runeSum']));\n    }\n    if (player.achievements[128]) {\n        G['obtainiumGain'] *= 1.5;\n    }\n    if (player.achievements[129]) {\n        G['obtainiumGain'] *= 1.25;\n    }\n    if (player.achievements[51] > 0) {\n        G['obtainiumGain'] += 4;\n    }\n    if (player.reincarnationcounter >= 2) {\n        G['obtainiumGain'] += 1 * player.researches[63];\n    }\n    if (player.reincarnationcounter >= 5) {\n        G['obtainiumGain'] += 2 * player.researches[64];\n    }\n    G['obtainiumGain'] *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2));\n    G['obtainiumGain'] *= (1 + 1 / 25 * player.shopUpgrades.obtainiumEX);\n    if (player.reincarnationCount >= 5) {\n        G['obtainiumGain'] *= Math.max(1, player.reincarnationcounter / 10);\n    }\n    G['obtainiumGain'] *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2);\n    G['obtainiumGain'] = Math.pow(G['obtainiumGain'], Math.min(1, G['illiteracyPower'][player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log(player.researchPoints + 10) / Math.log(10)))));\n    G['obtainiumGain'] *= (1 + 4 / 100 * player.cubeUpgrades[42]);\n    G['obtainiumGain'] *= (1 + 3 / 100 * player.cubeUpgrades[43]);\n    G['obtainiumGain'] *= (1 + player.platonicUpgrades[5]);\n    G['obtainiumGain'] *= (1 + 1.5 * player.platonicUpgrades[9]);\n    G['obtainiumGain'] *= (1 + 2.5 * player.platonicUpgrades[10]);\n    G['obtainiumGain'] *= (1 + 5 * player.platonicUpgrades[15]);\n    G['obtainiumGain'] *= G['challenge15Rewards'].obtainium;\n    if (player.currentChallenge.ascension === 15) {\n        G['obtainiumGain'] += 1;\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['obtainiumGain'] = 0;\n    }\n    player.obtainiumpersecond = G['obtainiumGain'] / (0.1 + player.reincarnationcounter);\n    player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond);\n};\nexport const calculateAutomaticObtainium = () => {\n    return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5);\n};\nexport const calculateTalismanEffects = () => {\n    let positiveBonus = 0;\n    let negativeBonus = 0;\n    if (player.achievements[135] === 1) {\n        positiveBonus += 0.02;\n    }\n    if (player.achievements[136] === 1) {\n        positiveBonus += 0.02;\n    }\n    positiveBonus += 0.02 * (player.talismanRarity[4 - 1] - 1);\n    positiveBonus += 1.2 * player.researches[106] / 100;\n    positiveBonus += 1.2 * player.researches[107] / 100;\n    positiveBonus += 1.2 * player.researches[116] / 200;\n    positiveBonus += 1.2 * player.researches[117] / 200;\n    positiveBonus += (G['cubeBonusMultiplier'][9] - 1);\n    positiveBonus += 0.0004 * player.cubeUpgrades[50];\n    negativeBonus += 0.06 * player.researches[118];\n    negativeBonus += 0.0004 * player.cubeUpgrades[50];\n    for (let i = 1; i <= 5; i++) {\n        if (player.talismanOne[i] === (1)) {\n            G['talisman1Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[1 - 1]] + positiveBonus) * player.talismanLevels[1 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman1Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[1 - 1]] - negativeBonus) * player.talismanLevels[1 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanTwo[i] === (1)) {\n            G['talisman2Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[2 - 1]] + positiveBonus) * player.talismanLevels[2 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman2Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[2 - 1]] - negativeBonus) * player.talismanLevels[2 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanThree[i] === (1)) {\n            G['talisman3Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[3 - 1]] + positiveBonus) * player.talismanLevels[3 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman3Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[3 - 1]] - negativeBonus) * player.talismanLevels[3 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanFour[i] === (1)) {\n            G['talisman4Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[4 - 1]] + positiveBonus) * player.talismanLevels[4 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman4Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[4 - 1]] - negativeBonus) * player.talismanLevels[4 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanFive[i] === (1)) {\n            G['talisman5Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[5 - 1]] + positiveBonus) * player.talismanLevels[5 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman5Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[5 - 1]] - negativeBonus) * player.talismanLevels[5 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanSix[i] === (1)) {\n            G['talisman6Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[6 - 1]] + positiveBonus) * player.talismanLevels[6 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman6Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[6 - 1]] - negativeBonus) * player.talismanLevels[6 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n        if (player.talismanSeven[i] === (1)) {\n            G['talisman7Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[7 - 1]] + positiveBonus) * player.talismanLevels[7 - 1] * G['challenge15Rewards'].talismanBonus;\n        }\n        else {\n            G['talisman7Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[7 - 1]] - negativeBonus) * player.talismanLevels[7 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\n        }\n    }\n    const talismansEffects = [G['talisman1Effect'], G['talisman2Effect'], G['talisman3Effect'], G['talisman4Effect'], G['talisman5Effect'], G['talisman6Effect'], G['talisman7Effect']];\n    const runesTalisman = [0, 0, 0, 0, 0, 0];\n    talismansEffects.forEach((talismanEffect) => {\n        talismanEffect.forEach((levels, runeNumber) => {\n            runesTalisman[runeNumber] += levels;\n        });\n    });\n    [, G['rune1Talisman'], G['rune2Talisman'], G['rune3Talisman'], G['rune4Talisman'], G['rune5Talisman']] = runesTalisman;\n    G['talisman6Power'] = 0;\n    G['talisman7Quarks'] = 0;\n    if (player.talismanRarity[1 - 1] === 6) {\n        G['rune2Talisman'] += 400;\n    }\n    if (player.talismanRarity[2 - 1] === 6) {\n        G['rune1Talisman'] += 400;\n    }\n    if (player.talismanRarity[3 - 1] === 6) {\n        G['rune4Talisman'] += 400;\n    }\n    if (player.talismanRarity[4 - 1] === 6) {\n        G['rune3Talisman'] += 400;\n    }\n    if (player.talismanRarity[5 - 1] === 6) {\n        G['rune5Talisman'] += 400;\n    }\n    if (player.talismanRarity[6 - 1] === 6) {\n        G['talisman6Power'] = 2.5;\n    }\n    if (player.talismanRarity[7 - 1] === 6) {\n        G['talisman7Quarks'] = 2;\n    }\n};\nexport const calculateRuneLevels = () => {\n    calculateTalismanEffects();\n    if (player.currentChallenge.reincarnation !== 9) {\n        G['rune1level'] = Math.max(1, player.runelevels[0] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune1Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune2level'] = Math.max(1, player.runelevels[1] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune2Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune3level'] = Math.max(1, player.runelevels[2] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune3Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune4level'] = Math.max(1, player.runelevels[3] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune4Talisman']) + 7 * player.constantUpgrades[7]);\n        G['rune5level'] = Math.max(1, player.runelevels[4] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune5Talisman']) + 7 * player.constantUpgrades[7]);\n    }\n    G['runeSum'] = sumContents([G['rune1level'], G['rune2level'], G['rune3level'], G['rune4level'], G['rune5level']]);\n    calculateRuneBonuses();\n};\nexport const calculateRuneBonuses = () => {\n    G['blessingMultiplier'] = 1;\n    G['spiritMultiplier'] = 1;\n    G['blessingMultiplier'] *= (1 + 6.9 * player.researches[134] / 100);\n    G['blessingMultiplier'] *= (1 + (player.talismanRarity[3 - 1] - 1) / 10);\n    G['blessingMultiplier'] *= (1 + 0.10 * Math.log(player.epicFragments + 1) / Math.log(10) * player.researches[174]);\n    G['blessingMultiplier'] *= (1 + 2 * player.researches[194] / 100);\n    if (player.researches[160] > 0) {\n        G['blessingMultiplier'] *= Math.pow(1.25, 8);\n    }\n    G['spiritMultiplier'] *= (1 + 8 * player.researches[164] / 100);\n    if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\n        G['spiritMultiplier'] *= Math.pow(2, 8);\n    }\n    G['spiritMultiplier'] *= (1 + 0.15 * Math.log(player.legendaryFragments + 1) / Math.log(10) * player.researches[189]);\n    G['spiritMultiplier'] *= (1 + 2 * player.researches[194] / 100);\n    G['spiritMultiplier'] *= (1 + (player.talismanRarity[5 - 1] - 1) / 100);\n    for (let i = 1; i <= 5; i++) {\n        G['runeBlessings'][i] = G['blessingMultiplier'] * player.runelevels[i - 1] * player.runeBlessingLevels[i];\n        G['runeSpirits'][i] = G['spiritMultiplier'] * player.runelevels[i - 1] * player.runeSpiritLevels[i];\n    }\n    for (let i = 1; i <= 5; i++) {\n        if (G['runeBlessings'][i] <= 1e30) {\n            G['effectiveRuneBlessingPower'][i] = (Math.pow(G['runeBlessings'][i], 1 / 8)) / 75 * G['challenge15Rewards'].blessingBonus;\n        }\n        else if (G['runeBlessings'][i] > 1e30) {\n            G['effectiveRuneBlessingPower'][i] = Math.pow(10, 5 / 2) * (Math.pow(G['runeBlessings'][i], 1 / 24)) / 75 * G['challenge15Rewards'].blessingBonus;\n        }\n        if (G['runeSpirits'][i] <= 1e25) {\n            G['effectiveRuneSpiritPower'][i] = (Math.pow(G['runeSpirits'][i], 1 / 8)) / 75 * G['challenge15Rewards'].spiritBonus;\n        }\n        else if (G['runeSpirits'][i] > 1e25) {\n            G['effectiveRuneSpiritPower'][i] = Math.pow(10, 25 / 12) * (Math.pow(G['runeSpirits'][i], 1 / 24)) / 75 * G['challenge15Rewards'].spiritBonus;\n        }\n    }\n};\nexport const calculateAnts = () => {\n    let bonusLevels = 0;\n    bonusLevels += 2 * (player.talismanRarity[6 - 1] - 1);\n    bonusLevels += CalcECC('reincarnation', player.challengecompletions[9]);\n    bonusLevels += 2 * player.constantUpgrades[6];\n    bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11]);\n    bonusLevels += Math.floor(1 / 200 * player.researches[200]);\n    bonusLevels *= G['challenge15Rewards'].bonusAntLevel;\n    let c11 = 0;\n    let c11bonus = 0;\n    if (player.currentChallenge.ascension === 11) {\n        c11 = 999;\n    }\n    if (player.currentChallenge.ascension === 11) {\n        c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)));\n    }\n    G['bonusant1'] = Math.min(player.antUpgrades[1 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant2'] = Math.min(player.antUpgrades[2 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant3'] = Math.min(player.antUpgrades[3 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant4'] = Math.min(player.antUpgrades[4 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant5'] = Math.min(player.antUpgrades[5 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant6'] = Math.min(player.antUpgrades[6 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant7'] = Math.min(player.antUpgrades[7 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant8'] = Math.min(player.antUpgrades[8 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant9'] = Math.min(player.antUpgrades[9 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant10'] = Math.min(player.antUpgrades[10 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant11'] = Math.min(player.antUpgrades[11 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n    G['bonusant12'] = Math.min(player.antUpgrades[12 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\n};\nexport const calculateAntSacrificeELO = () => {\n    G['antELO'] = 0;\n    G['effectiveELO'] = 0;\n    const antUpgradeSum = sumContents(player.antUpgrades);\n    if (player.antPoints.gte(\"1e40\")) {\n        G['antELO'] += Decimal.log(player.antPoints, 10);\n        G['antELO'] += 1 / 2 * antUpgradeSum;\n        G['antELO'] += 1 / 10 * player.firstOwnedAnts;\n        G['antELO'] += 1 / 5 * player.secondOwnedAnts;\n        G['antELO'] += 1 / 3 * player.thirdOwnedAnts;\n        G['antELO'] += 1 / 2 * player.fourthOwnedAnts;\n        G['antELO'] += player.fifthOwnedAnts;\n        G['antELO'] += 2 * player.sixthOwnedAnts;\n        G['antELO'] += 4 * player.seventhOwnedAnts;\n        G['antELO'] += 8 * player.eighthOwnedAnts;\n        G['antELO'] += 666 * player.researches[178];\n        if (player.achievements[180] === 1) {\n            G['antELO'] *= 1.01;\n        }\n        if (player.achievements[181] === 1) {\n            G['antELO'] *= 1.03 / 1.01;\n        }\n        if (player.achievements[182] === 1) {\n            G['antELO'] *= 1.06 / 1.03;\n        }\n        G['antELO'] *= (1 + player.researches[110] / 100);\n        G['antELO'] *= (1 + 2.5 * player.researches[148] / 100);\n        if (player.achievements[176] === 1) {\n            G['antELO'] += 25;\n        }\n        if (player.achievements[177] === 1) {\n            G['antELO'] += 50;\n        }\n        if (player.achievements[178] === 1) {\n            G['antELO'] += 75;\n        }\n        if (player.achievements[179] === 1) {\n            G['antELO'] += 100;\n        }\n        G['antELO'] += 25 * player.researches[108];\n        G['antELO'] += 25 * player.researches[109];\n        G['antELO'] += 40 * player.researches[123];\n        G['antELO'] += 100 * CalcECC('reincarnation', player.challengecompletions[10]);\n        G['antELO'] += 75 * player.upgrades[80];\n        G['antELO'] = 1 / 10 * Math.floor(10 * G['antELO']);\n        G['effectiveELO'] += 0.5 * Math.min(3500, G['antELO']);\n        G['effectiveELO'] += 0.1 * Math.min(4000, G['antELO']);\n        G['effectiveELO'] += 0.1 * Math.min(6000, G['antELO']);\n        G['effectiveELO'] += 0.1 * Math.min(10000, G['antELO']);\n        G['effectiveELO'] += 0.2 * G['antELO'];\n        G['effectiveELO'] += (G['cubeBonusMultiplier'][8] - 1);\n        G['effectiveELO'] += 1 * player.cubeUpgrades[50];\n        G['effectiveELO'] *= (1 + 0.03 * player.upgrades[124]);\n    }\n};\nconst calculateAntSacrificeMultipliers = () => {\n    G['timeMultiplier'] = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2));\n    if (player.achievements[177] === 0) {\n        G['timeMultiplier'] *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10));\n    }\n    if (player.achievements[177] > 0) {\n        G['timeMultiplier'] *= Math.max(1, player.antSacrificeTimer / 10);\n    }\n    G['upgradeMultiplier'] = 1;\n    G['upgradeMultiplier'] *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11 - 1] + G['bonusant11']) / 125)));\n    G['upgradeMultiplier'] *= (1 + player.researches[103] / 20);\n    G['upgradeMultiplier'] *= (1 + player.researches[104] / 20);\n    if (player.achievements[132] === 1) {\n        G['upgradeMultiplier'] *= 1.25;\n    }\n    if (player.achievements[137] === 1) {\n        G['upgradeMultiplier'] *= 1.25;\n    }\n    G['upgradeMultiplier'] *= (1 + 6.66 * G['effectiveRuneBlessingPower'][3]);\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]));\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * player.researches[122]);\n    G['upgradeMultiplier'] *= (1 + 3 / 100 * player.researches[133]);\n    G['upgradeMultiplier'] *= (1 + 2 / 100 * player.researches[163]);\n    G['upgradeMultiplier'] *= (1 + 1 / 100 * player.researches[193]);\n    G['upgradeMultiplier'] *= (1 + 1 / 10 * player.upgrades[79]);\n    G['upgradeMultiplier'] *= (1 + 0.09 * player.upgrades[40]);\n    G['upgradeMultiplier'] *= G['cubeBonusMultiplier'][7];\n};\nexport const calculateAntSacrificeRewards = () => {\n    calculateAntSacrificeELO();\n    calculateAntSacrificeMultipliers();\n    const rewardsMult = G['timeMultiplier'] * G['upgradeMultiplier'];\n    const rewards = {\n        antSacrificePoints: G['effectiveELO'] * rewardsMult / 85,\n        offerings: player.offeringpersecond * 0.15 * G['effectiveELO'] * rewardsMult / 180,\n        obtainium: player.maxobtainiumpersecond * 0.24 * G['effectiveELO'] * rewardsMult / 180,\n        talismanShards: (G['antELO'] > 500)\n            ? Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G['effectiveELO'] - 500)), 2)))\n            : 0,\n        commonFragments: (G['antELO'] > 750)\n            ? Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G['effectiveELO'] - 750)), 1.83)))\n            : 0,\n        uncommonFragments: (G['antELO'] > 1000)\n            ? Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G['effectiveELO'] - 1000)), 1.66)))\n            : 0,\n        rareFragments: (G['antELO'] > 1500)\n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G['effectiveELO'] - 1500)), 1.50)))\n            : 0,\n        epicFragments: (G['antELO'] > 2000)\n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G['effectiveELO'] - 2000)), 1.33)))\n            : 0,\n        legendaryFragments: (G['antELO'] > 3000)\n            ? Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G['effectiveELO'] - 3000)), 1.16)))\n            : 0,\n        mythicalFragments: (G['antELO'] > 5000)\n            ? Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G['effectiveELO'] - 4150)), 1)))\n            : 0\n    };\n    return rewards;\n};\nexport const calculateOffline = (forceTime = 0) => {\n    G['timeWarp'] = true;\n    const maximumTimer = 86400 + 7200 * player.researches[31] + 7200 * player.researches[32];\n    const updatedTime = Date.now();\n    const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000));\n    document.getElementById(\"offlineTimer\").textContent = \"You have \" + format(timeAdd, 0) + \" real-life seconds of Offline Progress!\";\n    let simulatedTicks = (timeAdd > 1000) ? 200 : 1 + Math.floor(timeAdd / 5);\n    const tickValue = (timeAdd > 1000) ? timeAdd / 200 : Math.min(5, timeAdd);\n    let timeMultiplier = 1;\n    const maxSimulatedTicks = simulatedTicks;\n    let progressBarWidth = 0;\n    let automaticObtainium = 0;\n    toggleTalismanBuy(player.buyTalismanShardPercent);\n    updateTalismanInventory();\n    player.quarkstimer += timeAdd;\n    player.quarkstimer = Math.min(quarkHandler().maxTime, player.quarkstimer);\n    player.ascensionCounter += timeAdd;\n    player.runeshards += timeAdd * (1 / 2 * Math.min(1, player.highestchallengecompletions[2]) + player.cubeUpgrades[2]);\n    document.getElementById('preload').style.display = (forceTime > 0) ? 'none' : 'block';\n    document.getElementById(\"offlineprogressbar\").style.display = \"block\";\n    player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick;\n    const runOffline = interval(runSimulator, 0);\n    function runSimulator() {\n        timeMultiplier = calculateTimeAcceleration();\n        calculateObtainium();\n        player.prestigecounter += tickValue * timeMultiplier;\n        player.transcendcounter += tickValue * timeMultiplier;\n        player.reincarnationcounter += tickValue * timeMultiplier;\n        resourceGain(tickValue * G['timeMultiplier']);\n        if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14) {\n            calculateObtainium();\n            automaticObtainium = calculateAutomaticObtainium();\n            player.researchPoints += tickValue * timeMultiplier * automaticObtainium;\n        }\n        if (player.achievements[173] > 0) {\n            player.antSacrificeTimer += tickValue * timeMultiplier;\n            player.antSacrificeTimerReal += tickValue;\n        }\n        if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\n            player.sacrificeTimer += tickValue;\n            if (player.sacrificeTimer >= 1) {\n                const rune = player.autoSacrifice;\n                redeemShards(rune, true);\n                player.sacrificeTimer = player.sacrificeTimer % 1;\n            }\n        }\n        updateAll();\n        simulatedTicks -= 1;\n        progressBarWidth = 750 * (1 - simulatedTicks / maxSimulatedTicks);\n        document.getElementById(\"offlineprogressdone\").style.width = progressBarWidth + \"px\";\n        if (simulatedTicks < 1) {\n            clearInt(runOffline);\n            G['timeWarp'] = false;\n            document.getElementById(\"offlineprogressbar\").style.display = \"none\";\n            document.getElementById(\"preload\").style.display = \"none\";\n        }\n    }\n    player.offlinetick = updatedTime;\n    if (!player.loadedNov13Vers) {\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\n            const ascCount = player.ascensionCount;\n            reset(\"ascensionChallenge\");\n            player.ascensionCount = (ascCount + 1);\n        }\n        player.loadedNov13Vers = true;\n    }\n    saveSynergy();\n    updateTalismanInventory();\n    calculateObtainium();\n    calculateAnts();\n    calculateRuneLevels();\n};\nexport const calculateSigmoid = (constant, factor, divisor) => {\n    return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))));\n};\nexport const calculateSigmoidExponential = (constant, coefficient) => {\n    return (1 + (constant - 1) * (1 - Math.exp(-coefficient)));\n};\nexport const calculateCubeBlessings = () => {\n    const cubeArray = [player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed];\n    const powerBonus = [player.cubeUpgrades[45] / 100, player.cubeUpgrades[35] / 100, player.cubeUpgrades[24] / 100, player.cubeUpgrades[14] / 100, player.cubeUpgrades[40] / 100, player.cubeUpgrades[22] / 40, player.cubeUpgrades[15] / 100, player.cubeUpgrades[25] / 100, player.cubeUpgrades[44] / 100, player.cubeUpgrades[34] / 100];\n    for (let i = 1; i <= 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (cubeArray[i - 1] >= 1000) {\n            power = G['blessingDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['blessingDRPower'][i]) * (1 + powerBonus[i - 1]));\n        }\n        if (i === 6) {\n            power = 2.25;\n            mult = 1;\n        }\n        G['cubeBonusMultiplier'][i] = 1 + mult * G['blessingbase'][i] * Math.pow(cubeArray[i - 1], power * (1 + powerBonus[i - 1])) * G['tesseractBonusMultiplier'][i];\n    }\n    calculateRuneLevels();\n    calculateAntSacrificeELO();\n    calculateObtainium();\n};\nexport function calculateCubeMultiplier(calcMult = true) {\n    const arr = [\n        Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\n        1 + 3 / 200 * player.shopUpgrades.seasonPass,\n        1 + player.researches[119] / 400,\n        1 + player.researches[120] / 400,\n        1 + 14 * player.cubeUpgrades[1] / 100,\n        1 + 7 * player.cubeUpgrades[11] / 100,\n        1 + 7 * player.cubeUpgrades[21] / 100,\n        1 + 7 * player.cubeUpgrades[31] / 100,\n        1 + 7 * player.cubeUpgrades[41] / 100,\n        1 + player.researches[137] / 100,\n        1 + 0.9 * player.researches[152] / 100,\n        1 + 0.8 * player.researches[167] / 100,\n        1 + 0.7 * player.researches[182] / 100,\n        1 + 0.6 * player.researches[197] / 100,\n        1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\n        1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12 - 1],\n        1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][2],\n        1 + 0.004 / 100 * player.researches[200],\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\n        1 + 0.25 * player.cubeUpgrades[30],\n        1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\n        1 + player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400,\n        1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\n        1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(calculateTimeAcceleration() + 0.01) / Math.log(10)),\n        1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\n        G['platonicBonusMultiplier'][0],\n        G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4,\n    ];\n    if (calcMult) {\n        return productContents(arr);\n    }\n    else {\n        return arr;\n    }\n}\nexport const calculateTimeAcceleration = () => {\n    let timeMult = 1;\n    timeMult *= (1 + 1 / 300 * Math.log(player.maxobtainium + 1) / Math.log(10) * player.upgrades[70]);\n    timeMult *= (1 + player.researches[121] / 50);\n    timeMult *= (1 + 0.015 * player.researches[136]);\n    timeMult *= (1 + 0.012 * player.researches[151]);\n    timeMult *= (1 + 0.009 * player.researches[166]);\n    timeMult *= (1 + 0.006 * player.researches[181]);\n    timeMult *= (1 + 0.003 * player.researches[196]);\n    timeMult *= (1 + 8 * G['effectiveRuneBlessingPower'][1]);\n    timeMult *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][1]);\n    timeMult *= G['cubeBonusMultiplier'][10];\n    timeMult *= 1 + player.cubeUpgrades[18] / 5;\n    timeMult *= calculateSigmoid(2, player.antUpgrades[12 - 1] + G['bonusant12'], 69);\n    timeMult *= (1 + 0.10 * (player.talismanRarity[2 - 1] - 1));\n    timeMult *= G['challenge15Rewards'].globalSpeed;\n    timeMult *= G['lazinessMultiplier'][player.usedCorruptions[3]];\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\n        timeMult *= 1000;\n    }\n    if (timeMult > 100) {\n        timeMult = 10 * Math.sqrt(timeMult);\n    }\n    if (timeMult < 1) {\n        timeMult = Math.pow(timeMult, 1 - player.platonicUpgrades[7] / 30);\n    }\n    timeMult *= G['platonicBonusMultiplier'][7];\n    if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\n        achievementaward(241);\n    }\n    if (timeMult > 3600 && player.achievements[242] < 1) {\n        achievementaward(242);\n    }\n    return (timeMult);\n};\nexport const calculateCorruptionPoints = () => {\n    let basePoints = 400;\n    for (let i = 1; i <= 9; i++) {\n        basePoints += 16 * Math.pow(player.usedCorruptions[i], 2);\n    }\n    return (basePoints);\n};\nexport const calculateSummationLinear = (baseLevel, baseCost, resourceAvailable, differenceCap = 1e9) => {\n    const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2;\n    const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)));\n    const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost;\n    return [buyToLevel, realCost];\n};\nexport const calculateSummationNonLinear = (baseLevel, baseCost, resourceAvailable, diffPerLevel, buyAmount) => {\n    const c = diffPerLevel / 2;\n    resourceAvailable = resourceAvailable || 0;\n    const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c));\n    resourceAvailable += alreadySpent;\n    const v = resourceAvailable / baseCost;\n    let buyToLevel = c > 0\n        ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\n        : Math.floor(v);\n    buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel);\n    let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent;\n    if (buyToLevel == baseLevel) {\n        totalCost = baseCost * (1 + 2 * c * baseLevel);\n    }\n    return [buyToLevel, totalCost];\n};\nexport const CalcCorruptionStuff = () => {\n    const corruptionArrayMultiplier = [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10];\n    const corruptionLevelSum = sumContents(player.usedCorruptions);\n    let cubeBank = 0;\n    let challengeModifier = 1;\n    let corruptionMultiplier = 1;\n    let bankMultiplier = 1;\n    let effectiveScore = 1;\n    const speed = calculateTimeAcceleration();\n    for (let i = 1; i <= 10; i++) {\n        challengeModifier = (i >= 6) ? 2 : 1;\n        cubeBank += challengeModifier * player.highestchallengecompletions[i];\n    }\n    let baseScore = 0;\n    const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\n    const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\n    const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    for (let i = 1; i <= 10; i++) {\n        baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i];\n        if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75);\n            if (player.highestchallengecompletions[i] >= 750) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750);\n            }\n        }\n        if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25);\n            if (player.highestchallengecompletions[i] >= 60) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60);\n            }\n        }\n    }\n    baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10] + player.platonicUpgrades[15]), player.highestchallengecompletions[10]);\n    for (let i = 1; i <= 10; i++) {\n        corruptionMultiplier *= corruptionArrayMultiplier[player.usedCorruptions[i]];\n    }\n    effectiveScore = baseScore * corruptionMultiplier * G['challenge15Rewards'].score * G['platonicBonusMultiplier'][6];\n    if (player.achievements[267] > 0)\n        effectiveScore *= (1 + Math.min(1, 1 / 100000 * Decimal.log(player.ascendShards.add(1), 10)));\n    bankMultiplier = Math.pow(effectiveScore / 3000, 1 / 4.1);\n    let cubeGain = cubeBank * bankMultiplier;\n    cubeGain *= calculateCubeMultiplier();\n    cubeGain *= (1 + 0.000075 * corruptionLevelSum * player.platonicUpgrades[1]);\n    if (effectiveScore > 5e12 && player.platonicUpgrades[10] > 0) {\n        cubeGain *= 2;\n    }\n    if (effectiveScore > 25e12 && player.platonicUpgrades[15] > 0) {\n        cubeGain *= 2.25;\n    }\n    if (player.shopUpgrades.infiniteAscent)\n        cubeGain *= 1 + 1.5 / 75 * player.runelevels[5];\n    if (player.achievements[254] > 0)\n        cubeGain *= (1 + 1 / 100 * Math.log10(effectiveScore + 1));\n    let tesseractGain = 1;\n    tesseractGain *= 2.25;\n    tesseractGain *= Math.pow(1 + Math.max(0, (effectiveScore - 1e5)) / 1e4, .35);\n    tesseractGain *= (1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]));\n    if (effectiveScore >= 100000) {\n        tesseractGain += 2;\n    }\n    tesseractGain *= (1 + 0.25 * player.cubeUpgrades[30]);\n    tesseractGain *= (1 + 1 / 200 * player.cubeUpgrades[38] * sumContents(player.usedCorruptions));\n    tesseractGain *= (1 + player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400);\n    tesseractGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    tesseractGain *= (1 + 0.00015 * corruptionLevelSum * player.platonicUpgrades[2]);\n    if (effectiveScore > 7.5e12 && player.platonicUpgrades[10] > 0) {\n        tesseractGain *= 2;\n    }\n    if (effectiveScore > 50e12 && player.platonicUpgrades[15] > 0) {\n        tesseractGain *= 2.25;\n    }\n    tesseractGain *= G['platonicBonusMultiplier'][1];\n    tesseractGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    tesseractGain *= (1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8));\n    tesseractGain *= (1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208]);\n    tesseractGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\n    tesseractGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\n    tesseractGain *= (1 + 3 / 200 * player.shopUpgrades.seasonPass);\n    if (player.shopUpgrades.infiniteAscent)\n        tesseractGain *= 1 + 1.5 / 75 * player.runelevels[5];\n    if (player.achievements[255] > 0)\n        tesseractGain *= (1 + 1 / 100 * Math.log10(effectiveScore + 1));\n    let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0;\n    hypercubeGain *= Math.pow(1 + Math.max(0, (effectiveScore - 1e9)) / 1e8, .5);\n    hypercubeGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    hypercubeGain *= (1 + 0.00045 * corruptionLevelSum * player.platonicUpgrades[3]);\n    if (effectiveScore > 10e12 && player.platonicUpgrades[10] > 0) {\n        hypercubeGain *= 2;\n    }\n    if (effectiveScore > 100e12 && player.platonicUpgrades[15] > 0) {\n        hypercubeGain *= 2.25;\n    }\n    hypercubeGain *= G['platonicBonusMultiplier'][2];\n    hypercubeGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    hypercubeGain *= (1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9));\n    hypercubeGain *= (1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215]);\n    hypercubeGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\n    hypercubeGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\n    hypercubeGain *= (1 + 1 / 100 * player.shopUpgrades.seasonPass2);\n    if (player.shopUpgrades.infiniteAscent)\n        hypercubeGain *= 1 + 1.5 / 75 * player.runelevels[5];\n    hypercubeGain *= (1 + 1 / 1000 * hepteractEffective('hyperrealism'));\n    if (player.achievements[253] > 0)\n        hypercubeGain *= 1.1;\n    if (player.achievements[256] > 0)\n        hypercubeGain *= (1 + 1 / 100 * Math.log10(effectiveScore + 1));\n    if (player.achievements[265] > 0)\n        hypercubeGain *= (1 + Math.min(2, player.ascensionCount / 2.5e10));\n    let platonicGain = (effectiveScore >= 1.337e12) ? 1 : 0;\n    platonicGain *= Math.pow(1 + Math.max(0, effectiveScore - 1.337e12) / 1.337e11, .75);\n    platonicGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    if (effectiveScore > 2.5e12) {\n        platonicGain *= (1 + player.platonicUpgrades[4] / 50);\n    }\n    if (effectiveScore > 20e12 && player.platonicUpgrades[10] > 0) {\n        platonicGain *= 2;\n    }\n    if (effectiveScore > 250e12 && player.platonicUpgrades[15] > 0) {\n        platonicGain *= 2.25;\n    }\n    platonicGain *= G['platonicBonusMultiplier'][3];\n    platonicGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    platonicGain *= (1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9));\n    platonicGain *= (1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222]);\n    platonicGain *= (1 + player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10));\n    platonicGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\n    platonicGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\n    platonicGain *= (1 + 1 / 100 * player.shopUpgrades.seasonPass2);\n    if (player.shopUpgrades.infiniteAscent)\n        platonicGain *= 1 + 1.5 / 75 * player.runelevels[5];\n    if (player.achievements[257] > 0)\n        platonicGain *= (1 + 1 / 100 * Math.log10(effectiveScore + 1));\n    let hepteractGain = G['challenge15Rewards']['hepteractUnlocked'] && effectiveScore >= 6.66e16 ? 1 : 0;\n    hepteractGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\n    hepteractGain *= (1 + (effectiveScore - 6.66e16) / 1e16);\n    hepteractGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\n    hepteractGain *= (1 + 1 / 100 * player.shopUpgrades.seasonPass3);\n    if (player.shopUpgrades.infiniteAscent)\n        hepteractGain *= 1 + 1.5 / 75 * player.runelevels[5];\n    if (player.achievements[258] > 0)\n        hepteractGain *= (1 + 1 / 100 * Math.log10(effectiveScore + 1));\n    if (player.achievements[264] > 0)\n        hepteractGain *= (1 + Math.min(2, player.ascensionCount / 1e10));\n    if (player.achievements[270] > 0)\n        hepteractGain *= (1 + 1 / 100000 * Decimal.log(player.ascendShards.add(1), 10));\n    return [cubeBank, Math.floor(baseScore), corruptionMultiplier, Math.floor(effectiveScore), Math.floor(cubeGain), Math.floor(tesseractGain), Math.floor(hypercubeGain), Math.floor(platonicGain), Math.floor(hepteractGain)];\n};\nexport const dailyResetCheck = () => {\n    player.dayCheck || (player.dayCheck = new Date());\n    if (typeof player.dayCheck === 'string') {\n        player.dayCheck = new Date(player.dayCheck);\n    }\n    const d = new Date();\n    const h = d.getHours();\n    const m = d.getMinutes();\n    const s = d.getSeconds();\n    player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s;\n    if (d.getDate() !== player.dayCheck.getDate() || d.getMonth() !== player.dayCheck.getMonth() || d.getFullYear() !== player.dayCheck.getFullYear()) {\n        player.dayCheck = new Date();\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.platonicCubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n        player.platonicCubeOpenedDaily = 0;\n        document.getElementById('cubeQuarksOpenRequirement').style.display = \"block\";\n        if (player.challengecompletions[11] > 0) {\n            document.getElementById('tesseractQuarksOpenRequirement').style.display = \"block\";\n        }\n        if (player.challengecompletions[13] > 0) {\n            document.getElementById('hypercubeQuarksOpenRequirement').style.display = \"block\";\n        }\n        if (player.challengecompletions[14] > 0) {\n            document.getElementById('platonicQuarksOpenRequirement').style.display = \"block\";\n        }\n    }\n};\n","import Decimal from \"break_infinity.js\";\nimport { player, format, resetCheck } from \"./Synergism\";\nimport { toggleAutoChallengeRun, toggleAutoChallengeModeText, toggleChallenges } from \"./Toggles\";\nimport { Globals as G } from './Variables';\nimport { calculateRuneLevels } from \"./Calculate\";\nexport const getMaxChallenges = (i) => {\n    let maxChallenge = 0;\n    if (i <= 5) {\n        maxChallenge = 25;\n        if (player.researches[105] > 0) {\n            return 9001;\n        }\n        maxChallenge += 5 * player.researches[65 + i];\n        return maxChallenge;\n    }\n    if (i <= 10 && i > 5) {\n        maxChallenge = 25;\n        maxChallenge += 5 * player.cubeUpgrades[29];\n        maxChallenge += 2 * player.shopUpgrades.challengeExtension;\n        if (player.platonicUpgrades[5] > 0) {\n            maxChallenge += 5;\n        }\n        if (player.platonicUpgrades[10] > 0) {\n            maxChallenge += 5;\n        }\n        if (player.platonicUpgrades[15] > 0) {\n            maxChallenge += 10;\n        }\n        return maxChallenge;\n    }\n    if (i <= 15 && i > 10) {\n        if (i === 15) {\n            return 9001;\n        }\n        maxChallenge = 30;\n        if (player.platonicUpgrades[5] > 0) {\n            maxChallenge += 3;\n        }\n        if (player.platonicUpgrades[10] > 0) {\n            maxChallenge += 3;\n        }\n        if (player.platonicUpgrades[15] > 0) {\n            maxChallenge += 4;\n        }\n        return maxChallenge;\n    }\n};\nexport const challengeDisplay = (i, changefocus) => {\n    changefocus = (changefocus === null || changefocus === undefined) ? true : changefocus;\n    let quarksMultiplier = 1;\n    if (changefocus) {\n        G['challengefocus'] = i;\n        document.getElementById(\"oneChallengeDetails\").style.display = \"flex\";\n        document.getElementById('startChallenge').style.display = 'block';\n        document.getElementById('retryChallenge').style.display = 'block';\n        G['triggerChallenge'] = i;\n    }\n    const maxChallenges = getMaxChallenges(i);\n    if (i <= 5 && changefocus) {\n        if (player.challengecompletions[i] >= 100) {\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 100! Effective completion count: \" + CalcECC('transcend', player.challengecompletions[i]);\n        }\n        else {\n            document.getElementById('completionSoftcap').textContent = \"\";\n        }\n    }\n    if (i > 5 && i <= 10) {\n        quarksMultiplier = 10;\n        if (player.challengecompletions[i] >= 25 && changefocus) {\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 25! Effective completion count: \" + format(CalcECC('reincarnation', player.challengecompletions[i]), 2, true);\n        }\n        else {\n            document.getElementById('completionSoftcap').textContent = \"\";\n        }\n    }\n    if (i > 10) {\n        if (player.challengecompletions[i] >= 10) {\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 10! Effective completion count: \" + format(CalcECC('ascension', player.challengecompletions[i]), 2, true);\n        }\n        else {\n            document.getElementById('completionSoftcap').textContent = \"\";\n        }\n    }\n    let descriptor = \"\";\n    const a = document.getElementById(\"challengeName\");\n    const b = document.getElementById(\"challengeFlavor\");\n    const c = document.getElementById(\"challengeRestrictions\");\n    const d = document.getElementById(\"challengeGoal\");\n    const e = document.getElementById(\"challengePer1\").childNodes[0];\n    const f = document.getElementById(\"challengePer2\").childNodes[0];\n    const g = document.getElementById(\"challengePer3\").childNodes[0];\n    const h = document.getElementById(\"challengeFirst1\");\n    const j = document.getElementById(\"challengeQuarkBonus\");\n    const k = document.getElementById(\"startChallenge\");\n    const l = document.getElementById(\"challengeCurrent1\");\n    const m = document.getElementById(\"challengeCurrent2\");\n    const n = document.getElementById(\"challengeCurrent3\");\n    if (i === 1 && G['challengefocus'] === 1) {\n        a.textContent = \"No Multipliers Challenge || \" + player.challengecompletions[1] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Multipliers make the game a little too fast. Let's take them out!\";\n        c.textContent = \"Transcend and reach the goal except Multipliers do nothing but act like Accelerators, which are nerfed by 50%!\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+10 base Multiplier Boosts! [+0.05 to power!] Current: \";\n        f.textContent = \"+10% total Multiplier Boosts! Current: \";\n        g.textContent = \"+0.04 base Rune exp per Offering! Current: \";\n        h.textContent = \"+1 free Multiplier! +1 Base EXP per offering used!\";\n        k.textContent = \"Start [No Multipliers]\";\n        l.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \" Boosts\";\n        m.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \"% more Boosts\";\n        n.textContent = \"+\" + format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true) + \" Rune EXP [Highest Completion]\";\n    }\n    if (i === 2 && G['challengefocus'] === 2) {\n        a.textContent = \"No Accelerators Challenge || \" + player.challengecompletions[2] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Who needs accelerators? They do basically nothing now.\";\n        c.textContent = \"Transcend and reach the goal except Accelerators do nothing! Multipliers are nerfed a bit as well.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+5 Free Accelerators! Current: \";\n        f.textContent = \"+5% Accelerator Boost Power! Current: \";\n        g.textContent = \"+0.25% Accelerator Power! Current: \";\n        h.textContent = \"+1 base offering for Prestige and Transcensions.\";\n        k.textContent = \"Start [No Accelerators]\";\n        l.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \" Accelerators\";\n        m.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \"% A.Boost Power\";\n        n.textContent = \"+\" + format(0.25 * CalcECC('transcend', player.challengecompletions[2]), 2, true) + \"% Accelerator Power\";\n    }\n    if (i === 3 && G['challengefocus'] === 3) {\n        a.textContent = \"No Shards Challenge || \" + player.challengecompletions[3] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Alright, now you're thinking, how else can I make the game harder?\";\n        c.textContent = \"Transcend and reach the goal except you do not produce Crystals or Mythos Shards.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"Crystal --> Coin conversion exponent +0.04! Current: \";\n        f.textContent = \"+0.5% to Grandmaster production per Mythos producer bought. Current: \";\n        g.textContent = \"When you use a rune, all other runes gain +0.01 EXP. Current: \";\n        h.textContent = \"Gain an offering automatically every 2 seconds!\";\n        k.textContent = \"Start [No Shards]\";\n        l.textContent = \"Exponent +\" + format(0.04 * player.challengecompletions[3], 2, true);\n        m.textContent = \"+\" + format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \"%\";\n        n.textContent = \"+\" + format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \" EXP\";\n    }\n    if (i === 4 && G['challengefocus'] === 4) {\n        a.textContent = \"Cost+ Challenge || \" + player.challengecompletions[4] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You're getting rich now, but inflation hasn't happened yet? I don't think so!\";\n        c.textContent = \"Transcend and reach the goal except Coin/Crystal producers, Accelerators and Multipliers cost more. [Gets harder each time!]\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"Accelerator Cost scale slows down by +5 purchases. Current: \";\n        f.textContent = \"Multiplier Cost scale slows down by +2 purchases. Current: \";\n        g.textContent = \"Building Cost Delay +0.5%. Current: \";\n        h.textContent = \"None\";\n        k.textContent = \"Start [Cost+]\";\n        l.textContent = \"Accelerator Delay +\" + format(5 * CalcECC('transcend', player.challengecompletions[4]));\n        m.textContent = \"Multiplier Delay +\" + format(2 * CalcECC('transcend', player.challengecompletions[4]));\n        n.textContent = \"Building Cost Delay +\" + format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true) + \"%\";\n    }\n    if (i === 5 && G['challengefocus'] === 5) {\n        a.textContent = \"Reduced Diamonds Challenge || \" + player.challengecompletions[5] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You ever wonder how you get so many diamonds?\";\n        c.textContent = \"Transcend and reach the goal except you gain far fewer Diamonds from all sources [Gets harder each time!]\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+0.01 Coin --> Diamond conversion exponent on Prestige! Current: \";\n        f.textContent = \"Multiply Crystal production by 10! Current: \";\n        g.textContent = \"\";\n        h.textContent = \"None\";\n        k.textContent = \"Start [Reduced Diamonds]\";\n        l.textContent = \"Exponent = ^\" + format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true);\n        m.textContent = \"Crystal production x\" + format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])));\n        n.textContent = \"\";\n    }\n    if (i === 6 && G['challengefocus'] === 6) {\n        a.textContent = \"Higher Tax Challenge || \" + player.challengecompletions[6] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The tax man caught wind that you reincarnated recently...\";\n        c.textContent = \"Reincarnate and reach the goal except tax has a lower cap, and Coin production is divided by 1e250.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 6)) + \" Mythos Shards in challenge.\";\n        e.textContent = \"-3.5% Taxes [Multiplicative]! Current: \";\n        f.textContent = \"Thrift Rune Exp +10%! Current: \";\n        g.textContent = \"Prestige Offerings +2%! Current: \";\n        h.textContent = \"-7.5% Taxes!\";\n        k.textContent = \"Start <Higher Tax>\";\n        l.textContent = \"Tax multiplier x\" + format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true);\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[6])) + \"%\";\n        n.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[6])) + \"% Prestige-based Offerings\";\n    }\n    if (i === 7 && G['challengefocus'] === 7) {\n        a.textContent = \"No Multipliers/Accelerators Challenge || \" + player.challengecompletions[7] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You're really going to hate this one.\";\n        c.textContent = \"Reincarnate and reach the goal except Accelerators and Multipliers do nothing. Coin Production is divided by 1e1,250.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 7)) + \" Mythos Shards in challenge.\";\n        e.textContent = \"Accelerator/Multiplier boost power exponent +0.04! Current: \";\n        f.textContent = \"Speed Rune Exp +10%! Current: \";\n        g.textContent = \"Duplication Rune Exp +10%! Current: \";\n        h.textContent = \"Multiplier Boost power +25%! The first Discord-Booster Global Diamond Upgrade.\";\n        k.textContent = \"Start <No Multipliers/Accelerators>\";\n        l.textContent = \"Exponent = ^\" + format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true);\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\";\n        n.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\";\n    }\n    if (i === 8 && G['challengefocus'] === 8) {\n        a.textContent = \"Cost++ Challenge || \" + player.challengecompletions[8] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You thought you could outgrow inflation by Reincarnating?\";\n        c.textContent = \"Reincarnate and reach the goal except Cost Scaling for producers and Accelerators/Multipliers scale much, much faster.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 8)) + \" Mythos Shards in challenge.\";\n        e.textContent = \"Base Building Power +0.25! Current: \";\n        f.textContent = \"Prism Rune Exp +20%! Current: \";\n        g.textContent = \"Transcend Offerings +4%! Current: \";\n        h.textContent = \"Unlock the Anthill feature! Includes 20 new Researches. A Global Diamond Upgrade.\";\n        k.textContent = \"Start <Cost++>\";\n        l.textContent = \"+\" + format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true);\n        m.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% EXP\";\n        n.textContent = \"+\" + format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% Transcend-based offerings\";\n    }\n    if (i === 9 && G['challengefocus'] === 9) {\n        a.textContent = \"No Runes Challenge || \" + player.challengecompletions[9] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"You'll never complain about Prism being bad again.\";\n        c.textContent = \"Reincarnate and reach the goal except runes always have level 1 effects. All coin production is divided by e2,000,000.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+1 free Ant level! Current: \";\n        f.textContent = \"+10% Ant speed [Multiplicative!] Current: \";\n        g.textContent = \"SI Rune Exp +20%! Current: \";\n        h.textContent = \"Unlock the Talismans feature! [In Runes tab]. A Global Diamond Upgrade.\";\n        k.textContent = \"Start <No Runes>\";\n        l.textContent = \"+\" + format(CalcECC('reincarnation', player.challengecompletions[9])) + \" free levels\";\n        m.textContent = \"x\" + format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true) + \" Ant Speed\";\n        n.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true) + \"% EXP\";\n    }\n    if (i === 10 && G['challengefocus'] === 10) {\n        a.textContent = \"Sadistic Challenge I || \" + player.challengecompletions[10] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"I'm sorry for what I've unleashed onto the world.\";\n        c.textContent = \"Reincarnate and reach the goal except run the first five challenges AT THE SAME TIME! Coin Production /e12,500,000.\";\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\n        e.textContent = \"+100 base ELO for sacrificing ants! Current: \";\n        f.textContent = \"+2% Ant Sacrifice Reward! Current: \";\n        g.textContent = \"Reincarnation Offerings +10%! Current: \";\n        h.textContent = \"Unlock the Ascension Reset Tier!\";\n        k.textContent = \"Start <Sadistic I>\";\n        l.textContent = \"+\" + format(100 * CalcECC('reincarnation', player.challengecompletions[10])) + \" Ant ELO\";\n        m.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[10])) + \"% Ant Sacrifice reward\";\n        n.textContent = \"+\" + format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true) + \"% Reincarnate-based offerings\";\n    }\n    if (i === 11 && G['challengefocus'] === 11) {\n        a.textContent = \"Reduced Ants Challenge || \" + player.challengecompletions[11] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The great Ant War of '21 wiped off all of the skilled ants.\";\n        c.textContent = \"Ascend and reach the goal but only get free ant upgrades and from Challenge8/9 completions. FOR ASCENSION CHALLENGES YOU MUST CLEAR CHALLENGE 10 TO ATTEMPT THEM.\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"+12 free Ant Levels! Current: \";\n        f.textContent = \"Ant Speed x(1e5)^completions! Current: \";\n        g.textContent = \"+80 to Rune Caps! Current: \";\n        h.textContent = \"Unlock 15 Researches, and unlock the ability to open Tesseracts!\";\n        k.textContent = \"Start <[(Reduced Ants)]>\";\n        l.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[11])) + \" free ant levels\";\n        m.textContent = \"Ant Speed x\" + format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])));\n        n.textContent = \"+\" + format(80 * CalcECC('ascension', player.challengecompletions[11])) + \" to Rune Caps\";\n    }\n    if (i === 12 && G['challengefocus'] === 12) {\n        a.textContent = \"No Reincarnation Challenge || \" + player.challengecompletions[12] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"For some reason, you just can't do it.\";\n        c.textContent = \"Ascend and reach the goal but you do not gain Particles and you cannot Reincarnate at all! Ant production ^0.5.\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"+50% Obtainium! Current: \";\n        f.textContent = \"+12% Offerings! Current: \";\n        g.textContent = \"+1 Cube Tribute per opening! Current: \";\n        h.textContent = \"Unlock 15 Researches, and unlock the mystical Spirit Power! Find these in the Runes tab.\";\n        k.textContent = \"Start <[(No Reincarnation)]>\";\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[12])) + \"% Obtainium\";\n        m.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[12])) + \"% Offerings\";\n        n.textContent = \"+\" + format(CalcECC('ascension', player.challengecompletions[12])) + \" additional Cube Tributes\";\n    }\n    if (i === 13 && G['challengefocus'] === 13) {\n        a.textContent = \"Tax+++ Challenge || \" + player.challengecompletions[13] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"Good luck with the IRS, buddy.\";\n        c.textContent = \"Ascend and reach the goal, but taxes are much higher and grow with challenge completions. Ant production ^0.23\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"Taxes -3.33%! Multiplicative! Current: \";\n        f.textContent = \"+6 maximum to Talisman Level Cap! Current: \";\n        g.textContent = \"+3% Spirit Power effectiveness! Current: \";\n        h.textContent = \"Unlock 15 Researches, and unlock the power of the Hypercube!\";\n        k.textContent = \"Start <[(Tax+++)]>\";\n        l.textContent = \"-\" + format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])), 3, true) + \"% Corruption Tax\";\n        m.textContent = \"+\" + format(6 * CalcECC('ascension', player.challengecompletions[13])) + \" Talisman Level Cap\";\n        n.textContent = \"+\" + format(3 * CalcECC('ascension', player.challengecompletions[13])) + \"% Effectiveness\";\n    }\n    if (i === 14 && G['challengefocus'] === 14) {\n        a.textContent = \"No Research Challenge || \" + player.challengecompletions[14] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The dimension that never progressed past the dark ages. Many fear to even step foot.\";\n        c.textContent = \"Ascend and reach the goal but you do not gain Obtainium nor are any researches purchasable. Ant production ^0.2.\";\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\n        e.textContent = \"+50% stronger effect on researches 1x1 through 1x5. Current: \";\n        f.textContent = \"+1 research purchased per roomba tick! Current: \";\n        g.textContent = \"+200 to Rune Caps! Current: \";\n        h.textContent = \"Unlock 15 Researches, and a way to coalesce your power into the Singularity.\";\n        k.textContent = \"Start <[(No Research)]>\";\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[14])) + \"% Power\";\n        m.textContent = \"+\" + format(1 * player.challengecompletions[14]) + \" per Tick\";\n        n.textContent = \"+\" + format(200 * CalcECC('ascension', player.challengecompletions[14])) + \" to Rune Caps\";\n    }\n    if (i === 15 && G['challengefocus'] === 15) {\n        a.textContent = \"SADISTIC CHALLENGE II || \" + player.challengecompletions[15] + \"/\" + format(maxChallenges) + \" Completions\";\n        b.textContent = \"The worst sin a man can do is making others suffer.\";\n        c.textContent = \"Ascend and reach the goal but you're FULLY corrupt and must stay that way.\";\n        d.textContent = \"Goal: \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins, but get bonuses based on your best attempt.\";\n        e.textContent = \"You have no idea \";\n        f.textContent = \"what you have just done \";\n        g.textContent = \"the ant god shakes their mighty head \";\n        h.textContent = \"Enter the singularity.\";\n        k.textContent = \"Start <[(Sadistic Challenge II)]>\";\n        l.textContent = \"\";\n        m.textContent = \"\";\n        n.textContent = \"\";\n    }\n    const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\n    const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\n    const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    let scoreDisplay = 0;\n    if (i <= 5) {\n        if (player.highestchallengecompletions[i] >= 750) {\n            scoreDisplay = scoreArray3[i];\n        }\n        else if (player.highestchallengecompletions[i] >= 75) {\n            scoreDisplay = scoreArray2[i];\n        }\n        else {\n            scoreDisplay = scoreArray1[i];\n        }\n    }\n    if (i > 5 && i <= 10) {\n        if (player.highestchallengecompletions[i] >= 60) {\n            scoreDisplay = scoreArray3[i];\n        }\n        else if (player.highestchallengecompletions[i] >= 25) {\n            scoreDisplay = scoreArray2[i];\n        }\n        else {\n            scoreDisplay = scoreArray1[i];\n        }\n    }\n    if (changefocus) {\n        j.textContent = \"\";\n    }\n    if (player.ascensionCount === 0) {\n        descriptor = \"Quarks\";\n        j.style.color = \"cyan\";\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\n        j.textContent = \"Gain \" + Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41]) + \" \" + descriptor + \" for completing this challenge [First Time Bonus]!\";\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1) {\n        j.textContent = \"Completing the challenge adds \" + ((i > 5) ? 2 : 1) + \" to Ascension Bank and increase base Score by \" + scoreDisplay + \".\";\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\n        j.textContent = \"Gain 1 Wow! HYPERCUBE for completing this challenge (First Time Bonus)\";\n    }\n    (i <= 10 && player.researches[150] > 0) ?\n        (document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"block\", document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid green\") :\n        document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"none\";\n    let constructor = \"ON\";\n    if (!player.autoChallengeToggles[i]) {\n        constructor = \"OFF\";\n        document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid red\";\n    }\n    document.getElementById(\"toggleAutoChallengeIgnore\").textContent = \"Automatically Run Chal.\" + i + \" [\" + constructor + \"]\";\n    const ella = document.getElementById(\"toggleAutoChallengeStart\");\n    (player.autoChallengeRunning) ?\n        (ella.textContent = \"Auto Challenge Sweep [ON]\", ella.style.border = \"2px solid gold\") :\n        (ella.textContent = \"Auto Challenge Sweep [OFF]\", ella.style.border = \"2px solid red\");\n};\nexport const getChallengeConditions = (i) => {\n    if (player.currentChallenge.reincarnation === 9) {\n        G['rune1level'] = 1;\n        G['rune2level'] = 1;\n        G['rune3level'] = 1;\n        G['rune4level'] = 1;\n        G['rune5level'] = 1;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    G['prestigePointGain'] = new Decimal('0');\n    if (i >= 6) {\n        G['transcendPointGain'] = new Decimal('0');\n    }\n    if (i >= 11) {\n        G['reincarnationPointGain'] = new Decimal('0');\n    }\n    calculateRuneLevels();\n};\nexport const toggleRetryChallenges = () => {\n    document.getElementById(\"retryChallenge\").textContent = player.retrychallenges\n        ? \"Retry Challenges: OFF\"\n        : \"Retry Challenges: ON\";\n    player.retrychallenges = !player.retrychallenges;\n};\nexport const highestChallengeRewards = (chalNum, highestValue) => {\n    let multiplier = 1 / 10;\n    if (chalNum >= 6) {\n        multiplier = 1;\n    }\n    if (player.ascensionCount === 0) {\n        player.worlds.add(1 + Math.floor(highestValue * multiplier) * 100 / 100);\n    }\n};\nexport const calculateChallengeRequirementMultiplier = (type, completions, special = 0) => {\n    let requirementMultiplier = Math.max(1, G['hyperchallengedMultiplier'][player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5));\n    if (special === 15) {\n        requirementMultiplier = 1;\n    }\n    switch (type) {\n        case \"transcend\":\n            (completions >= 75) ?\n                requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\n                requirementMultiplier *= Math.pow(1 + completions, 2);\n            requirementMultiplier *= G['challenge15Rewards'].transcendChallengeReduction;\n            if (completions >= 1000) {\n                requirementMultiplier *= 10 * Math.pow(completions / 1000, 3);\n            }\n            if (completions >= 9000) {\n                requirementMultiplier *= 1337;\n            }\n            return (requirementMultiplier);\n        case \"reincarnation\":\n            if (completions >= 60) {\n                if (special === 8) {\n                    requirementMultiplier *= Math.pow(1 + completions, 1) / 60;\n                }\n                else if (special === 7) {\n                    requirementMultiplier *= Math.pow(1 + completions, 1) / 30;\n                }\n                else if (special === 6) {\n                    requirementMultiplier *= Math.pow(1 + completions, 2) / 360;\n                }\n                else {\n                    requirementMultiplier *= Math.pow(1 + completions, 5) / 7200;\n                }\n            }\n            if (completions >= 25) {\n                requirementMultiplier *= Math.pow(1 + completions, 5) / 625;\n            }\n            if (completions < 25) {\n                requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions));\n            }\n            return requirementMultiplier;\n        case \"ascension\":\n            if (special !== 15) {\n                (completions >= 10) ?\n                    requirementMultiplier *= (2 * (1 + completions) - 10) :\n                    requirementMultiplier *= (1 + completions);\n            }\n            else {\n                requirementMultiplier *= Math.pow(1.10, completions);\n            }\n            return (requirementMultiplier);\n    }\n};\nexport const CalcECC = (type, completions) => {\n    let effective = 0;\n    switch (type) {\n        case \"transcend\":\n            effective += Math.min(100, completions);\n            effective += 1 / 20 * (Math.min(1000, Math.max(100, completions)) - 100);\n            effective += 1 / 100 * (Math.max(1000, completions) - 1000);\n            return (effective);\n        case \"reincarnation\":\n            effective += Math.min(25, completions);\n            effective += 1 / 2 * (Math.max(25, completions) - 25);\n            return (effective);\n        case \"ascension\":\n            effective += Math.min(10, completions);\n            effective += 1 / 2 * (Math.max(10, completions) - 10);\n            return (effective);\n    }\n};\nexport const challengeRequirement = (challenge, completion, special = 0) => {\n    const base = G['challengeBaseRequirements'][challenge - 1];\n    if (challenge <= 5) {\n        return Decimal.pow(10, base * calculateChallengeRequirementMultiplier(\"transcend\", completion, special));\n    }\n    else if (challenge <= 10) {\n        let c10Reduction = 0;\n        if (challenge === 10) {\n            c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * player.shopUpgrades.challengeTome);\n        }\n        return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special));\n    }\n    else if (challenge <= 14) {\n        return calculateChallengeRequirementMultiplier(\"ascension\", completion, special);\n    }\n    else if (challenge === 15) {\n        return Decimal.pow(10, 4 * Math.pow(10, 16) * calculateChallengeRequirementMultiplier(\"ascension\", completion, special));\n    }\n};\nexport const runChallengeSweep = (dt) => {\n    if (player.researches[150] === 0 ||\n        !player.autoChallengeRunning) {\n        return;\n    }\n    G['autoChallengeTimerIncrement'] += dt;\n    const challengeType = player.currentChallenge.reincarnation !== 0 ? 'reincarnation' : 'transcension';\n    let action = 'none';\n    if (player.currentChallenge.reincarnation !== 0 ||\n        player.currentChallenge.transcension !== 0) {\n        action = 'exit';\n    }\n    else if (player.autoChallengeIndex === 1) {\n        action = 'start';\n    }\n    else {\n        action = 'enter';\n    }\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.exit && action === 'exit') {\n        player.autoChallengeIndex += 1;\n        G['autoChallengeTimerIncrement'] = 0;\n        if (player.autoChallengeIndex > 10) {\n            player.autoChallengeIndex = 1;\n            toggleAutoChallengeModeText(\"START\");\n        }\n        if (challengeType === 'transcension') {\n            resetCheck('challenge', undefined, true);\n        }\n        if (challengeType === 'reincarnation') {\n            resetCheck('reincarnationchallenge', undefined, true);\n        }\n        toggleAutoChallengeModeText(\"ENTER\");\n        return;\n    }\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.start && action === 'start') {\n        G['autoChallengeTimerIncrement'] = 0;\n        let startChallenge = 1;\n        for (const item of player.autoChallengeToggles.slice(1, 11)) {\n            if (!item)\n                startChallenge++;\n            else\n                break;\n        }\n        if (startChallenge == 11) {\n            toggleAutoChallengeRun();\n            return;\n        }\n        player.autoChallengeIndex = startChallenge;\n        toggleChallenges(player.autoChallengeIndex, true);\n        toggleAutoChallengeModeText(\"EXIT\");\n        return;\n    }\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.enter && action === 'enter') {\n        G['autoChallengeTimerIncrement'] = 0;\n        let startChallenge = player.autoChallengeIndex;\n        for (let index = startChallenge; index <= 10; index++) {\n            if (!player.autoChallengeToggles[index] ||\n                player.challengecompletions[index] === getMaxChallenges(index))\n                startChallenge += 1;\n            else\n                break;\n        }\n        if (startChallenge > 10) {\n            player.autoChallengeIndex = 1;\n            return;\n        }\n        player.autoChallengeIndex = startChallenge;\n        toggleChallenges(player.autoChallengeIndex, true);\n        toggleAutoChallengeModeText(\"EXIT\");\n        return;\n    }\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { toggleCorruptionLevel } from './Toggles';\nimport { getElementById } from './Utility';\nexport const corruptionDisplay = (index) => {\n    if (document.getElementById(\"corruptionDetails\").style.visibility !== \"visible\") {\n        document.getElementById(\"corruptionDetails\").style.visibility = \"visible\";\n    }\n    if (document.getElementById(\"corruptionSelectedPic\").style.visibility !== \"visible\") {\n        document.getElementById(\"corruptionSelectedPic\").style.visibility = \"visible\";\n    }\n    G['corruptionTrigger'] = index;\n    const corruptionTexts = [\n        {\n            name: \"Corruption I: Divisiveness\",\n            description: \"Your multipliers get disintegrated! Is extra devious without also using Maladaption Corruption\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[1]) + \". Effect: Free Mult Exponent ^\" + format(G['divisivenessPower'][player.usedCorruptions[1]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[1]) + \". Effect: Free Multiplier Exponent ^\" + format(G['divisivenessPower'][player.prototypeCorruptions[1]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[1]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[1]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[1], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[1], 2), 1) + \"%\",\n            image: \"Pictures/Divisiveness Level 7.png\"\n        },\n        {\n            name: \"Corruption II: Maladaption\",\n            description: \"Insert Cool Text Here. Is extra devious without also using Divisiveness Corruption. Yin/Yang!\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[2]) + \". Effect: Free Accel. Exponent ^\" + format(G['maladaptivePower'][player.usedCorruptions[2]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[2]) + \". Effect: Free Accelerator Exponent ^\" + format(G['maladaptivePower'][player.prototypeCorruptions[2]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[2]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[2]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[2], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[2], 2), 1) + \"%\",\n            image: \"Pictures/Maladaption Lvl 7.png\"\n        },\n        {\n            name: \"Corruption III: Spacial Dilation\",\n            description: \"Way to go, Albert.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[3]) + \". Effect: Time Speed is divided by \" + format(1 / G['lazinessMultiplier'][player.usedCorruptions[3]], 5),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[3]) + \". Effect: Time is divided by \" + format(1 / G['lazinessMultiplier'][player.prototypeCorruptions[3]], 5),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[3]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[3]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[3], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[3], 2), 1) + \"%\",\n            image: \"Pictures/Laziness Lvl 7.png\"\n        },\n        {\n            name: \"Corruption IV: Hyperchallenged\",\n            description: \"What's in a challenge?\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.usedCorruptions[4]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.prototypeCorruptions[4]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[4]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[4]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[4], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[4], 2), 1) + \"%\",\n            image: \"Pictures/Hyperchallenged Lvl 7.png\"\n        },\n        {\n            name: \"Corruption V: Scientific Illiteracy\",\n            description: \"Maybe Albert wouldn't have theorized Dilation after all.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.usedCorruptions[5]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.prototypeCorruptions[5]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[5]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[5]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[5], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[5], 2), 1) + \"%\",\n            image: \"Pictures/Scientific Illiteracy Lvl 7.png\"\n        },\n        {\n            name: \"Corruption VI: Market Deflation\",\n            description: \"Diamond Mine destroyed... no more monopolies!\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[6]) + \". Effect: Diamond gain ^1/\" + format(1 / G['deflationMultiplier'][player.usedCorruptions[6]], 2),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[6]) + \". Effect: Diamond gain ^1/\" + format(1 / G['deflationMultiplier'][player.prototypeCorruptions[6]], 2),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[6]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[6]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[6], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[6], 2), 1) + \"%\",\n            image: \"Pictures/Deflation Lvl 7.png\"\n        },\n        {\n            name: \"Corruption VII: Extinction\",\n            description: \"It killed the dinosaurs too, ya dingus.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.usedCorruptions[7]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.prototypeCorruptions[7]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[7]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[7]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[7], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[7], 2), 1) + \"%\",\n            image: \"Pictures/Extinction Lvl 7.png\"\n        },\n        {\n            name: \"Corruption VIII: Drought\",\n            description: \"More like California, am I right?\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.usedCorruptions[8]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.prototypeCorruptions[8]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[8]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[8]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[8], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[8], 2), 1) + \"%\",\n            image: \"Pictures/Drought Lvl 7.png\"\n        },\n        {\n            name: \"Corruption IX: Financial Recession\",\n            description: \"2008.exe has stopped working.\",\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.usedCorruptions[9]], 3),\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.prototypeCorruptions[9]], 3),\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[9]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[9]], 1),\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[9], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[9], 2), 1) + \"%\",\n            image: \"Pictures/Financial Collapse Lvl 7.png\"\n        },\n        {\n            name: \"CLEANSE THE CORRUPTION\",\n            description: \"Free this world of sin.\",\n            current: \"Reset all Corruptions to level 0 for your current ascension. Does not reset your current ascension.\",\n            planned: \"Push that big 'Reset Corruptions' button to confirm your decision.\",\n            multiplier: \"Note: if you need to do this, you may have bitten off more than you can chew.\",\n            spiritContribution: \"\",\n            image: \"Pictures/ExitCorruption.png\"\n        }\n    ];\n    const text = corruptionTexts[index - 1];\n    document.getElementById(\"corruptionName\").textContent = text.name;\n    document.getElementById(\"corruptionDescription\").textContent = text.description;\n    document.getElementById(\"corruptionLevelCurrent\").textContent = text.current;\n    document.getElementById(\"corruptionLevelPlanned\").textContent = text.planned;\n    document.getElementById(\"corruptionMultiplierContribution\").textContent = text.multiplier;\n    document.getElementById(\"corruptionSpiritContribution\").textContent = text.spiritContribution;\n    document.getElementById(\"corruptionSelectedPic\").setAttribute(\"src\", text.image);\n    if (index < 10) {\n        document.getElementById(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index]);\n        document.getElementById(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index]);\n    }\n};\nexport const corruptionStatsUpdate = () => {\n    for (let i = 1; i <= 9; i++) {\n        document.getElementById(`corrCurrent${i}`).textContent = format(player.usedCorruptions[i]);\n        document.getElementById(`corrNext${i}`).textContent = format(player.prototypeCorruptions[i]);\n    }\n};\nexport const corruptionButtonsAdd = () => {\n    const rows = document.getElementsByClassName(\"corruptionStatRow\");\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        const p = document.createElement(\"p\");\n        p.className = \"corrDesc\";\n        let text = document.createTextNode(\"Current: \");\n        p.appendChild(text);\n        let span = document.createElement(\"span\");\n        span.id = `corrCurrent${i + 1}`;\n        span.textContent = player.usedCorruptions[i + 1] + '';\n        p.appendChild(span);\n        text = document.createTextNode(\" / Next: \");\n        p.appendChild(text);\n        span = document.createElement(\"span\");\n        span.id = `corrNext${i + 1}`;\n        span.textContent = player.prototypeCorruptions[i + 1] + '';\n        p.appendChild(span);\n        row.appendChild(p);\n        let btn;\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionMax\";\n        btn.textContent = \"+12\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 12);\n        row.appendChild(btn);\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionUp\";\n        btn.textContent = \"+1\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 1);\n        row.appendChild(btn);\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionDown\";\n        btn.textContent = \"-1\";\n        btn.onclick = () => toggleCorruptionLevel(i + 1, -1);\n        row.appendChild(btn);\n        btn = document.createElement(\"button\");\n        btn.className = \"corrBtn corruptionReset\";\n        btn.textContent = \"-12\";\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 1, -12));\n        row.appendChild(btn);\n        row.addEventListener('click', () => corruptionDisplay(i + 1));\n    }\n};\nexport const corruptionLoadoutTableCreate = () => {\n    const corrCount = 9;\n    const table = getElementById(\"corruptionLoadoutTable\");\n    for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\n        const row = table.insertRow();\n        for (let j = 0; j <= corrCount; j++) {\n            const cell = row.insertCell();\n            if (j === 0) {\n                cell.textContent = (i === 0) ? \"Next:\" : `Loadout ${i}:`;\n            }\n            else if (j <= corrCount) {\n                cell.textContent = ((i === 0) ? player.prototypeCorruptions[j] : player.corruptionLoadouts[i][j]).toString();\n                cell.style.textAlign = \"center\";\n            }\n        }\n        if (i === 0)\n            continue;\n        let cell = row.insertCell();\n        let btn = document.createElement(\"button\");\n        btn.className = \"corrSave\";\n        btn.textContent = \"Save\";\n        btn.onclick = () => corruptionLoadoutSaveLoad(true, i);\n        cell.appendChild(btn);\n        cell = row.insertCell();\n        btn = document.createElement(\"button\");\n        btn.className = \"corrLoad\";\n        btn.textContent = \"Load\";\n        btn.onclick = () => corruptionLoadoutSaveLoad(false, i);\n        cell.appendChild(btn);\n    }\n};\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\n    const row = getElementById(\"corruptionLoadoutTable\").rows[updateRow + 1].cells;\n    for (let i = 1; i < row.length; i++) {\n        if (i > 9)\n            break;\n        row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i] : player.corruptionLoadouts[updateRow][i]).toString();\n    }\n};\nconst corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\n    if (save) {\n        player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions);\n        corruptionLoadoutTableUpdate(loadout);\n    }\n    else {\n        player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout]);\n        corruptionLoadoutTableUpdate();\n        corruptionStatsUpdate();\n    }\n};\nexport const corruptionCleanseConfirm = () => {\n    const corrupt = document.getElementById('corruptionCleanseConfirm');\n    corrupt.style.visibility = 'visible';\n    setTimeout(() => corrupt.style.visibility = 'hidden', 10000);\n};\n","import EventEmitter from 'eventemitter3';\nexport const Synergism = new EventEmitter();\n","import { upgradeupdate } from \"./Upgrades\";\nimport { player } from \"./Synergism\";\nimport Decimal from \"break_infinity.js\";\nimport { achievementaward } from \"./Achievements\";\nimport { revealStuff } from \"./UpdateHTML\";\nimport { Globals as G } from './Variables';\nexport const buyGenerator = (i, state) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true;\n    }\n    const q = 100 + i;\n    let type = \"transcendPoints\";\n    if (q <= 110 && q >= 106) {\n        type = \"coins\";\n    }\n    else if (q <= 115) {\n        type = \"prestigePoints\";\n    }\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105]);\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        if (achievementCheck === 0) {\n            if ([102, 103, 104, 105].includes(q)) {\n                achievementaward(q - 31);\n            }\n        }\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    revealStuff();\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { format, player } from \"./Synergism\";\nimport { Alert, Confirm, Prompt } from \"./UpdateHTML\";\nexport class HepteractCraft {\n    constructor(data) {\n        var _a, _b, _c, _d;\n        this.UNLOCKED = false;\n        this.BAL = 0;\n        this.CAP = 0;\n        this.BASE_CAP = 0;\n        this.HEPTERACT_CONVERSION = 0;\n        this.DISCOUNT = 0;\n        this.unlock = (hepteractName) => __awaiter(this, void 0, void 0, function* () {\n            if (this.UNLOCKED === true) {\n                return this;\n            }\n            this.UNLOCKED = true;\n            return Alert('Congratulations. You have unlocked the ability to craft ' + hepteractName + ' in the hepteract forge!');\n        });\n        this.craft = () => __awaiter(this, void 0, void 0, function* () {\n            const craftingPrompt = yield Prompt('How many would you like to craft?');\n            if (craftingPrompt === null)\n                return Alert('Okay, maybe next time.');\n            const craftAmount = Number(craftingPrompt);\n            if (Number.isNaN(craftAmount) || !Number.isFinite(craftAmount))\n                return Alert('Value must be a finite number!');\n            else if (craftAmount <= 0)\n                return Alert('You can\\'t craft a nonpositive amount of these fucks, lol!');\n            if (!this.UNLOCKED)\n                return Alert('This is not an unlocked craft, thus you cannot craft this item!');\n            const hepteractLimit = Math.floor((player.wowAbyssals / this.HEPTERACT_CONVERSION) * 1 / (1 - this.DISCOUNT));\n            const itemLimits = [];\n            for (const item in this.OTHER_CONVERSIONS) {\n                itemLimits.push(Math.floor(player[item] / this.OTHER_CONVERSIONS[item]) * 1 / (1 - this.DISCOUNT));\n            }\n            const smallestItemLimit = Math.min(...itemLimits);\n            const amountToCraft = Math.min(smallestItemLimit, hepteractLimit, craftAmount, this.CAP - this.BAL);\n            this.BAL += amountToCraft;\n            player.wowAbyssals -= amountToCraft * this.HEPTERACT_CONVERSION;\n            for (const item in this.OTHER_CONVERSIONS) {\n                player[item] -= amountToCraft * this.OTHER_CONVERSIONS[item];\n            }\n            return Alert('You have successfully crafted ' + format(amountToCraft, 0, true) + ' hepteracts. If this is less than your input, you either hit the inventory limit or you had insufficient resources.');\n        });\n        this.expand = () => __awaiter(this, void 0, void 0, function* () {\n            const expandPrompt = yield Confirm('This will empty your balance, but double your capacity. Agree to the terms and conditions and stuff?');\n            if (!expandPrompt) {\n                return this;\n            }\n            if (!this.UNLOCKED)\n                return Alert('This is not an unlocked craft. Sorry!');\n            if (this.BAL < this.CAP)\n                return Alert('Insufficient inventory to expand. 404 909 error.');\n            this.BAL = 0;\n            this.CAP *= 2;\n            return Alert('Successfully expanded your inventory. You can now fit ' + format(this.CAP, 0, true) + '.');\n        });\n        this.BASE_CAP = data.BASE_CAP;\n        this.HEPTERACT_CONVERSION = data.HEPTERACT_CONVERSION;\n        this.OTHER_CONVERSIONS = data.OTHER_CONVERSIONS;\n        this.UNLOCKED = (_a = data.UNLOCKED) !== null && _a !== void 0 ? _a : false;\n        this.BAL = (_b = data.BAL) !== null && _b !== void 0 ? _b : 0;\n        this.CAP = (_c = data.CAP) !== null && _c !== void 0 ? _c : this.BASE_CAP;\n        this.DISCOUNT = (_d = data.DISCOUNT) !== null && _d !== void 0 ? _d : 0;\n    }\n    spend(amount) {\n        if (!this.UNLOCKED)\n            return this;\n        this.BAL -= amount;\n        return this;\n    }\n    addDiscount(amount) {\n        if (this.DISCOUNT + amount > (1 - Number.EPSILON)) {\n            this.DISCOUNT = 1 - Number.EPSILON;\n            return this;\n        }\n        this.DISCOUNT += amount;\n        return this;\n    }\n    get amount() {\n        return this.BAL;\n    }\n    get capacity() {\n        return this.CAP;\n    }\n    get discount() {\n        return this.DISCOUNT;\n    }\n}\nconst hepteractEffectiveValues = {\n    'chronos': {\n        LIMIT: 1000,\n        DR: 0.33,\n    },\n    'hyperrealism': {\n        LIMIT: 1000,\n        DR: 0.33\n    },\n    'quark': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'challenge': {\n        LIMIT: 1000,\n        DR: 0.5\n    },\n    'abyss': {\n        LIMIT: 1,\n        DR: 0\n    },\n    'accelerator': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'acceleratorBoost': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'multiplier': {\n        LIMIT: 1000,\n        DR: 0.2\n    }\n};\nexport const createHepteract = (data) => {\n    return new HepteractCraft(data);\n};\nexport const hepteractEffective = (data) => {\n    let effectiveValue = Math.min(player.hepteractCrafts[data].BAL, hepteractEffectiveValues[data].LIMIT);\n    if (player.hepteractCrafts[data].BAL > hepteractEffectiveValues[data].LIMIT) {\n        effectiveValue *= Math.pow(player.hepteractCrafts[data].BAL / hepteractEffectiveValues[data].LIMIT, hepteractEffectiveValues[data].DR);\n    }\n    return effectiveValue;\n};\nexport const hepteractDescriptions = (type) => {\n    const unlockedText = document.getElementById('hepteractUnlockedText');\n    const effectText = document.getElementById('hepteractEffectText');\n    const currentEffectText = document.getElementById('hepteractCurrentEffectText');\n    const balanceText = document.getElementById('hepteractBalanceText');\n    const costText = document.getElementById('hepteractCostText');\n    switch (type) {\n        case 'chronos':\n            unlockedText.textContent = (player.hepteractCrafts.chronos.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"This hepteract bends time, in your favor. +0.1% Ascension Speed per Chronos Hepteract.\";\n            currentEffectText.textContent = \"Current Effect: Ascension Speed +\" + format(hepteractEffective('chronos') / 10, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.chronos.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.chronos.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.chronos.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e115 Obtainium [WIP]\";\n            break;\n        case 'hyperrealism':\n            unlockedText.textContent = (player.hepteractCrafts.hyperrealism.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"This bad boy can make hypercube gain skyrocket. +0.1% Hypercubes per Hyperreal Hepteract.\";\n            currentEffectText.textContent = \"Current Effect: Hypercubes +\" + format(hepteractEffective('hyperrealism') / 10, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.hyperrealism.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.hyperrealism.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.hyperrealism.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e80 Offerings.\";\n            break;\n        case 'quark':\n            unlockedText.textContent = (player.hepteractCrafts.quark.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"One pound, two pound fish, fishy grant +0.03% Quarks per Quark Hepteract fish fish.\";\n            currentEffectText.textContent = \"Current Effect: Quarks +\" + format(hepteractEffective('quark') * 3 / 100, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.quark.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.quark.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.quark.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 100 Quarks.\";\n            break;\n        case 'challenge':\n            unlockedText.textContent = (player.hepteractCrafts.challenge.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"That's preposterous. How are you going to gain +0.03% C15 Exponent per Challenge Hepteract? How!?\";\n            currentEffectText.textContent = \"Current Effect: C15 Exponent +\" + format(hepteractEffective('challenge') * 3 / 100, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.challenge.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.challenge.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.challenge.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts, 1e11 Platonic Cubes and 1e22 Cubes.\";\n            break;\n        case 'abyss':\n            unlockedText.textContent = (player.hepteractCrafts.abyss.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"It seems like this holds the power to be at the End of Time. Do you remember why you need this?\";\n            currentEffectText.textContent = \"<[You will submit to the Omega Entity of Time]>\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.abyss.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.abyss.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.abyss.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 69 Wow! Cubes (lol)\";\n            break;\n        case 'accelerator':\n            unlockedText.textContent = (player.hepteractCrafts.accelerator.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"Haha, stupid Corruptions. +0.03% Uncorruptable Accelerators per 'Way too many accelerators' Hepteract!\";\n            currentEffectText.textContent = \"Current Effect: Uncorruptable Accelerators +\" + format(hepteractEffective('accelerator') * 3 / 100, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.accelerator.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.accelerator.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.accelerator.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e14 Wow! Tesseracts\";\n            break;\n        case 'acceleratorBoost':\n            unlockedText.textContent = (player.hepteractCrafts.acceleratorBoost.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"Haha, stupid Corruptions. +0.03% Uncorruptable Accelerator Boosts per 'Way too many accelerator boosts' Hepteract!\";\n            currentEffectText.textContent = \"Current Effect: Uncorruptable Accelerator Boosts +\" + format(hepteractEffective('acceleratorBoost') * 3 / 100, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.acceleratorBoost.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.acceleratorBoost.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.acceleratorBoost.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e10 Hypercubes\";\n            break;\n        case 'multiplier':\n            unlockedText.textContent = (player.hepteractCrafts.multiplier.UNLOCKED) ? \"< UNLOCKED >\" : \"< LOCKED >\";\n            effectText.textContent = \"Haha, stupid Corruptions. +0.03% Uncorruptable Multipliers per 'Way too many multipliers' Hepteract!\";\n            currentEffectText.textContent = \"Current Effect: Uncorruptable Multipliers +\" + format(hepteractEffective('multiplier') * 3 / 100, 2, true) + \"%\";\n            balanceText.textContent = \"Inventory: \" + format(player.hepteractCrafts.multiplier.BAL, 0, true) + \" / \" + format(player.hepteractCrafts.multiplier.CAP);\n            costText.textContent = \"One of these will cost you \" + format(player.hepteractCrafts.multiplier.HEPTERACT_CONVERSION, 0, true) + \" Hepteracts and 1e130 Obtainium\";\n            break;\n    }\n};\nexport const ChronosHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: { 'researchPoints': 1e115 },\n    UNLOCKED: true\n});\nexport const HyperrealismHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: { 'runeshards': 1e80 },\n    UNLOCKED: true\n});\nexport const QuarkHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: { 'worlds': 100 },\n    UNLOCKED: true\n});\nexport const ChallengeHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 5e4,\n    OTHER_CONVERSIONS: { 'wowPlatonicCubes': 1e11, 'wowCubes': 1e22 }\n});\nexport const AbyssHepteract = new HepteractCraft({\n    BASE_CAP: 1,\n    HEPTERACT_CONVERSION: 1e8,\n    OTHER_CONVERSIONS: { 'wowCubes': 69 }\n});\nexport const AcceleratorHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e5,\n    OTHER_CONVERSIONS: { 'wowTesseracts': 1e14 }\n});\nexport const AcceleratorBoostHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 2e5,\n    OTHER_CONVERSIONS: { 'wowHypercubes': 1e10 }\n});\nexport const MultiplierHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 3e5,\n    OTHER_CONVERSIONS: { 'researchPoints': 1e130 }\n});\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nexport const calculateHypercubeBlessings = () => {\n    const keys = Object.keys(player.hypercubeBlessings);\n    for (const key of keys) {\n        const obj = player.hypercubeBlessings[key];\n        const idx = keys.indexOf(key) + 1;\n        let power = 1;\n        let mult = 1;\n        if (obj >= 1000) {\n            power = G['benedictionDRPower'][idx];\n            mult *= Math.pow(1000, (1 - G['benedictionDRPower'][idx]));\n        }\n        G['hypercubeBonusMultiplier'][idx] = 1 + mult * G['benedictionbase'][idx] * Math.pow(obj, power) * G['platonicBonusMultiplier'][4];\n    }\n};\n","import { player, format } from './Synergism';\nimport { Synergism } from './Events';\nconst platonicUpgradeDesc = [\n    '+0.0075% cubes per corruption level per level!',\n    '+0.015% tesseracts per corruption level per level!',\n    '+0.045% hypercubes per corruption level per level!',\n    'Gain +2% platonic cubes per level if >2.5 Trillion Score!',\n    'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster constant production, +5/+3 Challenge caps, +100% Obtainium/Offerings, ^1.10 coin gain in C15!',\n    'Raises corruption 1 and 2 exponent ^(1 + level/30), capacity of ^1 on Mult/Accel.',\n    'Raises speed below 1x to the power of ^(1 - level/30).',\n    'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x challenge req. multiplier!',\n    'Gain more obtainium with the illiteracy corruption, up until 1e100 obtainium!',\n    'C10 Exponent: 1.0375 --> 1.04, Const. tax exponent +0.20 and 10x faster constant production, +5/+3 Challenge caps, +250% Obtainium and Offerings, +100% Cubes/Tesseracts/Hypercubes/Platonics for 5T/7.5T/10T/20T score. ^1.25 ant exponent in C15!',\n    'With this upgrade, you will gain diamonds equal to particle gain!',\n    'Gain (1 + lvl/100)x ant multiplier per challenge completion, ignoring corruptions to ants.',\n    'Effect of Drought is raised to the power of 0.5.',\n    'Gain a small coin exponent dependent on your coins, up until 1e4T coins.',\n    'I suppose that, after all, we all are Everywhere at the End of Time.'\n];\nexport const platUpgradeBaseCosts = {\n    1: {\n        obtainium: 1e70,\n        offerings: 1e45,\n        cubes: 1e13,\n        tesseracts: 1e6,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    2: {\n        obtainium: 3e70,\n        offerings: 2e45,\n        cubes: 1e11,\n        tesseracts: 1e8,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    3: {\n        obtainium: 1e71,\n        offerings: 4e45,\n        cubes: 1e11,\n        tesseracts: 1e6,\n        hypercubes: 1e7,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    4: {\n        obtainium: 4e71,\n        offerings: 1e46,\n        cubes: 1e12,\n        tesseracts: 1e7,\n        hypercubes: 1e6,\n        platonics: 1e6,\n        abyssals: 0,\n        maxLevel: 100\n    },\n    5: {\n        obtainium: 1e80,\n        offerings: 1e60,\n        cubes: 1e14,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    6: {\n        obtainium: 1e82,\n        offerings: 1e61,\n        cubes: 1e15,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    7: {\n        obtainium: 1e84,\n        offerings: 3e62,\n        cubes: 2e15,\n        tesseracts: 2e9,\n        hypercubes: 2e8,\n        platonics: 1.5e7,\n        abyssals: 0,\n        maxLevel: 15\n    },\n    8: {\n        obtainium: 1e87,\n        offerings: 1e64,\n        cubes: 4e15,\n        tesseracts: 4e9,\n        hypercubes: 4e8,\n        platonics: 3e7,\n        abyssals: 0,\n        maxLevel: 5\n    },\n    9: {\n        obtainium: 1e90,\n        offerings: 1e66,\n        cubes: 1e16,\n        tesseracts: 1e10,\n        hypercubes: 1e9,\n        platonics: 5e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    10: {\n        obtainium: 1e93,\n        offerings: 1e68,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    11: {\n        obtainium: 2e96,\n        offerings: 1e70,\n        cubes: 2e17,\n        tesseracts: 2e11,\n        hypercubes: 2e10,\n        platonics: 2e8,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    12: {\n        obtainium: 1e100,\n        offerings: 1e72,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    13: {\n        obtainium: 2e104,\n        offerings: 1e74,\n        cubes: 2e19,\n        tesseracts: 4e12,\n        hypercubes: 4e11,\n        platonics: 4e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    14: {\n        obtainium: 1e108,\n        offerings: 1e77,\n        cubes: 4e20,\n        tesseracts: 1e13,\n        hypercubes: 1e12,\n        platonics: 1e10,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    15: {\n        obtainium: 1e115,\n        offerings: 1e80,\n        cubes: 1e23,\n        tesseracts: 1e15,\n        hypercubes: 1e14,\n        platonics: 1e12,\n        abyssals: 1,\n        maxLevel: 1\n    }\n};\nconst checkPlatonicUpgrade = (index) => {\n    let checksum = 0;\n    const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'];\n    const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'];\n    const checks = {\n        obtainium: false,\n        offerings: false,\n        cubes: false,\n        tesseracts: false,\n        hypercubes: false,\n        platonics: false,\n        abyssals: false,\n        canBuy: false,\n    };\n    for (let i = 0; i < resources.length - 1; i++) {\n        if (platUpgradeBaseCosts[index][resources[i]] <= player[resourceNames[i]]) {\n            checksum++;\n            checks[resources[i]] = true;\n        }\n    }\n    if (player.hepteractCrafts.abyss.BAL > 0 || platUpgradeBaseCosts[index].abyssals == 0) {\n        checksum++;\n        checks['abyssals'] = true;\n    }\n    if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        checks.canBuy = true;\n    }\n    return checks;\n};\nexport const createPlatonicDescription = (index) => {\n    let maxLevelAppend = \"\";\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        maxLevelAppend = \" [MAX]\";\n    }\n    const resourceCheck = checkPlatonicUpgrade(index);\n    document.getElementById('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index - 1];\n    document.getElementById('platonicUpgradeLevel').textContent = \"Level: \" + format(player.platonicUpgrades[index]) + \"/\" + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend;\n    document.getElementById('platonicOfferingCost').textContent = format(player.runeshards) + \"/\" + format(platUpgradeBaseCosts[index].offerings) + \" Offerings\";\n    document.getElementById('platonicObtainiumCost').textContent = format(player.researchPoints) + \"/\" + format(platUpgradeBaseCosts[index].obtainium) + \" Obtainium\";\n    document.getElementById('platonicCubeCost').textContent = format(player.wowCubes) + \"/\" + format(platUpgradeBaseCosts[index].cubes) + \" Wow! Cubes\";\n    document.getElementById('platonicTesseractCost').textContent = format(player.wowTesseracts) + \"/\" + format(platUpgradeBaseCosts[index].tesseracts) + \" Wow! Tesseracts\";\n    document.getElementById('platonicHypercubeCost').textContent = format(player.wowHypercubes) + \"/\" + format(platUpgradeBaseCosts[index].hypercubes) + \" Wow! Hypercubes\";\n    document.getElementById('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + \"/\" + format(platUpgradeBaseCosts[index].platonics) + \" Platonic! Cubes\";\n    document.getElementById('platonicHepteractCost').textContent = format(player.hepteractCrafts.abyss.BAL) + \"/\" + format(platUpgradeBaseCosts[index].abyssals, 0, true) + \" Hepteracts of the Abyss\";\n    resourceCheck.offerings ?\n        document.getElementById('platonicOfferingCost').style.color = \"lime\" :\n        document.getElementById('platonicOfferingCost').style.color = \"crimson\";\n    resourceCheck.obtainium ?\n        document.getElementById('platonicObtainiumCost').style.color = \"lime\" :\n        document.getElementById('platonicObtainiumCost').style.color = \"crimson\";\n    resourceCheck.cubes ?\n        document.getElementById('platonicCubeCost').style.color = \"lime\" :\n        document.getElementById('platonicCubeCost').style.color = \"crimson\";\n    resourceCheck.tesseracts ?\n        document.getElementById('platonicTesseractCost').style.color = \"lime\" :\n        document.getElementById('platonicTesseractCost').style.color = \"crimson\";\n    resourceCheck.hypercubes ?\n        document.getElementById('platonicHypercubeCost').style.color = \"lime\" :\n        document.getElementById('platonicHypercubeCost').style.color = \"crimson\";\n    resourceCheck.platonics ?\n        document.getElementById('platonicPlatonicCost').style.color = \"lime\" :\n        document.getElementById('platonicPlatonicCost').style.color = \"crimson\";\n    resourceCheck.abyssals ?\n        document.getElementById('platonicHepteractCost').style.color = \"lime\" :\n        document.getElementById('platonicHepteractCost').style.color = \"crimson\";\n    if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        document.getElementById('platonicUpgradeLevel').style.color = 'cyan';\n        resourceCheck.canBuy ?\n            (document.getElementById('platonicCanBuy').style.color = \"gold\", document.getElementById('platonicCanBuy').textContent = \"===Affordable! Click to buy!===\") :\n            (document.getElementById('platonicCanBuy').style.color = \"crimson\", document.getElementById('platonicCanBuy').textContent = \"===You cannot afford this!===\");\n    }\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        document.getElementById('platonicUpgradeLevel').style.color = 'gold';\n        document.getElementById('platonicCanBuy').style.color = \"orchid\";\n        document.getElementById('platonicCanBuy').textContent = \"===Maxed===\";\n    }\n};\nexport const buyPlatonicUpgrades = (index) => {\n    const resourceCheck = checkPlatonicUpgrade(index);\n    if (resourceCheck.canBuy) {\n        player.platonicUpgrades[index] += 1;\n        player.researchPoints -= platUpgradeBaseCosts[index].obtainium;\n        player.runeshards -= platUpgradeBaseCosts[index].offerings;\n        player.wowCubes.sub(platUpgradeBaseCosts[index].cubes);\n        player.wowTesseracts.sub(platUpgradeBaseCosts[index].tesseracts);\n        player.wowHypercubes.sub(platUpgradeBaseCosts[index].hypercubes);\n        player.wowPlatonicCubes.sub(platUpgradeBaseCosts[index].platonics);\n        player.hepteractCrafts.abyss.spend(platUpgradeBaseCosts[index].abyssals);\n        Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index]);\n    }\n    createPlatonicDescription(index);\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hepteractEffective } from \"./Hepteracts\";\nimport { player } from \"./Synergism\";\nimport { Alert } from \"./UpdateHTML\";\nimport { Globals as G } from \"./Variables\";\nexport const getQuarkMultiplier = () => {\n    let multiplier = 1;\n    if (player.achievementPoints > 0) {\n        multiplier += player.achievementPoints / 25000;\n    }\n    if (player.achievements[250] > 0) {\n        multiplier += 0.10;\n    }\n    if (player.achievements[251] > 0) {\n        multiplier += 0.10;\n    }\n    if (player.talismanRarity[7] > 5) {\n        multiplier += 0.20;\n    }\n    if (player.platonicUpgrades[5] > 0) {\n        multiplier += 0.10;\n    }\n    if (player.platonicUpgrades[10] > 0) {\n        multiplier += 0.15;\n    }\n    if (player.platonicUpgrades[15] > 0) {\n        multiplier += 0.20;\n    }\n    if (player.challenge15Exponent >= 1e11) {\n        multiplier += (G['challenge15Rewards'].quarks - 1);\n    }\n    if (player.shopUpgrades.infiniteAscent) {\n        multiplier *= (1.1 + 0.15 / 75 * player.runelevels[5]);\n    }\n    if (player.challenge15Exponent >= 1e15) {\n        multiplier *= (1 + 3 / 10000 * hepteractEffective('quark'));\n    }\n    if (player.achievements[266] > 0) {\n        multiplier *= (1 + Math.min(0.1, 1 / 100 * (player.ascensionCount) / 1e10));\n    }\n    return multiplier;\n};\nexport const quarkHandler = () => {\n    let maxTime = 90000;\n    if (player.researches[195] > 0) {\n        maxTime += 18000 * player.researches[195];\n    }\n    let baseQuarkPerHour = 5;\n    if (player.researches[99] > 0) {\n        baseQuarkPerHour += player.researches[99];\n    }\n    if (player.researches[100] > 0) {\n        baseQuarkPerHour += 1;\n    }\n    if (player.researches[125] > 0) {\n        baseQuarkPerHour += 1;\n    }\n    if (player.researches[180] > 0) {\n        baseQuarkPerHour += 1;\n    }\n    if (player.researches[195] > 0) {\n        baseQuarkPerHour += player.researches[195];\n    }\n    const quarkMultiplier = getQuarkMultiplier();\n    const quarkPerHour = baseQuarkPerHour * quarkMultiplier;\n    const capacity = Math.floor(quarkPerHour * maxTime / 3600);\n    const quarkGain = Math.floor(player.quarkstimer * quarkPerHour / 3600);\n    return {\n        maxTime: maxTime,\n        perHour: quarkPerHour,\n        capacity: capacity,\n        gain: quarkGain\n    };\n};\nexport class QuarkHandler {\n    constructor({ bonus, quarks }) {\n        this.BONUS = 0;\n        this.QUARKS = 0;\n        this[Symbol.toPrimitive] = (t) => t === 'number' ? this.QUARKS : null;\n        this.QUARKS = quarks;\n        if (bonus)\n            this.BONUS = bonus;\n        else\n            this.getBonus();\n    }\n    applyBonus(amount) {\n        return amount * (1 + (this.BONUS / 100));\n    }\n    add(amount) {\n        this.QUARKS += this.applyBonus(amount);\n        return this;\n    }\n    sub(amount) {\n        this.QUARKS -= amount;\n        if (this.QUARKS < 0)\n            this.QUARKS = 0;\n        return this;\n    }\n    getBonus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const r = yield fetch('https://api.github.com/gists/44be6ad2dcf0d44d6a29dffe1d66a84a', {\n                    headers: {\n                        'Accept': 'application/vnd.github.v3+json'\n                    }\n                });\n                const t = yield r.json();\n                const b = Number(t.files['SynergismQuarkBoost.txt'].content);\n                if (Number.isNaN(b))\n                    return Alert('No bonus could be applied, an error occurred. [NaN] :(');\n                else if (!Number.isFinite(b))\n                    return Alert('No bonus could be applied, an error occurred. [Infinity] :(');\n                else if (b < 0)\n                    return Alert('No bonus could be applied, an error occurred. [Zero] :(');\n                console.log(`%c \\tBonus of ${b}% quarks has been applied!`, 'color:gold; font-size:60px; font-weight:bold; font-family:helvetica;');\n                this.BONUS = b;\n            }\n            catch (e) {\n                return Alert(`An unexpected error occurred: \"${e}\"`);\n            }\n        });\n    }\n}\n","import { player, format } from './Synergism';\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate';\nimport { revealStuff } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { updateClassList } from './Utility';\nconst getResearchCost = (index, buyAmount = 1, linGrowth = 0) => {\n    buyAmount = Math.min(G['researchMaxLevels'][index] - player.researches[index], buyAmount);\n    const metaData = calculateSummationNonLinear(player.researches[index], G['researchBaseCosts'][index], player.researchPoints, linGrowth, buyAmount);\n    return [metaData[0], metaData[1]];\n};\nexport const updateAutoResearch = (index, auto) => {\n    if (player.cubeUpgrades[9] > 0 && auto) {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        if (isResearchMaxed(player.autoResearch)) {\n            document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n            player.roombaResearchIndex += 1;\n        }\n        while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 1) {\n            player.roombaResearchIndex += 1;\n            player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        }\n        if (isResearchUnlocked(player.autoResearch)) {\n            const doc = document.getElementById(\"res\" + G['researchOrderByCost'][player.roombaResearchIndex]);\n            if (doc && player.researches[player.autoResearch] < G['researchMaxLevels'][player.autoResearch])\n                doc.classList.add(\"researchRoomba\");\n        }\n        return;\n    }\n    else if (!auto) {\n        document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        document.getElementById(`res${index}`).classList.add(\"researchRoomba\");\n        player.autoResearch = index;\n        if (player.researches[index] >= G['researchMaxLevels'][index])\n            updateClassList(`res${player.autoResearch}`, [\"researchMaxed\"], [\"researchPurchased\", \"researchUnpurchased\"]);\n        else if (player.researches[index] >= 1)\n            updateClassList(`res${player.autoResearch}`, [\"researchPurchased\"], [\"researchUnpurchased\", \"researchMaxed\"]);\n        else\n            updateClassList(`res${player.autoResearch}`, [\"researchUnpurchased\"], [\"researchPurchased\", \"researchMaxed\"]);\n        return;\n    }\n    else\n        return;\n};\nexport const buyResearch = (index, auto = false, linGrowth = 0) => {\n    var _a, _b, _c, _d;\n    const buyAmount = (G['maxbuyresearch'] || auto) ? 1e5 : 1;\n    const [buyTo, cost] = getResearchCost(index, buyAmount, linGrowth);\n    const canBuy = (player.researchPoints >= cost);\n    if (canBuy && isResearchUnlocked(index) && !isResearchMaxed(index)) {\n        player.researches[index] = buyTo;\n        player.researchPoints -= cost;\n        if (isResearchMaxed(index))\n            document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        G['researchfiller2'] = 'Level: ' + player.researches[index] + \"/\" + (G['researchMaxLevels'][index]);\n        researchDescriptions(index, auto, linGrowth);\n        (_a = player.unlocks).rrow1 || (_a.rrow1 = true);\n        (_b = player.unlocks).rrow2 || (_b.rrow2 = true);\n        (_c = player.unlocks).rrow3 || (_c.rrow3 = true);\n        (_d = player.unlocks).rrow4 || (_d.rrow4 = true);\n        if (index >= 47 && index <= 50)\n            revealStuff();\n        calculateRuneLevels();\n        calculateAnts();\n    }\n    if (player.autoResearchToggle)\n        updateAutoResearch(index, auto);\n    return canBuy;\n};\nexport const maxRoombaResearchIndex = (p = player) => {\n    const base = p.ascensionCount > 0 ? 140 : 125;\n    const c11 = p.challengecompletions[11] > 0 ? 15 : 0;\n    const c12 = p.challengecompletions[12] > 0 ? 15 : 0;\n    const c13 = p.challengecompletions[13] > 0 ? 15 : 0;\n    const c14 = p.challengecompletions[14] > 0 ? 15 : 0;\n    return base + c11 + c12 + c13 + c14;\n};\nexport const isResearchUnlocked = (index) => {\n    const cumuSum = (sum => (value) => sum += value)(0);\n    const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum);\n    const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218];\n    for (let i = 0; i < indices.length; i++) {\n        if (i === 3 && (index === 121 || index === 124 || index === 150)) {\n            return player.achievements[chievos[i]] > 0;\n        }\n        if (index <= indices[i]) {\n            return player.achievements[chievos[i]] > 0;\n        }\n    }\n    return false;\n};\nconst isResearchMaxed = (index) => G['researchMaxLevels'][index] <= player.researches[index];\nconst resdesc = [\n    \"[1x1] Increase the number of free Accelerators gained by 20% from all sources.\",\n    \"[1x2] Increase the number of free Multipliers gained by 20% from all sources.\",\n    \"[1x3] Increase the number of free Accelerator Boosts gained by 20% from all sources.\",\n    \"[1x4] Increase most rune effects by 10%. (Excludes any recycle chance bonus)\",\n    \"[1x5] Multiply the production of all crystal producers by 1e4.\",\n    \"[1x6] Gain +5% free accelerators per level.\",\n    \"[1x7] Gain +4% free accelerators per level.\",\n    \"[1x8] Gain +3% free accelerators per level.\",\n    \"[1x9] Gain +2% free accelerators per level.\",\n    \"[1x10] Gain +2% free accelerators per level.\",\n    \"[1x11] Gain +5% free multipliers per level.\",\n    \"[1x12] Gain +4% free multipliers per level.\",\n    \"[1x13] Gain +2.5% free multipliers per level.\",\n    \"[1x14] Gain +1.5% free multipliers per level.\",\n    \"[1x15] Gain +0.5% free multipliers per level.\",\n    \"[1x16] Gain +5% free accelerator boosts per level.\",\n    \"[1x17] Gain +5% free accelerator boosts per level.\",\n    \"[1x18] Gain +2 free accelerator per accelerator boost.\",\n    \"[1x19] Gain +2 free accelerator per accelerator boost.\",\n    \"[1x20] Gain +3 free accelerator per accelerator boost!\",\n    \"[1x21] Most rune effects are increased by 1% per level. (Excludes any recycle chance bonus)\",\n    \"[1x22] Each Offering used increases Rune EXP by 0.6 per level.\",\n    \"[1x23] Each Offering used increases Rune EXP by another 0.3 per level!\",\n    \"[1x24] Prestige and Transcensions base Offering is increased by 0.2 per level.\",\n    \"[1x25] Reincarnations base Offering is increased by 0.6 per level.\",\n    \"[2x1] Multiply all crystal producer production by 150% per level (multiplicative).\",\n    \"[2x2] Multiply all crystal producer production by 150% per level (multiplicative).\",\n    \"[2x3] Coin Exponent is increased by 0.08 per level.\",\n    \"[2x4] Coin Exponent is increased by another 0.08 per level.\",\n    \"[2x5] Coin Exponent is increased by ANOTHER 0.04 per level.\",\n    \"[2x6] Want to bake cookies instead? You can go offline for 2 additional hours per level (base 24hr).\",\n    \"[2x7] Want to bake a lot of cookies instead? Extend the offline maximum timer by another 2 hours per level!\",\n    \"[2x8] Gain +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x9] Gain another +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x10] Gain ANOTHER +11% more multiplier boosts from Mythos Shards per level.\",\n    \"[2x11] Building power scales 5% faster per level.\",\n    \"[2x12] Building power scales 2.5% faster per level.\",\n    \"[2x13] Building power scales 2.5% faster per level.\",\n    \"[2x14] Building power affects crystal production at a reduced rate.\",\n    \"[2x15] Building power affects mythos shard production at a reduced rate.\",\n    \"[2x16] Start Reincarnations with automatic A.Boosts unlocked. Note: this research doesn't affect earning achievements.\",\n    \"[2x17] Start Reincarnations with automatic Generators unlocked.\",\n    \"[2x18] Start Reincarnations with automatic C.Upgrades unlocked.\",\n    \"[2x19] Start Reincarnations with automatic D.Upgrades unlocked.\",\n    \"[2x20] Start Reincarnations with automatic Diamond production unlocked.\",\n    \"[2x21] Unlock the ability to automatically Reincarnate!\",\n    \"[2x22] Unlock Reincarnation upgrades 1-5. [Upgrades cost between 1 and 1,000 Particles]\",\n    \"[2x23] Unlock Reincarnation upgrades 6-10. [Upgrades cost between 100,000 and 1e22 Particles]\",\n    \"[2x24] Unlock Reincarnation upgrades 11-15. [Upgrades cost between 1e30 and 1e60 Particles]\",\n    \"[2x25] Unlock Reincarnation upgrades 16-20. [You might want to wait until challenge 8 is doable!]\",\n    \"[3x1] Taxation scales 5.0% slower per level. [Up to -50%]\",\n    \"[3x2] Taxation scales 2.5% slower per level. [Up to -75%]\",\n    \"[3x3] Taxation scales 1.25% slower per level. [Up to -87.5%]\",\n    \"[3x4] Taxation scales 0.625% slower per level. [Up to -93.75%]\",\n    \"[3x5] Taxation scales 0.3125% slower per level. [Up to -96.875%]\",\n    \"[3x6] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x7] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x8] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x9] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x10] Building Cost Scale is delayed by 0.5% per level.\",\n    \"[3x11] Gain +50% of your best obtainium per second AUTOMATICALLY!\",\n    \"[3x12] Gain an additional +10% of your best obtainium per second automatically.\",\n    \"[3x13] If your Reincarnation lasts at least 2 seconds you gain +1 obtainium per level.\",\n    \"[3x14] If your Reincarnation lasts at least 5 seconds you gain +2 obtainium per level.\",\n    \"[3x15] Increase the rate of gaining obtainium through reincarnations by 20% per level.\",\n    \"[3x16] Increase the maximum number of [No Multipliers] completions by 5 per level.\",\n    \"[3x17] Increase the maximum number of [No Accelerators] completions by 5 per level.\",\n    \"[3x18] Increase the maximum number of [No Shards] completions by 5 per level.\",\n    \"[3x19] Increase the maximum number of [Cost+] completions by 5 per level.\",\n    \"[3x20] Increase the maximum number of [Reduced Diamonds] completions by 5 per level.\",\n    \"[3x21] Automatically gain completions for Challenge 1, even without running it!\",\n    \"[3x22] Automatically gain completions for Challenge 2, even without running it!\",\n    \"[3x23] Automatically gain completions for Challenge 3, even without running it!\",\n    \"[3x24] Automatically gain completions for Challenge 4, even without running it!\",\n    \"[3x25] Automatically gain completions for Challenge 5, even without running it!\",\n    \"[4x1] Welcome to the land of expensive researches. Here's +10% obtainium per level to help you out!\",\n    \"[4x2] Increase the level cap of Thrift rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x3] Increase the level cap of Speed rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x4] Increase the level cap of Prism rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x5] Increase the level cap of Duplication rune by 10 per level, and +2% exp for that rune in particular.\",\n    \"[4x6] You thought the previous researches are expensive? You're going to need this! [+10% Obtainium/level]\",\n    \"[4x7] Permanently UNLOCK the Rune of Superior Intellect! [+%Ob / +Ant Speed / +Base Offerings.]\",\n    \"[4x8] Taking forever to level up that SI Rune? Here's +5% SI Rune EXP per level.\",\n    \"[4x9] Does the new rune kinda suck? Power it up! +0.5% level effectiveness for SI rune per level!\",\n    \"[4x10] Gain +0.01% more offerings per level per challenge completion!\",\n    \"[4x11] Yeah, going back to basics. +5% Accelerators/Level.\",\n    \"[4x12] 0/5 Multipliers SUCK: +5% Multipliers/Level.\",\n    \"[4x13] -1/5 A.Boosts SUCK: +5% Accelerator Boosts/Level.\",\n    \"[4x14] -5/5 MULTIPLIERS STILL SUCK: +20% Multiplier Boosts/Level\",\n    \"[4x15] Runes don't suck at all, but why not make them even BETTER? +1% Rune Effect/level!\",\n    \"[4x16] A simple +5% Rune EXP for all runes!\",\n    \"[4x17] Another simple +5% Rune EXP for all runes!\",\n    \"[4x18] +1 Accelerator Boost per 20 Summative Rune Levels, per level.\",\n    \"[4x19] +20 Multiplier per 8 Summative Rune Levels, per level.\",\n    \"[4x20] Gain +4 base Offerings from Reincarnations by purchasing this. Math Nerds will love this!\",\n    \"[4x21] Ants slow? Add +0.0002 to ant efficiency increase per ant purchased per level.\",\n    \"[4x22] Add +4 level to the first six upgradable ants per level!\",\n    \"[4x23] Add +4 level to the next five upgradable ants per level!\",\n    \"[4x24] Is the Quark Shop too hot to resist? Get +1 Quark per hour from Exporting for each level (Up to +75)!\",\n    \"[4x25] Alright, Platonic is off his rocker. I don't expect you to get this but this will give +1 MORE Quark per hour from Exporting (Up to +100)!\",\n    \"[5x1] Alright, you're past the big wall. How about adding +.001 to Inceptus Ant efficiency per level?\",\n    \"[5x2] Gain +1 bonus level to ALL ants per level! A rainbow attack!\",\n    \"[5x3] Pray to Ant God for +5% sacrifice rewards per level!\",\n    \"[5x4] You're beginning to feel like an ant god (ant god): +5% sacrifice reward per level!\",\n    \"[5x5] Buy this and be able to run the first five challenges infinitely! (Note that requirements scale a LOT faster after 75)\",\n    \"[5x6] Engrave your talismans with obtainium to get +0.03 Rune Levels per talisman level per level.\",\n    \"[5x7] Refine your talismans with the powder of Obtainium to get +0.03 Rune Levels per talisman level per level again.\",\n    \"[5x8] A simple trick makes your base ant ELO increase by 25 per level!\",\n    \"[5x9] A more convoluted trick makes your base ant ELO increase by 25 per level again!\",\n    \"[5x10] Gain +1% more ELO from ant sources per level because why not?\",\n    \"[5x11] Gotta go fast [+10 max Speed Rune Level per level, +1% EXP to that rune]\",\n    \"[5x12] Double Trouble [+10 max Duplication Rune level per level, +1% EXP to that rune]\",\n    \"[5x13] Newton's Delight [+10 max Prism Rune Level per level, +1% EXP to that rune]\",\n    \"[5x14] Five-Finger discounts [+10 max Thrift Rune Level per level, +1% EXP to that rune]\",\n    \"[5x15] Scientific Breakthrough [+10 max SI Rune Level per level +1% EXP to that rune]\",\n    \"[5x16] Talismans have +0.015 Rune levels per talisman level per level. Levelception!\",\n    \"[5x17] Talismans have another +0.015 Rune levels per talisman level per level!\",\n    \"[5x18] For 'neutral' talisman effects, increase by +0.06 per level!\",\n    \"[5x19] Gain +0.25% Wow! Cubes per level upon Ascension.\",\n    \"[5x20] Gain another +0.25% Wow! per level upon Ascension.\",\n    \"[5x21] Bend time to your will, making all ticks 2% faster each level.\",\n    \"[5x22] Adds +2% ant sacrifice reward per level.\",\n    \"[5x23] Adds +40 base ant ELO per level.\",\n    \"[5x24] Unlock the automator for Ant Sacrifice! [Good luck buying this.]\",\n    \"[5x25] Good luck, buddy. [+1 Export Quark/hour]\",\n    \"[6x1] 6 rows? That can't be... You've angered ant god (+1% Accelerators / level)\",\n    \"[6x2] Ant God gets angrier (+1% Accelerator Boosts / level)\",\n    \"[6x3] Ant God cannot believe your bravery (+1% Multipliers / level)\",\n    \"[6x4] Add +1 extra level to Crystal upgrade caps multiplied by Level * Log4(Common Fragments + 1)\",\n    \"[6x5] Unlock automation for Fortifying talismans! Activates every 2 real life seconds.\",\n    \"[6x6] Turn some Ant Disciples against Ant God, giving +0.5% Rune Effectiveness per level.\",\n    \"[6x7] Recruit a couple other ants towards your side as well, giving +2 free ant levels per level.\",\n    \"[6x8] Using some coalesced Obtainium, you can make Ant Sacrifice 3% better per level.\",\n    \"[6x9 lol] The funny number. Gain a +6.9% bonus to blessing level.\",\n    \"[6x10] Unlock automation for Enhancing talismans! Activates every 2 real life seconds.\",\n    \"[6x11] It may be time to look back. Makes all ticks 1.5% faster each level.\",\n    \"[6x12] Paying off Wow! Industries, they'll sponsor +1% cubes per level towards your Ascension bank.\",\n    \"[6x13] When you open Wow! Cubes you will get +0.1% tributes per level!\",\n    \"[6x14] Make all Tesseract buildings produce 2% faster per level.\",\n    \"[6x15] The first of a Tetralogy, this tome reduces the base requirements of Challenge 10 by dividing it by 1e100M! A must-read!\",\n    \"[6x16] The Ant God has infiltrated your mind. Run away from your conscience! (+0.8% Accelerators / level)\",\n    \"[6x17] Run... RUN FASTER from your nightmares! (+0.8% Accelerator Boosts / level)\",\n    \"[6x18] Your resilience somehow gives you +0.8% Multipliers / level!\",\n    \"[6x19] Your obtainium gain is increased by 3 * Log4(Uncommon Fragments + 1) * level%! Why is this? I don't know.\",\n    \"[6x20] Your knowledge from the ant war will help you automatically gain Mortuus Est Ant levels.\",\n    \"[6x21] Feed your Disciples pure Obtainium to make your runes +0.4% more effective per level.\",\n    \"[6x22] Feed your ants their own crumbs to make them Log(Crumbs + 10)x faster!\",\n    \"[6x23] Increase your base Ant ELO by 2.5% per level!\",\n    \"[6x24] You will gain +0.03% more Offerings per level per level in the Midas Talisman!\",\n    \"[6x25] Auto Challenge. Enough said. (Lets you automatically run and complete challenges!)\",\n    \"[7x1] A new row, old upgrade. Makes all ticks 1.2% faster each level.\",\n    \"[7x2] Wow! Industries sponsors another +0.9% cubes per level towards your Ascension bank!\",\n    \"[7x3] Hey, I totally didn't steal this idea. You gain 12 tributes of Wow! Cube tier for every Tesseract opened.\",\n    \"[7x4] Make all Tesseract buildings produce 3% faster per level. Hey, isn't that more than the last research tier?\",\n    \"[7x5] Tome 2 of 4: How to win over the Ant universe. Another e100M Divider to Challenge 10 Base Requirement on purchase.\",\n    \"[7x6] What, again? Alright. +0.6% Accelerators / level.\",\n    \"[7x7] Gas, gas, gas. +0.6% Accelerator Boosts / level.\",\n    \"[7x8] Dupe DUPE DUPE. +0.6% Multipliers / level.\",\n    \"[7x9] Somehow, I can't explain why, you reduce your taxes by 2% multiplicative, based on 3/5 * log10(Rare Fragments)!\",\n    \"[7x10] Want a permanent blessing boost? I know you do. A permanent +25% effect to all blessings.\",\n    \"[7x11] SIGMA KAPPA: +0.3% Rune Effectiveness each level!\",\n    \"[7x12] More exponentiation! +0.0001% more inceptus power per level!\",\n    \"[7x13] Ant God's wanting blood: +2% Ant Sacrifice rewards / level\",\n    \"[7x14] Spirit power still sucks, so add +8% power per level!\",\n    \"[7x15] Gain 2x the Spirit buffs in challenges!\",\n    \"[7x16] < T I M E >: +0.9% faster ticks / level \",\n    \"[7x17] Because of sponsorships, Wow! Industries is raising cubes gained in Ascension by 0.8% per level.\",\n    \"[7x18] Gain +0.08% tributes from cubes per level. You know, you should expect it at this point.\",\n    \"[7x19] +4% faster Tesseract Buildings / level. It's GROWING.\",\n    \"[7x20] Tome 3 of 4: How to totally ROCK challenge 10. e100m divisor!\",\n    \"[7x21] You should know how this goes. +0.4% Accelerator Boosts / level\",\n    \"[7x22] Accelerator Boosts += 0.004 * Accelerator Boosts\",\n    \"[7x23] A lot of a small +0.4% Multipliers per level\",\n    \"[7x24] Epic Fragments boost Blessing power by 10% * Log10(Epic Shards + 1)\",\n    \"[7x25] Automatically buy Constant Upgrades, if they are affordable! They also no longer subtract from your constant.\",\n    \"[8x1] Row 8 baby! +0.2% Rune Effectiveness / level.\",\n    \"[8x2] +Log10(Crumbs)% to ant production per level. Pretty cool buff ain't it?\",\n    \"[8x3] +666 Base ELO per level! Spooky number of the devil.\",\n    \"[8x4] +0.04% more offerings per level per midas level!\",\n    \"[8x5] +1 Export Quark per hour, yet again.\",\n    \"[8x6] +0.6% faster ticks / level because why not? You're already the speed of light.\",\n    \"[8x7] +0.7% cubes in ascension bank / level, from dividends in Wow! Stock.\",\n    \"[8x8] When you open a Hypercube, you also open 100 Tesseracts! (This works with 7x3, if you were curious.)\",\n    \"[8x9] +5% faster Tesseract Buildings / level. ASCENDED.\",\n    \"[8x10] Tome 4 of 4: You need to prepare for your ascent. e100m divisor!\",\n    \"[8x11] Something something +0.2% Accelerators pretty cool!\",\n    \"[8x12] Something somewhere, +0.2% Accelerator Boosts!\",\n    \"[8x13] You are DUPLICATED. +0.2% Multipliers/level\",\n    \"[8x14] Legendary Fragments increase Spirit power by +15% multiplied by Log10(Legendary Fragments + 1)\",\n    \"[8x15] Unlock Automations for all 5 of the Tesseract buildings.\",\n    \"[8x16] +0.1% Rune Effectiveness / level. Does this even do anything at this point?\",\n    \"[8x17] Each purchased level of Mortuus Est also increases Ascension Cube reward by +0.03%\",\n    \"[8x18] +1% Ant Sacrifice Reward per level. Singularity HYPE.\",\n    \"[8x19] Increases both Spirit AND Blessing power by 2% per level.\",\n    \"[8x20] Gain +1 export Quark per level, and increases the max timer to redeem quarks by 5 hours each!\",\n    \"[8x21] +0.3% faster ticks / level, because you just can't wait to become the singularity.\",\n    \"[8x22] +0.6% cubes in Ascension Bank / level. No one knows how. Bank error perhaps.\",\n    \"[8x23] +0.06% tributes from cubes / level!. Wow! Cubes really has a lot of manufacturing errors in your favor.\",\n    \"[8x24] +10% faster Tesseract Buildings / level. THE ARISEN. WITH THE PRAISE OF THE SINGULARITY.\",\n    \"[8x25] Gain the power of a thousand suns! +0.01% Accelerators, A. Boosts, Multipliers, Offerings, and +0.004% Cubes, +0.04 Max Rune level, + Floor(level/400) max Talisman Level, +Floor(level/200) free ants.\"\n];\nexport const researchDescriptions = (i, auto = false, linGrowth = 0) => {\n    const buyAmount = (G['maxbuyresearch'] || auto) ? 100000 : 1;\n    const y = resdesc[i - 1];\n    let z = \"\";\n    const p = \"res\" + i;\n    const metaData = getResearchCost(i, buyAmount, linGrowth);\n    z = \" Cost: \" + (format(metaData[1], 0, false)) + \" Obtainium [+\" + format(metaData[0] - player.researches[i], 0, true) + \" Levels]\";\n    if (player.researches[i] === (G['researchMaxLevels'][i])) {\n        document.getElementById(\"researchcost\").style.color = \"Gold\";\n        document.getElementById(\"researchinfo3\").style.color = \"plum\";\n        updateClassList(p, [\"researchMaxed\"], [\"researchAvailable\", \"researchPurchased\", \"researchPurchasedAvailable\"]);\n        z = z + \" || MAXED!\";\n    }\n    else {\n        document.getElementById(\"researchcost\").style.color = \"limegreen\";\n        document.getElementById(\"researchinfo3\").style.color = \"white\";\n        if (player.researches[i] > 0) {\n            updateClassList(p, [\"researchPurchased\", \"researchPurchasedAvailable\"], [\"researchAvailable\", \"researchMaxed\", \"researchUnpurchased\"]);\n        }\n        else {\n            updateClassList(p, [\"researchAvailable\"], [\"researchPurchased\", \"researchMaxed\", \"researchUnpurchased\"]);\n        }\n    }\n    if (player.researchPoints < G['researchBaseCosts'][i] && player.researches[i] < (G['researchMaxLevels'][i])) {\n        document.getElementById(\"researchcost\").style.color = \"crimson\";\n        updateClassList(p, [], [\"researchMaxed\", \"researchAvailable\", \"researchPurchasedAvailable\"]);\n    }\n    document.getElementById(\"researchinfo2\").textContent = y;\n    document.getElementById(\"researchcost\").textContent = z;\n    document.getElementById(\"researchinfo3\").textContent = \"Level \" + player.researches[i] + \"/\" + (G['researchMaxLevels'][i]);\n};\nexport const updateResearchBG = (j) => {\n    if (player.researches[j] > G['researchMaxLevels'][j]) {\n        player.researchPoints += (player.researches[j] - G['researchMaxLevels'][j]) * G['researchBaseCosts'][j];\n        player.researches[j] = G['researchMaxLevels'][j];\n    }\n    const k = `res${j}`;\n    if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n        updateClassList(k, [\"researchPurchased\"], [\"researchUnpurchased\", \"researchMaxed\"]);\n    }\n    else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n        updateClassList(k, [\"researchMaxed\"], [\"researchUnpurchased\", \"researchPurchased\"]);\n    }\n    else {\n        updateClassList(k, [\"researchUnpurchased\"], [\"researchPurchased\", \"researchMaxed\"]);\n    }\n};\n","import { player, clearInt, interval, format } from './Synergism';\nimport { calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels, calculateAnts, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO } from './Calculate';\nimport { resetofferings } from './Runes';\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { revealStuff } from './UpdateHTML';\nimport { upgradeupdate } from './Upgrades';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { getElementById } from './Utility';\nimport { ascensionAchievementCheck } from './Achievements';\nimport { buyResearch } from './Research';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { challengeRequirement } from './Challenges';\nimport { Synergism } from './Events';\nimport { updateClassList } from './Utility';\nimport { corruptionStatsUpdate } from './Corruptions';\nimport { toggleAutoChallengeModeText } from './Toggles';\nlet repeatreset;\nexport const resetrepeat = (input) => {\n    clearInt(repeatreset);\n    repeatreset = interval(() => resetdetails(input), 50);\n};\nexport const resetdetails = (input) => {\n    document.getElementById('resetofferings1').style.display = \"block\";\n    const transcensionChallenge = player.currentChallenge.transcension;\n    const reincarnationChallenge = player.currentChallenge.reincarnation;\n    const offering = calculateOfferings(input);\n    const offeringImage = getElementById(\"resetofferings1\");\n    const offeringText = document.getElementById(\"resetofferings2\");\n    const currencyImage1 = getElementById(\"resetcurrency1\");\n    const resetObtainiumImage = document.getElementById(\"resetobtainium\");\n    const resetObtainiumText = document.getElementById(\"resetobtainium2\");\n    const resetInfo = document.getElementById('resetinfo');\n    const resetCurrencyGain = document.getElementById(\"resetcurrency2\");\n    (input == \"reincarnation\") ?\n        (resetObtainiumImage.style.display = \"block\", resetObtainiumText.textContent = format(Math.floor(G['obtainiumGain']))) :\n        (resetObtainiumImage.style.display = \"none\", resetObtainiumText.textContent = \"\");\n    (input == \"ascensionChallenge\" || input == \"ascension\") ?\n        offeringImage.style.display = offeringText.style.display = \"none\" :\n        offeringImage.style.display = offeringText.style.display = \"block\";\n    switch (input) {\n        case \"prestige\":\n            if (currencyImage1.src !== \"Pictures/Diamond.png\") {\n                currencyImage1.src = \"Pictures/Diamond.png\";\n            }\n            currencyImage1.style.display = \"block\";\n            resetCurrencyGain.textContent = \"+\" + format(G['prestigePointGain']);\n            resetInfo.textContent = \"Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few offerings. Required: \" + format(player.coinsThisPrestige) + \"/1e16 Coins || TIME SPENT: \" + format(player.prestigecounter) + \" seconds.\";\n            resetInfo.style.color = \"turquoise\";\n            break;\n        case \"transcension\":\n            if (currencyImage1.src !== \"Pictures/Mythos.png\") {\n                currencyImage1.src = \"Pictures/Mythos.png\";\n            }\n            currencyImage1.style.display = \"block\";\n            resetCurrencyGain.textContent = \"+\" + format(G['transcendPointGain']);\n            resetInfo.textContent = \"Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: \" + format(player.coinsThisTranscension) + \"/1e100 Coins || TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\";\n            resetInfo.style.color = \"orchid\";\n            break;\n        case \"reincarnation\":\n            if (currencyImage1.src !== \"Pictures/Particle.png\") {\n                currencyImage1.src = \"Pictures/Particle.png\";\n            }\n            currencyImage1.style.display = \"block\";\n            resetCurrencyGain.textContent = \"+\" + format(G['reincarnationPointGain']);\n            resetInfo.textContent = \"Reset ALL previous reset tiers, but gain Particles, Obtainium and Offerings! Required: \" + format(player.transcendShards) + \"/1e300 Mythos Shards || TIME SPENT: \" + format(player.reincarnationcounter) + \" seconds.\";\n            resetInfo.style.color = \"limegreen\";\n            break;\n        case \"acceleratorBoost\":\n            if (currencyImage1.src !== \"Pictures/Diamond.png\") {\n                currencyImage1.src = \"Pictures/Diamond.png\";\n            }\n            currencyImage1.style.display = \"block\";\n            resetCurrencyGain.textContent = \"-\" + format(player.acceleratorBoostCost);\n            resetInfo.textContent = \"Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: \" + format(player.prestigePoints) + \"/\" + format(player.acceleratorBoostCost) + \" Diamonds.\";\n            resetInfo.style.color = \"cyan\";\n            break;\n        case \"transcensionChallenge\":\n            currencyImage1.style.display = \"none\";\n            resetCurrencyGain.textContent = \"\";\n            (transcensionChallenge !== 0) ?\n                (resetInfo.style.color = \"aquamarine\", resetInfo.textContent = \"Are you tired of being in your challenge or stuck? Click to leave challenge \" + transcensionChallenge + \". Progress: \" + format(player.coinsThisTranscension) + \"/\" + format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge])) + \" Coins. TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\") :\n                (resetInfo.style.color = \"crimson\", resetInfo.textContent = \"You're not in a Transcension Challenge right now. Get in one before you can leave it, duh!\");\n            break;\n        case \"reincarnationChallenge\":\n            currencyImage1.style.display = \"none\";\n            resetCurrencyGain.textContent = \"\";\n            if (reincarnationChallenge !== 0) {\n                const goal = reincarnationChallenge >= 9 ? \"coins\" : \"transcendShards\";\n                const goaldesc = reincarnationChallenge >= 9 ? \" Coins\" : \" Mythos Shards\";\n                resetInfo.style.color = \"silver\";\n                resetInfo.textContent = \"Are you done or tired of being in your challenge? Click to leave challenge \" + reincarnationChallenge + \". Progress: \" + format(player[goal]) + \"/\" + format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge)) + goaldesc + \". TIME SPENT: \" + format(player.reincarnationcounter) + \" Seconds.\";\n            }\n            else {\n                resetInfo.style.color = \"crimson\";\n                resetInfo.textContent = \"You're not in a Reincarnation Challenge right now. How could you leave what you are not in?\";\n            }\n            break;\n        case \"ascensionChallenge\":\n            currencyImage1.style.display = \"none\";\n            resetCurrencyGain.textContent = \"\";\n            resetInfo.textContent = \"Click this if you're in an Ascension Challenge and want to leave. You get it already!\";\n            resetInfo.style.color = \"gold\";\n            break;\n        case \"ascension\":\n            currencyImage1.style.display = \"none\";\n            resetCurrencyGain.textContent = \"\";\n            resetInfo.textContent = \"Ascend. 10x1 is required! +\" + format(CalcCorruptionStuff()[4], 0, true) + \" Wow! Cubes for doing it! Time: \" + format(player.ascensionCounter, 0, false) + \" Seconds.\";\n            resetInfo.style.color = \"gold\";\n            break;\n    }\n    document.getElementById(\"resetofferings2\").textContent = \"+\" + format(offering);\n};\nexport const updateAutoReset = (i) => {\n    if (i === 1) {\n        const t = +getElementById(\"prestigeamount\").value;\n        if (t >= 0) {\n            player.prestigeamount = t;\n        }\n        else {\n            player.prestigeamount = 0;\n        }\n    }\n    else if (i === 2) {\n        const u = +getElementById(\"transcendamount\").value;\n        if (u >= 0) {\n            player.transcendamount = u;\n        }\n        else {\n            player.transcendamount = 0;\n        }\n    }\n    else if (i === 3) {\n        const v = +getElementById(\"reincarnationamount\").value;\n        if (v >= 0) {\n            player.reincarnationamount = v;\n        }\n        else {\n            player.reincarnationamount = 0;\n        }\n    }\n    else if (i === 4) {\n        let v = parseFloat(getElementById(\"ascensionAmount\").value);\n        v = Math.floor(v);\n        if (v >= 1) {\n            player.autoAscendThreshold = v;\n        }\n        else {\n            player.autoAscendThreshold = 1;\n        }\n    }\n    else if (i === 5) {\n        const v = parseFloat(getElementById(\"autoAntSacrificeAmount\").value);\n        player.autoAntSacTimer = Math.max(0, v);\n    }\n};\nexport const updateTesseractAutoBuyAmount = () => {\n    let v = parseFloat(getElementById(\"tesseractAmount\").value);\n    v = Math.floor(v);\n    if (v >= 0) {\n        player.tesseractAutoBuyerAmount = v;\n    }\n    else {\n        player.tesseractAutoBuyerAmount = 0;\n    }\n};\nconst resetAddHistoryEntry = (input, from = 'unknown') => {\n    const offeringsGiven = calculateOfferings(input);\n    const isChallenge = [\"enterChallenge\", \"leaveChallenge\"].includes(from);\n    if (input === \"prestige\") {\n        const historyEntry = {\n            seconds: player.prestigecounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: \"prestige\",\n            diamonds: G['prestigePointGain'].toString(),\n        };\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    }\n    else if (input === \"transcension\" || input === \"transcensionChallenge\") {\n        const historyEntry = {\n            seconds: player.transcendcounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: \"transcend\",\n            mythos: G['transcendPointGain'].toString(),\n        };\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    }\n    else if (input === \"reincarnation\" || input === \"reincarnationChallenge\") {\n        if (!isChallenge || G['reincarnationPointGain'].gte(player.reincarnationPoints.div(10))) {\n            const historyEntry = {\n                seconds: player.reincarnationcounter,\n                date: Date.now(),\n                offerings: offeringsGiven,\n                kind: \"reincarnate\",\n                particles: G['reincarnationPointGain'].toString(),\n                obtainium: G['obtainiumGain'],\n            };\n            Synergism.emit('historyAdd', 'reset', historyEntry);\n        }\n    }\n    else if (input === \"ascension\" || input === \"ascensionChallenge\") {\n        if (player.challengecompletions[10] > 0) {\n            const corruptionMetaData = CalcCorruptionStuff();\n            const historyEntry = {\n                seconds: player.ascensionCounter,\n                date: Date.now(),\n                c10Completions: player.challengecompletions[10],\n                usedCorruptions: player.usedCorruptions.slice(0),\n                corruptionScore: corruptionMetaData[3],\n                wowCubes: corruptionMetaData[4],\n                wowTesseracts: corruptionMetaData[5],\n                wowHypercubes: corruptionMetaData[6],\n                wowPlatonicCubes: corruptionMetaData[7],\n                kind: \"ascend\",\n            };\n            if (from !== \"enterChallenge\" && player.currentChallenge.ascension !== 0) {\n                historyEntry.currentChallenge = player.currentChallenge.ascension;\n            }\n            Synergism.emit('historyAdd', 'ascend', historyEntry);\n        }\n    }\n};\nexport const reset = (input, fast = false, from = 'unknown') => {\n    resetAddHistoryEntry(input, from);\n    resetofferings(input);\n    resetUpgrades(1);\n    player.coins = new Decimal(\"102\");\n    player.coinsThisPrestige = new Decimal(\"100\");\n    player.firstOwnedCoin = 0;\n    player.firstGeneratedCoin = new Decimal(\"0\");\n    player.firstCostCoin = new Decimal(\"100\");\n    player.secondOwnedCoin = 0;\n    player.secondGeneratedCoin = new Decimal(\"0\");\n    player.secondCostCoin = new Decimal(\"2e3\");\n    player.thirdOwnedCoin = 0;\n    player.thirdGeneratedCoin = new Decimal(\"0\");\n    player.thirdCostCoin = new Decimal(\"4e4\");\n    player.fourthOwnedCoin = 0;\n    player.fourthGeneratedCoin = new Decimal(\"0\");\n    player.fourthCostCoin = new Decimal(\"8e5\");\n    player.fifthOwnedCoin = 0;\n    player.fifthGeneratedCoin = new Decimal(\"0\");\n    player.fifthCostCoin = new Decimal(\"1.6e7\");\n    player.firstGeneratedDiamonds = new Decimal(\"0\");\n    player.secondGeneratedDiamonds = new Decimal(\"0\");\n    player.thirdGeneratedDiamonds = new Decimal(\"0\");\n    player.fourthGeneratedDiamonds = new Decimal(\"0\");\n    player.fifthGeneratedDiamonds = new Decimal(\"0\");\n    player.multiplierCost = new Decimal(\"1e5\");\n    player.multiplierBought = 0;\n    player.acceleratorCost = new Decimal(\"500\");\n    player.acceleratorBought = 0;\n    player.prestigeCount += 1;\n    player.prestigePoints = player.prestigePoints.add(G['prestigePointGain']);\n    player.prestigeShards = new Decimal(\"0\");\n    player.prestigenoaccelerator = true;\n    player.prestigenomultiplier = true;\n    player.prestigenocoinupgrades = true;\n    player.unlocks.prestige = true;\n    if (player.prestigecounter < player.fastestprestige) {\n        player.fastestprestige = player.prestigecounter;\n    }\n    G['prestigePointGain'] = new Decimal('0');\n    player.prestigecounter = 0;\n    G['autoResetTimers'].prestige = 0;\n    const types = ['transcension', 'transcensionChallenge', 'reincarnation', 'reincarnationChallenge', 'ascension', 'ascensionChallenge'];\n    if (types.includes(input)) {\n        resetUpgrades(2);\n        player.coinsThisTranscension = new Decimal(\"100\");\n        player.firstOwnedDiamonds = 0;\n        player.firstCostDiamonds = new Decimal(\"100\");\n        player.secondOwnedDiamonds = 0;\n        player.secondCostDiamonds = new Decimal(\"1e5\");\n        player.thirdOwnedDiamonds = 0;\n        player.thirdCostDiamonds = new Decimal(\"1e15\");\n        player.fourthOwnedDiamonds = 0;\n        player.fourthCostDiamonds = new Decimal(\"1e40\");\n        player.fifthOwnedDiamonds = 0;\n        player.fifthCostDiamonds = new Decimal(\"1e100\");\n        player.firstGeneratedMythos = new Decimal(\"0\");\n        player.secondGeneratedMythos = new Decimal(\"0\");\n        player.thirdGeneratedMythos = new Decimal(\"0\");\n        player.fourthGeneratedMythos = new Decimal(\"0\");\n        player.fifthGeneratedMythos = new Decimal(\"0\");\n        player.acceleratorBoostBought = 0;\n        player.acceleratorBoostCost = new Decimal(\"1e3\");\n        player.transcendCount += 1;\n        player.prestigePoints = new Decimal(\"0\");\n        player.transcendPoints = player.transcendPoints.add(G['transcendPointGain']);\n        player.transcendShards = new Decimal(\"0\");\n        player.transcendnocoinupgrades = true;\n        player.transcendnocoinorprestigeupgrades = true;\n        player.transcendnoaccelerator = true;\n        player.transcendnomultiplier = true;\n        G['transcendPointGain'] = new Decimal('0');\n        if (player.achievements[78] > 0.5) {\n            player.firstOwnedDiamonds += 1;\n        }\n        if (player.achievements[85] > 0.5) {\n            player.secondOwnedDiamonds += 1;\n        }\n        if (player.achievements[92] > 0.5) {\n            player.thirdOwnedDiamonds += 1;\n        }\n        if (player.achievements[99] > 0.5) {\n            player.fourthOwnedDiamonds += 1;\n        }\n        if (player.achievements[106] > 0.5) {\n            player.fifthOwnedDiamonds += 1;\n        }\n        if (player.achievements[4] > 0.5) {\n            player.upgrades[81] = 1;\n        }\n        if (player.achievements[11] > 0.5) {\n            player.upgrades[82] = 1;\n        }\n        if (player.achievements[18] > 0.5) {\n            player.upgrades[83] = 1;\n        }\n        if (player.achievements[25] > 0.5) {\n            player.upgrades[84] = 1;\n        }\n        if (player.achievements[32] > 0.5) {\n            player.upgrades[85] = 1;\n        }\n        if (player.achievements[80] > 0.5) {\n            player.upgrades[87] = 1;\n        }\n        if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\n            player.fastesttranscend = player.transcendcounter;\n        }\n        player.transcendcounter = 0;\n        G['autoResetTimers'].transcension = 0;\n    }\n    if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge') {\n        if (player.ascensionCount > 0 && player.achievements[183] < 1) {\n            ascensionAchievementCheck(1);\n        }\n        player.researchPoints += Math.floor(G['obtainiumGain']);\n        const opscheck = G['obtainiumGain'] / (1 + player.reincarnationcounter);\n        if (opscheck > player.obtainiumpersecond) {\n            player.obtainiumpersecond = opscheck;\n        }\n        player.currentChallenge.transcension = 0;\n        resetUpgrades(3);\n        player.coinsThisReincarnation = new Decimal(\"100\");\n        player.firstOwnedMythos = 0;\n        player.firstCostMythos = new Decimal(\"1\");\n        player.secondOwnedMythos = 0;\n        player.secondCostMythos = new Decimal(\"1e2\");\n        player.thirdOwnedMythos = 0;\n        player.thirdCostMythos = new Decimal(\"1e4\");\n        player.fourthOwnedMythos = 0;\n        player.fourthCostMythos = new Decimal(\"1e8\");\n        player.fifthOwnedMythos = 0;\n        player.fifthCostMythos = new Decimal(\"1e16\");\n        player.firstGeneratedParticles = new Decimal(\"0\");\n        player.secondGeneratedParticles = new Decimal(\"0\");\n        player.thirdGeneratedParticles = new Decimal(\"0\");\n        player.fourthGeneratedParticles = new Decimal(\"0\");\n        player.fifthGeneratedParticles = new Decimal(\"0\");\n        player.reincarnationCount += 1;\n        player.transcendPoints = new Decimal(\"0\");\n        player.reincarnationPoints = player.reincarnationPoints.add(G['reincarnationPointGain']);\n        if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\n            player.prestigePoints = player.prestigePoints.add(G['reincarnationPointGain']);\n        }\n        player.reincarnationShards = new Decimal(\"0\");\n        player.challengecompletions[1] = 0;\n        player.challengecompletions[2] = 0;\n        player.challengecompletions[3] = 0;\n        player.challengecompletions[4] = 0;\n        player.challengecompletions[5] = 0;\n        G['reincarnationPointGain'] = new Decimal('0');\n        if (player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.reincarnation === 0) {\n            player.challengecompletions[1] = player.highestchallengecompletions[1];\n            player.challengecompletions[2] = player.highestchallengecompletions[2];\n            player.challengecompletions[3] = player.highestchallengecompletions[3];\n            player.challengecompletions[4] = player.highestchallengecompletions[4];\n            player.challengecompletions[5] = player.highestchallengecompletions[5];\n        }\n        player.reincarnatenocoinupgrades = true;\n        player.reincarnatenocoinorprestigeupgrades = true;\n        player.reincarnatenocoinprestigeortranscendupgrades = true;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true;\n        player.reincarnatenoaccelerator = true;\n        player.reincarnatenomultiplier = true;\n        if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\n            player.fastestreincarnate = player.reincarnationcounter;\n        }\n        calculateCubeBlessings();\n        player.reincarnationcounter = 0;\n        G['autoResetTimers'].reincarnation = 0;\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\n            const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n            buyResearch(player.autoResearch, true, linGrowth);\n        }\n        calculateRuneLevels();\n        calculateAnts();\n    }\n    if (input === 'ascension' || input === 'ascensionChallenge') {\n        const metaData = CalcCorruptionStuff();\n        ascensionAchievementCheck(3, metaData[3]);\n        player.currentChallenge.transcension = 0;\n        player.currentChallenge.reincarnation = 0;\n        player.autoChallengeIndex = 1;\n        toggleAutoChallengeModeText(\"START\");\n        G['autoChallengeTimerIncrement'] = 0;\n        resetResearches();\n        resetAnts();\n        resetTalismans();\n        player.reincarnationPoints = new Decimal(\"0\");\n        player.reincarnationShards = new Decimal(\"0\");\n        player.obtainiumpersecond = 0;\n        player.maxobtainiumpersecond = 0;\n        player.offeringpersecond = 0;\n        player.antSacrificePoints = 0;\n        player.antSacrificeTimer = 0;\n        player.antSacrificeTimerReal = 0;\n        player.antUpgrades[12 - 1] = 0;\n        for (let j = 61; j <= 80; j++) {\n            player.upgrades[j] = 0;\n        }\n        for (let j = 94; j <= 100; j++) {\n            player.upgrades[j] = 0;\n        }\n        player.firstOwnedParticles = 0;\n        player.secondOwnedParticles = 0;\n        player.thirdOwnedParticles = 0;\n        player.fourthOwnedParticles = 0;\n        player.fifthOwnedParticles = 0;\n        player.firstCostParticles = new Decimal(\"1\");\n        player.secondCostParticles = new Decimal(\"100\");\n        player.thirdCostParticles = new Decimal(\"1e4\");\n        player.fourthCostParticles = new Decimal(\"1e8\");\n        player.fifthCostParticles = new Decimal(\"1e16\");\n        player.runeexp = [0, 0, 0, 0, 0, player.runeexp[5], player.runeexp[6]];\n        player.runelevels = [0, 0, 0, 0, 0, player.runelevels[5], player.runelevels[6]];\n        player.runeshards = 0;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n        player.runelevels[0] = 3 * player.cubeUpgrades[26];\n        player.runelevels[1] = 3 * player.cubeUpgrades[26];\n        player.runelevels[2] = 3 * player.cubeUpgrades[26];\n        player.runelevels[3] = 3 * player.cubeUpgrades[26];\n        player.runelevels[4] = 3 * player.cubeUpgrades[26];\n        if (player.cubeUpgrades[27] === 1) {\n            player.firstOwnedParticles = 1;\n            player.secondOwnedParticles = 1;\n            player.thirdOwnedParticles = 1;\n            player.fourthOwnedParticles = 1;\n            player.fifthOwnedParticles = 1;\n        }\n        if (player.cubeUpgrades[48] > 0) {\n            player.firstOwnedAnts += 1;\n        }\n        if (player.challengecompletions[10] > 0) {\n            let ascCount = 1;\n            if (player.ascensionCounter >= 10) {\n                if (player.achievements[188] > 0) {\n                    ascCount += 99;\n                }\n                ascCount *= 1 + (Math.min(24 * 3600, player.ascensionCounter) / 10 - 1) * 0.2 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223]);\n            }\n            if (player.achievements[187] > 0 && metaData[3] > 1e8) {\n                ascCount *= (Math.log(metaData[3]) / Math.log(10) - 1);\n            }\n            ascCount *= G['challenge15Rewards'].ascensions;\n            if (player.achievements[260] > 0)\n                ascCount *= 1.25;\n            if (player.achievements[261] > 0)\n                ascCount *= 1.25;\n            ascCount = Math.floor(ascCount);\n            player.ascensionCount += ascCount;\n            player.wowCubes.add(metaData[4]);\n            player.wowTesseracts.add(metaData[5]);\n            player.wowHypercubes.add(metaData[6]);\n            player.wowPlatonicCubes.add(metaData[7]);\n            player.wowAbyssals += metaData[8];\n        }\n        for (let j = 1; j <= 10; j++) {\n            player.challengecompletions[j] = 0;\n            player.highestchallengecompletions[j] = 0;\n        }\n        player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49];\n        player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49];\n        player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49];\n        document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        player.roombaResearchIndex = 0;\n        player.autoResearch = 1;\n        for (let j = 1; j <= (200); j++) {\n            const k = `res${j}`;\n            if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n                updateClassList(k, [\"researchPurchased\"], [\"researchAvailable\", \"researchMaxed\", \"researchPurchasedAvailable\", \"researchUnpurchased\"]);\n            }\n            else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n                updateClassList(k, [\"researchMaxed\"], [\"researchAvailable\", \"researchPurchased\", \"researchPurchasedAvailable\", \"researchUnpurchased\"]);\n            }\n            else {\n                updateClassList(k, [\"researchUnpurchased\"], [\"researchAvailable\", \"researchPurchased\", \"researchPurchasedAvailable\", \"researchMaxed\"]);\n            }\n        }\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        calculateTalismanEffects();\n        calculateObtainium();\n        ascensionAchievementCheck(1);\n        player.ascensionCounter = 0;\n        updateTalismanInventory();\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        updateTalismanAppearance(7);\n        calculateCubeBlessings();\n        calculateTesseractBlessings();\n        calculateHypercubeBlessings();\n        if (player.cubeUpgrades[4] === 1) {\n            player.upgrades[94] = 1;\n            player.upgrades[95] = 1;\n            player.upgrades[96] = 1;\n            player.upgrades[97] = 1;\n            player.upgrades[98] = 1;\n        }\n        if (player.cubeUpgrades[5] === 1) {\n            player.upgrades[99] = 1;\n        }\n        if (player.cubeUpgrades[6] === 1) {\n            player.upgrades[100] = 1;\n        }\n        for (let j = 61; j <= 80; j++) {\n            document.getElementById(\"upg\" + j).style.backgroundColor = \"black\";\n        }\n        for (let j = 94; j <= 100; j++) {\n            if (player.upgrades[j] === 0) {\n                document.getElementById(\"upg\" + j).style.backgroundColor = \"black\";\n            }\n        }\n        player.usedCorruptions = Array.from(player.prototypeCorruptions);\n        corruptionStatsUpdate();\n    }\n    player.unlocks.prestige = true;\n    if (input == \"transcension\" || input == \"transcensionChallenge\") {\n        player.unlocks.transcend = true;\n    }\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\n        player.unlocks.reincarnate = true;\n    }\n    if (!fast) {\n        revealStuff();\n    }\n};\nconst resetUpgrades = (i) => {\n    if (i > 2.5) {\n        for (let i = 41; i < 61; i++) {\n            if (i !== 46) {\n                player.upgrades[i] = 0;\n            }\n        }\n        if (player.researches[41] === 0) {\n            player.upgrades[46] = 0;\n        }\n        if (player.researches[41] < 0.5) {\n            player.upgrades[88] = 0;\n        }\n        if (player.achievements[50] === 0) {\n            player.upgrades[89] = 0;\n        }\n        if (player.researches[42] < 0.5) {\n            player.upgrades[90] = 0;\n        }\n        if (player.researches[43] < 0.5) {\n            player.upgrades[91] = 0;\n        }\n        if (player.researches[44] < 0.5) {\n            player.upgrades[92] = 0;\n        }\n        if (player.researches[45] < 0.5) {\n            player.upgrades[93] = 0;\n        }\n        player.upgrades[116] = 0;\n        player.upgrades[117] = 0;\n        player.upgrades[118] = 0;\n        player.upgrades[119] = 0;\n        player.upgrades[120] = 0;\n    }\n    for (let j = 1; j <= 20; j++) {\n        player.upgrades[j] = 0;\n    }\n    for (let j = 121, k = 106; j <= 125; j++, k++) {\n        player.upgrades[j] = 0;\n        player.upgrades[k] = 0;\n    }\n    if (i > 1.5) {\n        if (player.achievements[4] < 0.5) {\n            player.upgrades[81] = 0;\n        }\n        if (player.achievements[11] < 0.5) {\n            player.upgrades[82] = 0;\n        }\n        if (player.achievements[18] < 0.5) {\n            player.upgrades[83] = 0;\n        }\n        if (player.achievements[25] < 0.5) {\n            player.upgrades[84] = 0;\n        }\n        if (player.achievements[32] < 0.5) {\n            player.upgrades[85] = 0;\n        }\n        if (player.achievements[87] < 0.5) {\n            player.upgrades[86] = 0;\n        }\n        if (player.achievements[80] < 0.5) {\n            player.upgrades[87] = 0;\n        }\n        player.upgrades[101] = 0;\n        player.upgrades[102] = 0;\n        player.upgrades[103] = 0;\n        player.upgrades[104] = 0;\n        player.upgrades[105] = 0;\n    }\n    if (i > 1.5) {\n        for (let k = 21; k < 41; k++) {\n            player.upgrades[k] = 0;\n        }\n        player.upgrades[111] = 0;\n        player.upgrades[112] = 0;\n        player.upgrades[113] = 0;\n        player.upgrades[114] = 0;\n        player.upgrades[115] = 0;\n    }\n    if (i > 1.5) {\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n        player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000];\n        let m = 0;\n        m += Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100;\n        if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n            m += 10;\n        }\n        player.crystalUpgrades = [m, m, m, m, m, m, m, m];\n    }\n    for (let x = 1; x <= 125; x++) {\n        upgradeupdate(x, true);\n    }\n    if (player.achievements[87] > 0.5) {\n        player.upgrades[86] = 1;\n    }\n};\nexport const resetAnts = () => {\n    player.firstOwnedAnts = 0;\n    if (player.cubeUpgrades[48] > 0) {\n        player.firstOwnedAnts = 1;\n    }\n    player.secondOwnedAnts = 0;\n    player.thirdOwnedAnts = 0;\n    player.fourthOwnedAnts = 0;\n    player.fifthOwnedAnts = 0;\n    player.sixthOwnedAnts = 0;\n    player.seventhOwnedAnts = 0;\n    player.eighthOwnedAnts = 0;\n    player.firstGeneratedAnts = new Decimal(\"0\");\n    player.secondGeneratedAnts = new Decimal(\"0\");\n    player.thirdGeneratedAnts = new Decimal(\"0\");\n    player.fourthGeneratedAnts = new Decimal(\"0\");\n    player.fifthGeneratedAnts = new Decimal(\"0\");\n    player.sixthGeneratedAnts = new Decimal(\"0\");\n    player.seventhGeneratedAnts = new Decimal(\"0\");\n    player.eighthGeneratedAnts = new Decimal(\"0\");\n    player.firstCostAnts = new Decimal(\"1e800\");\n    player.secondCostAnts = new Decimal(\"3\");\n    player.thirdCostAnts = new Decimal(\"100\");\n    player.fourthCostAnts = new Decimal(\"1e4\");\n    player.fifthCostAnts = new Decimal(\"1e12\");\n    player.sixthCostAnts = new Decimal(\"1e36\");\n    player.seventhCostAnts = new Decimal(\"1e100\");\n    player.eighthCostAnts = new Decimal(\"1e300\");\n    const ant12 = player.antUpgrades[12 - 1];\n    player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12];\n    player.antPoints = new Decimal(\"1\");\n    if (player.currentChallenge.ascension === 12) {\n        player.antPoints = new Decimal(\"7\");\n    }\n    calculateAnts();\n    calculateRuneLevels();\n};\nconst resetResearches = () => {\n    player.researchPoints = 0;\n    const destroy = [\n        6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n        51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n        76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\n        101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\n        126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149,\n        151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174,\n        176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199\n    ];\n    for (const item of destroy) {\n        player.researches[item] = 0;\n    }\n};\nconst resetTalismans = () => {\n    player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n    player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n    player.talismanShards = 0;\n    player.commonFragments = 0;\n    player.uncommonFragments = 0;\n    player.rareFragments = 0;\n    player.epicFragments = 0;\n    player.legendaryFragments = 0;\n    player.mythicalFragments = 0;\n};\n","import { player, format } from './Synergism';\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels } from './Calculate';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nexport const displayRuneInformation = (i, updatelevelup = true) => {\n    const m = G['effectiveLevelMult'];\n    const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400));\n    const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1]);\n    if (i === 1) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/4)^1.25 Accelerator, +0.25% Accelerators per level. +1 Accelerator Boost every 20 levels!\";\n        }\n        document.getElementById(\"runeshowpower1\").textContent = \"Speed Rune Bonus: \" + \"+\" + format(Math.floor(Math.pow(G['rune1level'] * m / 4, 1.25))) + \" Accelerators, +\" + format((G['rune1level'] / 4 * m), 2, true) + \"% Accelerators, +\" + format(Math.floor(G['rune1level'] / 20 * m)) + \" Accelerator Boosts.\";\n    }\n    if (i === 2) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/10) Multipliers every 10th level, +0.25% Multipliers per level. Tax growth is delayed more for each level!\";\n        }\n        document.getElementById(\"runeshowpower2\").textContent = \"Duplication Rune Bonus: \" + \"+\" + format(Math.floor(G['rune2level'] * m / 10) * Math.floor(1 + G['rune2level'] * m / 10) / 2) + \" Multipliers, +\" + format(m * G['rune2level'] / 4, 1, true) + \"% Multipliers, -\" + (99.9 * (1 - Math.pow(6, -(G['rune2level'] * m) / 1000))).toPrecision(4) + \"% Tax Growth.\";\n    }\n    if (i === 3) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + (Level/2)^2 * 2^(Level/2) / 256)x Crystal Production. +1 free level for each Crystal upgrade per 16 levels!\";\n        }\n        document.getElementById(\"runeshowpower3\").textContent = \"Prism Rune Bonus: \" + \"All Crystal Producer production multiplied by \" + format(Decimal.pow(G['rune3level'] * m / 2, 2).times(Decimal.pow(2, G['rune3level'] * m / 2 - 8)).add(1), 3) + \", gain +\" + format(Math.floor(G['rune3level'] / 16 * m)) + \" free crystal levels.\";\n    }\n    if (i === 4) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+0.125% building cost growth delay per level, +0.0625% offering recycle chance per level [MAX: 25%], 2^((1000 - Level)/1100) Tax growth multiplier AFTER level 400\";\n        }\n        document.getElementById(\"runeshowpower4\").textContent = \"Thrift Rune Bonus: \" + \"Delay all producer cost increases by \" + (G['rune4level'] / 8 * m).toPrecision(3) + \"%. Offering recycle chance: +\" + Math.min(25, G['rune4level'] / 16) + \"%. -\" + (99 * (1 - Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100)))).toPrecision(4) + \"% Tax Growth\";\n    }\n    if (i === 5) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + level/200)x Obtainium, (1 + Level^2/2500)x Ant Hatch Speed, +0.005 base offerings for each tier per level\";\n        }\n        document.getElementById(\"runeshowpower5\").textContent = \"S. Intellect Rune Bonus: \" + \"Obtainium gain x\" + format((1 + G['rune5level'] / 200 * m * SILevelMult), 2, true) + \". Ant Speed: x\" + format(1 + Math.pow(G['rune5level'] * m * SILevelMult, 2) / 2500) + \". Base Offerings: +\" + format((G['rune5level'] * m * SILevelMult * 0.005), 3, true);\n    }\n    if (i === 6) {\n        if (updatelevelup) {\n            document.getElementById(\"runeshowlevelup\").textContent = \"+0.2% Quarks, +2% all cube types per level! Start with +10% Quarks.\";\n        }\n        document.getElementById(\"runeshowpower6\").textContent = \"IA Rune Bonus: \" + \" Quark Gain +\" + format(10 + 15 / 75 * player.runelevels[5], 1, true) + \"%, Ascensions give +\" + format(2 * player.runelevels[5], 0, true) + \"% more of all cube types.\";\n    }\n    if (updatelevelup) {\n        const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount);\n        let offerings = 0;\n        let j = 0;\n        while (offerings < player.runeshards && j < arr.length) {\n            offerings += arr[j];\n            j++;\n        }\n        const check = player.offeringbuyamount === j && offerings <= player.runeshards;\n        const s = player.offeringbuyamount === 1 ? \"once\" : `${check ? j : Math.max(j - 1, 0)} times`;\n        document.getElementById(\"runeDisplayInfo\").textContent = `+${format(amountPerOffering)} EXP per offering. ${format(offerings)} Offerings to level up ${s}.`;\n    }\n};\nexport const resetofferings = (input) => {\n    player.runeshards += calculateOfferings(input);\n};\nexport const redeemShards = (runeIndexPlusOne, auto = false, cubeUpgraded = 0) => {\n    const runeIndex = runeIndexPlusOne - 1;\n    const unlockedRune = [\n        true,\n        player.achievements[38] > 0.5,\n        player.achievements[44] > 0.5,\n        player.achievements[102] > 0.5,\n        player.researches[82] > 0.5,\n        player.shopUpgrades.infiniteAscent,\n        false,\n    ];\n    let levelsToAdd = player.offeringbuyamount;\n    if (auto) {\n        levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAuto);\n    }\n    if (auto && cubeUpgraded > 0) {\n        levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1));\n    }\n    let levelsAdded = 0;\n    if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune[runeIndex]) {\n        let all = 0;\n        const maxLevel = calculateMaxRunes(runeIndex + 1);\n        const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd);\n        let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0));\n        if (cubeUpgraded > 0) {\n            toSpendTotal = Math.min(player.runeshards, cubeUpgraded);\n        }\n        const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true);\n        const a = player.upgrades[71] / 25;\n        const add = fact[0] - a * player.runelevels[runeIndex];\n        const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1);\n        while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\n            const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex];\n            const expPerOff = (add + a * player.runelevels[runeIndex]) * mult;\n            let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff));\n            if (toSpend === undefined || isNaN(toSpend)) {\n                toSpend = toSpendTotal;\n            }\n            toSpendTotal -= toSpend;\n            player.runeshards -= toSpend;\n            player.runeexp[runeIndex] += toSpend * expPerOff;\n            all += toSpend;\n            while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\n                player.runelevels[runeIndex] += 1;\n                levelsAdded++;\n            }\n        }\n        for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\n            if (unlockedRune[runeToUpdate]) {\n                if (runeToUpdate !== runeIndex) {\n                    player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true);\n                }\n                while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\n                    player.runelevels[runeToUpdate] += 1;\n                }\n            }\n        }\n        displayRuneInformation(runeIndexPlusOne);\n    }\n    calculateRuneLevels();\n    if (player.runeshards < 0 || player.runeshards === undefined) {\n        player.runeshards = 0;\n    }\n};\nexport const calculateOfferingsToLevelXTimes = (runeIndex, runeLevel, levels) => {\n    let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex];\n    const maxLevel = calculateMaxRunes(runeIndex + 1);\n    const arr = [];\n    let sum = 0;\n    const off = player.runeshards;\n    let levelsAdded = 0;\n    const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true);\n    const a = player.upgrades[71] / 25;\n    const add = fact[0] - a * runeLevel;\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1);\n    while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\n        const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult;\n        const amount = Math.ceil(exp / expPerOff);\n        sum += amount;\n        arr.push(amount);\n        levelsAdded += 1;\n        exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1);\n    }\n    return arr;\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { Confirm, revealStuff } from './UpdateHTML';\nimport { calculateTimeAcceleration } from './Calculate';\nconst shopData = {\n    offeringPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999,\n        type: \"consumable\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instantly gain 2 real life hours of Offerings, based on your all time best Offerings/sec and speed acceleration!\",\n    },\n    obtainiumPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999,\n        type: \"consumable\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Instantly gain 2 real life hours of Obtainium, based on your all time best Obtainium/sec and speed acceleration!\",\n    },\n    offeringEX: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Gain +4% more offerings from all sources!\",\n    },\n    offeringAuto: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 1,\n        description: \"Automatically pour Offerings into a rune. 1st level unlocks feature, and each level increases Offering gain by 2%. Every second, 2^(Level) levels worth of offerings are spent. [First Level Cannot be refunded!]\",\n    },\n    obtainiumEX: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Gain +4% more obtainium from all sources!\",\n    },\n    obtainiumAuto: {\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 1,\n        description: \"Automatically pour Obtainium into a research. 1st level unlocks feature, and each level increases Obtainium gain by 2%. Every reincarnation, dump all Obtainium into research until maxed. [First Level Cannot be Refunded!]\",\n    },\n    instantChallenge: {\n        price: 300,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"T and R challenges don't cause resets if retry is enabled and gain up to 10 completions per tick. Addtionally, instantly gain T challenge completions up to highest completed when exiting R challenges. [Cannot be Refunded!]\"\n    },\n    antSpeed: {\n        price: 200,\n        priceIncrease: 25,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Each level gives a 1.125x speed multiplier to all Ant tiers' production! Short and simple.\"\n    },\n    cashGrab: {\n        price: 100,\n        priceIncrease: 40,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"This is a cash grab but it gives a couple cool stats. +1% production per level to Offerings and Obtainium.\",\n    },\n    shopTalisman: {\n        price: 1500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Permanently unlock a Shop talisman! [Warning: you can't refund this and this is VERY expensive to level. Be sure you want to buy it!]\",\n    },\n    seasonPass: {\n        price: 500,\n        priceIncrease: 75,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Wow! Cubes is giving you a deal: Buy this totally fair Season Pass and gain +1.5% cubes and tesseracts per level when you ascend!\",\n    },\n    challengeExtension: {\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 5,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Using some amazing trick, you manage to increase your Reincarnation Challenge cap by 2 for each level! [Cannot be Refunded!]\",\n    },\n    challengeTome: {\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 15,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"The extended cut: This fifth forgotten tome gives you an additional 20 Million exponent reduction on the Challenge 10 requirement per level. [Cannot be Refunded!]\",\n    },\n    cubeToQuark: {\n        price: 2000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Are your quark gains from Cubes wimpy? Well, buy this for +50% quarks from opening Wow! Cubes, forever!\"\n    },\n    tesseractToQuark: {\n        price: 3500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Are your quark gains from Tesseracts wimpy? Well, buy this for +50% quarks from opening Wow! Tesseracts, forever!\"\n    },\n    hypercubeToQuark: {\n        price: 5000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Are your quark gains from Hypercubes wimpy? Well, buy this for +50% quarks from opening Wow! Hypercubes, forever!\"\n    },\n    seasonPass2: {\n        price: 2500,\n        priceIncrease: 250,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Five times the price gouge, twice the fun! +1% Wow! Hypercubes and Platonic Cubes per level.\"\n    },\n    seasonPass3: {\n        price: 5000,\n        priceIncrease: 500,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"Okay, now this is just rediculous. +1% Wow! Hepteracts and Octeracts per level!\"\n    },\n    chronometer: {\n        price: 2000,\n        priceIncrease: 500,\n        maxLevel: 100,\n        type: \"upgrade\",\n        refundable: true,\n        refundMinimumLevel: 0,\n        description: \"You know, those ascensions are kinda slow. Why don't I give you a +1% speedup to the timer per level?\"\n    },\n    infiniteAscent: {\n        price: 50000,\n        priceIncrease: 9999999,\n        maxLevel: 1,\n        type: \"upgrade\",\n        refundable: false,\n        refundMinimumLevel: 0,\n        description: \"Okay, for an exhorbinant amount, you can obtain the 6th rune, which gives +20% Quarks and +200% all cube types when maxxed!\"\n    }\n};\nexport const getShopCosts = (input) => {\n    if (shopData[input].type === \"consumable\" || shopData[input].maxLevel === 1) {\n        return shopData[input].price;\n    }\n    else {\n        const priceIncreaseMult = player.shopUpgrades[input];\n        return shopData[input].price + shopData[input].priceIncrease * priceIncreaseMult;\n    }\n};\nexport const shopDescriptions = (input) => {\n    const rofl = document.getElementById(\"quarkdescription\");\n    const lmao = document.getElementById(\"quarkcost\");\n    const lol = document.getElementById(\"quarkeffect\");\n    rofl.textContent = shopData[input].description;\n    lmao.textContent = \"Cost: \" + format(getShopCosts(input)) + \" Quarks\";\n    switch (input) {\n        case \"offeringPotion\":\n            lol.textContent = \"Gain \" + format((7200 * player.offeringpersecond * calculateTimeAcceleration()), 0, true) + \" Offerings.\";\n            break;\n        case \"obtainiumPotion\":\n            lol.textContent = \"Gain \" + format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration()), 0, true) + \" Obtainium.\";\n            break;\n        case \"offeringEX\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.offeringEX, 2, true) + \"% more Offerings!\";\n            break;\n        case \"offeringAuto\":\n            lol.textContent = \"CURRENT Effect: Per 10 seconds, pour \" + format(Math.pow(2, 1 + player.shopUpgrades.offeringAuto)) + \" Offerings. +\" + format(2 * player.shopUpgrades.offeringAuto, 2) + \"% Offerings.\";\n            break;\n        case \"obtainiumEX\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.obtainiumEX, 2, true) + \"% more Obtainium!\";\n            break;\n        case \"obtainiumAuto\":\n            lol.textContent = \"CURRENT Effect: Try to upgrade research each reincarnation, and gain \" + format(player.shopUpgrades.obtainiumAuto * 2, 2) + \"% more Obtainium.\";\n            break;\n        case \"instantChallenge\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"antSpeed\":\n            lol.textContent = \"CURRENT Effect: All Ants' Speed x\" + format(Math.pow(1.125, player.shopUpgrades.antSpeed), 2);\n            break;\n        case \"cashGrab\":\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(player.shopUpgrades.cashGrab, 2) + \"% more Obtainium and Offerings!\";\n            break;\n        case \"shopTalisman\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"seasonPass\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(3 / 2 * player.shopUpgrades.seasonPass) + \"% more Wow! Cubes and Tesseracts.\";\n            break;\n        case \"challengeExtension\":\n            lol.textContent = \"CURRENT Effect: Reincarnation Challenges may be completed an additional \" + format(2 * player.shopUpgrades.challengeExtension) + \" times.\";\n            break;\n        case \"challengeTome\":\n            lol.textContent = \"CURRENT Effect: Challenge 10 Exponent Requirement reduced by \" + format(20 * player.shopUpgrades.challengeTome) + \" Million.\";\n            break;\n        case \"cubeToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"tesseractToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"hypercubeToQuark\":\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\n            break;\n        case \"seasonPass2\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(player.shopUpgrades.seasonPass2) + \"% more Hypercubes and Platonic Cubes.\";\n            break;\n        case \"seasonPass3\":\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(player.shopUpgrades.seasonPass3) + \"% more Hepteracts and Octarets.\";\n            break;\n        case \"chronometer\":\n            lol.textContent = \"CURRENT Effect: Ascension timer runs \" + format(player.shopUpgrades.chronometer) + \"% faster.\";\n            break;\n        case \"infiniteAscent\":\n            lol.textContent = \"CURRENT Effect: Idk, depends if you bought it or not.\";\n            break;\n    }\n};\nexport const buyShopUpgrades = (input) => __awaiter(void 0, void 0, void 0, function* () {\n    let p = true;\n    if (G['shopConfirmation']) {\n        p = yield Confirm(\"Are you sure you'd like to purchase \" + input + \" for \" + format(getShopCosts(input)) + \" Quarks? Press 'OK' to finalize purchase.\");\n    }\n    if (p) {\n        if (Number(player.worlds) >= getShopCosts(input) && player.shopUpgrades[input] < shopData[input].maxLevel) {\n            player.worlds.sub(getShopCosts(input));\n            player.shopUpgrades[input] += 1;\n            console.log(\"purchase successful for 1 level of '\" + input + \"'!\");\n        }\n        else {\n            console.log(\"purchase attempted for 1 level of '\" + input + \"' but failed!\");\n        }\n    }\n    revealStuff();\n});\nexport const useConsumable = (input) => __awaiter(void 0, void 0, void 0, function* () {\n    const p = G['shopConfirmation']\n        ? yield Confirm('Would you like to use this potion?')\n        : true;\n    if (p) {\n        switch (input) {\n            case \"offeringPotion\":\n                if (player.shopUpgrades.offeringPotion > 0.5) {\n                    player.shopUpgrades.offeringPotion -= 1;\n                    player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration());\n                }\n                break;\n            case \"obtainiumPotion\":\n                if (player.shopUpgrades.obtainiumPotion > 0.5) {\n                    player.shopUpgrades.obtainiumPotion -= 1;\n                    player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration());\n                }\n                break;\n        }\n    }\n});\nexport const resetShopUpgrades = () => __awaiter(void 0, void 0, void 0, function* () {\n    const p = G['shopConfirmation']\n        ? yield Confirm(\"This will fully refund most of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?\")\n        : true;\n    if (p) {\n        player.worlds.sub(15);\n        let initialQuarks = player.worlds;\n        for (const shopItem in shopData) {\n            const key = shopItem;\n            if (shopData[key].refundable && player.shopUpgrades[key] > shopData[key].refundMinimumLevel) {\n                const doNotRefund = shopData[key].price * shopData[key].refundMinimumLevel +\n                    shopData[key].priceIncrease * (shopData[key].refundMinimumLevel) * (shopData[key].refundMinimumLevel - 1) / 2;\n                player.worlds.add(shopData[key].price * player.shopUpgrades[key] +\n                    shopData[key].priceIncrease * (player.shopUpgrades[key]) * (player.shopUpgrades[key] - 1) / 2\n                    - doNotRefund);\n                console.log(\"Successfully refunded \" + format(+player.worlds - +initialQuarks) + \" Quarks from '\" + shopItem + \"'. You now have \" + format(player.worlds) + \" Quarks.\");\n                player.shopUpgrades[key] = shopData[key].refundMinimumLevel;\n                initialQuarks = player.worlds;\n            }\n        }\n    }\n});\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings } from './Calculate';\nexport const loadStatisticsAccelerator = () => {\n    document.getElementById(\"sA1\").textContent = \"+\" + format(G['freeUpgradeAccelerator'], 0, false);\n    document.getElementById(\"sA2\").textContent = \"+\" + format(G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]), 0, false);\n    document.getElementById(\"sA3\").textContent = \"+\" + format(Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 10, 1.1)), 0, true);\n    document.getElementById(\"sA4\").textContent = \"x\" + format(1 + G['rune1level'] * 1 / 200 * G['effectiveLevelMult'], 3, true);\n    document.getElementById(\"sA5\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true);\n    document.getElementById(\"sA6\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true);\n    document.getElementById(\"sA7\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[1], 3, true);\n    document.getElementById(\"sA8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true);\n    document.getElementById(\"sA9\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[86], 3, true);\n    document.getElementById(\"sA10\").textContent = \"x\" + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true);\n    document.getElementById(\"sA11\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true);\n    document.getElementById(\"sA12\").textContent = format(G['freeAccelerator'], 0, true);\n};\nexport const loadStatisticsMultiplier = () => {\n    document.getElementById(\"sM1\").textContent = \"+\" + format(G['freeUpgradeMultiplier'], 0, true);\n    document.getElementById(\"sM2\").textContent = \"+\" + format(Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) * Math.floor(10 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100, 0, true);\n    document.getElementById(\"sM3\").textContent = \"x\" + format(1 + G['rune2level'] / 200 * G['effectiveLevelMult'], 3, true);\n    document.getElementById(\"sM4\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true);\n    document.getElementById(\"sM5\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true);\n    document.getElementById(\"sM6\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[2], 3, true);\n    document.getElementById(\"sM7\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true);\n    document.getElementById(\"sM8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[87], 3, true);\n    document.getElementById(\"sM9\").textContent = \"x\" + format(calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39), 2, true);\n    document.getElementById(\"sM10\").textContent = \"x\" + format(G['cubeBonusMultiplier'][2], 3, true);\n    document.getElementById(\"sM11\").textContent = \"x\" + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true);\n    document.getElementById(\"sM12\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true);\n    document.getElementById(\"sM13\").textContent = format(G['freeMultiplier'], 3, true);\n};\nexport const loadStatisticsCubeMultipliers = () => {\n    const arr = calculateCubeMultiplier(false);\n    const map = {\n        1: { acc: 4, desc: \"Ascension Timer Multiplier\" },\n        2: { acc: 2, desc: \"Season pass:\" },\n        3: { acc: 4, desc: \"Research 5x19:\" },\n        4: { acc: 4, desc: \"Research 5x20:\" },\n        5: { acc: 2, desc: \"Cube upgrade 1x1:\" },\n        6: { acc: 2, desc: \"Cube upgrade 2x1:\" },\n        7: { acc: 2, desc: \"Cube upgrade 3x1:\" },\n        8: { acc: 2, desc: \"Cube upgrade 4x1:\" },\n        9: { acc: 2, desc: \"Cube upgrade 5x1:\" },\n        10: { acc: 2, desc: \"Research 6x12:\" },\n        11: { acc: 3, desc: \"Research 7x2:\" },\n        12: { acc: 3, desc: \"Research 7x17:\" },\n        13: { acc: 3, desc: \"Research 8x7:\" },\n        14: { acc: 3, desc: \"Research 8x22:\" },\n        15: { acc: 3, desc: \"Ascension Count Achievement:\" },\n        16: { acc: 4, desc: \"Bought Mortuus Est ants (R8x17):\" },\n        17: { acc: 4, desc: \"Duplication Spirit Power:\" },\n        18: { acc: 5, desc: \"Research 8x25:\" },\n        19: { acc: 4, desc: \"Constant upgrade 10:\" },\n        20: { acc: 2, desc: \"Cube upgrade 3x10:\" },\n        21: { acc: 2, desc: \"Number Achievement 4 Bonus:\" },\n        22: { acc: 2, desc: \"Number Achievement 6 Bonus:\" },\n        23: { acc: 2, desc: \"Challenge 11 Ach:\" },\n        24: { acc: 4, desc: \"ASCENDED Achievement:\" },\n        25: { acc: 2, desc: \"Sun & Moon Achievements:\" },\n        26: { acc: 4, desc: \"Cube Shards:\" },\n        27: { acc: 4, desc: \"Challenge 15 Reward:\" },\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const statCMi = document.getElementById(`statCM${i + 1}`);\n        statCMi.childNodes[0].textContent = map[i + 1].desc;\n        document.getElementById(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    document.getElementById(\"sCMT\").textContent = `x${format(calculateCubeMultiplier(), 3)}`;\n};\nexport const loadStatisticsOfferingMultipliers = () => {\n    const arr = calculateOfferings(\"prestige\", false);\n    const map = {\n        1: { acc: 3, desc: \"Alchemy Achievement 5:\" },\n        2: { acc: 3, desc: \"Alchemy Achievement 6:\" },\n        3: { acc: 3, desc: \"Alchemy Achievement 7:\" },\n        4: { acc: 3, desc: \"Diamond Upgrade 4x3:\" },\n        5: { acc: 3, desc: \"Particle Upgrade 3x5:\" },\n        6: { acc: 3, desc: \"Auto Offering Shop Upgrade:\" },\n        7: { acc: 3, desc: \"Offering EX Shop Upgrade:\" },\n        8: { acc: 3, desc: \"Cash Grab Shop Upgrade:\" },\n        9: { acc: 3, desc: \"Research 4x10:\" },\n        10: { acc: 3, desc: \"Sacrificium Formicidae:\" },\n        11: { acc: 3, desc: \"Plutus Cube Tribute:\" },\n        12: { acc: 3, desc: \"Constant Upgrade 3:\" },\n        13: { acc: 3, desc: \"Research 6x24,8x4:\" },\n        14: { acc: 3, desc: \"Challenge 12:\" },\n        15: { acc: 3, desc: \"Research 8x25:\" },\n        16: { acc: 3, desc: \"Ascension Count Achievement:\" },\n        17: { acc: 3, desc: \"Sun and Moon Achievements:\" },\n        18: { acc: 3, desc: \"Cube Upgrade 5x6:\" },\n        19: { acc: 3, desc: \"Cube Upgrade 5x10:\" },\n        20: { acc: 3, desc: \"Platonic ALPHA:\" },\n        21: { acc: 3, desc: \"Platonic BETA:\" },\n        22: { acc: 3, desc: \"Platonic OMEGA:\" },\n        23: { acc: 3, desc: \"Challenge 15:\" },\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const statOffi = document.getElementById(`statOff${i + 1}`);\n        statOffi.childNodes[0].textContent = map[i + 1].desc;\n        document.getElementById(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    document.getElementById(\"sOffT\").textContent = `x${format(calculateOfferings(\"prestige\", true, true), 3)}`;\n};\nexport const c15RewardUpdate = () => {\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 1.5e15, 2e15, 3e15, 5e15, 1e16];\n    const keys = Object.keys(G['challenge15Rewards']);\n    const e = player.challenge15Exponent;\n    for (const obj in G['challenge15Rewards']) {\n        G['challenge15Rewards'][obj] = 1;\n    }\n    if (e >= exponentRequirements[0]) {\n        G['challenge15Rewards'][keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2);\n    }\n    if (e >= exponentRequirements[1]) {\n        G['challenge15Rewards'][keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2);\n    }\n    if (e >= exponentRequirements[2]) {\n        G['challenge15Rewards'][keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2);\n    }\n    if (e >= exponentRequirements[3]) {\n        G['challenge15Rewards'][keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2));\n    }\n    if (e >= exponentRequirements[4]) {\n        G['challenge15Rewards'][keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75);\n    }\n    if (e >= exponentRequirements[5]) {\n        G['challenge15Rewards'][keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75);\n    }\n    if (e >= exponentRequirements[6]) {\n        G['challenge15Rewards'][keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2);\n    }\n    if (e >= exponentRequirements[7]) {\n        G['challenge15Rewards'][keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2);\n    }\n    if (e >= exponentRequirements[8]) {\n        G['challenge15Rewards'][keys[8]] = 1 + Math.pow(e / 2e4, 1.5);\n    }\n    if (e >= exponentRequirements[9]) {\n        G['challenge15Rewards'][keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2);\n    }\n    if (e >= exponentRequirements[10]) {\n        G['challenge15Rewards'][keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2);\n    }\n    if (e >= exponentRequirements[11]) {\n        G['challenge15Rewards'][keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2));\n    }\n    if (e >= exponentRequirements[12]) {\n        G['challenge15Rewards'][keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2));\n    }\n    if (e >= exponentRequirements[13]) {\n        G['challenge15Rewards'][keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4);\n    }\n    if (e >= exponentRequirements[14]) {\n        G['challenge15Rewards'][keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) / Math.log(2);\n    }\n    if (e >= exponentRequirements[15]) {\n        G['challenge15Rewards'][keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2);\n    }\n    if (e >= exponentRequirements[16]) {\n        G['challenge15Rewards'][keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2);\n    }\n    if (e >= exponentRequirements[17]) {\n        G['challenge15Rewards'][keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2);\n    }\n    if (e >= exponentRequirements[18]) {\n        G['challenge15Rewards'][keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4);\n    }\n    if (e >= exponentRequirements[19]) {\n        G['challenge15Rewards'][keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3);\n    }\n    if (e >= exponentRequirements[20]) {\n        G['challenge15Rewards'][keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2);\n    }\n    if (e >= exponentRequirements[21]) {\n        G['challenge15Rewards'][keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4);\n    }\n    if (e >= exponentRequirements[22]) {\n        G['challenge15Rewards'][keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 4);\n    }\n    if (e >= exponentRequirements[23]) {\n        G['challenge15Rewards'][keys[23]] = 1 + 1 / 100 * Math.log(e * 32 / 1e11) / Math.log(2);\n    }\n    if (e >= exponentRequirements[24]) {\n        G['challenge15Rewards'][keys[24]] = 2;\n    }\n    if (e >= exponentRequirements[25]) {\n        player.hepteractCrafts.challenge.unlock('the Hepteract of Challenge');\n    }\n    if (e >= exponentRequirements[26]) {\n        player.hepteractCrafts.abyss.unlock('the Hepteract of the Abyss');\n    }\n    if (e >= exponentRequirements[27]) {\n        player.hepteractCrafts.accelerator.unlock('the Hepteract of Way Too Many Accelerators');\n    }\n    if (e >= exponentRequirements[28]) {\n        player.hepteractCrafts.acceleratorBoost.unlock('the Hepteract of Way Too Many Accelerator Boosts');\n    }\n    if (e >= exponentRequirements[29]) {\n        player.hepteractCrafts.multiplier.unlock('the Hepteract of Way Too Many Multipliers');\n    }\n    updateDisplayC15Rewards();\n};\nconst updateDisplayC15Rewards = () => {\n    document.getElementById('c15Reward0Num').textContent = format(player.challenge15Exponent, 0, true);\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 1.5e15, 2e15, 3e15, 5e15, 1e16];\n    const values = Object.values(G['challenge15Rewards']);\n    let keepExponent = 'None';\n    for (let i = 0; i < exponentRequirements.length; i++) {\n        if (keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]) {\n            keepExponent = exponentRequirements[i];\n        }\n        if (player.challenge15Exponent >= exponentRequirements[i] && i < 24) {\n            document.getElementById('c15Reward' + (i + 1) + 'Num').textContent = format(100 * values[i] - 100, 2, true);\n        }\n        if (i >= 24 && player.challenge15Exponent >= exponentRequirements[i]) {\n            document.getElementById('c15Reward' + (i + 1) + 'Num').textContent = 'Unlocked!';\n        }\n        document.getElementById('c15Reward' + (i + 1)).style.display = (player.challenge15Exponent >= exponentRequirements[i]) ? 'block' : 'none';\n        document.getElementById('c15RewardList').textContent = typeof keepExponent === 'string'\n            ? 'You have unlocked all reward types from Challenge 15!'\n            : 'Next reward type requires ' + format(keepExponent, 0, true) + ' exponent.';\n    }\n};\n","import { player, format, formatTimeShort } from './Synergism';\nimport Decimal from 'break_infinity.js';\nimport { antSacrificePointsToMultiplier } from './Ants';\nimport { Synergism } from './Events';\nconst formatDecimalSource = (numOrStr) => {\n    return format(typeof numOrStr === \"string\" ? new Decimal(numOrStr) : numOrStr);\n};\nconst conditionalFormatPerSecond = (numOrStr, data) => {\n    if (typeof numOrStr === \"string\") {\n        return formatDecimalSource(numOrStr);\n    }\n    if (typeof (numOrStr) === \"number\" && player.historyShowPerSecond && data.seconds !== 0) {\n        if (numOrStr === 0) {\n            return \"0.000/s\";\n        }\n        return format(numOrStr / data.seconds, 3, numOrStr < 1000) + \"/s\";\n    }\n    return format(numOrStr);\n};\nconst historyGains = {\n    offerings: {\n        img: \"Pictures/Offering.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Offerings\"\n    },\n    obtainium: {\n        img: \"Pictures/Obtainium.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Obtainium\"\n    },\n    particles: {\n        img: \"Pictures/Particle.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Particles\"\n    },\n    diamonds: {\n        img: \"Pictures/Diamond.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Diamonds\"\n    },\n    mythos: {\n        img: \"Pictures/Mythos.png\",\n        formatter: formatDecimalSource,\n        imgTitle: \"Mythos\"\n    },\n    wowTesseracts: {\n        img: \"Pictures/WowTessaract.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Tesseracts\"\n    },\n    wowHypercubes: {\n        img: \"Pictures/WowHypercube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Hypercubes\",\n        onlyif: () => player.challengecompletions[13] > 0\n    },\n    wowCubes: {\n        img: \"Pictures/WowCube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Wow! Cubes\"\n    },\n    wowPlatonicCubes: {\n        img: \"Pictures/Platonic Cube.png\",\n        formatter: conditionalFormatPerSecond,\n        imgTitle: \"Platonic Cubes\",\n        onlyif: () => player.challengecompletions[14] > 0,\n    },\n};\nconst historyGainsOrder = [\n    \"offerings\", \"obtainium\",\n    \"particles\", \"diamonds\", \"mythos\",\n    \"wowCubes\", \"wowTesseracts\", \"wowHypercubes\", \"wowPlatonicCubes\",\n];\nconst historyKinds = {\n    \"antsacrifice\": { img: \"Pictures/AntSacrifice.png\" },\n    \"prestige\": { img: \"Pictures/Transparent Pics/Prestige.png\" },\n    \"transcend\": { img: \"Pictures/Transparent Pics/Transcend.png\" },\n    \"reincarnate\": { img: \"Pictures/Transparent Pics/Reincarnate.png\" },\n    \"ascend\": { img: \"Pictures/questionable.png\" },\n};\nconst resetHistoryTableMapping = {\n    \"ants\": \"historyAntsTable\",\n    \"reset\": \"historyResetTable\",\n    \"ascend\": \"historyAscendTable\",\n};\nconst resetHistoryCorruptionImages = [\n    \"Pictures/Divisiveness Level 7.png\",\n    \"Pictures/Maladaption Lvl 7.png\",\n    \"Pictures/Laziness Lvl 7.png\",\n    \"Pictures/Hyperchallenged Lvl 7.png\",\n    \"Pictures/Scientific Illiteracy Lvl 7.png\",\n    \"Pictures/Deflation Lvl 7.png\",\n    \"Pictures/Extinction Lvl 7.png\",\n    \"Pictures/Drought Lvl 7.png\",\n    \"Pictures/Financial Collapse Lvl 7.png\"\n];\nconst resetHistoryCorruptionTitles = [\n    \"Divisiveness [Multipliers]\",\n    \"Maladaption [Accelerators]\",\n    \"Spacial Dilation [Time]\",\n    \"Hyperchallenged [Challenge Requirements]\",\n    \"Scientific Illiteracy [Obtainium]\",\n    \"Market Deflation [Diamonds]\",\n    \"Extinction [Ants]\",\n    \"Drought [Offering EXP]\",\n    \"Financial Recession [Coins]\"\n];\nconst extractStringExponent = (str) => {\n    let m;\n    return (m = str.match(/e\\+?(.+)/)) !== null ? `e${m[1]}` : str;\n};\nconst resetHistoryAdd = (category, data) => {\n    if (player.history[category] === undefined) {\n        player.history[category] = [];\n    }\n    while (player.history[category].length > (player.historyCountMax - 1)) {\n        player.history[category].shift();\n    }\n    player.history[category].push(data);\n    resetHistoryPushNewRow(category, data);\n};\nSynergism.on('historyAdd', resetHistoryAdd);\nconst resetHistoryPushNewRow = (category, data) => {\n    const row = resetHistoryRenderRow(category, data);\n    const table = document.getElementById(resetHistoryTableMapping[category]);\n    const tbody = table.querySelector(\"tbody\");\n    tbody.insertBefore(row, tbody.childNodes[0]);\n    while (tbody.childNodes.length > player.historyCountMax) {\n        tbody.removeChild(tbody.lastChild);\n    }\n};\nconst resetHistoryRenderRow = (_category, data) => {\n    let colsUsed = 1;\n    const row = document.createElement(\"tr\");\n    let rowContentHtml = \"\";\n    const kindMeta = historyKinds[data.kind];\n    const localDate = new Date(data.date).toLocaleString();\n    rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img src=\"${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`;\n    const gains = [];\n    const dataIntersection = data;\n    historyGainsOrder.forEach((listable) => {\n        if (Object.prototype.hasOwnProperty.call(data, listable)) {\n            const gainInfo = historyGains[listable];\n            if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\n                return;\n            }\n            const formatter = gainInfo.formatter || (() => { });\n            const str = `<img alt=\"${gainInfo.imgTitle}\" src=\"${gainInfo.img}\" title=\"${gainInfo.imgTitle}\">${formatter(dataIntersection[listable], data)}`;\n            gains.push(str);\n        }\n    });\n    const extra = [];\n    if (data.kind === \"antsacrifice\") {\n        const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore);\n        const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter);\n        const diff = newMulti - oldMulti;\n        extra.push(`<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`, `<span title=\"+${formatDecimalSource(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/GalacticCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalSource(data.crumbs))}</span>`, `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/Transparent Pics/ELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`);\n    }\n    else if (data.kind === \"ascend\") {\n        extra.push(`<img alt=\"C10\" src=\"Pictures/Transparent Pics/ChallengeTen.png\" title=\"Challenge 10 completions\">${data.c10Completions}`);\n        const corruptions = resetHistoryFormatCorruptions(data);\n        if (corruptions !== null) {\n            extra.push(corruptions[0]);\n            extra.push(corruptions[1]);\n        }\n    }\n    colsUsed += gains.length;\n    rowContentHtml += gains.reduce((acc, value) => {\n        return `${acc}<td class=\"history-gain\">${value}</td>`;\n    }, \"\");\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${6 - colsUsed}\"></td>`;\n    rowContentHtml += extra.reduce((acc, value) => {\n        return `${acc}<td class=\"history-extra\">${value}</td>`;\n    }, \"\");\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`;\n    row.innerHTML = rowContentHtml;\n    return row;\n};\nconst resetHistoryRenderFullTable = (categoryToRender, targetTable) => {\n    const tbody = targetTable.querySelector(\"tbody\");\n    tbody.innerHTML = \"\";\n    if (!player.history[categoryToRender]) {\n        return;\n    }\n    if (player.history[categoryToRender].length > 0) {\n        for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\n            const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i]);\n            tbody.appendChild(row);\n        }\n    }\n};\nexport const resetHistoryRenderAllTables = () => {\n    Object.keys(resetHistoryTableMapping).forEach(key => resetHistoryRenderFullTable(key, document.getElementById(resetHistoryTableMapping[key])));\n};\nexport const resetHistoryTogglePerSecond = () => {\n    player.historyShowPerSecond = !player.historyShowPerSecond;\n    resetHistoryRenderAllTables();\n    const button = document.getElementById(\"historyTogglePerSecondButton\");\n    button.textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\n    button.style.borderColor = player.historyShowPerSecond ? \"green\" : \"red\";\n};\nconst resetHistoryFormatCorruptions = (data) => {\n    let score = \"Score: \" + format(data.corruptionScore, 0, false);\n    let corruptions = \"\";\n    for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\n        const corruptionIdx = i + 1;\n        if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\n            corruptions += ` <img alt=\"${resetHistoryCorruptionTitles[i]}\" src=\"${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`;\n        }\n    }\n    if (data.currentChallenge !== undefined) {\n        score += ` / C${data.currentChallenge}`;\n    }\n    return [score, corruptions];\n};\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nexport const calculatePlatonicBlessings = () => {\n    const platonicArray = Object.values(player.platonicBlessings);\n    const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4];\n    for (let i = 0; i < platonicArray.length; i++) {\n        let power = 1;\n        let mult = 1;\n        if (platonicArray[i] >= DRThreshold[i]) {\n            power = G['platonicDRPower'][i];\n            mult *= Math.pow(DRThreshold[i], (1 - G['platonicDRPower'][i]));\n        }\n        G['platonicBonusMultiplier'][i] = 1 + mult * G['platonicCubeBase'][i] * Math.pow(platonicArray[i], power);\n    }\n};\n","import { player, format } from \"./Synergism\";\nimport { calculateCubeBlessings, calculateSummationNonLinear } from \"./Calculate\";\nimport { upgradeupdate } from \"./Upgrades\";\nimport { revealStuff } from \"./UpdateHTML\";\nimport { Globals as G } from \"./Variables\";\nconst distributions = {\n    cubes: {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    },\n    tesseracts: {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    },\n    hypercubes: {\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n    },\n    platonics: {\n        cubes: { weight: 13200, pdf: (x) => 0 <= x && x <= 33.000 },\n        tesseracts: { weight: 13200, pdf: (x) => 33.000 < x && x <= 66.000 },\n        hypercubes: { weight: 13200, pdf: (x) => 66.000 < x && x <= 99.000 },\n        platonics: { weight: 396, pdf: (x) => 99.000 < x && x <= 99.990 },\n        hypercubeBonus: { weight: 1, pdf: (x) => 99.990 < x && x <= 99.9925 },\n        taxes: { weight: 1, pdf: (x) => 99.9925 < x && x <= 99.995 },\n        scoreBonus: { weight: 1, pdf: (x) => 99.995 < x && x <= 99.9975 },\n        globalSpeed: { weight: 1, pdf: (x) => 99.9975 < x && x <= 100 },\n    }\n};\nexport const cubeDistributions = (k) => distributions[k];\nexport const openCubes = (value, cubeName, max = false) => {\n    return [value, cubeName, max];\n};\nconst cubeUpgradeName = [\n    \"Wow! I want more Cubes.\",\n    \"Wow! I want passive Offering gain too.\",\n    \"Wow! I want better passive Obtainium\",\n    \"Wow! I want to keep mythos building autobuyers.\",\n    \"Wow! I want to keep mythos upgrade autobuyer.\",\n    \"Wow! I want to keep auto mythos gain.\",\n    \"Wow! I want the particle building automators.\",\n    \"Wow! I want to automate Particle Upgrades.\",\n    \"Wow! I want to automate researches better dangit.\",\n    \"Wow! This is pretty good but expensive.\",\n    \"Wow! I want more cubes 2.\",\n    \"Wow! I want building power to be useful 1.\",\n    \"Wow! I want opened cubes to give more tributes 1.\",\n    \"Wow! I want Iris Tribute bonuses to scale better 1.\",\n    \"Wow! I want Ares Tribute bonuses to scale better 1.\",\n    \"Wow! I want more rune levels 1.\",\n    \"Wow! I want just a little bit more crystal power.\",\n    \"Wow! I want to accelerate time!\",\n    \"Wow! I want to unlock a couple more coin upgrades.\",\n    \"Wow! I want to improve automatic rune tools.\",\n    \"Wow! I want more cubes 3.\",\n    \"Wow! I wish my Artemis was a little better 1\",\n    \"Wow! I want opened cubes to give more tributes 2.\",\n    \"Wow! I want Plutus Tribute bonuses to scale better 1\",\n    \"Wow! I want Moloch Tribute bonuses to scale better 1\",\n    \"Wow! I want to start Ascensions with rune levels.\",\n    \"Wow! I want to start Ascensions with one of each reincarnation building.\",\n    \"Wow! I want to finally render Reincarnating obsolete.\",\n    \"Wow! I want to increase maximum Reincarnation Challenge completions.\",\n    \"Wow! I want to arbitrarily increase my cube and tesseract gain.\",\n    \"Wow! I want more cubes 4.\",\n    \"Wow! I want runes to be easier to level up over time.\",\n    \"Wow! I want opened cubes to give more tributes 3.\",\n    \"Wow! I want Chronos Tribute bonuses to scale better 1\",\n    \"Wow! I want Aphrodite Tribute bonuses to scale better 1\",\n    \"Wow! I want building power to be useful 2.\",\n    \"Wow! I want more rune levels 2.\",\n    \"Wow! I want more tesseracts while corrupted!\",\n    \"Wow! I want more score from challenge 10 completions.\",\n    \"Wow! I want Athena Tribute bonuses to scale better 1.\",\n    \"Wow! I want more cubes 5.\",\n    \"Wow! I want some Uncorruptable Obtainium.\",\n    \"Wow! I want even more Uncorruptable Obtainium!\",\n    \"Wow! I want Midas Tribute bonus to scale better 1.\",\n    \"Wow! I want Hermes Tribute bonus to scale better 1.\",\n    \"Wow! I want even MORE offerings!\",\n    \"Wow! I want even MORE obtainium!\",\n    \"Wow! I want to start ascension with an ant.\",\n    \"Wow! I want to start ascension with a challenge 6-8 completion.\",\n    \"Wow! I want to be enlightened by the power of a thousand suns.\"\n];\nconst cubeBaseCost = [\n    200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\n    5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\n    5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\n    5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\n    5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8\n];\nconst cubeMaxLevel = [\n    3, 10, 5, 1, 1, 1, 1, 1, 1, 1,\n    3, 10, 1, 10, 10, 10, 5, 1, 1, 1,\n    2, 10, 1, 10, 10, 10, 1, 1, 5, 1,\n    2, 1, 1, 10, 10, 10, 10, 1, 1, 10,\n    2, 10, 10, 10, 10, 20, 20, 1, 1, 100000\n];\nconst cubeUpgradeDescriptions = [\n    \"[1x1] You got it! +14% cubes from Ascending per level.\",\n    \"[1x2] Plutus grants you +1 Offering per second, no matter what, per level. Also a +0.5% Recycling chance!\",\n    \"[1x3] Athena grants you +10% more Obtainium, and +80% Auto Obtainium per level.\",\n    \"[1x4] You keep those 5 useful automation upgrades in the upgrades tab!\",\n    \"[1x5] You keep the mythos upgrade automation upgrade in the upgrades tab!\",\n    \"[1x6] You keep the automatic mythos gain upgrade in the upgrades tab!\",\n    \"[1x7] Automatically buy each Particle Building whenever possible.\",\n    \"[1x8] Automatically buy Particle Upgrades.\",\n    \"[1x9] The research automator in shop now automatically buys cheapest when enabled. It's like a roomba kinda!\",\n    \"[1x10] Unlock some tools to automate Ascensions or whatever. Kinda expensive but cool.\",\n    \"[2x1] You got it again! +7% cubes from Ascending per level.\",\n    \"[2x2] Raise building power to the power of (1 + level * 0.09).\",\n    \"[2x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\n    \"[2x4] Iris shines her light on you. The effect power is now increased by +0.01 (+0.005 if >1000 tributes) per level.\",\n    \"[2x5] Ares teaches you the art of war. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[2x6] You got it buster! +20 ALL max rune levels per level.\",\n    \"[2x7] Yep. +5 Exponent per level to crystals.\",\n    \"[2x8] Quantum tunnelling ftw. +20% global game speed.\",\n    \"[2x9] Unlocks new coin upgrades ranging from start of ascend to post c10 and beyond.\",\n    \"[2x10] The rune automator in shop now spends all offerings automatically, 'splitting' them into each of the 5 runes equally.\",\n    \"[3x1] You got it once more! +7% cubes from Ascending per level.\",\n    \"[3x2] The exponent of the bonus of Artemis is increased by 0.05 per level.\",\n    \"[3x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\n    \"[3x4] Plutus teaches you the Art of the Deal. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[3x5] Moloch lends you a hand in communicating with Ant God. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\n    \"[3x6] Start ascensions with 3 additional rune levels [Does not decrease EXP requirement] per level.\",\n    \"[3x7] Upon an ascension, you will start with 1 of each reincarnation building to speed up Ascensions.\",\n    \"[3x8] Well, I think you got it? Gain +1% of particles on Reincarnation per second.\",\n    \"[3x9] Add +5 to Reincarnation Challenge cap per level. Completions after 25 scale faster in requirement!\",\n    \"[3x10] You now get +25% Cubes and Tesseracts forever!\",\n    \"[4x1] You again? +7% cubes from Ascending per level.\",\n    \"[4x2] Gain +0.1% Rune EXP per second you have spent in an Ascension. This has no cap!\",\n    \"[4x3] For each 20 cubes opened at once, you get yet another additional tribute at random.\",\n    \"[4x4] Chronos overclocks the universe for your personal benefit. (Rewards the same as others)\",\n    \"[4x5] Aphrodite increases the fertility of your coins. (Rewards the same as others)\",\n    \"[4x6] Raise building power to (1 + 0.05 * Level) once more.\",\n    \"[4x7] Adds +20 to ALL rune caps again per level.\",\n    \"[4x8] Gain +0.5% more tesseracts on ascension for each additional level in a corruption you enable.\",\n    \"[4x9] Instead of the multiplier being 1.03^(C10 completions), it is now 1.035^(C10 completions)!\",\n    \"[4x10] Athena is very smart (Rewards the same as others).\",\n    \"[5x1] Yeah yeah yeah, +7% cubes from Ascending per level. Isn't it enough?\",\n    \"[5x2] You now gain +4% Obtainium per level, which is not dependent on corruptions!\",\n    \"[5x3] Gain another +3% corruption-independent Obtainium per level.\",\n    \"[5x4] Blah blah blah Midas works harder (same rewards as before)\",\n    \"[5x5] Blah blah blah Hermes works harder (same rewards as before)\",\n    \"[5x6] Gain +5% more offerings per level!\",\n    \"[5x7] Gain +10% more obtainium per level!\",\n    \"[5x8] When you ascend, start with 1 worker ant (this is a lot better than it sounds!)\",\n    \"[5x9] When you ascend, gain 1 of each challenge 6-8 completion.\",\n    \"[5x10] What doesn't this boost? +0.01% Accelerators, Multipliers, Accelerator Boosts, +0.02% Obtainium, +0.02% Offerings, +0.1 Max Rune Levels, +1 Effective ELO, +0.001 Talisman bonuses per level.\"\n];\nconst getCubeCost = (i, linGrowth = 0) => {\n    let amountToBuy = G['buyMaxCubeUpgrades'] ? 1e5 : 1;\n    amountToBuy = Math.min(cubeMaxLevel[i - 1] - player.cubeUpgrades[i], amountToBuy);\n    const metaData = calculateSummationNonLinear(player.cubeUpgrades[i], cubeBaseCost[i - 1], Number(player.wowCubes), linGrowth, amountToBuy);\n    return ([metaData[0], metaData[1]]);\n};\nexport const cubeUpgradeDesc = (i, linGrowth = 0) => {\n    const metaData = getCubeCost(i, linGrowth);\n    const a = document.getElementById(\"cubeUpgradeName\");\n    const b = document.getElementById(\"cubeUpgradeDescription\");\n    const c = document.getElementById(\"cubeUpgradeCost\");\n    const d = document.getElementById(\"cubeUpgradeLevel\");\n    a.textContent = cubeUpgradeName[i - 1];\n    b.textContent = cubeUpgradeDescriptions[i - 1];\n    c.textContent = \"Cost: \" + format(metaData[1], 0, true) + \" Wow! Cubes [+\" + format(metaData[0] - player.cubeUpgrades[i], 0, true) + \" Levels]\";\n    c.style.color = \"green\";\n    d.textContent = \"Level: \" + format(player.cubeUpgrades[i], 0, true) + \"/\" + format(cubeMaxLevel[i - 1], 0, true);\n    d.style.color = \"white\";\n    if (Number(player.wowCubes) < cubeBaseCost[i - 1]) {\n        c.style.color = \"crimson\";\n    }\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i - 1]) {\n        c.style.color = \"gold\";\n        d.style.color = \"plum\";\n    }\n};\nexport const updateCubeUpgradeBG = (i) => {\n    const a = document.getElementById(\"cubeUpg\" + i);\n    if (player.cubeUpgrades[i] > cubeMaxLevel[i - 1]) {\n        console.log(\"Refunded \" + (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) + \" levels of Cube Upgrade \" + i + \", adding \" + (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) * cubeBaseCost[i - 1] + \" Wow! Cubes to balance.\");\n        player.wowCubes.add((player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) * cubeBaseCost[i - 1]);\n        player.cubeUpgrades[i] = cubeMaxLevel[i - 1];\n    }\n    if (player.cubeUpgrades[i] === 0) {\n        a.style.backgroundColor = \"black\";\n    }\n    if (player.cubeUpgrades[i] > 0 && player.cubeUpgrades[i] < cubeMaxLevel[i - 1]) {\n        a.style.backgroundColor = \"purple\";\n    }\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i - 1]) {\n        a.style.backgroundColor = \"green\";\n    }\n};\nexport const buyCubeUpgrades = (i, linGrowth = 0) => {\n    const metaData = getCubeCost(i, linGrowth);\n    if (Number(player.wowCubes) >= metaData[1] && player.cubeUpgrades[i] < cubeMaxLevel[i - 1]) {\n        player.wowCubes.sub(100 / 100 * metaData[1]);\n        player.cubeUpgrades[i] = metaData[0];\n    }\n    if (i === 4 && player.cubeUpgrades[4] > 0) {\n        for (let j = 94; j <= 98; j++) {\n            player.upgrades[j] = 1;\n            upgradeupdate(j, true);\n        }\n    }\n    if (i === 5 && player.cubeUpgrades[5] > 0) {\n        player.upgrades[99] = 1;\n        upgradeupdate(99, true);\n    }\n    if (i === 6 && player.cubeUpgrades[6] > 0) {\n        player.upgrades[100] = 1;\n        upgradeupdate(100, true);\n    }\n    cubeUpgradeDesc(i, linGrowth);\n    updateCubeUpgradeBG(i);\n    revealStuff();\n    calculateCubeBlessings();\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { player, saveSynergy, blankSave, isTesting, reloadShit, version } from './Synergism';\nimport { getElementById } from './Utility';\nimport LZString from 'lz-string';\nimport { achievementaward } from './Achievements';\nimport { Synergism } from './Events';\nimport { Alert, Confirm, Prompt } from './UpdateHTML';\nimport { quarkHandler } from './Quark';\nconst format24 = new Intl.DateTimeFormat(\"EN-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    hour12: false,\n    minute: \"2-digit\",\n    second: \"2-digit\"\n});\nconst format12 = new Intl.DateTimeFormat(\"EN-GB\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    hour12: true,\n    minute: \"2-digit\",\n    second: \"2-digit\"\n});\nconst getRealTime = (use12 = false) => {\n    const format = use12 ? format12 : format24;\n    const dateParts = Object.assign({}, ...format\n        .formatToParts(new Date())\n        .filter((x) => x.type !== \"literal\")\n        .map(p => ({ [p.type]: p.value })));\n    const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : '';\n    return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`;\n};\nexport const updateSaveString = () => {\n    player.saveString = getElementById(\"saveStringInput\").value;\n};\nconst saveFilename = () => {\n    const s = player.saveString;\n    const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\n        switch (b) {\n            case 'VERSION': return `v${version}`;\n            case 'TIME': return getRealTime();\n            case 'TIME12': return getRealTime(true);\n        }\n    });\n    return t;\n};\nexport const exportSynergism = () => __awaiter(void 0, void 0, void 0, function* () {\n    player.offlinetick = Date.now();\n    const quarkData = quarkHandler();\n    if (quarkData.gain >= 1) {\n        player.worlds.add(quarkData.gain);\n        player.quarkstimer = (player.quarkstimer % (3600 / quarkData.perHour));\n    }\n    document.getElementById('settingstab').setAttribute('full', '0');\n    saveSynergy();\n    const toClipboard = getElementById('saveType').checked;\n    const save = localStorage.getItem('Synergysave2');\n    if ('clipboard' in navigator && toClipboard) {\n        yield navigator.clipboard.writeText(save)\n            .catch(e => console.error(e));\n    }\n    else if (toClipboard) {\n        const textArea = document.createElement('textarea');\n        textArea.value = save;\n        textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;');\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        try {\n            document.execCommand('copy');\n        }\n        catch (_) {\n            console.error(\"Failed to copy savegame to clipboard.\");\n        }\n        document.body.removeChild(textArea);\n    }\n    else {\n        const a = document.createElement('a');\n        a.setAttribute('href', 'data:text/plain;charset=utf-8,' + save);\n        a.setAttribute('download', saveFilename());\n        a.setAttribute('id', 'downloadSave');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n    document.getElementById(\"exportinfo\").textContent = toClipboard\n        ? 'Copied save to your clipboard!'\n        : 'Savefile copied to file!';\n});\nexport const resetGame = () => __awaiter(void 0, void 0, void 0, function* () {\n    const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n    const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n    const result = yield Prompt(`Answer the question to confirm you'd like to reset: what is ${a}+${b}? (Hint: ${a + b})`);\n    if (+result !== a + b) {\n        return Alert(`Answer was wrong, not resetting!`);\n    }\n    const hold = Object.assign({}, blankSave, {\n        codes: Array.from(blankSave.codes)\n    });\n    importSynergism(btoa(JSON.stringify(hold)));\n});\nexport const importSynergism = (input) => {\n    const d = LZString.decompressFromBase64(input);\n    const f = d ? JSON.parse(d) : JSON.parse(atob(input));\n    if ((f.exporttest === \"YES!\" || f.exporttest === true) ||\n        (f.exporttest === false && isTesting) ||\n        (f.exporttest === 'NO!' && isTesting)) {\n        localStorage.setItem('Synergysave2', btoa(JSON.stringify(f)));\n        return reloadShit();\n    }\n    else {\n        return Alert(`You are attempting to load a testing file in a non-testing version!`);\n    }\n};\nexport const promocodes = () => __awaiter(void 0, void 0, void 0, function* () {\n    const input = yield Prompt('Got a code? Great! Enter it in (CaSe SeNsItIvE).');\n    const el = document.getElementById(\"promocodeinfo\");\n    if (input === \"synergism2021\" && !player.codes.get(1)) {\n        player.codes.set(1, true);\n        player.runeshards += 25;\n        player.worlds.add(50);\n        el.textContent = \"Promo Code 'synergism2021' Applied! +25 Offerings, +50 Quarks\";\n    }\n    else if (input === \":unsmith:\" && player.achievements[243] < 1) {\n        achievementaward(243);\n        el.textContent = \"It's Spaghetti Time! [Awarded an achievement!!!]\";\n    }\n    else if (input === \":antismith:\" && player.achievements[244] < 1) {\n        achievementaward(244);\n        el.textContent = \"Hey, isn't this just a reference to Antimatter Dimensions? Shh. [Awarded an achievement!!!]\";\n    }\n    else if (input === 'Khafra' && !player.codes.get(26)) {\n        player.codes.set(26, true);\n        const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100);\n        player.worlds.add(quarks);\n        el.textContent = 'Khafra has blessed you with ' + quarks + ' quarks!';\n    }\n    else if (input === '2million' && !player.codes.get(28)) {\n        player.codes.set(28, true);\n        player.worlds.add(700);\n        el.textContent = 'Thank you for 2 million plays on kongregate!';\n    }\n    else if (input === 'v2.5.0' && !player.codes.get(32)) {\n        player.codes.set(32, true);\n        el.textContent = 'You are on v2.5.0! For playing, you get a reward of ... nothing?';\n    }\n    else if (input === 'add') {\n        if (player.rngCode >= (Date.now() - 3600000)) {\n            el.textContent = `You already used this promocode in the last hour!`;\n            return;\n        }\n        const amount = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n        const [first, second] = window.crypto.getRandomValues(new Uint8Array(2));\n        const addPrompt = yield Prompt(`What is ${first} + ${second}?`);\n        if (first + second === +addPrompt) {\n            player.worlds.add(amount);\n            el.textContent = `You were awarded ${amount} quarks! Wait an hour to use this code again!`;\n        }\n        else {\n            el.textContent = `You guessed ${addPrompt}, but the answer was ${first + second}. Try again in an hour!`;\n        }\n        player.rngCode = Date.now();\n    }\n    else if (input === 'gamble') {\n        if (typeof player.skillCode === 'number' ||\n            typeof localStorage.getItem('saveScumIsCheating') === 'string')\n            if ((Date.now() - player.skillCode) / 1000 < 3600 ||\n                (Date.now() - Number(localStorage.getItem('saveScumIsCheating'))) / 1000 < 3600)\n                return el.textContent = 'Wait a little bit. We\\'ll get back to you when you\\'re ready to lose again.';\n        const confirmed = yield Confirm(`Are you sure? The house always wins!`);\n        if (!confirmed)\n            return el.textContent = 'Scared? You should be!';\n        const bet = Number(yield Prompt('How many quarks are you putting up?'));\n        if (Number.isNaN(bet) || bet <= 0)\n            return el.textContent = 'Can\\'t bet that!';\n        if (Number(player.worlds) < bet)\n            return el.textContent = 'Can\\'t bet what you don\\'t have.';\n        const dice = window.crypto.getRandomValues(new Uint8Array(1))[0] % 6 + 1;\n        if (dice === 1 || dice === 6) {\n            const won = bet * .25;\n            player.worlds.add(won);\n            player.skillCode = Date.now();\n            localStorage.setItem('saveScumIsCheating', Date.now().toString());\n            return el.textContent = `You won. The Syncasino offers you a grand total of 25% of the pot! [+${won} quarks]`;\n        }\n        player.worlds.sub(bet);\n        el.textContent = `Try again... you can do it! [-${bet} quarks]`;\n    }\n    else {\n        el.textContent = \"Your code is either invalid or already used. Try again!\";\n    }\n    saveSynergy();\n    Synergism.emit('promocode', input);\n    setTimeout(function () {\n        el.textContent = '';\n    }, 15000);\n});\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toggleAscStatPerSecond, toggleTabs, toggleSubTab, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation } from \"./Toggles\";\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount } from \"./Reset\";\nimport { loadPlugins, player, resetCheck, saveSynergy } from \"./Synergism\";\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyUpgrades, buyRuneBonusLevels } from \"./Buy\";\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions } from \"./Upgrades\";\nimport { buyAutobuyers } from \"./Automation\";\nimport { buyGenerator } from \"./Generators\";\nimport { achievementdescriptions } from \"./Achievements\";\nimport { displayRuneInformation, redeemShards } from \"./Runes\";\nimport { toggleTalismanBuy, buyTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from \"./Talismans\";\nimport { challengeDisplay, toggleRetryChallenges } from \"./Challenges\";\nimport { buyResearch, researchDescriptions } from \"./Research\";\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from \"./Ants\";\nimport { buyCubeUpgrades, cubeUpgradeDesc } from \"./Cubes\";\nimport { buyPlatonicUpgrades, createPlatonicDescription } from \"./Platonic\";\nimport { corruptionCleanseConfirm, corruptionDisplay } from \"./Corruptions\";\nimport { exportSynergism, updateSaveString, promocodes, importSynergism, resetGame } from \"./ImportExport\";\nimport { resetHistoryTogglePerSecond } from \"./History\";\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable } from \"./Shop\";\nimport { Globals as G } from './Variables';\nimport { changeTabColor } from \"./UpdateHTML\";\nimport { hepteractDescriptions } from \"./Hepteracts\";\nexport const generateEventHandlers = () => {\n    const ordinals = ['null', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth'];\n    document.getElementById('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1));\n    document.getElementById('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2));\n    document.getElementById('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3));\n    document.getElementById('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4));\n    document.getElementById('prestigebtn').addEventListener('mouseover', () => resetrepeat(\"prestige\"));\n    document.getElementById('transcendbtn').addEventListener('mouseover', () => resetrepeat(\"transcension\"));\n    document.getElementById('reincarnatebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnation\"));\n    document.getElementById('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat(\"acceleratorBoost\"));\n    document.getElementById('challengebtn').addEventListener('mouseover', () => resetrepeat(\"transcensionChallenge\"));\n    document.getElementById('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnationChallenge\"));\n    document.getElementById('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat(\"ascensionChallenge\"));\n    document.getElementById('ascendbtn').addEventListener('mouseover', () => resetrepeat(\"ascension\"));\n    document.getElementById('prestigebtn').addEventListener('click', () => resetCheck('prestige'));\n    document.getElementById('transcendbtn').addEventListener('click', () => resetCheck('transcend'));\n    document.getElementById('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnate'));\n    document.getElementById('acceleratorboostbtn').addEventListener('click', () => boostAccelerator());\n    document.getElementById('challengebtn').addEventListener('click', () => resetCheck('challenge', undefined, true));\n    document.getElementById('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationchallenge', undefined, true));\n    document.getElementById('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge'));\n    document.getElementById('ascendbtn').addEventListener('click', () => resetCheck('ascend'));\n    document.getElementById('buildingstab').addEventListener('click', () => toggleTabs('buildings'));\n    document.getElementById('upgradestab').addEventListener('click', () => toggleTabs('upgrades'));\n    document.getElementById('settingstab').addEventListener('click', () => toggleTabs('settings'));\n    document.getElementById('achievementstab').addEventListener('click', () => toggleTabs('achievements'));\n    document.getElementById('runestab').addEventListener('click', () => toggleTabs('runes'));\n    document.getElementById('challengetab').addEventListener('click', () => toggleTabs('challenges'));\n    document.getElementById('researchtab').addEventListener('click', () => toggleTabs('researches'));\n    document.getElementById('shoptab').addEventListener('click', () => toggleTabs('shop'));\n    document.getElementById('anttab').addEventListener('click', () => toggleTabs('ants'));\n    document.getElementById('cubetab').addEventListener('click', () => toggleTabs('cubes'));\n    document.getElementById('traitstab').addEventListener('click', () => toggleTabs('traits'));\n    const buildingTypes = ['Coin', 'Diamond', 'Mythos', 'Particle', 'Tesseract'];\n    for (let index = 0; index < buildingTypes.length; index++) {\n        document.getElementById(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => toggleSubTab(1, index));\n    }\n    const buildingTypesAlternate = ['coin', 'crystal', 'mythos', 'particle', 'tesseract', 'offering'];\n    const buildingOrds = ['one', 'ten', 'hundred', 'thousand'];\n    const buildingOrdsToNum = [1, 10, 100, 1000];\n    for (let index = 0; index < buildingOrds.length; index++) {\n        for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\n            document.getElementById(buildingTypesAlternate[index2] + buildingOrds[index]).addEventListener('click', () => toggleBuyAmount(buildingOrdsToNum[index], buildingTypesAlternate[index2]));\n        }\n    }\n    document.getElementById('buyaccelerator').addEventListener('click', () => buyAccelerator());\n    document.getElementById('buymultiplier').addEventListener('click', () => buyMultiplier());\n    document.getElementById('buyacceleratorboost').addEventListener('click', () => boostAccelerator());\n    const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos'];\n    const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'];\n    for (let index = 0; index < 3; index++) {\n        for (let index2 = 1; index2 <= 5; index2++) {\n            document.getElementById(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () => buyProducer(ordinals[index2], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2 + 1) / 2));\n        }\n    }\n    for (let index = 1; index <= 5; index++) {\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index));\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index));\n    }\n    const particleBuildingCosts = [1, 100, 1e4, 1e8, 1e16];\n    const targets = ['first', 'second', 'third', 'fourth', 'fifth'];\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`buyparticles${index + 1}`).addEventListener('click', () => buyParticleBuilding(targets[index], particleBuildingCosts[index]));\n    }\n    const tesseractBuildingCosts = [1, 10, 100, 1000, 10000];\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`buyTesseracts${index + 1}`).addEventListener('click', () => buyTesseractBuilding(tesseractBuildingCosts[index], index + 1));\n        document.getElementById(`tesseractAutoToggle${index + 1}`).addEventListener('click', () => toggleAutoTesseracts(index + 1));\n    }\n    for (let index = 0; index < 10; index++) {\n        document.getElementById(`buyConstantUpgrade${index + 1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index + 1));\n        document.getElementById(`buyConstantUpgrade${index + 1}`).addEventListener('click', () => buyConstantUpgrades(index + 1));\n    }\n    for (let index = 0; index < 32; index++) {\n        document.getElementById(`toggle${index + 1}`).addEventListener('click', () => toggleSettings(index));\n    }\n    document.getElementById(\"prestigeautotoggle\").addEventListener('click', () => toggleautoreset(1));\n    document.getElementById(\"transcendautotoggle\").addEventListener('click', () => toggleautoreset(2));\n    document.getElementById(\"reincarnateautotoggle\").addEventListener('click', () => toggleautoreset(3));\n    document.getElementById(\"ascensionAutoToggle\").addEventListener('click', () => toggleautoreset(4));\n    document.getElementById(\"prestigeamount\").addEventListener('blur', () => updateAutoReset(1));\n    document.getElementById(\"transcendamount\").addEventListener('blur', () => updateAutoReset(2));\n    document.getElementById(\"reincarnationamount\").addEventListener('blur', () => updateAutoReset(3));\n    document.getElementById(\"ascensionAmount\").addEventListener('blur', () => updateAutoReset(4));\n    document.getElementById(\"autoAntSacrificeAmount\").addEventListener('blur', () => updateAutoReset(5));\n    document.getElementById(\"tesseractautobuytoggle\").addEventListener('click', () => toggleautobuytesseract());\n    document.getElementById(\"tesseractAmount\").addEventListener('blur', () => updateTesseractAutoBuyAmount());\n    for (let index = 1; index <= 125; index++) {\n        document.getElementById(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index));\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!');\n    }\n    const resourceTypes = ['coin', 'prestige', 'transcend', 'reincarnation'];\n    for (let index = 1; index <= 80; index++) {\n        const resourceType = resourceTypes[Math.floor((index - 1) / 20)];\n        document.getElementById(`upg${index}`).addEventListener('click', () => buyUpgrades(resourceType, index));\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!');\n    }\n    for (let index = 1; index <= 20; index++) {\n        document.getElementById(`upg${index + 80}`).addEventListener('click', () => buyAutobuyers(index));\n        console.log('Successfully added \"Onclick\" event to Autobuyer upgrade!');\n    }\n    for (let index = 1; index <= 20; index++) {\n        document.getElementById(`upg${index + 100}`).addEventListener('click', () => buyGenerator(index));\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!');\n    }\n    for (let index = 1; index <= 5; index++) {\n        document.getElementById(`upg${index + 120}`).addEventListener('click', () => buyUpgrades('coin', index));\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!');\n    }\n    document.getElementById('shoptogglecoin').addEventListener('click', () => toggleShops(1));\n    document.getElementById('shoptoggleprestige').addEventListener('click', () => toggleShops(2));\n    document.getElementById('shoptoggletranscend').addEventListener('click', () => toggleShops(3));\n    document.getElementById('shoptogglegenerator').addEventListener('click', () => toggleShops(4));\n    document.getElementById('particleAutoUpgrade').addEventListener('click', () => toggleShops(5));\n    for (let index = 1; index <= 280; index++) {\n        document.getElementById(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index));\n    }\n    document.getElementById('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0));\n    for (let index = 0; index < 4; index++) {\n        document.getElementById(`toggleRuneSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(4, index));\n    }\n    for (let index = 0; index < 7; index++) {\n        document.getElementById(`rune${index + 1}`).addEventListener('mouseover', () => displayRuneInformation(index + 1));\n        document.getElementById(`rune${index + 1}`).addEventListener('click', () => toggleAutoSacrifice(index + 1));\n        document.getElementById(`activaterune${index + 1}`).addEventListener('mouseover', () => displayRuneInformation(index + 1));\n        document.getElementById(`activaterune${index + 1}`).addEventListener('click', () => redeemShards(index + 1));\n    }\n    const talismanBuyPercents = [10, 25, 50, 100];\n    const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred'];\n    for (let index = 0; index < talismanBuyPercents.length; index++) {\n        document.getElementById(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(talismanBuyPercents[index]));\n    }\n    document.getElementById('toggleautoenhance').addEventListener('click', () => toggleautoenhance());\n    document.getElementById('toggleautofortify').addEventListener('click', () => toggleautofortify());\n    const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'];\n    for (let index = 0; index < talismanItemNames.length; index++) {\n        document.getElementById(`buyTalismanItem${index + 1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]));\n        document.getElementById(`buyTalismanItem${index + 1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]));\n    }\n    for (let index = 0; index < 7; index++) {\n        document.getElementById(`talisman${index + 1}`).addEventListener('click', () => showTalismanEffect(index + 1));\n        document.getElementById(`leveluptalisman${index + 1}`).addEventListener('mouseover', () => showTalismanPrices(index + 1));\n        document.getElementById(`leveluptalisman${index + 1}`).addEventListener('click', () => buyTalismanLevels(index + 1));\n        document.getElementById(`enhancetalisman${index + 1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index + 1));\n        document.getElementById(`enhancetalisman${index + 1}`).addEventListener('click', () => buyTalismanEnhance(index + 1));\n        document.getElementById(`respectalisman${index + 1}`).addEventListener('click', () => showRespecInformation(index + 1));\n    }\n    document.getElementById('respecAllTalismans').addEventListener('click', () => showRespecInformation(8));\n    document.getElementById('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G['talismanRespec']));\n    document.getElementById('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G['talismanRespec']));\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`talismanRespecButton${index + 1}`).addEventListener('click', () => changeTalismanModifier(index + 1));\n    }\n    for (let index = 0; index < 5; index++) {\n        document.getElementById(`runeBlessingPurchase${index + 1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index + 1));\n        document.getElementById(`runeSpiritPurchase${index + 1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index + 1));\n    }\n    document.getElementById('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1));\n    document.getElementById('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2));\n    for (let index = 0; index < 15; index++) {\n        document.getElementById(`challenge${index + 1}`).addEventListener('click', () => challengeDisplay(index + 1));\n    }\n    document.getElementById('startChallenge').addEventListener('click', () => toggleChallenges(G['triggerChallenge'], false));\n    document.getElementById('retryChallenge').addEventListener('click', () => toggleRetryChallenges());\n    document.getElementById('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G['triggerChallenge']));\n    document.getElementById('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun());\n    document.getElementById('startAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(1));\n    document.getElementById('exitAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(2));\n    document.getElementById('enterAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(3));\n    for (let index = 1; index < 200; index++) {\n        document.getElementById(`res${index}`).addEventListener('click', () => buyResearch(index));\n        document.getElementById(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index));\n        console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to researches 1-199!');\n    }\n    document.getElementById(`res200`).addEventListener('click', () => buyResearch(200, false, 0.01));\n    document.getElementById(`res200`).addEventListener('mouseover', () => researchDescriptions(200, false, 0.01));\n    console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to research 200!');\n    document.getElementById('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy());\n    document.getElementById('toggleautoresearch').addEventListener('click', () => toggleAutoResearch());\n    const antProducerCostVals = ['null', '1e800', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300'];\n    for (let index = 1; index <= 8; index++) {\n        document.getElementById(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index));\n        document.getElementById(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index));\n        document.getElementById(`anttier${index}`).addEventListener('click', () => buyAntProducers(ordinals[index], antProducerCostVals[index], index));\n    }\n    const antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100'];\n    for (let index = 1; index <= 12; index++) {\n        document.getElementById(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index));\n        document.getElementById(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index));\n    }\n    document.getElementById('antSacrifice').addEventListener('click', () => sacrificeAnts());\n    document.getElementById('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy());\n    document.getElementById('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0));\n    document.getElementById('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1));\n    for (let index = 0; index < 7; index++) {\n        document.getElementById(`switchCubeSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(8, index));\n    }\n    for (let index = 0; index < 49; index++) {\n        document.getElementById(`cubeUpg${index + 1}`).addEventListener('mouseover', () => cubeUpgradeDesc(index + 1));\n        document.getElementById(`cubeUpg${index + 1}`).addEventListener('click', () => buyCubeUpgrades(index + 1));\n    }\n    document.getElementById('cubeUpg50').addEventListener('mouseover', () => cubeUpgradeDesc(50, 0.01));\n    document.getElementById('cubeUpg50').addEventListener('click', () => buyCubeUpgrades(50, 0.01));\n    document.getElementById('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube());\n    document.getElementById('open1Cube').addEventListener('click', () => player.wowCubes.open(1, false));\n    document.getElementById('open20Cube').addEventListener('click', () => player.wowCubes.open(20, false));\n    document.getElementById('open1000Cube').addEventListener('click', () => player.wowCubes.open(1000, false));\n    document.getElementById('openCustomCube').addEventListener('click', () => player.wowCubes.openCustom());\n    document.getElementById('openMostCube').addEventListener('click', () => player.wowCubes.open(1, true));\n    document.getElementById('open1Tesseract').addEventListener('click', () => player.wowTesseracts.open(1, false));\n    document.getElementById('open20Tesseract').addEventListener('click', () => player.wowTesseracts.open(20, false));\n    document.getElementById('open1000Tesseract').addEventListener('click', () => player.wowTesseracts.open(1000, false));\n    document.getElementById('openCustomTesseract').addEventListener('click', () => player.wowTesseracts.openCustom());\n    document.getElementById('openMostTesseract').addEventListener('click', () => player.wowTesseracts.open(1, true));\n    document.getElementById('open1Hypercube').addEventListener('click', () => player.wowHypercubes.open(1, false));\n    document.getElementById('open20Hypercube').addEventListener('click', () => player.wowHypercubes.open(20, false));\n    document.getElementById('open1000Hypercube').addEventListener('click', () => player.wowHypercubes.open(1000, false));\n    document.getElementById('openCustomHypercube').addEventListener('click', () => player.wowHypercubes.openCustom());\n    document.getElementById('openMostHypercube').addEventListener('click', () => player.wowHypercubes.open(1, true));\n    document.getElementById('open1PlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, false));\n    document.getElementById('open40kPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(4e4, false));\n    document.getElementById('open1mPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1e6, false));\n    document.getElementById('openCustomPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.openCustom());\n    document.getElementById('openMostPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, true));\n    const platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage');\n    for (let index = 0; index < platonicUpgrades.length; index++) {\n        platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index + 1));\n        platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index + 1));\n    }\n    document.getElementById('chronosHepteract').addEventListener('mouseover', () => hepteractDescriptions('chronos'));\n    document.getElementById('hyperrealismHepteract').addEventListener('mouseover', () => hepteractDescriptions('hyperrealism'));\n    document.getElementById('quarkHepteract').addEventListener('mouseover', () => hepteractDescriptions('quark'));\n    document.getElementById('challengeHepteract').addEventListener('mouseover', () => hepteractDescriptions('challenge'));\n    document.getElementById('abyssHepteract').addEventListener('mouseover', () => hepteractDescriptions('abyss'));\n    document.getElementById('acceleratorHepteract').addEventListener('mouseover', () => hepteractDescriptions('accelerator'));\n    document.getElementById('acceleratorBoostHepteract').addEventListener('mouseover', () => hepteractDescriptions('acceleratorBoost'));\n    document.getElementById('multiplierHepteract').addEventListener('mouseover', () => hepteractDescriptions('multiplier'));\n    document.getElementById('chronosHepteractCraft').addEventListener('click', () => player.hepteractCrafts.chronos.craft());\n    document.getElementById('hyperrealismHepteractCraft').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft());\n    document.getElementById('quarkHepteractCraft').addEventListener('click', () => player.hepteractCrafts.quark.craft());\n    document.getElementById('challengeHepteractCraft').addEventListener('click', () => player.hepteractCrafts.challenge.craft());\n    document.getElementById('abyssHepteractCraft').addEventListener('click', () => player.hepteractCrafts.abyss.craft());\n    document.getElementById('acceleratorHepteractCraft').addEventListener('click', () => player.hepteractCrafts.accelerator.craft());\n    document.getElementById('acceleratorBoostHepteractCraft').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft());\n    document.getElementById('multiplierHepteractCraft').addEventListener('click', () => player.hepteractCrafts.multiplier.craft());\n    document.getElementById('chronosHepteractCap').addEventListener('click', () => player.hepteractCrafts.chronos.expand());\n    document.getElementById('hyperrealismHepteractCap').addEventListener('click', () => player.hepteractCrafts.hyperrealism.expand());\n    document.getElementById('quarkHepteractCap').addEventListener('click', () => player.hepteractCrafts.quark.expand());\n    document.getElementById('challengeHepteractCap').addEventListener('click', () => player.hepteractCrafts.challenge.expand());\n    document.getElementById('abyssHepteractCap').addEventListener('click', () => player.hepteractCrafts.abyss.expand());\n    document.getElementById('acceleratorHepteractCap').addEventListener('click', () => player.hepteractCrafts.accelerator.expand());\n    document.getElementById('acceleratorBoostHepteractCap').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.expand());\n    document.getElementById('multiplierHepteractCap').addEventListener('click', () => player.hepteractCrafts.multiplier.expand());\n    document.getElementById('corrStatsBtn').addEventListener('click', () => toggleSubTab(9, 0));\n    document.getElementById('corrLoadoutsBtn').addEventListener('click', () => toggleSubTab(9, 1));\n    document.getElementById('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10));\n    document.getElementById('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm());\n    document.getElementById('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999));\n    document.getElementById('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend());\n    const settingSubTabs = Array.from(document.querySelectorAll('button[id^=\"switchSettingSubTab\"]'));\n    for (const subtab of settingSubTabs) {\n        subtab.addEventListener('click', () => toggleSubTab(-1, settingSubTabs.indexOf(subtab)));\n    }\n    document.getElementById('exportgame').addEventListener('click', () => exportSynergism());\n    document.getElementById('saveStringInput').addEventListener('blur', () => updateSaveString());\n    document.getElementById('savegame').addEventListener('click', () => saveSynergy(true));\n    document.getElementById('deleteGame').addEventListener('click', () => resetGame());\n    document.getElementById('promocodes').addEventListener('click', () => promocodes());\n    document.getElementById('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond());\n    document.getElementById('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades());\n    document.getElementById('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation());\n    document.getElementById('offeringPotions').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('useofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\n    document.getElementById('buyofferingpotion').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"));\n    document.getElementById('useofferingpotion').addEventListener('click', () => useConsumable(\"offeringPotion\"));\n    document.getElementById('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\n    document.getElementById('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"));\n    document.getElementById('useobtainiumpotion').addEventListener('click', () => useConsumable(\"obtainiumPotion\"));\n    document.getElementById('OfferingEX').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\n    document.getElementById('OfferingAuto').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\n    document.getElementById('ObtainiumEX').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\n    document.getElementById('ObtainiumAuto').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\n    document.getElementById('InstChallenge').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\n    document.getElementById('AntSpd').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\n    document.getElementById('CashUpgrade').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\n    document.getElementById('CashTalisman').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\n    document.getElementById('SeasonPass').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\n    document.getElementById('ShopChallenge').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\n    document.getElementById('ShopTome').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\n    document.getElementById('CubeQuark').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\n    document.getElementById('TesseractQuark').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\n    document.getElementById('HypercubeQuark').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\n    document.getElementById('SeasonPass2').addEventListener('mouseover', () => shopDescriptions(\"seasonPass2\"));\n    document.getElementById('SeasonPass3').addEventListener('mouseover', () => shopDescriptions(\"seasonPass3\"));\n    document.getElementById('Chronometer').addEventListener('mouseover', () => shopDescriptions(\"chronometer\"));\n    document.getElementById('InfiniteAscent').addEventListener('mouseover', () => shopDescriptions(\"infiniteAscent\"));\n    document.getElementById('offeringtimerlevel').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\n    document.getElementById('offeringautolevel').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\n    document.getElementById('obtainiumtimerlevel').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\n    document.getElementById('obtainiumautolevel').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\n    document.getElementById('instantchallenge').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\n    document.getElementById('antspeed').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\n    document.getElementById('cashgrab').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\n    document.getElementById('shoptalisman').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\n    document.getElementById('seasonPassLevel').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\n    document.getElementById('challengeUpgradeLevel').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\n    document.getElementById('challenge10TomeLevel').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\n    document.getElementById('cubeToQuark').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\n    document.getElementById('tesseractToQuark').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\n    document.getElementById('hypercubeToQuark').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\n    document.getElementById('seasonPass2Level').addEventListener('mouseover', () => shopDescriptions(\"seasonPass2\"));\n    document.getElementById('seasonPass3Level').addEventListener('mouseover', () => shopDescriptions(\"seasonPass3\"));\n    document.getElementById('chronometerLevel').addEventListener('mouseover', () => shopDescriptions(\"chronometer\"));\n    document.getElementById('infiniteAscentUpgrade').addEventListener('mouseover', () => shopDescriptions(\"infiniteAscent\"));\n    document.getElementById('offeringtimerbutton').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\n    document.getElementById('offeringtimerbutton').addEventListener('click', () => buyShopUpgrades(\"offeringEX\"));\n    document.getElementById('offeringautobutton').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\n    document.getElementById('offeringautobutton').addEventListener('click', () => buyShopUpgrades(\"offeringAuto\"));\n    document.getElementById('obtainiumtimerbutton').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\n    document.getElementById('obtainiumtimerbutton').addEventListener('click', () => buyShopUpgrades(\"obtainiumEX\"));\n    document.getElementById('obtainiumautobutton').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\n    document.getElementById('obtainiumautobutton').addEventListener('click', () => buyShopUpgrades(\"obtainiumAuto\"));\n    document.getElementById('instantchallengebutton').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\n    document.getElementById('instantchallengebutton').addEventListener('click', () => buyShopUpgrades(\"instantChallenge\"));\n    document.getElementById('antspeedbutton').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\n    document.getElementById('antspeedbutton').addEventListener('click', () => buyShopUpgrades(\"antSpeed\"));\n    document.getElementById('cashgrabbutton').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\n    document.getElementById('cashgrabbutton').addEventListener('click', () => buyShopUpgrades(\"cashGrab\"));\n    document.getElementById('shoptalismanbutton').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\n    document.getElementById('shoptalismanbutton').addEventListener('click', () => buyShopUpgrades(\"shopTalisman\"));\n    document.getElementById('seasonPassButton').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\n    document.getElementById('seasonPassButton').addEventListener('click', () => buyShopUpgrades(\"seasonPass\"));\n    document.getElementById('challengeUpgradeButton').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\n    document.getElementById('challengeUpgradeButton').addEventListener('click', () => buyShopUpgrades(\"challengeExtension\"));\n    document.getElementById('challenge10TomeButton').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\n    document.getElementById('challenge10TomeButton').addEventListener('click', () => buyShopUpgrades(\"challengeTome\"));\n    document.getElementById('cubeToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\n    document.getElementById('cubeToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"cubeToQuark\"));\n    document.getElementById('tesseractToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\n    document.getElementById('tesseractToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"tesseractToQuark\"));\n    document.getElementById('hypercubeToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\n    document.getElementById('hypercubeToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"hypercubeToQuark\"));\n    document.getElementById('seasonPass2Button').addEventListener('mouseover', () => shopDescriptions(\"seasonPass2\"));\n    document.getElementById('seasonPass2Button').addEventListener('click', () => buyShopUpgrades(\"seasonPass2\"));\n    document.getElementById('seasonPass3Button').addEventListener('mouseover', () => shopDescriptions(\"seasonPass3\"));\n    document.getElementById('seasonPass3Button').addEventListener('click', () => buyShopUpgrades(\"seasonPass3\"));\n    document.getElementById('chronometerButton').addEventListener('mouseover', () => shopDescriptions(\"chronometer\"));\n    document.getElementById('chronometerButton').addEventListener('click', () => buyShopUpgrades(\"chronometer\"));\n    document.getElementById('infiniteAscentButton').addEventListener('mouseover', () => shopDescriptions(\"infiniteAscent\"));\n    document.getElementById('infiniteAscentButton').addEventListener('click', () => buyShopUpgrades(\"infiniteAscent\"));\n    const tabs = document.querySelectorAll('#tabrow > li');\n    tabs.forEach(b => b.addEventListener('click', () => changeTabColor()));\n    document.getElementById('importfile').addEventListener('change', (e) => __awaiter(void 0, void 0, void 0, function* () {\n        const { files } = e.target;\n        const saveItem = files.item(0);\n        const save = yield saveItem.text();\n        return importSynergism(save);\n    }));\n    document.getElementById('pluginSubTab1').addEventListener('click', () => loadPlugins('Dashboard'));\n    document.getElementById('pluginSubTab2').addEventListener('click', () => loadPlugins('OpenCubes'));\n};\n","import { sacrificeAnts } from \"./Ants\";\nimport { calculateAutomaticObtainium, calculateMaxRunes, calculateObtainium, calculateTimeAcceleration } from \"./Calculate\";\nimport { hepteractEffective } from \"./Hepteracts\";\nimport { quarkHandler } from \"./Quark\";\nimport { redeemShards } from \"./Runes\";\nimport { player } from \"./Synergism\";\nimport { visualUpdateResearch } from \"./UpdateVisuals\";\nimport { Globals as G } from './Variables';\nexport const addTimers = (input, time) => {\n    const timeMultiplier = (input === \"ascension\" || input === \"quarks\") ? 1 : calculateTimeAcceleration();\n    switch (input) {\n        case \"prestige\": {\n            player.prestigecounter += time * timeMultiplier;\n            break;\n        }\n        case \"transcension\": {\n            player.transcendcounter += time * timeMultiplier;\n            break;\n        }\n        case \"reincarnation\": {\n            player.reincarnationcounter += time * timeMultiplier;\n            break;\n        }\n        case \"ascension\": {\n            let multiplier = 1 + player.shopUpgrades.chronometer / 100;\n            multiplier *= (1 + 1 / 1000 * hepteractEffective('chronos'));\n            if (player.achievements[259] > 0)\n                multiplier *= 1.25;\n            if (player.achievements[262] > 0)\n                multiplier *= (1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)));\n            if (player.achievements[263] > 0)\n                multiplier *= (1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)));\n            player.ascensionCounter += time * timeMultiplier * multiplier;\n            break;\n        }\n        case \"quarks\": {\n            const maxQuarkTimer = quarkHandler().maxTime;\n            player.quarkstimer += time * timeMultiplier;\n            player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer;\n            break;\n        }\n    }\n};\nexport const checkMaxRunes = () => {\n    let maxxed = 0;\n    for (let i = 1; i <= 5; i++) {\n        if (player.runelevels[i - 1] >= calculateMaxRunes(i))\n            maxxed++;\n    }\n    return maxxed;\n};\nexport const automaticTools = (input, time) => {\n    const timeMultiplier = (input === \"runeSacrifice\" || input === \"addOfferings\") ? 1 : calculateTimeAcceleration();\n    switch (input) {\n        case \"addObtainium\": {\n            calculateObtainium();\n            const obtainiumGain = calculateAutomaticObtainium();\n            player.researchPoints += obtainiumGain * time * timeMultiplier;\n            if (G['currentTab'] === \"researches\") {\n                visualUpdateResearch();\n            }\n            break;\n        }\n        case \"addOfferings\":\n            G['autoOfferingCounter'] += time;\n            player.runeshards += Math.floor(G['autoOfferingCounter']);\n            G['autoOfferingCounter'] %= 1;\n            break;\n        case \"runeSacrifice\":\n            player.sacrificeTimer += time;\n            if (player.sacrificeTimer >= 1) {\n                if (player.cubeUpgrades[20] === 1) {\n                    const notMaxed = (5 - checkMaxRunes());\n                    if (notMaxed > 0) {\n                        const baseAmount = Math.floor(player.runeshards / notMaxed);\n                        for (let i = 0; i < 5; i++) {\n                            redeemShards(i + 1, true, baseAmount);\n                        }\n                    }\n                }\n                else {\n                    const rune = player.autoSacrifice;\n                    redeemShards(rune, true, 0);\n                }\n                player.sacrificeTimer %= 1;\n            }\n            break;\n        case \"antSacrifice\": {\n            player.antSacrificeTimer += time * timeMultiplier;\n            player.antSacrificeTimerReal += time;\n            const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\n                player.antSacrificeTimerReal : player.antSacrificeTimer;\n            if (antSacrificeTimer >= player.autoAntSacTimer && player.researches[124] === 1\n                && player.autoAntSacrifice && player.antPoints.gte(\"1e40\")) {\n                sacrificeAnts(true);\n            }\n            break;\n        }\n    }\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { achievementaward } from './Achievements';\nimport { calculateCubeBlessings } from './Calculate';\nimport { CalcECC } from './Challenges';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { getQuarkMultiplier } from './Quark';\nimport { player } from './Synergism';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { Prompt, Alert } from './UpdateHTML';\nconst blessings = {\n    accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\n    multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\n    offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\n    runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\n    obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\n    antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\n    antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\n    antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\n    talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\n    globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\n};\nconst platonicBlessings = {\n    cubes: { weight: 13200, pdf: (x) => 0 <= x && x <= 33.000 },\n    tesseracts: { weight: 13200, pdf: (x) => 33.000 < x && x <= 66.000 },\n    hypercubes: { weight: 13200, pdf: (x) => 66.000 < x && x <= 99.000 },\n    platonics: { weight: 396, pdf: (x) => 99.000 < x && x <= 99.990 },\n    hypercubeBonus: { weight: 1, pdf: (x) => 99.990 < x && x <= 99.9925 },\n    taxes: { weight: 1, pdf: (x) => 99.9925 < x && x <= 99.995 },\n    scoreBonus: { weight: 1, pdf: (x) => 99.995 < x && x <= 99.9975 },\n    globalSpeed: { weight: 1, pdf: (x) => 99.9975 < x && x <= 100 },\n};\nclass Cube {\n    constructor(type, v = 0) {\n        this.key = type;\n        this.value = v;\n    }\n    openCustom() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const amount = yield Prompt(`How many cubes would you like to open? You have ${player[this.key].value.toLocaleString()}!`);\n            if (amount === null)\n                return Alert('OK. No cubes opened.');\n            const cubesToOpen = Number(amount);\n            if (Number.isNaN(cubesToOpen) || !Number.isFinite(cubesToOpen))\n                return Alert('Value must be a finite number!');\n            else if (player[this.key].value < cubesToOpen)\n                return Alert('You don\\'t have enough cubes to open!');\n            else if (cubesToOpen <= 0)\n                return Alert('You can\\'t open a negative number of cubes.');\n            return this.open(cubesToOpen, cubesToOpen === player[this.key].value);\n        });\n    }\n    checkQuarkGain(base, mult, cubes) {\n        if (cubes < 1) {\n            return 0;\n        }\n        const multiplier = getQuarkMultiplier() * mult;\n        return Math.floor(Math.log10(cubes) * base * multiplier);\n    }\n    checkCubesToNextQuark(base, mult, quarks, cubes) {\n        const multiplier = getQuarkMultiplier() * mult;\n        return Math.ceil(Math.pow(10, (quarks + 1) / (multiplier * base)) - cubes);\n    }\n    add(amount) {\n        this.value += amount;\n        return this;\n    }\n    sub(amount) {\n        this.value = Math.max(0, this.value - amount);\n        return this;\n    }\n    [Symbol.toPrimitive](h) {\n        switch (h) {\n            case 'string': return this.value.toString();\n            case 'number': return this.value;\n            default: return null;\n        }\n    }\n}\nexport class WowCubes extends Cube {\n    constructor(amount = Number(player.wowCubes)) {\n        super('wowCubes', amount);\n    }\n    open(value, max = false) {\n        let toSpend = max ? Number(this) : Math.min(Number(this), value);\n        if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\n            achievementaward(246);\n        }\n        this.sub(toSpend);\n        player.cubeOpenedDaily += toSpend;\n        const quarkMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1;\n        const gainQuarks = Number(this.checkQuarkGain(5, quarkMult, player.cubeOpenedDaily));\n        const actualQuarksGain = Math.max(0, gainQuarks - player.cubeQuarkDaily);\n        player.cubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain);\n        toSpend *= (1 + player.researches[138] / 1000);\n        toSpend *= (1 + 0.8 * player.researches[168] / 1000);\n        toSpend *= (1 + 0.6 * player.researches[198] / 1000);\n        toSpend = Math.floor(toSpend);\n        let toSpendModulo = toSpend % 20;\n        let toSpendDiv20 = Math.floor(toSpend / 20);\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\n            toSpendModulo += toSpendDiv20;\n        }\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\n            toSpendModulo += toSpendDiv20;\n        }\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\n            toSpendModulo += toSpendDiv20;\n        }\n        toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20);\n        toSpendModulo = toSpendModulo % 20;\n        const keys = Object.keys(player.cubeBlessings);\n        for (const key of keys) {\n            player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n        }\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key of keys) {\n                if (blessings[key].pdf(num))\n                    player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n            }\n        }\n        calculateCubeBlessings();\n    }\n}\nexport class WowTesseracts extends Cube {\n    constructor(amount = Number(player.wowTesseracts)) {\n        super('wowTesseracts', amount);\n    }\n    open(value, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n        player.wowTesseracts.sub(toSpend);\n        player.tesseractOpenedDaily += toSpend;\n        const quarkMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1;\n        const gainQuarks = Number(this.checkQuarkGain(7, quarkMult, player.tesseractOpenedDaily));\n        const actualQuarksGain = Math.max(0, gainQuarks - player.tesseractQuarkDaily);\n        player.tesseractQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain);\n        const toSpendModulo = toSpend % 20;\n        const toSpendDiv20 = Math.floor(toSpend / 20);\n        for (const key in player.tesseractBlessings) {\n            player.tesseractBlessings[key] += blessings[key].weight * toSpendDiv20;\n        }\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.tesseractBlessings) {\n                if (blessings[key].pdf(num))\n                    player.tesseractBlessings[key] += 1;\n            }\n        }\n        calculateTesseractBlessings();\n        const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153]);\n        player.wowCubes.add(extraCubeBlessings);\n        player.wowCubes.open(extraCubeBlessings, false);\n    }\n}\nexport class WowHypercubes extends Cube {\n    constructor(amount = Number(player.wowHypercubes)) {\n        super('wowHypercubes', amount);\n    }\n    open(value, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n        player.wowHypercubes.sub(toSpend);\n        player.hypercubeOpenedDaily += toSpend;\n        const quarkMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1;\n        const gainQuarks = this.checkQuarkGain(10, quarkMult, player.hypercubeOpenedDaily);\n        const actualQuarksGain = Math.max(0, gainQuarks - player.hypercubeQuarkDaily);\n        player.hypercubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain);\n        const toSpendModulo = toSpend % 20;\n        const toSpendDiv20 = Math.floor(toSpend / 20);\n        for (const key in player.hypercubeBlessings) {\n            player.hypercubeBlessings[key] += blessings[key].weight * toSpendDiv20;\n        }\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.hypercubeBlessings) {\n                if (blessings[key].pdf(num))\n                    player.hypercubeBlessings[key] += 1;\n            }\n        }\n        calculateHypercubeBlessings();\n        const extraTesseractBlessings = Math.floor(100 * toSpend * player.researches[153]);\n        player.wowTesseracts.add(extraTesseractBlessings);\n        player.wowTesseracts.open(extraTesseractBlessings, false);\n    }\n}\nexport class WowPlatonicCubes extends Cube {\n    constructor(amount = Number(player.wowPlatonicCubes)) {\n        super('wowPlatonicCubes', amount);\n    }\n    open(value, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n        player.wowPlatonicCubes.sub(toSpend);\n        player.platonicCubeOpenedDaily += toSpend;\n        const quarkMult = 1.5;\n        const gainQuarks = this.checkQuarkGain(15, quarkMult, player.platonicCubeOpenedDaily);\n        const actualQuarksGain = Math.max(0, gainQuarks - player.platonicCubeQuarkDaily);\n        player.platonicCubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain);\n        let toSpendModulo = toSpend % 40000;\n        const toSpendDiv40000 = Math.floor(toSpend / 40000);\n        for (const key in player.platonicBlessings) {\n            player.platonicBlessings[key] += platonicBlessings[key].weight * toSpendDiv40000;\n        }\n        const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed'];\n        for (let i = 0; i < RNGesus.length; i++) {\n            const num = Math.random();\n            if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\n                player.platonicBlessings[RNGesus[i]] += 1;\n                toSpendModulo -= 1;\n            }\n        }\n        const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)];\n        const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'];\n        for (let i = 0; i < commonDrops.length; i++) {\n            player.platonicBlessings[commonDrops[i]] += gainValues[i];\n            toSpendModulo -= gainValues[i];\n        }\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.platonicBlessings) {\n                if (platonicBlessings[key].pdf(num))\n                    player.platonicBlessings[key] += 1;\n            }\n        }\n        calculatePlatonicBlessings();\n        if (player.achievements[273] > 0) {\n            const extraHypercubes = Math.floor(toSpend);\n            player.wowHypercubes.add(extraHypercubes);\n            player.wowHypercubes.open(extraHypercubes, false);\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Decimal from 'break_infinity.js';\nimport LZString from 'lz-string';\nimport { isDecimal, getElementById, sortWithIndeces, sumContents } from './Utility';\nimport { blankGlobals, Globals as G } from './Variables';\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep, getMaxChallenges } from './Challenges';\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades } from './Upgrades';\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research';\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, CSSAscend, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, hideStuff, changeTabColor, Confirm, Alert } from './UpdateHTML';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration } from './Calculate';\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels } from './Talismans';\nimport { toggleAscStatPerSecond, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleChallenges, keyboardTabChange, toggleauto, toggleAutoChallengeModeText } from './Toggles';\nimport { c15RewardUpdate } from './Statistics';\nimport { resetHistoryRenderAllTables } from './History';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { antSacrificePointsToMultiplier, autoBuyAnts, sacrificeAnts, calculateCrumbToCoinExp } from './Ants';\nimport { calculatetax } from './Tax';\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements';\nimport { reset } from './Reset';\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, getTesseractCost } from './Buy';\nimport { autoUpgrades } from './Automation';\nimport { redeemShards } from './Runes';\nimport { updateCubeUpgradeBG } from './Cubes';\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate, corruptionStatsUpdate } from './Corruptions';\nimport { generateEventHandlers } from './EventListeners';\nimport { addTimers, automaticTools } from './Helper';\nimport { checkVariablesOnLoad } from './CheckVariables';\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, hepteractEffective, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts';\nimport { QuarkHandler } from './Quark';\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental';\nexport const isTesting = true;\nexport const version = '2.5.0~alpha-2';\nexport const intervalHold = new Set();\nexport const interval = new Proxy(setInterval, {\n    apply(target, thisArg, args) {\n        const set = target.apply(thisArg, args);\n        intervalHold.add(set);\n        return set;\n    }\n});\nexport const clearInt = new Proxy(clearInterval, {\n    apply(target, thisArg, args) {\n        const id = args[0];\n        if (intervalHold.has(id))\n            intervalHold.delete(id);\n        return target.apply(thisArg, args);\n    }\n});\nexport const player = {\n    worlds: new QuarkHandler({ quarks: 0 }),\n    coins: new Decimal(\"1e2\"),\n    coinsThisPrestige: new Decimal(\"1e2\"),\n    coinsThisTranscension: new Decimal(\"1e2\"),\n    coinsThisReincarnation: new Decimal(\"1e2\"),\n    coinsTotal: new Decimal(\"100\"),\n    firstOwnedCoin: 0,\n    firstGeneratedCoin: new Decimal(\"0\"),\n    firstCostCoin: new Decimal(\"100\"),\n    firstProduceCoin: 0.25,\n    secondOwnedCoin: 0,\n    secondGeneratedCoin: new Decimal(\"0\"),\n    secondCostCoin: new Decimal(\"2e3\"),\n    secondProduceCoin: 2.5,\n    thirdOwnedCoin: 0,\n    thirdGeneratedCoin: new Decimal(\"0\"),\n    thirdCostCoin: new Decimal(\"4e4\"),\n    thirdProduceCoin: 25,\n    fourthOwnedCoin: 0,\n    fourthGeneratedCoin: new Decimal(\"0\"),\n    fourthCostCoin: new Decimal(\"8e5\"),\n    fourthProduceCoin: 250,\n    fifthOwnedCoin: 0,\n    fifthGeneratedCoin: new Decimal(\"0\"),\n    fifthCostCoin: new Decimal(\"16e6\"),\n    fifthProduceCoin: 2500,\n    firstOwnedDiamonds: 0,\n    firstGeneratedDiamonds: new Decimal(\"0\"),\n    firstCostDiamonds: new Decimal(\"100\"),\n    firstProduceDiamonds: 0.05,\n    secondOwnedDiamonds: 0,\n    secondGeneratedDiamonds: new Decimal(\"0\"),\n    secondCostDiamonds: new Decimal(\"1e5\"),\n    secondProduceDiamonds: 0.0005,\n    thirdOwnedDiamonds: 0,\n    thirdGeneratedDiamonds: new Decimal(\"0\"),\n    thirdCostDiamonds: new Decimal(\"1e15\"),\n    thirdProduceDiamonds: 0.00005,\n    fourthOwnedDiamonds: 0,\n    fourthGeneratedDiamonds: new Decimal(\"0\"),\n    fourthCostDiamonds: new Decimal(\"1e40\"),\n    fourthProduceDiamonds: 0.000005,\n    fifthOwnedDiamonds: 0,\n    fifthGeneratedDiamonds: new Decimal(\"0\"),\n    fifthCostDiamonds: new Decimal(\"1e100\"),\n    fifthProduceDiamonds: 0.000005,\n    firstOwnedMythos: 0,\n    firstGeneratedMythos: new Decimal(\"0\"),\n    firstCostMythos: new Decimal(\"1\"),\n    firstProduceMythos: 1,\n    secondOwnedMythos: 0,\n    secondGeneratedMythos: new Decimal(\"0\"),\n    secondCostMythos: new Decimal(\"100\"),\n    secondProduceMythos: 0.01,\n    thirdOwnedMythos: 0,\n    thirdGeneratedMythos: new Decimal(\"0\"),\n    thirdCostMythos: new Decimal(\"1e4\"),\n    thirdProduceMythos: 0.001,\n    fourthOwnedMythos: 0,\n    fourthGeneratedMythos: new Decimal(\"0\"),\n    fourthCostMythos: new Decimal(\"1e8\"),\n    fourthProduceMythos: 0.0002,\n    fifthOwnedMythos: 0,\n    fifthGeneratedMythos: new Decimal(\"0\"),\n    fifthCostMythos: new Decimal(\"1e16\"),\n    fifthProduceMythos: 0.00004,\n    firstOwnedParticles: 0,\n    firstGeneratedParticles: new Decimal(\"0\"),\n    firstCostParticles: new Decimal(\"1\"),\n    firstProduceParticles: .25,\n    secondOwnedParticles: 0,\n    secondGeneratedParticles: new Decimal(\"0\"),\n    secondCostParticles: new Decimal(\"100\"),\n    secondProduceParticles: .20,\n    thirdOwnedParticles: 0,\n    thirdGeneratedParticles: new Decimal(\"0\"),\n    thirdCostParticles: new Decimal(\"1e4\"),\n    thirdProduceParticles: .15,\n    fourthOwnedParticles: 0,\n    fourthGeneratedParticles: new Decimal(\"0\"),\n    fourthCostParticles: new Decimal(\"1e8\"),\n    fourthProduceParticles: .10,\n    fifthOwnedParticles: 0,\n    fifthGeneratedParticles: new Decimal(\"0\"),\n    fifthCostParticles: new Decimal(\"1e16\"),\n    fifthProduceParticles: .5,\n    firstOwnedAnts: 0,\n    firstGeneratedAnts: new Decimal(\"0\"),\n    firstCostAnts: new Decimal(\"1e800\"),\n    firstProduceAnts: .0001,\n    secondOwnedAnts: 0,\n    secondGeneratedAnts: new Decimal(\"0\"),\n    secondCostAnts: new Decimal(\"3\"),\n    secondProduceAnts: .00005,\n    thirdOwnedAnts: 0,\n    thirdGeneratedAnts: new Decimal(\"0\"),\n    thirdCostAnts: new Decimal(\"100\"),\n    thirdProduceAnts: .00002,\n    fourthOwnedAnts: 0,\n    fourthGeneratedAnts: new Decimal(\"0\"),\n    fourthCostAnts: new Decimal(\"1e4\"),\n    fourthProduceAnts: .00001,\n    fifthOwnedAnts: 0,\n    fifthGeneratedAnts: new Decimal(\"0\"),\n    fifthCostAnts: new Decimal(\"1e12\"),\n    fifthProduceAnts: .000005,\n    sixthOwnedAnts: 0,\n    sixthGeneratedAnts: new Decimal(\"0\"),\n    sixthCostAnts: new Decimal(\"1e36\"),\n    sixthProduceAnts: .000002,\n    seventhOwnedAnts: 0,\n    seventhGeneratedAnts: new Decimal(\"0\"),\n    seventhCostAnts: new Decimal(\"1e100\"),\n    seventhProduceAnts: .000001,\n    eighthOwnedAnts: 0,\n    eighthGeneratedAnts: new Decimal(\"0\"),\n    eighthCostAnts: new Decimal(\"1e300\"),\n    eighthProduceAnts: .00000001,\n    ascendBuilding1: {\n        cost: 1,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding2: {\n        cost: 10,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding3: {\n        cost: 100,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding4: {\n        cost: 1000,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    ascendBuilding5: {\n        cost: 10000,\n        owned: 0,\n        generated: new Decimal(\"0\"),\n        multiplier: 0.01\n    },\n    multiplierCost: new Decimal(\"1e5\"),\n    multiplierBought: 0,\n    acceleratorCost: new Decimal(\"500\"),\n    acceleratorBought: 0,\n    acceleratorBoostBought: 0,\n    acceleratorBoostCost: new Decimal(\"1e3\"),\n    upgrades: Array(141).fill(0),\n    prestigeCount: 0,\n    transcendCount: 0,\n    reincarnationCount: 0,\n    prestigePoints: new Decimal(\"0\"),\n    transcendPoints: new Decimal(\"0\"),\n    reincarnationPoints: new Decimal(\"0\"),\n    prestigeShards: new Decimal(\"0\"),\n    transcendShards: new Decimal(\"0\"),\n    reincarnationShards: new Decimal(\"0\"),\n    toggles: {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false,\n        9: false,\n        10: false,\n        11: false,\n        12: false,\n        13: false,\n        14: false,\n        15: false,\n        16: false,\n        17: false,\n        18: false,\n        19: false,\n        20: false,\n        21: false,\n        22: false,\n        23: false,\n        24: false,\n        25: false,\n        26: false,\n        27: false,\n        28: true,\n        29: true,\n        30: true,\n        31: true,\n        32: true,\n        33: false,\n    },\n    challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    challenge15Exponent: 0,\n    highestChallenge15Exponent: 0,\n    retrychallenges: false,\n    currentChallenge: {\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0,\n    },\n    researchPoints: 0,\n    obtainiumtimer: 0,\n    obtainiumpersecond: 0,\n    maxobtainiumpersecond: 0,\n    maxobtainium: 0,\n    researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    unlocks: {\n        coinone: false,\n        cointwo: false,\n        cointhree: false,\n        coinfour: false,\n        prestige: false,\n        generation: false,\n        transcend: false,\n        reincarnate: false,\n        rrow1: false,\n        rrow2: false,\n        rrow3: false,\n        rrow4: false\n    },\n    achievements: Array(281).fill(0),\n    achievementPoints: 0,\n    prestigenomultiplier: true,\n    prestigenoaccelerator: true,\n    transcendnomultiplier: true,\n    transcendnoaccelerator: true,\n    reincarnatenomultiplier: true,\n    reincarnatenoaccelerator: true,\n    prestigenocoinupgrades: true,\n    transcendnocoinupgrades: true,\n    transcendnocoinorprestigeupgrades: true,\n    reincarnatenocoinupgrades: true,\n    reincarnatenocoinorprestigeupgrades: true,\n    reincarnatenocoinprestigeortranscendupgrades: true,\n    reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\n    crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\n    crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\n    runelevels: [1, 1, 1, 1, 1, 0, 0],\n    runeexp: [0, 0, 0, 0, 0, 0, 0],\n    runeshards: 0,\n    maxofferings: 0,\n    offeringpersecond: 0,\n    prestigecounter: 0,\n    transcendcounter: 0,\n    reincarnationcounter: 0,\n    offlinetick: 0,\n    prestigeamount: 0,\n    transcendamount: 0,\n    reincarnationamount: 0,\n    fastestprestige: 9999999999,\n    fastesttranscend: 99999999999,\n    fastestreincarnate: 999999999999,\n    resettoggle1: 1,\n    resettoggle2: 1,\n    resettoggle3: 1,\n    tesseractAutoBuyerToggle: 0,\n    tesseractAutoBuyerAmount: 0,\n    coinbuyamount: 1,\n    crystalbuyamount: 1,\n    mythosbuyamount: 1,\n    particlebuyamount: 1,\n    offeringbuyamount: 1,\n    tesseractbuyamount: 1,\n    shoptoggles: {\n        coin: true,\n        prestige: true,\n        transcend: true,\n        generators: true,\n        reincarnate: true,\n    },\n    tabnumber: 1,\n    subtabNumber: 0,\n    codes: new Map(Array.from({ length: 30 }, (_, i) => [i + 1, false])),\n    loaded1009: true,\n    loaded1009hotfix1: true,\n    loaded10091: true,\n    loaded1010: true,\n    loaded10101: true,\n    shopUpgrades: {\n        offeringPotion: 1,\n        obtainiumPotion: 1,\n        offeringEX: 0,\n        offeringAuto: 0,\n        obtainiumEX: 0,\n        obtainiumAuto: 0,\n        instantChallenge: 0,\n        antSpeed: 0,\n        cashGrab: 0,\n        shopTalisman: 0,\n        seasonPass: 0,\n        challengeExtension: 0,\n        challengeTome: 0,\n        cubeToQuark: 0,\n        tesseractToQuark: 0,\n        hypercubeToQuark: 0,\n        seasonPass2: 0,\n        seasonPass3: 0,\n        chronometer: 0,\n        infiniteAscent: 0,\n    },\n    autoSacrificeToggle: false,\n    autoFortifyToggle: false,\n    autoEnhanceToggle: false,\n    autoResearchToggle: false,\n    autoResearch: 0,\n    autoSacrifice: 0,\n    sacrificeTimer: 0,\n    quarkstimer: 90000,\n    antPoints: new Decimal(\"1\"),\n    antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    antSacrificePoints: 0,\n    antSacrificeTimer: 900,\n    antSacrificeTimerReal: 900,\n    talismanLevels: [0, 0, 0, 0, 0, 0, 0],\n    talismanRarity: [1, 1, 1, 1, 1, 1, 1],\n    talismanOne: [null, -1, 1, 1, 1, -1],\n    talismanTwo: [null, 1, 1, -1, -1, 1],\n    talismanThree: [null, 1, -1, 1, 1, -1],\n    talismanFour: [null, -1, -1, 1, 1, 1],\n    talismanFive: [null, 1, 1, -1, -1, 1],\n    talismanSix: [null, 1, 1, 1, -1, -1],\n    talismanSeven: [null, -1, 1, -1, 1, 1],\n    talismanShards: 0,\n    commonFragments: 0,\n    uncommonFragments: 0,\n    rareFragments: 0,\n    epicFragments: 0,\n    legendaryFragments: 0,\n    mythicalFragments: 0,\n    buyTalismanShardPercent: 10,\n    autoAntSacrifice: false,\n    autoAntSacTimer: 900,\n    autoAntSacrificeMode: 0,\n    antMax: false,\n    ascensionCount: 0,\n    ascensionCounter: 0,\n    cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    wowCubes: new WowCubes(0),\n    wowTesseracts: new WowTesseracts(0),\n    wowHypercubes: new WowHypercubes(0),\n    wowPlatonicCubes: new WowPlatonicCubes(0),\n    wowAbyssals: 0,\n    cubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    tesseractBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    hypercubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    platonicBlessings: {\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 0,\n        platonics: 0,\n        hypercubeBonus: 0,\n        taxes: 0,\n        scoreBonus: 0,\n        globalSpeed: 0,\n    },\n    hepteractCrafts: {\n        chronos: ChronosHepteract,\n        hyperrealism: HyperrealismHepteract,\n        quark: QuarkHepteract,\n        challenge: ChallengeHepteract,\n        abyss: AbyssHepteract,\n        accelerator: AcceleratorHepteract,\n        acceleratorBoost: AcceleratorBoostHepteract,\n        multiplier: MultiplierHepteract\n    },\n    ascendShards: new Decimal(\"0\"),\n    autoAscend: false,\n    autoAscendMode: \"c10Completions\",\n    autoAscendThreshold: 1,\n    roombaResearchIndex: 0,\n    ascStatToggles: {\n        1: false,\n        2: false,\n        3: false,\n        4: false\n    },\n    prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    corruptionLoadouts: {\n        1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    corruptionShowStats: true,\n    constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    history: { ants: [], ascend: [], reset: [] },\n    historyCountMax: 10,\n    historyShowPerSecond: false,\n    autoChallengeRunning: false,\n    autoChallengeIndex: 1,\n    autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\n    autoChallengeStartExponent: 10,\n    autoChallengeTimer: {\n        start: 10,\n        exit: 2,\n        enter: 2\n    },\n    runeBlessingLevels: [0, 0, 0, 0, 0, 0],\n    runeSpiritLevels: [0, 0, 0, 0, 0, 0],\n    runeBlessingBuyAmount: 0,\n    runeSpiritBuyAmount: 0,\n    autoTesseracts: [false, false, false, false, false, false],\n    saveString: \"Synergism-$VERSION$-$TIME$.txt\",\n    exporttest: false,\n    dayCheck: null,\n    dayTimer: 0,\n    cubeOpenedDaily: 0,\n    cubeQuarkDaily: 0,\n    tesseractOpenedDaily: 0,\n    tesseractQuarkDaily: 0,\n    hypercubeOpenedDaily: 0,\n    hypercubeQuarkDaily: 0,\n    platonicCubeOpenedDaily: 0,\n    platonicCubeQuarkDaily: 0,\n    loadedOct4Hotfix: false,\n    loadedNov13Vers: true,\n    loadedDec16Vers: true,\n    version,\n    rngCode: 0\n};\nexport const blankSave = Object.assign({}, player, {\n    codes: new Map(Array.from({ length: 31 }, (_, i) => [i + 1, false]))\n});\nexport const saveSynergy = (button) => __awaiter(void 0, void 0, void 0, function* () {\n    player.offlinetick = Date.now();\n    player.loaded1009 = true;\n    player.loaded1009hotfix1 = true;\n    const p = Object.assign({}, player, {\n        codes: Array.from(player.codes),\n        worlds: Number(player.worlds),\n        wowCubes: Number(player.wowCubes),\n        wowTesseracts: Number(player.wowTesseracts),\n        wowHypercubes: Number(player.wowHypercubes),\n        wowPlatonicCubes: Number(player.wowPlatonicCubes)\n    });\n    localStorage.removeItem('Synergysave2');\n    localStorage.setItem('Synergysave2', btoa(JSON.stringify(p)));\n    if (button) {\n        const el = document.getElementById('saveinfo');\n        el.textContent = 'Game saved successfully!';\n        setTimeout(() => el.textContent = '', 4000);\n    }\n});\nconst toAdapt = new Map([\n    ['worlds', data => new QuarkHandler({ quarks: Number(data.worlds) })],\n    ['wowCubes', data => new WowCubes(Number(data.wowCubes))],\n    ['wowTesseracts', data => new WowTesseracts(Number(data.wowTesseracts))],\n    ['wowHypercubes', data => new WowHypercubes(Number(data.wowHypercubes))],\n    ['wowPlatonicCubes', data => new WowPlatonicCubes(Number(data.wowPlatonicCubes))]\n]);\nexport const loadSynergy = () => __awaiter(void 0, void 0, void 0, function* () {\n    const save = localStorage.getItem(\"Synergysave2\");\n    const data = save ? JSON.parse(atob(save)) : null;\n    if (isTesting) {\n        Object.defineProperty(window, 'player', {\n            value: player\n        });\n    }\n    Object.assign(G, Object.assign({}, blankGlobals));\n    if (data) {\n        const oldCodesUsed = Array.from({ length: 24 }, (_, i) => 'offerpromo' + (i + 1) + 'used');\n        const size = player.codes.size;\n        const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'));\n        if (oldPromoKeys.length > 0) {\n            oldPromoKeys.forEach(k => {\n                const value = data[k];\n                const num = +k.replace(/[^\\d]/g, '');\n                player.codes.set(num, Boolean(value));\n            });\n        }\n        Object.keys(data).forEach((prop) => {\n            if (toAdapt.has(prop)) {\n                return player[prop] = toAdapt.get(prop)(data);\n            }\n            if (isDecimal(player[prop])) {\n                return (player[prop] = new Decimal(data[prop]));\n            }\n            else if (prop === 'codes') {\n                return (player.codes = new Map(data[prop]));\n            }\n            else if (oldCodesUsed.includes(prop)) {\n                return;\n            }\n            else if (Array.isArray(data[prop])) {\n                if (player[prop].length < data[prop].length) {\n                    return player[prop] = data[prop].slice(data[prop].length - player[prop].length);\n                }\n            }\n            return (player[prop] = data[prop]);\n        });\n        if (data.offerpromo24used !== undefined) {\n            player.codes.set(25, false);\n        }\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n        if (!('rngCode' in data)) {\n            player.rngCode = 0;\n        }\n        if (data.loaded1009 === undefined || !data.loaded1009) {\n            player.loaded1009 = false;\n        }\n        if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = false;\n        }\n        if (data.loaded10091 === undefined) {\n            player.loaded10091 = false;\n        }\n        if (data.loaded1010 === undefined) {\n            player.loaded1010 = false;\n        }\n        if (data.loaded10101 === undefined) {\n            player.loaded10101 = false;\n        }\n        if (data.shopUpgrades === undefined) {\n            player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades);\n        }\n        if (player.researches[76] === undefined) {\n            player.codes.set(13, false);\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.maxofferings = player.runeshards;\n            player.maxobtainium = player.researchPoints;\n            player.researchPoints += 51200 * player.researches[50];\n            player.researches[50] = 0;\n        }\n        player.maxofferings = player.maxofferings || 0;\n        player.maxobtainium = player.maxobtainium || 0;\n        player.runeshards = player.runeshards || 0;\n        player.researchPoints = player.researchPoints || 0;\n        if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades.offeringPotion === undefined) {\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal(\"1\");\n            player.secondCostParticles = new Decimal(\"1e2\");\n            player.thirdCostParticles = new Decimal(\"1e4\");\n            player.fourthCostParticles = new Decimal(\"1e8\");\n            player.fifthCostParticles = new Decimal(\"1e16\");\n            player.autoSacrificeToggle = false;\n            player.autoResearchToggle = false;\n            player.autoResearch = 0;\n            player.autoSacrifice = 0;\n            player.sacrificeTimer = 0;\n            player.loaded1009 = true;\n            player.codes.set(18, false);\n        }\n        if (!data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = true;\n            player.codes.set(19, true);\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal(\"1\");\n            player.secondCostParticles = new Decimal(\"1e2\");\n            player.thirdCostParticles = new Decimal(\"1e4\");\n            player.fourthCostParticles = new Decimal(\"1e8\");\n            player.fifthCostParticles = new Decimal(\"1e16\");\n        }\n        if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\n            player.loaded10091 = true;\n            player.researchPoints += 7.5e8 * player.researches[82];\n            player.researchPoints += 2e8 * player.researches[83];\n            player.researchPoints += 4.5e9 * player.researches[84];\n            player.researchPoints += 2.5e7 * player.researches[86];\n            player.researchPoints += 7.5e7 * player.researches[87];\n            player.researchPoints += 3e8 * player.researches[88];\n            player.researchPoints += 1e9 * player.researches[89];\n            player.researchPoints += 2.5e7 * player.researches[90];\n            player.researchPoints += 1e8 * player.researches[91];\n            player.researchPoints += 2e9 * player.researches[92];\n            player.researchPoints += 9e9 * player.researches[93];\n            player.researchPoints += 7.25e10 * player.researches[94];\n            player.researches[86] = 0;\n            player.researches[87] = 0;\n            player.researches[88] = 0;\n            player.researches[89] = 0;\n            player.researches[90] = 0;\n            player.researches[91] = 0;\n            player.researches[92] = 0;\n        }\n        if (data.achievements[169] === undefined ||\n            player.achievements[169] === undefined ||\n            data.loaded1010 === undefined ||\n            data.loaded1010 === false) {\n            player.loaded1010 = true;\n            player.codes.set(21, false);\n            player.firstOwnedAnts = 0;\n            player.firstGeneratedAnts = new Decimal(\"0\");\n            player.firstCostAnts = new Decimal(\"1e800\");\n            player.firstProduceAnts = .0001;\n            player.secondOwnedAnts = 0;\n            player.secondGeneratedAnts = new Decimal(\"0\");\n            player.secondCostAnts = new Decimal(\"3\");\n            player.secondProduceAnts = .00005;\n            player.thirdOwnedAnts = 0;\n            player.thirdGeneratedAnts = new Decimal(\"0\");\n            player.thirdCostAnts = new Decimal(\"100\");\n            player.thirdProduceAnts = .00002;\n            player.fourthOwnedAnts = 0;\n            player.fourthGeneratedAnts = new Decimal(\"0\");\n            player.fourthCostAnts = new Decimal(\"1e4\");\n            player.fourthProduceAnts = .00001;\n            player.fifthOwnedAnts = 0;\n            player.fifthGeneratedAnts = new Decimal(\"0\");\n            player.fifthCostAnts = new Decimal(\"1e12\");\n            player.fifthProduceAnts = .000005;\n            player.sixthOwnedAnts = 0;\n            player.sixthGeneratedAnts = new Decimal(\"0\");\n            player.sixthCostAnts = new Decimal(\"1e36\");\n            player.sixthProduceAnts = .000002;\n            player.seventhOwnedAnts = 0;\n            player.seventhGeneratedAnts = new Decimal(\"0\");\n            player.seventhCostAnts = new Decimal(\"1e100\");\n            player.seventhProduceAnts = .000001;\n            player.eighthOwnedAnts = 0;\n            player.eighthGeneratedAnts = new Decimal(\"0\");\n            player.eighthCostAnts = new Decimal(\"1e300\");\n            player.eighthProduceAnts = .00000001;\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.antPoints = new Decimal(\"1\");\n            player.upgrades[38] = 0;\n            player.upgrades[39] = 0;\n            player.upgrades[40] = 0;\n            player.upgrades[76] = 0;\n            player.upgrades[77] = 0;\n            player.upgrades[78] = 0;\n            player.upgrades[79] = 0;\n            player.upgrades[80] = 0;\n            player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            player.unlocks.rrow4 = false;\n            player.researchPoints += 3e7 * player.researches[50];\n            player.researchPoints += 2e9 * player.researches[96];\n            player.researchPoints += 5e9 * player.researches[97];\n            player.researchPoints += 3e10 * player.researches[98];\n            player.researches[50] = 0;\n            player.researches[96] = 0;\n            player.researches[97] = 0;\n            player.researches[98] = 0;\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n            player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n            player.talismanShards = 0;\n            player.commonFragments = 0;\n            player.uncommonFragments = 0;\n            player.rareFragments = 0;\n            player.epicFragments = 0;\n            player.legendaryFragments = 0;\n            player.mythicalFragments = 0;\n            player.buyTalismanShardPercent = 10;\n            player.talismanOne = [null, -1, 1, 1, 1, -1];\n            player.talismanTwo = [null, 1, 1, -1, -1, 1];\n            player.talismanThree = [null, 1, -1, 1, 1, -1];\n            player.talismanFour = [null, -1, -1, 1, 1, 1];\n            player.talismanFive = [null, 1, 1, -1, -1, 1];\n            player.talismanSix = [null, 1, 1, 1, -1, -1];\n            player.talismanSeven = [null, -1, 1, -1, 1, 1];\n            player.antSacrificePoints = 0;\n            player.antSacrificeTimer = 0;\n            player.obtainiumpersecond = 0;\n            player.maxobtainiumpersecond = 0;\n        }\n        if (data.loaded10101 === undefined || data.loaded10101 === false) {\n            player.loaded10101 = true;\n            const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\n                81, 98, 104, 105, 106, 107, 108,\n                109, 110, 111, 112, 113, 114, 115, 116,\n                117, 118, 119, 120, 121, 122, 123, 125];\n            const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\n                2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\n                2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\n                2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20];\n            for (let i = 1; i < refundThese.length; i++) {\n                player.researchPoints += player.researches[refundThese[i]] * refundReward[i];\n                player.researches[refundThese[i]] = 0;\n            }\n            player.autoAntSacrifice = false;\n            player.antMax = false;\n        }\n        if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte(\"1e1200\")) {\n            player.firstCostAnts = new Decimal(\"1e800\");\n            player.firstOwnedAnts = 0;\n        }\n        checkVariablesOnLoad(data);\n        if (data.ascensionCount === undefined || player.ascensionCount === 0) {\n            player.ascensionCount = 0;\n            if (player.ascensionCounter === undefined || (player.ascensionCounter === 0 && player.prestigeCount > 0)) {\n                player.ascensionCounter = 86400 * 90;\n            }\n            player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            player.wowCubes = new WowCubes(0);\n            player.wowTesseracts = new WowTesseracts(0);\n            player.wowHypercubes = new WowHypercubes(0);\n            player.cubeBlessings = {\n                accelerator: 0,\n                multiplier: 0,\n                offering: 0,\n                runeExp: 0,\n                obtainium: 0,\n                antSpeed: 0,\n                antSacrifice: 0,\n                antELO: 0,\n                talismanBonus: 0,\n                globalSpeed: 0\n            };\n        }\n        if (data.autoAntSacTimer === undefined) {\n            player.autoAntSacTimer = 900;\n        }\n        if (data.autoAntSacrificeMode === undefined) {\n            player.autoAntSacrificeMode = 0;\n        }\n        if (player.cubeUpgrades[7] === 0 && player.toggles[22]) {\n            for (let i = 22; i <= 26; i++) {\n                player.toggles[i] = false;\n            }\n        }\n        if (player.transcendCount < 0) {\n            player.transcendCount = 0;\n        }\n        if (player.reincarnationCount < 0) {\n            player.reincarnationCount = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n        if (player.resettoggle1 === 0) {\n            player.resettoggle1 = 1;\n            player.resettoggle2 = 1;\n            player.resettoggle3 = 1;\n        }\n        if (player.tesseractAutoBuyerToggle === 0) {\n            player.tesseractAutoBuyerToggle = 1;\n        }\n        if (player.reincarnationCount < 0.5 && player.unlocks.rrow4 === true) {\n            player.unlocks = {\n                coinone: false,\n                cointwo: false,\n                cointhree: false,\n                coinfour: false,\n                prestige: false,\n                generation: false,\n                transcend: false,\n                reincarnate: false,\n                rrow1: false,\n                rrow2: false,\n                rrow3: false,\n                rrow4: false\n            };\n        }\n        if (data.history === undefined || player.history === undefined) {\n            player.history = { ants: [], ascend: [], reset: [] };\n        }\n        if (data.historyShowPerSecond === undefined || player.historyShowPerSecond === undefined) {\n            player.historyShowPerSecond = false;\n            player.historyCountMax = 10;\n        }\n        if (!Number.isInteger(player.ascendBuilding1.cost)) {\n            player.ascendBuilding1.cost = 1;\n            player.ascendBuilding1.owned = 0;\n            player.ascendBuilding2.cost = 10;\n            player.ascendBuilding2.owned = 0;\n            player.ascendBuilding3.cost = 100;\n            player.ascendBuilding3.owned = 0;\n            player.ascendBuilding4.cost = 1000;\n            player.ascendBuilding4.owned = 0;\n            player.ascendBuilding5.cost = 10000;\n            player.ascendBuilding5.owned = 0;\n        }\n        if (!player.dayCheck) {\n            player.dayCheck = new Date(player.dayCheck);\n        }\n        for (let i = 1; i <= 5; i++) {\n            player['ascendBuilding' + i].generated = new Decimal(player['ascendBuilding' + i].generated);\n        }\n        while (player.achievements[252] === undefined) {\n            player.achievements.push(0);\n        }\n        while (player.researches[200] === undefined) {\n            player.researches.push(0);\n        }\n        while (player.upgrades[140] === undefined) {\n            player.upgrades.push(0);\n        }\n        if (player.saveString === undefined || player.saveString === \"\" || player.saveString === \"Synergism-v1011Test.txt\") {\n            player.saveString = \"Synergism-$VERSION$-$TIME$.txt\";\n        }\n        getElementById(\"saveStringInput\").value = player.saveString;\n        player.wowCubes = new WowCubes(Number(player.wowCubes) || 0);\n        for (let j = 1; j < 126; j++) {\n            upgradeupdate(j);\n        }\n        for (let j = 1; j <= (200); j++) {\n            updateResearchBG(j);\n        }\n        for (let j = 1; j <= 50; j++) {\n            updateCubeUpgradeBG(j);\n        }\n        player.subtabNumber = 0;\n        G['runescreen'] = \"runes\";\n        document.getElementById(\"toggleRuneSubTab1\").style.backgroundColor = 'crimson';\n        document.getElementById(\"toggleRuneSubTab1\").style.border = '2px solid gold';\n        const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'];\n        if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\n            player.coinbuyamount = 1;\n        }\n        if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\n            player.crystalbuyamount = 1;\n        }\n        if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\n            player.mythosbuyamount = 1;\n        }\n        if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\n            player.particlebuyamount = 1;\n        }\n        if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\n            player.offeringbuyamount = 1;\n        }\n        if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\n            player.tesseractbuyamount = 1;\n        }\n        for (let j = 0; j <= 5; j++) {\n            for (let k = 0; k < 4; k++) {\n                let d;\n                if (k === 0) {\n                    d = 'one';\n                }\n                if (k === 1) {\n                    d = 'ten';\n                }\n                if (k === 2) {\n                    d = 'hundred';\n                }\n                if (k === 3) {\n                    d = 'thousand';\n                }\n                const e = q[j] + d;\n                document.getElementById(e).style.backgroundColor = \"\";\n            }\n            let c;\n            if (player[q[j] + 'buyamount'] === 1) {\n                c = 'one';\n            }\n            if (player[q[j] + 'buyamount'] === 10) {\n                c = 'ten';\n            }\n            if (player[q[j] + 'buyamount'] === 100) {\n                c = 'hundred';\n            }\n            if (player[q[j] + 'buyamount'] === 1000) {\n                c = 'thousand';\n            }\n            const b = q[j] + c;\n            document.getElementById(b).style.backgroundColor = \"green\";\n        }\n        const testArray = [];\n        for (let i = 0; i < G['researchBaseCosts'].length; i++) {\n            testArray.push(G['researchBaseCosts'][i]);\n        }\n        G['researchOrderByCost'] = sortWithIndeces(testArray);\n        player.roombaResearchIndex = 0;\n        if (player.shoptoggles.coin === false) {\n            document.getElementById(\"shoptogglecoin\").textContent = \"Auto: OFF\";\n        }\n        if (player.shoptoggles.prestige === false) {\n            document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: OFF\";\n        }\n        if (player.shoptoggles.transcend === false) {\n            document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: OFF\";\n        }\n        if (player.shoptoggles.generators === false) {\n            document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: OFF\";\n        }\n        if (!player.shoptoggles.reincarnate) {\n            document.getElementById('particleAutoUpgrade').textContent = \"Auto: OFF\";\n        }\n        getChallengeConditions();\n        updateChallengeDisplay();\n        revealStuff();\n        toggleauto();\n        document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\n        getElementById(\"startAutoChallengeTimerInput\").value = player.autoChallengeTimer.start + '';\n        document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\n        getElementById(\"exitAutoChallengeTimerInput\").value = player.autoChallengeTimer.exit + '';\n        document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\n        getElementById(\"enterAutoChallengeTimerInput\").value = player.autoChallengeTimer.enter + '';\n        corruptionStatsUpdate();\n        for (let i = 0; i < 4; i++) {\n            corruptionLoadoutTableUpdate(i);\n        }\n        showCorruptionStatsLoadouts();\n        for (let j = 1; j <= 5; j++) {\n            const ouch = document.getElementById(\"tesseractAutoToggle\" + j);\n            (player.autoTesseracts[j]) ?\n                (ouch.textContent = \"Auto [ON]\", ouch.style.border = \"2px solid green\") :\n                (ouch.textContent = \"Auto [OFF]\", ouch.style.border = \"2px solid red\");\n        }\n        document.getElementById(\"buyRuneBlessingToggleValue\").textContent = format(player.runeBlessingBuyAmount, 0, true);\n        document.getElementById(\"buyRuneSpiritToggleValue\").textContent = format(player.runeSpiritBuyAmount, 0, true);\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\n        document.getElementById(\"talismanlevelup\").style.display = \"none\";\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\n        calculatePlatonicBlessings();\n        calculateHypercubeBlessings();\n        calculateTesseractBlessings();\n        calculateCubeBlessings();\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        updateTalismanAppearance(7);\n        for (const id in player.ascStatToggles) {\n            toggleAscStatPerSecond(+id);\n            toggleAscStatPerSecond(+id);\n        }\n        if (player.resettoggle1 === 1) {\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n        if (player.resettoggle2 === 1) {\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n        if (player.resettoggle3 === 1) {\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n        if (player.resettoggle1 === 2) {\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\";\n        }\n        if (player.resettoggle2 === 2) {\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\";\n        }\n        if (player.resettoggle3 === 2) {\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\";\n        }\n        if (player.tesseractAutoBuyerToggle === 1) {\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\";\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\";\n        }\n        if (player.tesseractAutoBuyerToggle === 2) {\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\";\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\";\n        }\n        if (player.autoResearchToggle) {\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: ON\";\n        }\n        if (!player.autoResearchToggle) {\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: OFF\";\n        }\n        if (player.autoSacrificeToggle == true) {\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: ON\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\";\n        }\n        if (player.autoSacrificeToggle == false) {\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: OFF\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\";\n        }\n        if (player.autoFortifyToggle == true) {\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: ON\";\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid green\";\n        }\n        if (player.autoFortifyToggle == false) {\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: OFF\";\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid red\";\n        }\n        if (player.autoEnhanceToggle == true) {\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: ON\";\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid green\";\n        }\n        if (player.autoEnhanceToggle == false) {\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: OFF\";\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid red\";\n        }\n        if (!player.autoAscend) {\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\";\n        }\n        for (let i = 1; i <= 2; i++) {\n            toggleAntMaxBuy();\n            toggleAntAutoSacrifice(0);\n            toggleAntAutoSacrifice(1);\n        }\n        document.getElementById(\"historyTogglePerSecondButton\").textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\n        document.getElementById(\"historyTogglePerSecondButton\").style.borderColor = (player.historyShowPerSecond ? \"green\" : \"red\");\n        if (!player.autoAscend) {\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\";\n        }\n        player.autoResearch = Math.min(200, player.autoResearch);\n        player.autoSacrifice = Math.min(5, player.autoSacrifice);\n        if (player.researches[61] === 0) {\n            document.getElementById('automaticobtainium').textContent = \"[LOCKED - Buy Research 3x11]\";\n        }\n        if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\n            document.getElementById(\"rune\" + player.autoSacrifice).style.backgroundColor = \"orange\";\n        }\n        calculateOffline();\n        toggleTalismanBuy(player.buyTalismanShardPercent);\n        updateTalismanInventory();\n        calculateObtainium();\n        calculateAnts();\n        calculateRuneLevels();\n        resetHistoryRenderAllTables();\n        c15RewardUpdate();\n    }\n    CSSAscend();\n    updateAchievementBG();\n    const d = new Date();\n    const h = d.getHours();\n    const m = d.getMinutes();\n    const s = d.getSeconds();\n    player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h));\n});\nconst IntlFormatter = Intl.NumberFormat()\n    .formatToParts(1000.1)\n    .filter(part => part.type === 'decimal' || part.type === 'group');\nconst [{ value: group }, { value: dec }] = (IntlFormatter === null || IntlFormatter === void 0 ? void 0 : IntlFormatter.length) !== 2\n    ? [{ value: ',' }, { value: '.' }]\n    : IntlFormatter;\nconst locOpts = { minimumFractionDigits: 2, maximumFractionDigits: 2 };\nexport const format = (input, accuracy = 0, long = false, truncate = true) => {\n    if (typeof input === 'object' &&\n        input !== null &&\n        Symbol.toPrimitive in input) {\n        input = Number(input);\n    }\n    if (!(input instanceof Decimal) && typeof input !== 'number' || isNaN(input)) {\n        return '0 [und.]';\n    }\n    let power;\n    let mantissa;\n    if (isDecimal(input)) {\n        power = input.e;\n        mantissa = input.mantissa;\n    }\n    else if (typeof input === 'number') {\n        if (input === 0) {\n            return '0';\n        }\n        power = Math.floor(Math.log10(Math.abs(input)));\n        mantissa = input / Math.pow(10, power);\n    }\n    if (mantissa > 9.9999999) {\n        mantissa = 1;\n        ++power;\n    }\n    if (mantissa < 1 && mantissa > 0.9999999) {\n        mantissa = 1;\n    }\n    if (power < -12) {\n        return '0';\n    }\n    else if (power < 6 || (long && power < 13)) {\n        let standard = mantissa * Math.pow(10, power);\n        let standardString;\n        if (standard - Math.floor(standard) > 0.9999999) {\n            standard = Math.ceil(standard);\n        }\n        if ((power < 1 || (long && power < 3)) && accuracy > 0) {\n            standardString = standard.toFixed(accuracy);\n        }\n        else {\n            standard = Math.floor(standard);\n            standardString = standard.toString();\n        }\n        const [front, back] = standardString.split('.');\n        const frontFormatted = typeof BigInt === 'function'\n            ? BigInt(front).toLocaleString()\n            : front.replace(/(\\d)(?=(\\d{3})+$)/g, `$1${group}`);\n        return !back\n            ? frontFormatted\n            : `${frontFormatted}${dec}${back}`;\n    }\n    else if (power < 1e6) {\n        const mantissaLook = (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts);\n        const powerLook = typeof BigInt === 'function'\n            ? BigInt(power).toLocaleString()\n            : power.toString().replace(/(\\d)(?=(\\d{3})+$)/g, `$1${group}`);\n        return `${mantissaLook}e${powerLook}`;\n    }\n    else if (power >= 1e6) {\n        const mantissaLook = isTesting && truncate ? '' : (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts);\n        const powerDigits = Math.ceil(Math.log10(power));\n        let powerFront = ((powerDigits - 1) % 3) + 1;\n        let powerLook = power / Math.pow(10, powerDigits - powerFront);\n        if (powerLook === 1000) {\n            powerLook = 1;\n            powerFront = 1;\n        }\n        const powerLookF = powerLook.toLocaleString(undefined, {\n            minimumFractionDigits: 4 - powerFront, maximumFractionDigits: 4 - powerFront\n        });\n        if (power < 1e9) {\n            return `${mantissaLook}e${powerLookF}M`;\n        }\n        if (power < 1e12) {\n            return `${mantissaLook}e${powerLookF}B`;\n        }\n        if (power < 1e15) {\n            return `${mantissaLook}e${powerLookF}T`;\n        }\n        if (power < 1e18) {\n            return `${mantissaLook}e${powerLookF}Qa`;\n        }\n        if (power < 1e21) {\n            return `${mantissaLook}e${powerLookF}Qi`;\n        }\n        if (power < 1e24) {\n            return `${mantissaLook}e${powerLookF}Sx`;\n        }\n        if (power < 1e27) {\n            return `${mantissaLook}e${powerLookF}Sp`;\n        }\n        if (power < 1e30) {\n            return `${mantissaLook}e${powerLookF}Oc`;\n        }\n        if (power < 1e33) {\n            return `${mantissaLook}e${powerLookF}No`;\n        }\n        if (power < 1e36) {\n            return `${mantissaLook}e${powerLookF}Dc`;\n        }\n        if (power < 1e39) {\n            return `${mantissaLook}e${powerLookF}UDc`;\n        }\n        if (power < 1e42) {\n            return `${mantissaLook}e${powerLookF}DDc`;\n        }\n        if (power < 1e45) {\n            return `${mantissaLook}e${powerLookF}TDc`;\n        }\n        if (power < 1e48) {\n            return `${mantissaLook}e${powerLookF}QaDc`;\n        }\n        if (power < 1e51) {\n            return `${mantissaLook}e${powerLookF}QiDc`;\n        }\n        if (power < 1e54) {\n            return `${mantissaLook}e${powerLookF}AAAA`;\n        }\n        return `${mantissa}e${power}`;\n    }\n    else {\n        return `0 [und.]`;\n    }\n};\nexport const formatTimeShort = (seconds, msMaxSeconds) => {\n    return ((seconds >= 86400)\n        ? format(Math.floor(seconds / 86400)) + \"d\"\n        : '') +\n        ((seconds >= 3600)\n            ? format(Math.floor(seconds / 3600) % 24) + \"h\"\n            : '') +\n        ((seconds >= 60)\n            ? format(Math.floor(seconds / 60) % 60) + \"m\"\n            : '') +\n        format(Math.floor(seconds) % 60) +\n        ((msMaxSeconds && seconds < msMaxSeconds)\n            ? \".\" + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0'))\n            : '') + \"s\";\n};\nexport const updateAllTick = () => {\n    let a = 0;\n    G['totalAccelerator'] = player.acceleratorBought;\n    G['costDivisor'] = 1;\n    if (player.upgrades[8] !== 0) {\n        a += Math.floor(player.multiplierBought / 7);\n    }\n    if (player.upgrades[21] !== 0) {\n        a += 5;\n    }\n    if (player.upgrades[22] !== 0) {\n        a += 4;\n    }\n    if (player.upgrades[23] !== 0) {\n        a += 3;\n    }\n    if (player.upgrades[24] !== 0) {\n        a += 2;\n    }\n    if (player.upgrades[25] !== 0) {\n        a += 1;\n    }\n    if (player.upgrades[27] !== 0) {\n        a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50));\n    }\n    if (player.upgrades[29] !== 0) {\n        a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80));\n    }\n    if (player.upgrades[32] !== 0) {\n        a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)));\n    }\n    if (player.upgrades[45] !== 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)));\n    }\n    if (player.achievements[5] !== 0) {\n        a += Math.floor(player.firstOwnedCoin / 500);\n    }\n    if (player.achievements[12] !== 0) {\n        a += Math.floor(player.secondOwnedCoin / 500);\n    }\n    if (player.achievements[19] !== 0) {\n        a += Math.floor(player.thirdOwnedCoin / 500);\n    }\n    if (player.achievements[26] !== 0) {\n        a += Math.floor(player.fourthOwnedCoin / 500);\n    }\n    if (player.achievements[33] !== 0) {\n        a += Math.floor(player.fifthOwnedCoin / 500);\n    }\n    if (player.achievements[60] !== 0) {\n        a += 2;\n    }\n    if (player.achievements[61] !== 0) {\n        a += 2;\n    }\n    if (player.achievements[62] !== 0) {\n        a += 2;\n    }\n    a += 5 * CalcECC('transcend', player.challengecompletions[2]);\n    G['freeUpgradeAccelerator'] = a;\n    a += G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]);\n    if (player.unlocks.prestige === true) {\n        a += Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 4, 1.25));\n        a *= (1 + G['rune1level'] * 1 / 400 * G['effectiveLevelMult']);\n    }\n    calculateAcceleratorMultiplier();\n    a *= G['acceleratorMultiplier'];\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))));\n    a *= G['challenge15Rewards'].accelerator;\n    a *= (1 + 3 / 10000 * hepteractEffective('accelerator'));\n    a = Math.floor(a);\n    G['freeAccelerator'] = a;\n    G['totalAccelerator'] += G['freeAccelerator'];\n    G['tuSevenMulti'] = 1;\n    if (player.upgrades[46] > 0.5) {\n        G['tuSevenMulti'] = 1.05;\n    }\n    G['acceleratorPower'] = Math.pow(1.1 + G['tuSevenMulti'] *\n        (G['totalAcceleratorBoost'] / 100)\n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20), 1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]));\n    G['acceleratorPower'] += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100;\n    for (let i = 1; i <= 5; i++) {\n        if (player.achievements[7 * i - 4] > 0) {\n            G['acceleratorPower'] += 0.0005 * i;\n        }\n    }\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['acceleratorPower'] *= 25 / (50 + player.challengecompletions[1]);\n            G['acceleratorPower'] += 0.55;\n            G['acceleratorPower'] = Math.max(1, G['acceleratorPower']);\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['acceleratorPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 3) {\n            G['acceleratorPower'] =\n                1.05 +\n                    2 * G['tuSevenMulti'] *\n                        (G['totalAcceleratorBoost'] / 300) *\n                        (1 + CalcECC('transcend', player.challengecompletions[2]) / 20);\n        }\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        G['acceleratorPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorPower'] = 1;\n    }\n    if (player.currentChallenge.transcension !== 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator']);\n    }\n    if (player.currentChallenge.transcension === 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator'] + G['totalMultiplier']);\n    }\n    G['acceleratorEffectDisplay'] = new Decimal(G['acceleratorPower'] * 100 - 100);\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorEffect'] = new Decimal(1);\n    }\n    G['generatorPower'] = new Decimal(1);\n    if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\n        G['generatorPower'] = Decimal.pow(1.02, G['totalAccelerator']);\n    }\n};\nexport const updateAllMultiplier = () => {\n    let a = 0;\n    if (player.upgrades[7] > 0) {\n        a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)));\n    }\n    if (player.upgrades[9] > 0) {\n        a += Math.floor(player.acceleratorBought / 10);\n    }\n    if (player.upgrades[21] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[22] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[23] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[24] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[25] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[28] > 0) {\n        a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160));\n    }\n    if (player.upgrades[30] > 0) {\n        a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)));\n    }\n    if (player.upgrades[33] > 0) {\n        a += G['totalAcceleratorBoost'];\n    }\n    if (player.upgrades[49] > 0) {\n        a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)));\n    }\n    if (player.upgrades[68] > 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(G['taxdivisor'], 10) * 1 / 1000));\n    }\n    if (player.challengecompletions[1] > 0) {\n        a += 1;\n    }\n    if (player.achievements[6] > 0.5) {\n        a += Math.floor(player.firstOwnedCoin / 1000);\n    }\n    if (player.achievements[13] > 0.5) {\n        a += Math.floor(player.secondOwnedCoin / 1000);\n    }\n    if (player.achievements[20] > 0.5) {\n        a += Math.floor(player.thirdOwnedCoin / 1000);\n    }\n    if (player.achievements[27] > 0.5) {\n        a += Math.floor(player.fourthOwnedCoin / 1000);\n    }\n    if (player.achievements[34] > 0.5) {\n        a += Math.floor(player.fifthOwnedCoin / 1000);\n    }\n    if (player.achievements[57] > 0.5) {\n        a += 1;\n    }\n    if (player.achievements[58] > 0.5) {\n        a += 1;\n    }\n    if (player.achievements[59] > 0.5) {\n        a += 1;\n    }\n    a += 20 * player.researches[94] * Math.floor((G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']) / 8);\n    G['freeUpgradeMultiplier'] = a;\n    if (player.achievements[38] > 0.5) {\n        a += Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) *\n            Math.floor(1 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100;\n    }\n    a *= (1 + player.achievements[57] / 100);\n    a *= (1 + player.achievements[58] / 100);\n    a *= (1 + player.achievements[59] / 100);\n    a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]);\n    if (player.upgrades[34] > 0.5) {\n        a *= 1.03 * 100 / 100;\n    }\n    if (player.upgrades[35] > 0.5) {\n        a *= 1.05 / 1.03 * 100 / 100;\n    }\n    a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15]);\n    a *= (1 + G['rune2level'] / 400 * G['effectiveLevelMult']);\n    a *= (1 + 1 / 20 * player.researches[87]);\n    a *= (1 + 1 / 100 * player.researches[128]);\n    a *= (1 + 0.8 / 100 * player.researches[143]);\n    a *= (1 + 0.6 / 100 * player.researches[158]);\n    a *= (1 + 0.4 / 100 * player.researches[173]);\n    a *= (1 + 0.2 / 100 * player.researches[188]);\n    a *= (1 + 0.01 / 100 * player.researches[200]);\n    a *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\n    a *= calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39);\n    a *= G['cubeBonusMultiplier'][2];\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        a *= 1.25;\n    }\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))));\n    a *= G['challenge15Rewards'].multiplier;\n    a *= (1 + 3 / 10000 * hepteractEffective('multiplier'));\n    a = Math.floor(a);\n    G['freeMultiplier'] = a;\n    G['totalMultiplier'] = G['freeMultiplier'] + player.multiplierBought;\n    G['challengeOneLog'] = 3;\n    let b = 0;\n    let c = 0;\n    b += Decimal.log(player.transcendShards.add(1), 3);\n    b *= (1 + 11 * player.researches[33] / 100);\n    b *= (1 + 11 * player.researches[34] / 100);\n    b *= (1 + 11 * player.researches[35] / 100);\n    b *= (1 + player.researches[89] / 5);\n    b *= (1 + 10 * G['effectiveRuneBlessingPower'][2]);\n    c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])));\n    c += (CalcECC('transcend', player.challengecompletions[1]) * 10);\n    G['freeMultiplierBoost'] = c;\n    G['totalMultiplierBoost'] = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04);\n    let c7 = 1;\n    if (player.challengecompletions[7] > 0.5) {\n        c7 = 1.25;\n    }\n    G['multiplierPower'] = 2 + 0.005 * G['totalMultiplierBoost'] * c7;\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['multiplierPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['multiplierPower'] = (1.25 + 0.0012 * (b + c) * c7);\n        }\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        G['multiplierPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['multiplierPower'] = 1;\n    }\n    G['multiplierEffect'] = Decimal.pow(G['multiplierPower'], G['totalMultiplier']);\n};\nexport const multipliers = () => {\n    let s = new Decimal(1);\n    let c = new Decimal(1);\n    let crystalExponent = 1 / 3;\n    crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3], 0.05 * player.crystalUpgrades[3]);\n    crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3]);\n    crystalExponent += 0.08 * player.researches[28];\n    crystalExponent += 0.08 * player.researches[29];\n    crystalExponent += 0.04 * player.researches[30];\n    crystalExponent += 8 * player.cubeUpgrades[17];\n    G['prestigeMultiplier'] = Decimal.pow(player.prestigeShards, crystalExponent).add(1);\n    let c7 = 1;\n    if (player.currentChallenge.reincarnation === 7) {\n        c7 = 0.05;\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        c7 = 0;\n    }\n    G['buildingPower'] =\n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(player.reincarnationShards.add(1), 10) *\n            (1 + 1 / 20 * player.researches[36] +\n                1 / 40 * player.researches[37] + 1 / 40 *\n                player.researches[38]) +\n            (c7 + 0.2) * 0.25 / 1.2 *\n                CalcECC('reincarnation', player.challengecompletions[8]);\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[12] * 0.09);\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[36] * 0.05);\n    G['reincarnationMultiplier'] = Decimal.pow(G['buildingPower'], G['totalCoinOwned']);\n    G['antMultiplier'] = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp());\n    s = s.times(G['multiplierEffect']);\n    s = s.times(G['acceleratorEffect']);\n    s = s.times(G['prestigeMultiplier']);\n    s = s.times(G['reincarnationMultiplier']);\n    s = s.times(G['antMultiplier']);\n    const first6CoinUp = new Decimal(G['totalCoinOwned'] + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G['totalCoinOwned'])));\n    if (player.upgrades[6] > 0.5) {\n        s = s.times(first6CoinUp);\n    }\n    if (player.upgrades[12] > 0.5) {\n        s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)));\n    }\n    if (player.upgrades[20] > 0.5) {\n        s = s.times(Math.pow(G['totalCoinOwned'] / 4 + 1, 10));\n    }\n    if (player.upgrades[41] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)));\n    }\n    if (player.upgrades[43] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)));\n    }\n    if (player.upgrades[48] > 0.5) {\n        s = s.times(Decimal.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8));\n    }\n    if (player.currentChallenge.reincarnation === 6) {\n        s = s.dividedBy(1e250);\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        s = s.dividedBy(\"1e1250\");\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        s = s.dividedBy(\"1e2000000\");\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        s = s.dividedBy(\"1e12500000\");\n    }\n    c = Decimal.pow(s, 1 + 0.001 * player.researches[17]);\n    let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123]);\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\n        lol = Decimal.pow(lol, 1.1);\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\n        lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)));\n    }\n    lol = Decimal.pow(lol, G['challenge15Rewards'].coinExponent);\n    G['globalCoinMultiplier'] = lol;\n    G['globalCoinMultiplier'] = Decimal.pow(G['globalCoinMultiplier'], G['financialcollapsePower'][player.usedCorruptions[9]]);\n    G['coinOneMulti'] = new Decimal(1);\n    if (player.upgrades[1] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[10] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)));\n    }\n    if (player.upgrades[56] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(\"1e5000\");\n    }\n    G['coinTwoMulti'] = new Decimal(1);\n    if (player.upgrades[2] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[13] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)));\n    }\n    if (player.upgrades[19] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)));\n    }\n    if (player.upgrades[57] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(\"1e7500\");\n    }\n    G['coinThreeMulti'] = new Decimal(1);\n    if (player.upgrades[3] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[18] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(Decimal.min(1e125, player.transcendShards.add(1)));\n    }\n    if (player.upgrades[58] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(\"1e15000\");\n    }\n    G['coinFourMulti'] = new Decimal(1);\n    if (player.upgrades[4] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[17] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(1e100);\n    }\n    if (player.upgrades[59] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(\"1e25000\");\n    }\n    G['coinFiveMulti'] = new Decimal(1);\n    if (player.upgrades[5] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[60] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(\"1e35000\");\n    }\n    G['globalCrystalMultiplier'] = new Decimal(1);\n    if (player.achievements[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(2);\n    }\n    if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.log(player.prestigePoints.add(1), 10));\n    }\n    if (player.achievements[43] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier']\n            .times(Decimal.pow(G['rune3level'] / 2 * G['effectiveLevelMult'], 2)\n            .times(Decimal.pow(2, G['rune3level'] * G['effectiveLevelMult'] / 2 - 8))\n            .add(1));\n    }\n    if (player.upgrades[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)));\n    }\n    if (player.upgrades[63] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6)));\n    }\n    if (player.researches[39] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 50));\n    }\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[26]));\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[27]));\n    G['globalMythosMultiplier'] = new Decimal(1);\n    if (player.upgrades[37] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2));\n    }\n    if (player.upgrades[42] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)));\n    }\n    if (player.upgrades[47] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Math.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1);\n    }\n    if (player.upgrades[51] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['totalAcceleratorBoost'], 2));\n    }\n    if (player.upgrades[52] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['globalMythosMultiplier'], 0.025));\n    }\n    if (player.upgrades[64] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(player.reincarnationPoints.add(1), 2));\n    }\n    if (player.researches[40] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 250));\n    }\n    G['grandmasterMultiplier'] = new Decimal(1);\n    G['totalMythosOwned'] = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos;\n    G['mythosBuildingPower'] = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200);\n    G['challengeThreeMultiplier'] = Decimal.pow(G['mythosBuildingPower'], G['totalMythosOwned']);\n    G['grandmasterMultiplier'] = G['grandmasterMultiplier'].times(G['challengeThreeMultiplier']);\n    G['mythosupgrade13'] = new Decimal(1);\n    G['mythosupgrade14'] = new Decimal(1);\n    G['mythosupgrade15'] = new Decimal(1);\n    if (player.upgrades[53] === 1) {\n        G['mythosupgrade13'] = G['mythosupgrade13'].times(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)));\n    }\n    if (player.upgrades[54] === 1) {\n        G['mythosupgrade14'] = G['mythosupgrade14'].times(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)));\n    }\n    if (player.upgrades[55] === 1) {\n        G['mythosupgrade15'] = G['mythosupgrade15'].times(Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1)));\n    }\n    G['globalAntMult'] = new Decimal(1);\n    G['globalAntMult'] = G['globalAntMult'].times(1 + 1 / 2500 * Math.pow(G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)), 2));\n    if (player.upgrades[76] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(5);\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts));\n    G['globalAntMult'] = G['globalAntMult'].times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2));\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.125, player.shopUpgrades.antSpeed));\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[1 - 1] + G['bonusant1']));\n    G['globalAntMult'] = G['globalAntMult'].times(antSacrificePointsToMultiplier(player.antSacrificePoints));\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Math.max(1, player.researchPoints), G['effectiveRuneBlessingPower'][5]));\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1 + G['runeSum'] / 100, G['talisman6Power']));\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])));\n    G['globalAntMult'] = G['globalAntMult'].times(G['cubeBonusMultiplier'][6]);\n    if (player.achievements[169] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10));\n    }\n    if (player.achievements[171] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.16666);\n    }\n    if (player.achievements[172] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))));\n    }\n    if (player.upgrades[39] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.60);\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]));\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])));\n    if (player.researches[147] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10));\n    }\n    if (player.researches[177] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]));\n    }\n    if (player.currentChallenge.ascension === 12) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.5);\n    }\n    if (player.currentChallenge.ascension === 13) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.23);\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.2);\n    }\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)));\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], G['extinctionMultiplier'][player.usedCorruptions[7]]);\n    G['globalAntMult'] = G['globalAntMult'].times(G['challenge15Rewards'].antSpeed);\n    if (player.platonicUpgrades[12] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)));\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1.25);\n    }\n    G['globalConstantMult'] = new Decimal(\"1\");\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1.05, player.constantUpgrades[1]));\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1 + 0.001 * Math.min(100, player.constantUpgrades[2]), player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned));\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 2 / 100 * player.researches[139]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 3 / 100 * player.researches[154]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 4 / 100 * player.researches[169]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 5 / 100 * player.researches[184]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 10 / 100 * player.researches[199]);\n    G['globalConstantMult'] = G['globalConstantMult'].times(G['challenge15Rewards'].constantBonus);\n    if (player.platonicUpgrades[5] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(2);\n    }\n    if (player.platonicUpgrades[10] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(10);\n    }\n    if (player.platonicUpgrades[15] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(1e5);\n    }\n};\nexport const resourceGain = (dt) => {\n    calculateTotalCoinOwned();\n    calculateTotalAcceleratorBoost();\n    updateAllTick();\n    updateAllMultiplier();\n    multipliers();\n    calculatetax();\n    if (G['produceTotal'].gte(0.001)) {\n        const addcoin = Decimal.min(G['produceTotal'].dividedBy(G['taxdivisor']), Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)));\n        player.coins = player.coins.add(addcoin.times(dt / 0.025));\n        player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin.times(dt / 0.025));\n        player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin.times(dt / 0.025));\n        player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin.times(dt / 0.025));\n        player.coinsTotal = player.coinsTotal.add(addcoin.times(dt / 0.025));\n    }\n    resetCurrency();\n    if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\n        player.prestigePoints = player.prestigePoints.add(Decimal.floor(G['prestigePointGain'].dividedBy(4000).times(dt / 0.025)));\n    }\n    if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\n        player.transcendPoints = player.transcendPoints.add(Decimal.floor(G['transcendPointGain'].dividedBy(4000).times(dt / 0.025)));\n    }\n    if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\n        player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G['reincarnationPointGain'].dividedBy(4000).times(dt / 0.025)));\n    }\n    G['produceFirstDiamonds'] = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceSecondDiamonds'] = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceThirdDiamonds'] = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceFourthDiamonds'] = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G['globalCrystalMultiplier']);\n    G['produceFifthDiamonds'] = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G['globalCrystalMultiplier']);\n    player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G['produceFifthDiamonds'].times(dt / 0.025));\n    player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G['produceFourthDiamonds'].times(dt / 0.025));\n    player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G['produceThirdDiamonds'].times(dt / 0.025));\n    player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G['produceSecondDiamonds'].times(dt / 0.025));\n    G['produceDiamonds'] = G['produceFirstDiamonds'];\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.prestigeShards = player.prestigeShards.add(G['produceDiamonds'].times(dt / 0.025));\n    }\n    G['produceFifthMythos'] = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G['globalMythosMultiplier']).times(G['grandmasterMultiplier']).times(G['mythosupgrade15']);\n    G['produceFourthMythos'] = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G['globalMythosMultiplier']);\n    G['produceThirdMythos'] = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade14']);\n    G['produceSecondMythos'] = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G['globalMythosMultiplier']);\n    G['produceFirstMythos'] = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\n    player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G['produceFifthMythos'].times(dt / 0.025));\n    player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G['produceFourthMythos'].times(dt / 0.025));\n    player.secondGeneratedMythos = player.secondGeneratedMythos.add(G['produceThirdMythos'].times(dt / 0.025));\n    player.firstGeneratedMythos = player.firstGeneratedMythos.add(G['produceSecondMythos'].times(dt / 0.025));\n    G['produceMythos'] = new Decimal(\"0\");\n    G['produceMythos'] = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\n    G['producePerSecondMythos'] = G['produceMythos'].times(40);\n    let pm = new Decimal('1');\n    if (player.upgrades[67] > 0.5) {\n        pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles));\n    }\n    G['produceFifthParticles'] = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles);\n    G['produceFourthParticles'] = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles);\n    G['produceThirdParticles'] = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles);\n    G['produceSecondParticles'] = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles);\n    G['produceFirstParticles'] = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm);\n    player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G['produceFifthParticles'].times(dt / 0.025));\n    player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G['produceFourthParticles'].times(dt / 0.025));\n    player.secondGeneratedParticles = player.secondGeneratedParticles.add(G['produceThirdParticles'].times(dt / 0.025));\n    player.firstGeneratedParticles = player.firstGeneratedParticles.add(G['produceSecondParticles'].times(dt / 0.025));\n    G['produceParticles'] = new Decimal(\"0\");\n    G['produceParticles'] = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm);\n    G['producePerSecondParticles'] = G['produceParticles'].times(40);\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.transcendShards = player.transcendShards.add(G['produceMythos'].times(dt / 0.025));\n    }\n    if (player.currentChallenge.reincarnation !== 10) {\n        player.reincarnationShards = player.reincarnationShards.add(G['produceParticles'].times(dt / 0.025));\n    }\n    G['antEightProduce'] = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G['globalAntMult']);\n    G['antSevenProduce'] = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G['globalAntMult']);\n    G['antSixProduce'] = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G['globalAntMult']);\n    G['antFiveProduce'] = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G['globalAntMult']);\n    G['antFourProduce'] = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G['globalAntMult']);\n    G['antThreeProduce'] = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G['globalAntMult']);\n    G['antTwoProduce'] = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G['globalAntMult']);\n    G['antOneProduce'] = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G['globalAntMult']);\n    player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G['antEightProduce'].times(dt / 1));\n    player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G['antSevenProduce'].times(dt / 1));\n    player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G['antSixProduce'].times(dt / 1));\n    player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G['antFiveProduce'].times(dt / 1));\n    player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G['antFourProduce'].times(dt / 1));\n    player.secondGeneratedAnts = player.secondGeneratedAnts.add(G['antThreeProduce'].times(dt / 1));\n    player.firstGeneratedAnts = player.firstGeneratedAnts.add(G['antTwoProduce'].times(dt / 1));\n    player.antPoints = player.antPoints.add(G['antOneProduce'].times(dt / 1));\n    for (let i = 1; i <= 5; i++) {\n        G['ascendBuildingProduction'][G['ordinals'][5 - i]] = (player['ascendBuilding' + (6 - i)]['generated']).add(player['ascendBuilding' + (6 - i)]['owned']).times(player['ascendBuilding' + i]['multiplier']).times(G['globalConstantMult']);\n        if (i !== 5) {\n            player['ascendBuilding' + (5 - i)]['generated'] = player['ascendBuilding' + (5 - i)]['generated']\n                .add(G['ascendBuildingProduction'][G['ordinals'][5 - i]].times(dt));\n        }\n    }\n    player.ascendShards = player.ascendShards.add(G['ascendBuildingProduction'].first.times(dt));\n    if (player.ascensionCount > 0) {\n        ascensionAchievementCheck(2);\n    }\n    if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G['challengeBaseRequirements'][0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\n        player.challengecompletions[1] += 1;\n        challengeDisplay(1, false);\n        challengeachievementcheck(1, true);\n        updateChallengeLevel(1);\n    }\n    if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G['challengeBaseRequirements'][1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\n        player.challengecompletions[2] += 1;\n        challengeDisplay(2, false);\n        challengeachievementcheck(2, true);\n        updateChallengeLevel(2);\n    }\n    if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G['challengeBaseRequirements'][2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\n        player.challengecompletions[3] += 1;\n        challengeDisplay(3, false);\n        challengeachievementcheck(3, true);\n        updateChallengeLevel(3);\n    }\n    if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G['challengeBaseRequirements'][3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\n        player.challengecompletions[4] += 1;\n        challengeDisplay(4, false);\n        challengeachievementcheck(4, true);\n        updateChallengeLevel(4);\n    }\n    if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G['challengeBaseRequirements'][4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\n        player.challengecompletions[5] += 1;\n        challengeDisplay(5, false);\n        challengeachievementcheck(5, true);\n        updateChallengeLevel(5);\n    }\n    if (player.coins.gte(1000) && player.unlocks.coinone === false) {\n        player.unlocks.coinone = true;\n        revealStuff();\n    }\n    if (player.coins.gte(20000) && player.unlocks.cointwo === false) {\n        player.unlocks.cointwo = true;\n        revealStuff();\n    }\n    if (player.coins.gte(100000) && player.unlocks.cointhree === false) {\n        player.unlocks.cointhree = true;\n        revealStuff();\n    }\n    if (player.coins.gte(8e6) && player.unlocks.coinfour === false) {\n        player.unlocks.coinfour = true;\n        revealStuff();\n    }\n    if (player.antPoints.gte(3) && player.achievements[169] === 0) {\n        achievementaward(169);\n    }\n    if (player.antPoints.gte(1e5) && player.achievements[170] === 0) {\n        achievementaward(170);\n    }\n    if (player.antPoints.gte(666666666) && player.achievements[171] === 0) {\n        achievementaward(171);\n    }\n    if (player.antPoints.gte(1e20) && player.achievements[172] === 0) {\n        achievementaward(172);\n    }\n    if (player.antPoints.gte(1e40) && player.achievements[173] === 0) {\n        achievementaward(173);\n    }\n    if (player.antPoints.gte(\"1e500\") && player.achievements[174] === 0) {\n        achievementaward(174);\n    }\n    if (player.antPoints.gte(\"1e2500\") && player.achievements[175] === 0) {\n        achievementaward(175);\n    }\n    const chal = player.currentChallenge.transcension;\n    const reinchal = player.currentChallenge.reincarnation;\n    const ascendchal = player.currentChallenge.ascension;\n    if (chal !== 0) {\n        if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) {\n            resetCheck('challenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal < 9 && reinchal !== 0) {\n        if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            resetCheck('reincarnationchallenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal >= 9) {\n        if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            resetCheck('reincarnationchallenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (ascendchal !== 0 && ascendchal < 15) {\n        if (player.challengecompletions[10] >= challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal)) {\n            resetCheck('ascensionChallenge', false);\n            challengeachievementcheck(ascendchal, true);\n        }\n    }\n    if (ascendchal === 15) {\n        if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\n            resetCheck('ascensionChallenge', false);\n        }\n    }\n};\nexport const resetCurrency = () => {\n    let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100;\n    let transcendPow = 0.03;\n    if (player.currentChallenge.transcension === 5) {\n        prestigePow = 0.01 / (1 + player.challengecompletions[5]);\n        transcendPow = 0.001;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        prestigePow = (1e-4) / (1 + player.challengecompletions[10]);\n        transcendPow = 0.001;\n    }\n    prestigePow *= G['deflationMultiplier'][player.usedCorruptions[6]];\n    G['prestigePointGain'] = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow));\n    if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['prestigePointGain'] = G['prestigePointGain'].times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G['acceleratorEffect'], 1 / 3 * G['deflationMultiplier'][player.usedCorruptions[6]])));\n    }\n    G['transcendPointGain'] = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow));\n    if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['transcendPointGain'] = G['transcendPointGain'].times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)));\n    }\n    G['reincarnationPointGain'] = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01));\n    if (player.currentChallenge.reincarnation !== 0) {\n        G['reincarnationPointGain'] = Decimal.pow(G['reincarnationPointGain'], 0.01);\n    }\n    if (player.achievements[50] === 1) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(2);\n    }\n    if (player.upgrades[65] > 0.5) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(5);\n    }\n    if (player.currentChallenge.ascension === 12) {\n        G['reincarnationPointGain'] = new Decimal(\"0\");\n    }\n};\nexport const resetCheck = (i, manual = true, leaving = false) => __awaiter(void 0, void 0, void 0, function* () {\n    if (i === 'prestige') {\n        if (player.coinsThisPrestige.gte(1e16) || G['prestigePointGain'].gte(100)) {\n            if (manual) {\n                resetConfirmation('prestige');\n            }\n            else {\n                resetachievementcheck(1);\n                reset(\"prestige\");\n            }\n        }\n    }\n    if (i === 'transcend') {\n        if ((player.coinsThisTranscension.gte(1e100) || G['transcendPointGain'].gte(0.5)) && player.currentChallenge.transcension === 0) {\n            if (manual) {\n                resetConfirmation('transcend');\n            }\n            if (!manual) {\n                resetachievementcheck(2);\n                reset(\"transcension\");\n            }\n        }\n    }\n    if (i === 'challenge') {\n        const q = player.currentChallenge.transcension;\n        const maxCompletions = getMaxChallenges(q);\n        if (player.currentChallenge.transcension !== 0) {\n            const reqCheck = (comp) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q));\n            if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n                const maxInc = player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.ascension !== 13 ? 10 : 1;\n                let counter = 0;\n                let comp = player.challengecompletions[q];\n                while (counter < maxInc) {\n                    if (reqCheck(comp) && comp < maxCompletions) {\n                        comp++;\n                    }\n                    counter++;\n                }\n                player.challengecompletions[q] = comp;\n                challengeDisplay(q, false);\n                updateChallengeLevel(q);\n            }\n            if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                    player.highestchallengecompletions[q] += 1;\n                    challengeDisplay(q, false);\n                    updateChallengeLevel(q);\n                    highestChallengeRewards(q, player.highestchallengecompletions[q]);\n                    calculateCubeBlessings();\n                }\n            }\n            challengeachievementcheck(q);\n            if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n                reset(\"transcensionChallenge\", false, \"leaveChallenge\");\n                player.transcendCount -= 1;\n            }\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[q] >= (maxCompletions)) {\n            toggleAutoChallengeModeText(\"ENTER\");\n            player.currentChallenge.transcension = 0;\n            updateChallengeDisplay();\n        }\n    }\n    if (i === \"reincarnate\") {\n        if (G['reincarnationPointGain'].gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n            if (manual) {\n                resetConfirmation('reincarnate');\n            }\n            if (!manual) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\");\n            }\n        }\n    }\n    if (i === \"reincarnationchallenge\" && player.currentChallenge.reincarnation !== 0) {\n        const q = player.currentChallenge.reincarnation;\n        const maxCompletions = getMaxChallenges(q);\n        if (player.currentChallenge.transcension !== 0) {\n            player.currentChallenge.transcension = 0;\n        }\n        const reqCheck = (comp) => {\n            if (q <= 8) {\n                return player.transcendShards.gte(challengeRequirement(q, comp, q));\n            }\n            else {\n                return player.coins.gte(challengeRequirement(q, comp, q));\n            }\n        };\n        if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n            const maxInc = player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.ascension !== 13 ? 10 : 1;\n            let counter = 0;\n            let comp = player.challengecompletions[q];\n            while (counter < maxInc) {\n                if (reqCheck(comp) && comp < maxCompletions) {\n                    comp++;\n                }\n                counter++;\n            }\n            player.challengecompletions[q] = comp;\n            challengeDisplay(q, true);\n            updateChallengeLevel(q);\n        }\n        if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\n            player.reincarnationCount -= 1;\n        }\n        challengeachievementcheck(q);\n        if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n            while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                player.highestchallengecompletions[q] += 1;\n                highestChallengeRewards(q, player.highestchallengecompletions[q]);\n                calculateHypercubeBlessings();\n                calculateTesseractBlessings();\n                calculateCubeBlessings();\n            }\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[q] === maxCompletions) {\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\n            toggleAutoChallengeModeText(\"ENTER\");\n            player.currentChallenge.reincarnation = 0;\n            if (player.shopUpgrades.instantChallenge > 0) {\n                for (let i = 1; i <= 5; i++) {\n                    player.challengecompletions[i] = player.highestchallengecompletions[i];\n                }\n            }\n            updateChallengeDisplay();\n            calculateRuneLevels();\n            calculateAnts();\n        }\n    }\n    if (i === \"ascend\") {\n        if (player.challengecompletions[10] > 0) {\n            if (manual) {\n                resetConfirmation('ascend');\n            }\n        }\n    }\n    if (i === \"ascensionChallenge\" && player.currentChallenge.ascension !== 0) {\n        let conf = true;\n        if (manual) {\n            conf = yield Confirm('Are you absolutely sure that you want to exit the Ascension Challenge? You will need to clear challenge 10 again before you can attempt the challenge again!');\n        }\n        if (!conf) {\n            return;\n        }\n        const a = player.currentChallenge.ascension;\n        const r = player.currentChallenge.reincarnation;\n        const t = player.currentChallenge.transcension;\n        if (player.challengecompletions[10] >= 50 && a === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\n            achievementaward(247);\n        }\n        const maxCompletions = getMaxChallenges(a);\n        if (a !== 0 && a < 15) {\n            if (player.challengecompletions[10] >= challengeRequirement(a, player.challengecompletions[a], a) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n            }\n        }\n        if (a === 15) {\n            if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n            }\n            else {\n                if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent))) {\n                    player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * (1 + 3 / 10000 * hepteractEffective('challenge'));\n                    c15RewardUpdate();\n                }\n            }\n        }\n        if (r !== 0) {\n            if (typeof player.currentChallenge === 'string') {\n                player.currentChallenge = Object.assign({}, blankSave.currentChallenge);\n            }\n        }\n        if (t !== 0) {\n            player.currentChallenge.transcension = 0;\n        }\n        challengeDisplay(a, true);\n        reset(\"ascensionChallenge\");\n        if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\n            player.highestchallengecompletions[a] += 1;\n            player.wowHypercubes.add(1);\n        }\n        if (!player.retrychallenges || manual || player.challengecompletions[a] >= maxCompletions || a === 15) {\n            player.currentChallenge.ascension = 0;\n        }\n        updateChallengeDisplay();\n        challengeachievementcheck(a, true);\n    }\n});\nexport const resetConfirmation = (i) => __awaiter(void 0, void 0, void 0, function* () {\n    if (i === 'prestige') {\n        if (player.toggles[28] === true) {\n            const r = yield Confirm(\"Prestige will reset coin upgrades, coin producers AND crystals. The first prestige unlocks new features. Would you like to prestige? [Toggle this message in settings.]\");\n            if (r === true) {\n                resetachievementcheck(1);\n                reset(\"prestige\");\n            }\n        }\n        else {\n            resetachievementcheck(1);\n            reset(\"prestige\");\n        }\n    }\n    if (i === 'transcend') {\n        if (player.toggles[29] === true) {\n            const z = yield Confirm(\"Transcends will reset coin and prestige upgrades, coin producers, crystal producers AND diamonds. The first transcension unlocks new features. Would you like to prestige? [Toggle this message in settings.]\");\n            if (z === true) {\n                resetachievementcheck(2);\n                reset(\"transcension\");\n            }\n        }\n        else {\n            resetachievementcheck(2);\n            reset(\"transcension\");\n        }\n    }\n    if (i === 'reincarnate') {\n        if (player.currentChallenge.ascension !== 12) {\n            if (player.toggles[30] === true) {\n                const z = yield Confirm(\"Reincarnating will reset EVERYTHING but in return you will get extraordinarily powerful Particles, and unlock some very strong upgrades and some new features. would you like to Reincarnate? [Disable this message in settings]\");\n                if (z === true) {\n                    resetachievementcheck(3);\n                    reset(\"reincarnation\");\n                }\n            }\n            else {\n                resetachievementcheck(3);\n                reset(\"reincarnation\");\n            }\n        }\n    }\n    if (i === 'ascend') {\n        const z = !player.toggles[31] ||\n            (yield Confirm(\"Ascending will reset all buildings, rune levels [NOT CAP!], talismans, most researches, and the anthill feature for Cubes of Power. Continue? [It is strongly advised you get R5x24 first.]\"));\n        if (z) {\n            reset(\"ascension\");\n        }\n    }\n});\nexport const updateAll = () => {\n    G['uFourteenMulti'] = new Decimal(1);\n    G['uFifteenMulti'] = new Decimal(1);\n    if (player.upgrades[14] > 0.5) {\n        G['uFourteenMulti'] = Decimal.pow(1.15, G['freeAccelerator']);\n    }\n    if (player.upgrades[15] > 0.5) {\n        G['uFifteenMulti'] = Decimal.pow(1.15, G['freeAccelerator']);\n    }\n    if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\n        achievementaward(250);\n    }\n    if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\n        achievementaward(251);\n    }\n    if (player.toggles[1] === true && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\n        buyMax('first', 'Coin', 1, 100);\n    }\n    if (player.toggles[2] === true && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\n        buyMax('second', 'Coin', 2, 2e3);\n    }\n    if (player.toggles[3] === true && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\n        buyMax('third', 'Coin', 3, 4e4);\n    }\n    if (player.toggles[4] === true && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\n        buyMax('fourth', 'Coin', 4, 8e5);\n    }\n    if (player.toggles[5] === true && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\n        buyMax('fifth', 'Coin', 5, 1.6e7);\n    }\n    if (player.toggles[6] === true && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\n        buyAccelerator(true);\n    }\n    if (player.toggles[7] === true && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\n        buyMultiplier(true);\n    }\n    if (player.toggles[8] === true && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\n        boostAccelerator(true);\n    }\n    if (player.toggles[10] === true && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\n        buyMax('first', 'Diamonds', 1, 1e2);\n    }\n    if (player.toggles[11] === true && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\n        buyMax('second', 'Diamonds', 3, 1e5);\n    }\n    if (player.toggles[12] === true && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\n        buyMax('third', 'Diamonds', 6, 1e15);\n    }\n    if (player.toggles[13] === true && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\n        buyMax('fourth', 'Diamonds', 10, 1e40);\n    }\n    if (player.toggles[14] === true && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\n        buyMax('fifth', 'Diamonds', 15, 1e100);\n    }\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10;\n    }\n    if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(1, true);\n    }\n    if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(2, true);\n    }\n    if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(3, true);\n    }\n    if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(4, true);\n    }\n    if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(5, true);\n    }\n    if (player.toggles[16] === true && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\n        buyMax('first', 'Mythos', 1, 1);\n    }\n    if (player.toggles[17] === true && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\n        buyMax('second', 'Mythos', 3, 1e2);\n    }\n    if (player.toggles[18] === true && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\n        buyMax('third', 'Mythos', 6, 1e4);\n    }\n    if (player.toggles[19] === true && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\n        buyMax('fourth', 'Mythos', 10, 1e8);\n    }\n    if (player.toggles[20] === true && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\n        buyMax('fifth', 'Mythos', 15, 1e16);\n    }\n    if (player.toggles[22] === true && player.reincarnationPoints.gte(player.firstCostParticles)) {\n        buyParticleBuilding('first', 1, true);\n    }\n    if (player.toggles[23] === true && player.reincarnationPoints.gte(player.secondCostParticles)) {\n        buyParticleBuilding('second', 1e2, true);\n    }\n    if (player.toggles[24] === true && player.reincarnationPoints.gte(player.thirdCostParticles)) {\n        buyParticleBuilding('third', 1e4, true);\n    }\n    if (player.toggles[25] === true && player.reincarnationPoints.gte(player.fourthCostParticles)) {\n        buyParticleBuilding('fourth', 1e8, true);\n    }\n    if (player.toggles[26] === true && player.reincarnationPoints.gte(player.fifthCostParticles)) {\n        buyParticleBuilding('fifth', 1e16, true);\n    }\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop())) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n    if ((player.researches[190] > 0) && (player.tesseractAutoBuyerToggle == 1)) {\n        const cheapestTesseractBuilding = { cost: 0, intCost: 0, index: 0, intCostArray: [1, 10, 100, 1000, 10000] };\n        for (let i = 0; i < cheapestTesseractBuilding.intCostArray.length; i++) {\n            if ((Number(player.wowTesseracts) >= cheapestTesseractBuilding.intCostArray[i] * Math.pow(1 + player['ascendBuilding' + (i + 1)]['owned'], 3) + player.tesseractAutoBuyerAmount) && player.autoTesseracts[i + 1]) {\n                if ((getTesseractCost(cheapestTesseractBuilding.intCostArray[i], i + 1)[1] < cheapestTesseractBuilding.cost) || (cheapestTesseractBuilding.cost == 0)) {\n                    cheapestTesseractBuilding.cost = getTesseractCost(cheapestTesseractBuilding.intCostArray[i], i + 1)[1];\n                    cheapestTesseractBuilding.intCost = cheapestTesseractBuilding.intCostArray[i];\n                    cheapestTesseractBuilding.index = i + 1;\n                }\n            }\n        }\n        if (cheapestTesseractBuilding.index > 0) {\n            buyTesseractBuilding(cheapestTesseractBuilding.intCost, cheapestTesseractBuilding.index);\n        }\n    }\n    if (player.upgrades[101] > 0.5) {\n        player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['uFifteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[102] > 0.5) {\n        player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['uFourteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[103] > 0.5) {\n        player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[104] > 0.5) {\n        player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[105] > 0.5) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin);\n    }\n    let p = 1;\n    p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77]);\n    let a = 0;\n    if (player.upgrades[106] > 0.5) {\n        a += 0.10;\n    }\n    if (player.upgrades[107] > 0.5) {\n        a += 0.15;\n    }\n    if (player.upgrades[108] > 0.5) {\n        a += 0.25;\n    }\n    if (player.upgrades[109] > 0.5) {\n        a += 0.25;\n    }\n    if (player.upgrades[110] > 0.5) {\n        a += 0.25;\n    }\n    a *= p;\n    let b = 0;\n    if (player.upgrades[111] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[112] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[113] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[114] > 0.5) {\n        b += 0.08;\n    }\n    if (player.upgrades[115] > 0.5) {\n        b += 0.08;\n    }\n    b *= p;\n    c = 0;\n    if (player.upgrades[116] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[117] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[118] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[119] > 0.5) {\n        c += 0.05;\n    }\n    if (player.upgrades[120] > 0.5) {\n        c += 0.05;\n    }\n    c *= p;\n    if (a !== 0) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a));\n    }\n    if (b !== 0) {\n        player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b));\n    }\n    if (c !== 0) {\n        player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c));\n    }\n    if (player.runeshards > player.maxofferings) {\n        player.maxofferings = player.runeshards;\n    }\n    if (player.researchPoints > player.maxobtainium) {\n        player.maxobtainium = player.researchPoints;\n    }\n    G['effectiveLevelMult'] = 1;\n    G['effectiveLevelMult'] *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\n    G['effectiveLevelMult'] *= (1 + player.researches[21] / 100);\n    G['effectiveLevelMult'] *= (1 + player.researches[90] / 100);\n    G['effectiveLevelMult'] *= (1 + player.researches[131] / 200);\n    G['effectiveLevelMult'] *= (1 + player.researches[161] / 200 * 3 / 5);\n    G['effectiveLevelMult'] *= (1 + player.researches[176] / 200 * 2 / 5);\n    G['effectiveLevelMult'] *= (1 + player.researches[191] / 200 * 1 / 5);\n    G['effectiveLevelMult'] *= (1 + player.researches[146] / 200 * 4 / 5);\n    G['effectiveLevelMult'] *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]));\n    G['effectiveLevelMult'] *= G['challenge15Rewards'].runeBonus;\n    G['optimalOfferingTimer'] = 600 + 30 * player.researches[85] + 0.4 * G['rune5level'] + 120 * player.shopUpgrades.offeringEX;\n    G['optimalObtainiumTimer'] = 3600 + 120 * player.shopUpgrades.obtainiumEX;\n    autoBuyAnts();\n    if (player.autoAscend) {\n        if (player.autoAscendMode === \"c10Completions\" && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\n            reset(\"ascension\", true);\n        }\n    }\n    let metaData = null;\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            metaData = getConstUpgradeMetadata(i);\n            if (player.ascendShards.gte(metaData[1])) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n    const reductionValue = getReductionValue();\n    if (reductionValue !== G['prevReductionValue']) {\n        G['prevReductionValue'] = reductionValue;\n        const resources = [\"Coin\", \"Diamonds\", \"Mythos\"];\n        const scalings = [\n            (value) => value,\n            (value) => value * (value + 1) / 2,\n            (value) => value * (value + 1) / 2\n        ];\n        const originalCosts = [\n            [100, 2e3, 4e4, 8e5, 1.6e7],\n            [1e2, 1e5, 1e15, 1e40, 1e100],\n            [1, 1e2, 1e4, 1e8, 1e16],\n        ];\n        for (let res = 0; res < resources.length; ++res) {\n            const resource = resources[res];\n            for (let ord = 0; ord < 5; ++ord) {\n                const num = G['ordinals'][ord];\n                player[num + \"Cost\" + resource] = getCost(originalCosts[res][ord], player[num + \"Owned\" + resource] + 1, resource, scalings[res](ord + 1), reductionValue);\n            }\n        }\n        for (let i = 0; i <= 4; i++) {\n            const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16];\n            const array = ['first', 'second', 'third', 'fourth', 'fifth'];\n            const buyTo = player[array[i] + 'OwnedParticles'] + 1;\n            player[array[i] + 'CostParticles'] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i]);\n        }\n    }\n};\nexport const constantIntervals = () => {\n    interval(saveSynergy, 5000);\n    interval(autoUpgrades, 200);\n    interval(buttoncolorchange, 200);\n    interval(htmlInserts, 16);\n    interval(updateAll, 100);\n    interval(buildingAchievementCheck, 200);\n    if (!G['timeWarp']) {\n        document.getElementById(\"preload\").style.display = \"none\";\n        document.getElementById(\"offlineprogressbar\").style.display = \"none\";\n    }\n};\nlet lastUpdate = 0;\nexport const createTimer = () => {\n    lastUpdate = performance.now();\n    interval(tick, 5);\n};\nconst dt = 5;\nconst filterStrength = 20;\nlet deltaMean = 0;\nconst tick = () => {\n    const now = performance.now();\n    let delta = now - lastUpdate;\n    deltaMean += (delta - deltaMean) / filterStrength;\n    let dtEffective;\n    while (delta > 5) {\n        dtEffective = dt;\n        dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0;\n        dtEffective = Math.min(delta, dtEffective);\n        tack(dtEffective / 1000);\n        lastUpdate += dtEffective;\n        delta -= dtEffective;\n    }\n};\nfunction tack(dt) {\n    if (!G['timeWarp']) {\n        dailyResetCheck();\n        const timeMult = calculateTimeAcceleration();\n        resourceGain(dt * timeMult);\n        addTimers(\"prestige\", dt);\n        addTimers(\"transcension\", dt);\n        addTimers(\"reincarnation\", dt);\n        addTimers(\"ascension\", dt);\n        addTimers(\"quarks\", dt);\n        if (player.shopUpgrades.offeringAuto > 0.5 && player.autoSacrificeToggle) {\n            automaticTools(\"runeSacrifice\", dt);\n        }\n        if (player.achievements[173] === 1) {\n            automaticTools(\"antSacrifice\", dt);\n        }\n        if (player.researches[61] === 1) {\n            automaticTools(\"addObtainium\", dt);\n        }\n        else {\n            calculateObtainium();\n        }\n        if (player.autoResearchToggle && player.autoResearch <= maxRoombaResearchIndex(player)) {\n            let counter = 0;\n            const maxCount = 1 + player.challengecompletions[14];\n            while (counter < maxCount) {\n                if (player.autoResearch > 0) {\n                    const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                    if (!buyResearch(player.autoResearch, true, linGrowth)) {\n                        break;\n                    }\n                }\n                else {\n                    break;\n                }\n                counter++;\n            }\n        }\n    }\n    if (player.highestchallengecompletions[3] > 0) {\n        automaticTools(\"addOfferings\", dt / 2);\n    }\n    if (player.cubeUpgrades[2] > 0) {\n        automaticTools(\"addOfferings\", dt * player.cubeUpgrades[2]);\n    }\n    if (player.researches[130] > 0 || player.researches[135] > 0) {\n        const talismansUnlocked = [\n            player.achievements[119] > 0,\n            player.achievements[126] > 0,\n            player.achievements[133] > 0,\n            player.achievements[140] > 0,\n            player.achievements[147] > 0,\n            player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0,\n            player.shopUpgrades.shopTalisman > 0,\n        ];\n        let upgradedTalisman = false;\n        if (player.autoEnhanceToggle) {\n            for (let i = 0; i < talismansUnlocked.length; ++i) {\n                if (talismansUnlocked[i]) {\n                    upgradedTalisman = buyTalismanEnhance(i + 1, true) || upgradedTalisman;\n                }\n            }\n        }\n        if (player.autoFortifyToggle) {\n            for (let i = 0; i < talismansUnlocked.length; ++i) {\n                if (talismansUnlocked[i]) {\n                    upgradedTalisman = buyTalismanLevels(i + 1, true) || upgradedTalisman;\n                }\n            }\n        }\n        if (upgradedTalisman) {\n            updateTalismanInventory();\n            calculateRuneLevels();\n        }\n    }\n    runChallengeSweep(dt);\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['prestigePointGain'].gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\n            resetachievementcheck(1);\n            reset(\"prestige\", true);\n        }\n    }\n    if (player.resettoggle1 === 2) {\n        G['autoResetTimers'].prestige += dt;\n        const time = Math.max(0.01, player.prestigeamount);\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['autoResetTimers'].prestige >= time && player.coinsThisPrestige.gte(1e16)) {\n            resetachievementcheck(1);\n            reset(\"prestige\", true);\n        }\n    }\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['transcendPointGain'].gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n            resetachievementcheck(2);\n            reset(\"transcension\", true);\n        }\n    }\n    if (player.resettoggle2 === 2) {\n        G['autoResetTimers'].transcension += dt;\n        const time = Math.max(0.01, player.transcendamount);\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['autoResetTimers'].transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n            resetachievementcheck(2);\n            reset(\"transcension\", true);\n        }\n    }\n    if (player.currentChallenge.ascension !== 12) {\n        G['autoResetTimers'].reincarnation += dt;\n        if (player.resettoggle3 === 2) {\n            const time = Math.max(0.01, player.reincarnationamount);\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && player.transcendShards.gte(\"1e300\") && G['autoResetTimers'].reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\", true);\n            }\n        }\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && G['reincarnationPointGain'].gte(player.reincarnationPoints.times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                resetachievementcheck(3);\n                reset(\"reincarnation\", true);\n            }\n        }\n    }\n    calculateOfferings(\"reincarnation\");\n}\nexport const loadPlugins = (name) => __awaiter(void 0, void 0, void 0, function* () {\n    const imp = yield import(`./Plugins/${name}`);\n    if (typeof (imp === null || imp === void 0 ? void 0 : imp.main) !== 'function')\n        return Alert(`Failed to import the ${name} plugin!`);\n    imp.main();\n});\nconst keysPressed = new Set();\ndocument.addEventListener('keydown', event => {\n    keysPressed.add(event.key);\n});\ndocument.addEventListener('keyup', event => {\n    keysPressed.delete(event.key);\n});\ndocument.addEventListener('keydown', (event) => {\n    var _a, _b;\n    if (document.activeElement && document.activeElement.localName === 'input') {\n        event.stopPropagation();\n        return;\n    }\n    const costs = {\n        default: [1, 100, 1e4, 1e8, 1e16],\n        coin: [100, 2000, 4e4, 8e5, 1.6e7],\n        diamond: [100, 1e5, 1e15, 1e40, 1e100]\n    };\n    const types = {\n        coin: 'Coin',\n        diamond: 'Diamonds',\n        mythos: 'Mythos'\n    };\n    const cost = (_a = costs[G['buildingSubTab']]) !== null && _a !== void 0 ? _a : costs.default;\n    const type = (_b = types[G['buildingSubTab']]) !== null && _b !== void 0 ? _b : '';\n    const key = event.key.toUpperCase();\n    switch (key) {\n        case \"1\":\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding('first', cost[0]) : buyMax('first', type, 1, cost[0]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(1);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 1);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 1);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(1);\n                challengeDisplay(1);\n            }\n            break;\n        case \"2\":\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\"\n                    ? buyParticleBuilding('second', cost[1])\n                    : buyMax('second', type, G['buildingSubTab'] === \"coin\" ? 2 : 3, cost[1]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(2);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 2);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 2);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(2);\n                challengeDisplay(2);\n            }\n            break;\n        case \"3\":\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\"\n                    ? buyParticleBuilding('third', cost[2])\n                    : buyMax('third', type, G['buildingSubTab'] === \"coin\" ? 3 : 6, cost[2]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(3);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 3);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 3);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(3);\n                challengeDisplay(3);\n            }\n            break;\n        case \"4\":\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\"\n                    ? buyParticleBuilding('fourth', cost[3])\n                    : buyMax('fourth', type, G['buildingSubTab'] === \"coin\" ? 4 : 10, cost[3]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(4);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 4);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 4);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(4);\n                challengeDisplay(4);\n            }\n            break;\n        case \"5\":\n            if (G['currentTab'] === \"buildings\") {\n                G['buildingSubTab'] === \"particle\"\n                    ? buyParticleBuilding('fifth', cost[4])\n                    : buyMax('fifth', type, G['buildingSubTab'] === \"coin\" ? 5 : 15, cost[4]);\n            }\n            if (G['currentTab'] === \"runes\") {\n                if (G['runescreen'] === \"runes\") {\n                    redeemShards(5);\n                }\n                if (G['runescreen'] === \"blessings\") {\n                    buyRuneBonusLevels('Blessings', 5);\n                }\n                if (G['runescreen'] === \"spirits\") {\n                    buyRuneBonusLevels('Spirits', 5);\n                }\n            }\n            if (G['currentTab'] === \"challenges\") {\n                toggleChallenges(5);\n                challengeDisplay(5);\n            }\n            break;\n        case \"6\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(1);\n            }\n            if (G['currentTab'] === \"challenges\" && player.reincarnationCount > 0) {\n                toggleChallenges(6);\n                challengeDisplay(6);\n            }\n            break;\n        case \"7\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(2);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[113] === 1) {\n                toggleChallenges(7);\n                challengeDisplay(7);\n            }\n            break;\n        case \"8\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(3);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[120] === 1) {\n                toggleChallenges(8);\n                challengeDisplay(8);\n            }\n            break;\n        case \"9\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(4);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[127] === 1) {\n                toggleChallenges(9);\n                challengeDisplay(9);\n            }\n            break;\n        case \"0\":\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n                buyCrystalUpgrades(5);\n            }\n            if (G['currentTab'] === \"challenges\" && player.achievements[134] === 1) {\n                toggleChallenges(10);\n                challengeDisplay(10);\n            }\n            break;\n        case \"A\":\n            buyAccelerator();\n            break;\n        case \"B\":\n            boostAccelerator();\n            break;\n        case \"E\":\n            if (player.currentChallenge.reincarnation !== 0) {\n                resetCheck('reincarnationchallenge', undefined, true);\n            }\n            if (player.currentChallenge.transcension !== 0) {\n                resetCheck('challenge', undefined, true);\n            }\n            break;\n        case \"M\":\n            buyMultiplier();\n            break;\n        case \"P\":\n            resetCheck('prestige');\n            break;\n        case \"R\":\n            resetCheck('reincarnate');\n            break;\n        case \"S\":\n            sacrificeAnts();\n            break;\n        case \"T\":\n            resetCheck('transcend');\n            break;\n        case \"ARROWLEFT\":\n            event.preventDefault();\n            keyboardTabChange(-1);\n            break;\n        case \"ARROWRIGHT\":\n            event.preventDefault();\n            keyboardTabChange(1);\n            break;\n        case \"ARROWUP\":\n            event.preventDefault();\n            keyboardTabChange(-1, false);\n            break;\n        case \"ARROWDOWN\":\n            event.preventDefault();\n            keyboardTabChange(1, false);\n            break;\n    }\n});\nexport const reloadShit = () => __awaiter(void 0, void 0, void 0, function* () {\n    for (const timer of intervalHold)\n        clearInt(timer);\n    intervalHold.clear();\n    const dec = LZString.decompressFromBase64(localStorage.getItem('Synergysave2'));\n    const isLZString = dec !== '';\n    if (isLZString) {\n        localStorage.clear();\n        localStorage.setItem('Synergysave2', btoa(dec));\n        yield Alert('Transferred save to new format successfully!');\n    }\n    loadSynergy();\n    saveSynergy();\n    toggleauto();\n    revealStuff();\n    hideStuff();\n    htmlInserts();\n    createTimer();\n    constantIntervals();\n    changeTabColor();\n});\nwindow.addEventListener('load', () => {\n    const ver = document.getElementById('versionnumber');\n    ver && (ver.textContent = `You're Testing v${version} - Seal of the Merchant [Last Update: 3:25AM UTC-8 31-Mar-2021]. Savefiles cannot be used in live!`);\n    document.title = `Synergism v${version}`;\n    generateEventHandlers();\n    corruptionButtonsAdd();\n    corruptionLoadoutTableCreate();\n    reloadShit();\n});\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { sumContents } from './Utility';\nimport Decimal from 'break_infinity.js';\nimport { CalcECC } from './Challenges';\nimport { achievementaward } from './Achievements';\nexport const calculatetax = () => {\n    let c = 0;\n    let e = 1;\n    let f = 1;\n    let compareC = 0;\n    G['produceFirst'] = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinOneMulti']).times(player.firstProduceCoin);\n    G['produceSecond'] = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinTwoMulti']).times(player.secondProduceCoin);\n    G['produceThird'] = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinThreeMulti']).times(player.thirdProduceCoin);\n    G['produceFourth'] = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFourMulti']).times(player.fourthProduceCoin);\n    G['produceFifth'] = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFiveMulti']).times(player.fifthProduceCoin);\n    G['produceTotal'] = G['produceFirst'].add(G['produceSecond']).add(G['produceThird']).add(G['produceFourth']).add(G['produceFifth']);\n    if (G['produceFirst'].lte(.0001)) {\n        G['produceFirst'] = new Decimal(0);\n    }\n    if (G['produceSecond'].lte(.0001)) {\n        G['produceSecond'] = new Decimal(0);\n    }\n    if (G['produceThird'].lte(.0001)) {\n        G['produceThird'] = new Decimal(0);\n    }\n    if (G['produceFourth'].lte(.0001)) {\n        G['produceFourth'] = new Decimal(0);\n    }\n    if (G['produceFifth'].lte(.0001)) {\n        G['produceFifth'] = new Decimal(0);\n    }\n    G['producePerSecond'] = G['produceTotal'].times(40);\n    if (player.currentChallenge.reincarnation === 6) {\n        e = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2);\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        e = 0.005;\n    }\n    if (player.currentChallenge.ascension === 15) {\n        e = 0.000005;\n    }\n    if (player.currentChallenge.ascension === 13) {\n        e *= 700 * (1 + 1 / 6 * player.challengecompletions[13]);\n        e *= Math.pow(1.05, Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49]));\n    }\n    if (player.challengecompletions[6] > 0) {\n        f /= 1.075;\n    }\n    let exponent = 1;\n    exponent *= e;\n    exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55]);\n    exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800));\n    exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]));\n    exponent *= (0.001 + .999 * (Math.pow(6, -(G['rune2level'] * G['effectiveLevelMult']) / 1000)));\n    exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100))));\n    exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131]);\n    exponent *= f;\n    exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]));\n    exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3 - 1] + G['bonusant3']));\n    exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + 0.5 * player.platonicUpgrades[15] + (G['platonicBonusMultiplier'][5] - 1));\n    exponent *= (1 - 0.10 * (player.talismanRarity[1 - 1] - 1));\n    exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159]);\n    exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]));\n    exponent *= (1 - 0.666 * player.researches[200] / 100000);\n    exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000);\n    exponent *= G['challenge15Rewards'].taxes;\n    if (player.upgrades[121] > 0) {\n        exponent *= 0.5;\n    }\n    G['maxexponent'] = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1;\n    const a2 = Math.min(G['maxexponent'], Math.floor(Decimal.log(G['produceTotal'].add(1), 10)));\n    if (player.currentChallenge.ascension === 13 && G['maxexponent'] <= 99999 && player.achievements[249] < 1) {\n        achievementaward(249);\n    }\n    if (a2 >= 1) {\n        c = Math.pow(a2, 2) / 550;\n    }\n    compareC = Math.pow(G['maxexponent'], 2) / 550;\n    G['taxdivisor'] = Decimal.pow(1.01, (c) * (exponent));\n    G['taxdivisorcheck'] = Decimal.pow(1.01, (compareC) * (exponent));\n};\n","import { player, format, resetCheck, isTesting, blankSave } from './Synergism';\nimport Decimal from 'break_infinity.js';\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate';\nimport { buyResearch } from './Research';\nimport { c15RewardUpdate } from './Statistics';\nimport { padArray } from './Utility';\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, createHepteract, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts';\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental';\nexport const checkVariablesOnLoad = (data) => {\n    var _a;\n    if (player.currentChallenge.transcension === undefined) {\n        player.currentChallenge = {\n            transcension: 0,\n            reincarnation: 0,\n            ascension: 0,\n        };\n    }\n    if (!Array.isArray(data.challengecompletions)) {\n        player.challengecompletions = Object.values(data.challengecompletions);\n        padArray(player.challengecompletions, 0, blankSave.challengecompletions.length);\n    }\n    if (!Array.isArray(data.highestchallengecompletions)) {\n        player.highestchallengecompletions = Object.values(data.highestchallengecompletions);\n    }\n    if (data.wowCubes === undefined) {\n        player.wowCubes = new WowCubes();\n        player.wowTesseracts = new WowTesseracts(0);\n        player.wowHypercubes = new WowHypercubes(0);\n        player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (data.shoptoggles.reincarnate === undefined) {\n        player.shoptoggles.reincarnate = true;\n    }\n    if (data.ascendBuilding1 === undefined) {\n        player.ascendBuilding1 = {\n            cost: 1,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding2 = {\n            cost: 10,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding3 = {\n            cost: 100,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding4 = {\n            cost: 1000,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n        player.ascendBuilding5 = {\n            cost: 10000,\n            owned: 0,\n            generated: new Decimal(\"0\"),\n            multiplier: 0.01\n        };\n    }\n    if (data.tesseractbuyamount === undefined) {\n        player.tesseractbuyamount = 1;\n    }\n    if (data.tesseractBlessings === undefined) {\n        player.tesseractBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        };\n        player.hypercubeBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        };\n    }\n    if (data.prototypeCorruptions === undefined) {\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (data.constantUpgrades === undefined) {\n        player.ascendShards = new Decimal(\"0\");\n        player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (data.roombaResearchIndex === undefined) {\n        player.roombaResearchIndex = 0;\n    }\n    if (data.history === undefined) {\n        player.history = { ants: [], ascend: [], reset: [] };\n        player.historyCountMax = 10;\n    }\n    if (data.autoChallengeRunning === undefined) {\n        player.autoChallengeRunning = false;\n        player.autoChallengeIndex = 1;\n        player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false];\n        player.autoChallengeStartExponent = 10;\n        player.autoChallengeTimer = {\n            start: 10,\n            exit: 2,\n            enter: 2\n        };\n    }\n    if (data.autoAscend === undefined) {\n        player.autoAscend = false;\n        player.autoAscendMode = \"c10Completions\";\n        player.autoAscendThreshold = 1;\n    }\n    if (data.runeBlessingLevels === undefined) {\n        player.runeBlessingLevels = [0, 0, 0, 0, 0, 0];\n        player.runeSpiritLevels = [0, 0, 0, 0, 0, 0];\n        player.runeBlessingBuyAmount = 0;\n        player.runeSpiritBuyAmount = 0;\n    }\n    if (data.autoTesseracts === undefined) {\n        player.autoTesseracts = [false, false, false, false, false, false];\n    }\n    if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (player.corruptionLoadouts === undefined) {\n        player.corruptionLoadouts = {\n            1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        };\n        player.corruptionShowStats = true;\n    }\n    for (let i = 0; i <= 4; i++) {\n        if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\n            player.runelevels[i] = 0;\n        }\n    }\n    if (((_a = data.shopUpgrades) === null || _a === void 0 ? void 0 : _a.challengeExtension) === undefined) {\n        player.shopUpgrades.challengeExtension = 0;\n        player.shopUpgrades.challengeTome = 0;\n        player.shopUpgrades.seasonPass = 0;\n        player.shopUpgrades.cubeToQuark = 0;\n        player.shopUpgrades.tesseractToQuark = 0;\n        player.shopUpgrades.hypercubeToQuark = 0;\n    }\n    if (data.cubeUpgrades === undefined || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\n        for (let i = 121; i <= 125; i++) {\n            player.upgrades[i] = 0;\n        }\n    }\n    Object.assign(player.toggles, data.toggles);\n    if (data.ascensionCount === 0) {\n        player.toggles[31] = true;\n        player.toggles[32] = true;\n    }\n    if (data.dayCheck === undefined) {\n        player.dayCheck = null;\n        player.dayTimer = 0;\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n    }\n    if (data.loadedOct4Hotfix === undefined || player.loadedOct4Hotfix === false) {\n        player.loadedOct4Hotfix = true;\n        if (player.researches.length > 200) {\n            player.researchPoints += player.researches[200] * 1e56;\n            player.researches[200] = 0;\n            buyResearch(200, true, 0.01);\n            console.log('Refunded 8x25, and gave you ' + format(player.researches[200]) + ' levels of new cost 8x25. Sorry!');\n            player.researchPoints += player.researches[195] * 1e60;\n            player.worlds.add(250 * player.researches[195]);\n            player.researches[195] = 0;\n            console.log('Refunded 8x20 and gave 250 quarks for each level you had prior to loading up the game.');\n            player.wowCubes.add(player.cubeUpgrades[50] * 5e10);\n            player.cubeUpgrades[50] = 0;\n            console.log('Refunded w5x10. Enjoy!');\n        }\n    }\n    if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\n        player.ascStatToggles = {\n            1: false,\n            2: false,\n            3: false,\n            4: false\n        };\n    }\n    if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\n        player.ascStatToggles[4] = false;\n    }\n    if (player.usedCorruptions[0] > 0 ||\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\n        player.prototypeCorruptions[0] = 0;\n        player.usedCorruptions[0] = 0;\n    }\n    if (player.antSacrificeTimerReal === undefined) {\n        player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration();\n    }\n    if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\n        player.subtabNumber = 0;\n    }\n    if (data.wowPlatonicCubes === undefined) {\n        player.wowPlatonicCubes = new WowPlatonicCubes(0);\n        player.wowAbyssals = 0;\n    }\n    if (data.platonicBlessings === undefined) {\n        const ascCount = player.ascensionCount;\n        if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\n            resetCheck('ascensionChallenge', false, true);\n        }\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.ascensionCount = ascCount;\n        player.challengecompletions[15] = 0;\n        player.highestchallengecompletions[15] = 0;\n        player.platonicBlessings = {\n            cubes: 0,\n            tesseracts: 0,\n            hypercubes: 0,\n            platonics: 0,\n            hypercubeBonus: 0,\n            taxes: 0,\n            scoreBonus: 0,\n            globalSpeed: 0,\n        };\n        player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.challenge15Exponent = 0;\n        player.loadedNov13Vers = false;\n    }\n    if (player.researches.includes(null)) {\n        for (let i = 0; i < 200; i++) {\n            player.researches[i + 1] = player.researches[i + 1] || 0;\n        }\n    }\n    if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined) {\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.challenge15Exponent = 0;\n        c15RewardUpdate();\n        player.loadedDec16Vers = true;\n    }\n    if (typeof data.exporttest === 'string') {\n        player.exporttest = !isTesting;\n    }\n    const shop = data.shopUpgrades;\n    if (shop && 'offeringTimerLevel' in shop) {\n        player.shopUpgrades = {\n            offeringPotion: shop.offeringPotion,\n            obtainiumPotion: shop.obtainiumPotion,\n            offeringEX: 0,\n            offeringAuto: 0,\n            obtainiumEX: 0,\n            obtainiumAuto: Number(shop.obtainiumAutoLevel),\n            instantChallenge: Number(shop.instantChallengeBought),\n            antSpeed: 0,\n            cashGrab: 0,\n            shopTalisman: Number(shop.talismanBought),\n            seasonPass: 0,\n            challengeExtension: shop.challengeExtension,\n            challengeTome: 0,\n            cubeToQuark: Number(shop.cubeToQuarkBought),\n            tesseractToQuark: Number(shop.tesseractToQuarkBought),\n            hypercubeToQuark: Number(shop.hypercubeToQuarkBought),\n            seasonPass2: 0,\n            seasonPass3: 0,\n            chronometer: 0,\n            infiniteAscent: 0,\n        };\n        const initialQuarks = player.worlds;\n        player.worlds.add(150 * shop.offeringTimerLevel + 25 / 2 * (shop.offeringTimerLevel - 1) * shop.offeringTimerLevel);\n        player.worlds.add(150 * shop.obtainiumTimerLevel + 25 / 2 * (shop.obtainiumTimerLevel - 1) * shop.obtainiumTimerLevel);\n        player.worlds.add(150 * shop.offeringAutoLevel + 25 / 2 * (shop.offeringAutoLevel - 1) * shop.offeringAutoLevel);\n        player.worlds.add(150 * shop.obtainiumAutoLevel + 25 / 2 * (shop.obtainiumAutoLevel - 1) * shop.obtainiumAutoLevel);\n        player.worlds.add(100 * shop.cashGrabLevel + 100 / 2 * (shop.cashGrabLevel - 1) * shop.cashGrabLevel);\n        player.worlds.add(200 * shop.antSpeedLevel + 80 / 2 * (shop.antSpeedLevel - 1) * shop.antSpeedLevel);\n        player.worlds.add(typeof shop.seasonPass === 'number'\n            ? 500 * shop.seasonPass + 250 / 2 * (shop.seasonPass - 1) * shop.seasonPass\n            : 500 * shop.seasonPassLevel + 250 / 2 * (shop.seasonPassLevel - 1) * shop.seasonPassLevel);\n        console.log('Because of the v2.5.0 update, you have been refunded ' + format(+player.worlds - +initialQuarks) + ' Quarks! If this appears wrong let Platonic know :)');\n    }\n    if (player.shopUpgrades.seasonPass2 === undefined) {\n        player.shopUpgrades.seasonPass2 = 0;\n        player.shopUpgrades.seasonPass3 = 0;\n        player.shopUpgrades.chronometer = 0;\n        player.shopUpgrades.infiniteAscent = 0;\n    }\n    if (player.runeexp[5] === undefined) {\n        player.runeexp[5] = player.runeexp[6] = 0;\n        player.runelevels[5] = player.runelevels[6] = 0;\n    }\n    player.runeexp[5] = player.runelevels[5] = 0;\n    if (player.hepteractCrafts.abyss === undefined) {\n        console.log('Updated hepteract crafts.');\n        player.hepteractCrafts = {\n            chronos: ChronosHepteract,\n            hyperrealism: HyperrealismHepteract,\n            quark: QuarkHepteract,\n            challenge: ChallengeHepteract,\n            abyss: AbyssHepteract,\n            accelerator: AcceleratorHepteract,\n            acceleratorBoost: AcceleratorBoostHepteract,\n            multiplier: MultiplierHepteract\n        };\n    }\n    else {\n        for (const item in player.hepteractCrafts) {\n            player.hepteractCrafts[item] = createHepteract(player.hepteractCrafts[item]);\n        }\n    }\n    if (data.platonicCubeOpenedDaily === undefined) {\n        player.platonicCubeOpenedDaily = 0;\n        player.platonicCubeQuarkDaily = 0;\n    }\n    while (player.achievements[280] === undefined) {\n        player.achievements.push(0);\n    }\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport { calculateRuneLevels } from './Calculate';\nimport { achievementaward } from './Achievements';\nconst talismanResourceCosts = {\n    shard: {\n        obtainium: 1e13,\n        offerings: 1e2,\n        name: \"Talisman Shard\"\n    },\n    commonFragment: {\n        obtainium: 1e14,\n        offerings: 1e4,\n        name: \"Common Fragment\"\n    },\n    uncommonFragment: {\n        obtainium: 1e16,\n        offerings: 1e5,\n        name: \"Uncommon Fragment\"\n    },\n    rareFragment: {\n        obtainium: 1e18,\n        offerings: 1e6,\n        name: \"Rare Fragment\"\n    },\n    epicFragment: {\n        obtainium: 1e20,\n        offerings: 1e7,\n        name: \"Epic Fragment\"\n    },\n    legendaryFragment: {\n        obtainium: 1e22,\n        offerings: 1e8,\n        name: \"Legendary Fragment\"\n    },\n    mythicalFragment: {\n        obtainium: 1e24,\n        offerings: 1e9,\n        name: \"Mythical Fragment\"\n    },\n};\nconst getTalismanResourceInfo = (type, percentage = player.buyTalismanShardPercent) => {\n    const obtainiumCost = talismanResourceCosts[type].obtainium;\n    const offeringCost = talismanResourceCosts[type].offerings;\n    const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost));\n    const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)));\n    const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)));\n    const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false;\n    return {\n        canBuy: canBuy,\n        buyAmount: amountToBuy,\n        obtainiumCost: obtainiumCost * amountToBuy,\n        offeringCost: offeringCost * amountToBuy\n    };\n};\nexport const updateTalismanCostDisplay = (type, percentage = player.buyTalismanShardPercent) => {\n    const el = document.getElementById(\"talismanFragmentCost\");\n    const talismanCostInfo = getTalismanResourceInfo(type, percentage);\n    const TalismanName = talismanResourceCosts[type].name;\n    el.textContent = \"Cost to buy \" + format(talismanCostInfo.buyAmount) + \" \" + TalismanName + (talismanCostInfo.buyAmount > 1 ? \"s\" : \"\") + \": \" + format(talismanCostInfo.obtainiumCost) + \" Obtainium and \" + format(talismanCostInfo.offeringCost) + \" offerings.\";\n};\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\n    document.getElementById(\"talismanTen\").style.backgroundColor = \"\";\n    document.getElementById(\"talismanTwentyFive\").style.backgroundColor = \"\";\n    document.getElementById(\"talismanFifty\").style.backgroundColor = \"\";\n    document.getElementById(\"talismanHundred\").style.backgroundColor = \"\";\n    player.buyTalismanShardPercent = i;\n    let x = \"Ten\";\n    if (i === 25) {\n        x = \"TwentyFive\";\n    }\n    if (i === 50) {\n        x = \"Fifty\";\n    }\n    if (i === 100) {\n        x = \"Hundred\";\n    }\n    document.getElementById(`talisman${x}`).style.backgroundColor = \"green\";\n};\nexport const updateTalismanInventory = () => {\n    document.getElementById(\"talismanShardInventory\").textContent = format(player.talismanShards);\n    document.getElementById(\"commonFragmentInventory\").textContent = format(player.commonFragments);\n    document.getElementById(\"uncommonFragmentInventory\").textContent = format(player.uncommonFragments);\n    document.getElementById(\"rareFragmentInventory\").textContent = format(player.rareFragments);\n    document.getElementById(\"epicFragmentInventory\").textContent = format(player.epicFragments);\n    document.getElementById(\"legendaryFragmentInventory\").textContent = format(player.legendaryFragments);\n    document.getElementById(\"mythicalFragmentInventory\").textContent = format(player.mythicalFragments);\n};\nexport const buyTalismanResources = (type, percentage = player.buyTalismanShardPercent) => {\n    const talismanResourcesData = getTalismanResourceInfo(type, percentage);\n    if (talismanResourcesData.canBuy) {\n        if (type === 'shard') {\n            player.talismanShards += talismanResourcesData.buyAmount;\n        }\n        else {\n            player[type + 's'] += talismanResourcesData.buyAmount;\n        }\n        if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\n            achievementaward(239);\n        }\n        player.researchPoints -= talismanResourcesData.obtainiumCost;\n        player.runeshards -= talismanResourcesData.offeringCost;\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n    }\n    updateTalismanCostDisplay(type, percentage);\n    updateTalismanInventory();\n};\nexport const showTalismanEffect = (i) => {\n    document.getElementById(\"talismanlevelup\").style.display = \"none\";\n    document.getElementById(\"talismanEffect\").style.display = \"block\";\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    const a = document.getElementById(\"talismanSummary\");\n    const b = document.getElementById(\"talismanBonus\");\n    const c = document.getElementById(\"talismanRune1Effect\");\n    const d = document.getElementById(\"talismanRune2Effect\");\n    const e = document.getElementById(\"talismanRune3Effect\");\n    const f = document.getElementById(\"talismanRune4Effect\");\n    const g = document.getElementById(\"talismanRune5Effect\");\n    const h = document.getElementById(\"talismanMythicEffect\");\n    switch (i) {\n        case 1:\n            a.textContent = \"=-=-=-= Exemption Talisman Effects =-=-=-=\";\n            b.textContent = \"Taxes -\" + format(10 * (player.talismanRarity[1 - 1] - 1)) + \"%\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman1Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman1Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman1Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman1Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman1Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Duplication Rune Levels!\";\n            break;\n        case 2:\n            a.textContent = \"=-=-=-= Chronos Talisman Effects =-=-=-=\";\n            b.textContent = \"Gain +\" + format(10 * (player.talismanRarity[2 - 1] - 1)) + \"% Global Speed Acceleration.\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman2Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman2Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman2Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman2Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman2Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Speed Rune Levels!\";\n            break;\n        case 3:\n            a.textContent = \"=-=-=-= Midas Talisman Effects =-=-=-=\";\n            b.textContent = \"Rune Blessing bonuses +\" + format(10 * (player.talismanRarity[3 - 1] - 1)) + \"%\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman3Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman3Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman3Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman3Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman3Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Thrift Rune Levels!\";\n            break;\n        case 4:\n            a.textContent = \"=-=-=-= Metaphysics Talisman Effects =-=-=-=\";\n            b.textContent = \"Talismans' Bonus Rune Levels +\" + format(0.05 * (player.talismanRarity[4 - 1] - 1), 2) + \" per level\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman4Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman4Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman4Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman4Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman4Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 Prism Rune Levels!\";\n            break;\n        case 5:\n            a.textContent = \"=-=-=-= Polymath Talisman Effects =-=-=-=\";\n            b.textContent = \"Rune Spirit Bonuses +\" + format(1 * (player.talismanRarity[5 - 1] - 1)) + \"%\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman5Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman5Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman5Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman5Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman5Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +400 SI Rune Levels!\";\n            break;\n        case 6:\n            a.textContent = \"=-=-=-= Mortuus Est Talisman Effects =-=-=-=\";\n            b.textContent = \"Bonus Ant Levels: +\" + format(2 * (player.talismanRarity[6 - 1] - 1));\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman6Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman6Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman6Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman6Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman6Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: Gain ant speed based on your total rune level!\";\n            break;\n        case 7:\n            a.textContent = \"=-=-=-= Plastic Talisman Effects =-=-=-=\";\n            b.textContent = \"Gain 1x normal production\";\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman7Effect'][1], 2, true);\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman7Effect'][2], 2, true);\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman7Effect'][3], 2, true);\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman7Effect'][4], 2, true);\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman7Effect'][5], 2, true);\n            h.textContent = \"Mythic Effect: +20% Quarks per Hour on Export (Additive)!\";\n            break;\n    }\n    if (player.talismanRarity[i - 1] !== 6) {\n        h.textContent = \"Get Max Enhance for a Mythical bonus effect!\";\n    }\n};\nexport const showTalismanPrices = (i) => {\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\n    document.getElementById(\"talismanlevelup\").style.display = \"block\";\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    const a = document.getElementById(\"talismanShardCost\");\n    const b = document.getElementById(\"talismanCommonFragmentCost\");\n    const c = document.getElementById(\"talismanUncommonFragmentCost\");\n    const d = document.getElementById(\"talismanRareFragmentCost\");\n    const e = document.getElementById(\"talismanEpicFragmentCost\");\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\");\n    const g = document.getElementById(\"talismanMythicalFragmentCost\");\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"-=-=- Resources Required to Level Up -=-=-\";\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"silver\";\n    let m = G['talismanLevelCostMultiplier'][i];\n    if (player.talismanLevels[i - 1] >= 120) {\n        m *= (player.talismanLevels[i - 1] - 90) / 30;\n    }\n    if (player.talismanLevels[i - 1] >= 150) {\n        m *= (player.talismanLevels[i - 1] - 120) / 30;\n    }\n    if (player.talismanLevels[i - 1] >= 180) {\n        m *= (player.talismanLevels[i - 1] - 170) / 10;\n    }\n    a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3))));\n    b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3))));\n    c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3))));\n    d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3))));\n    e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3))));\n    f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3))));\n    g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3))));\n};\nexport const showEnhanceTalismanPrices = (i) => {\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\n    document.getElementById(\"talismanlevelup\").style.display = \"block\";\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    const a = document.getElementById(\"talismanShardCost\");\n    const b = document.getElementById(\"talismanCommonFragmentCost\");\n    const c = document.getElementById(\"talismanUncommonFragmentCost\");\n    const d = document.getElementById(\"talismanRareFragmentCost\");\n    const e = document.getElementById(\"talismanEpicFragmentCost\");\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\");\n    const g = document.getElementById(\"talismanMythicalFragmentCost\");\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"=-=-= Resources Required to ENHANCE =-=-=\";\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"gold\";\n    const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\n    const index = player.talismanRarity[i - 1];\n    const costArray = array[index - 1];\n    const m = G['talismanLevelCostMultiplier'][i];\n    a.textContent = format(m * costArray[1]);\n    b.textContent = format(m * costArray[2]);\n    c.textContent = format(m * costArray[3]);\n    d.textContent = format(m * costArray[4]);\n    e.textContent = format(m * costArray[5]);\n    f.textContent = format(m * costArray[6]);\n    g.textContent = format(m * costArray[7]);\n};\nexport const showRespecInformation = (i) => {\n    G['talismanRespec'] = i;\n    const num = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"];\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\n    document.getElementById(\"talismanlevelup\").style.display = \"none\";\n    document.getElementById(\"talismanrespec\").style.display = \"block\";\n    const runeName = [\"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\n    const runeModifier = [\"Positive\", \"Positive\", \"Positive\", \"Positive\"];\n    if (i <= 7) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = player[\"talisman\" + num[i - 1]][k];\n        }\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm [-100,000 Offerings]\";\n    }\n    if (i === 8) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = 1;\n        }\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm ALL [-400,000 Offerings]\";\n    }\n    for (let j = 1; j <= 5; j++) {\n        if (G['mirrorTalismanStats'][j] === 1) {\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid limegreen\";\n            runeModifier[j - 1] = \"Positive\";\n        }\n        else if (G['mirrorTalismanStats'][j] === -1) {\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid crimson\";\n            runeModifier[j - 1] = \"Negative\";\n        }\n        document.getElementById(\"talismanRespecButton\" + j).textContent = runeName[j - 1] + \": \" + runeModifier[j - 1];\n    }\n    document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n};\nexport const changeTalismanModifier = (i) => {\n    const runeName = [null, \"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\n    const el = document.getElementById(\"talismanRespecButton\" + i);\n    if (G['mirrorTalismanStats'][i] === 1) {\n        G['mirrorTalismanStats'][i] = (-1);\n        el.textContent = runeName[i] + \": Negative\";\n        el.style.border = \"2px solid crimson\";\n    }\n    else {\n        G['mirrorTalismanStats'][i] = (1);\n        el.textContent = runeName[i] + \": Positive\";\n        el.style.border = \"2px solid limegreen\";\n    }\n    const checkSum = G['mirrorTalismanStats'].reduce(function (a, b) {\n        return a + b;\n    }, 0);\n    if (checkSum === 1) {\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"block\";\n    }\n    else {\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n    }\n};\nexport const respecTalismanConfirm = (i) => {\n    const num = [null, \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"];\n    if (player.runeshards >= 100000 && i <= 7) {\n        for (let j = 1; j <= 5; j++) {\n            player[\"talisman\" + num[i]][j] = G['mirrorTalismanStats'][j];\n        }\n        player.runeshards -= 100000;\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\n        showTalismanEffect(i);\n    }\n    else if (player.runeshards >= 400000 && i === 8) {\n        player.runeshards -= 400000;\n        for (let j = 1; j <= 7; j++) {\n            for (let k = 1; k <= 5; k++) {\n                player[\"talisman\" + num[j]][k] = G['mirrorTalismanStats'][k];\n            }\n        }\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\n    }\n    calculateRuneLevels();\n};\nexport const respecTalismanCancel = (i) => {\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\n    if (i <= 7) {\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\n        showTalismanEffect(i);\n    }\n};\nexport const updateTalismanAppearance = (i) => {\n    const el = document.getElementById(\"talisman\" + i);\n    const la = document.getElementById(\"talisman\" + i + \"level\");\n    const rarity = player.talismanRarity[i - 1];\n    if (rarity === 1) {\n        el.style.border = \"4px solid white\";\n        la.style.color = \"white\";\n    }\n    if (rarity === 2) {\n        el.style.border = \"4px solid limegreen\";\n        la.style.color = \"limegreen\";\n    }\n    if (rarity === 3) {\n        el.style.border = \"4px solid lightblue\";\n        la.style.color = \"lightblue\";\n    }\n    if (rarity === 4) {\n        el.style.border = \"4px solid plum\";\n        la.style.color = \"plum\";\n    }\n    if (rarity === 5) {\n        el.style.border = \"4px solid orange\";\n        la.style.color = \"orange\";\n    }\n    if (rarity === 6) {\n        el.style.border = \"4px solid crimson\";\n        la.style.color = \"crimson\";\n    }\n};\nexport const buyTalismanLevels = (i, auto = false) => {\n    let max = 1;\n    if (player.ascensionCount > 0) {\n        max = 30;\n    }\n    let hasPurchased = false;\n    for (let j = 1; j <= max; j++) {\n        let checkSum = 0;\n        let priceMult = G['talismanLevelCostMultiplier'][i];\n        if (player.talismanLevels[i - 1] >= 120) {\n            priceMult *= (player.talismanLevels[i - 1] - 90) / 30;\n        }\n        if (player.talismanLevels[i - 1] >= 150) {\n            priceMult *= (player.talismanLevels[i - 1] - 120) / 30;\n        }\n        if (player.talismanLevels[i - 1] >= 180) {\n            priceMult *= (player.talismanLevels[i - 1] - 170) / 10;\n        }\n        if (player.talismanLevels[i - 1] < (player.talismanRarity[i - 1] * 30 + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400))) {\n            if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3)))) {\n                checkSum++;\n            }\n            if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3)))) {\n                checkSum++;\n            }\n            if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3)))) {\n                checkSum++;\n            }\n            if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3)))) {\n                checkSum++;\n            }\n            if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3)))) {\n                checkSum++;\n            }\n            if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3)))) {\n                checkSum++;\n            }\n            if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3)))) {\n                checkSum++;\n            }\n        }\n        if (checkSum === 7) {\n            player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3)));\n            player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3)));\n            player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3)));\n            player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3)));\n            player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3)));\n            player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3)));\n            player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3)));\n            player.talismanLevels[i - 1] += 1;\n            hasPurchased = true;\n        }\n        else {\n            break;\n        }\n    }\n    if (!auto && hasPurchased) {\n        showTalismanPrices(i);\n        updateTalismanInventory();\n        calculateRuneLevels();\n    }\n    return hasPurchased;\n};\nexport const buyTalismanEnhance = (i, auto = false) => {\n    let checkSum = 0;\n    if (player.talismanRarity[i - 1] < 6) {\n        const priceMult = G['talismanLevelCostMultiplier'][i];\n        const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\n        const index = player.talismanRarity[i - 1] - 1;\n        const costArray = array[index];\n        if (player.commonFragments >= priceMult * costArray[2]) {\n            checkSum++;\n        }\n        if (player.uncommonFragments >= priceMult * costArray[3]) {\n            checkSum++;\n        }\n        if (player.rareFragments >= priceMult * costArray[4]) {\n            checkSum++;\n        }\n        if (player.epicFragments >= priceMult * costArray[5]) {\n            checkSum++;\n        }\n        if (player.legendaryFragments >= priceMult * costArray[6]) {\n            checkSum++;\n        }\n        if (player.mythicalFragments >= priceMult * costArray[7]) {\n            checkSum++;\n        }\n        if (checkSum === 6) {\n            player.commonFragments -= (priceMult * costArray[2]);\n            player.uncommonFragments -= (priceMult * costArray[3]);\n            player.rareFragments -= (priceMult * costArray[4]);\n            player.epicFragments -= (priceMult * costArray[5]);\n            player.legendaryFragments -= (priceMult * costArray[6]);\n            player.mythicalFragments -= (priceMult * costArray[7]);\n            player.talismanRarity[i - 1] += 1;\n            updateTalismanAppearance(i);\n            if (!auto) {\n                showEnhanceTalismanPrices(i);\n                updateTalismanInventory();\n                calculateRuneLevels();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n","import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nexport const calculateTesseractBlessings = () => {\n    const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed];\n    for (let i = 0; i < 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (tesseractArray[i] >= 1000 && i !== 5) {\n            power = G['giftDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['giftDRPower'][i]));\n        }\n        G['tesseractBonusMultiplier'][i + 1] = 1 + mult * G['giftbase'][i] * Math.pow(tesseractArray[i], power) * G['hypercubeBonusMultiplier'][i + 1];\n    }\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { revealStuff, hideStuff, updateChallengeDisplay, showCorruptionStatsLoadouts, changeTabColor } from './UpdateHTML';\nimport { player, interval, clearInt, format, resetCheck } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { visualUpdateCubes } from './UpdateVisuals';\nimport { calculateRuneLevels } from './Calculate';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport { getChallengeConditions } from './Challenges';\nimport { loadStatisticsCubeMultipliers, loadStatisticsOfferingMultipliers, loadStatisticsAccelerator, loadStatisticsMultiplier } from './Statistics';\nimport { corruptionDisplay, corruptionLoadoutTableUpdate } from './Corruptions';\nconst tabNumberConst = {\n    \"settings\": -1,\n    \"shop\": 0,\n    \"buildings\": 1,\n    \"upgrades\": 2,\n    \"achievements\": 3,\n    \"runes\": 4,\n    \"challenges\": 5,\n    \"researches\": 6,\n    \"ants\": 7,\n    \"cubes\": 8,\n    \"traits\": 9\n};\nexport const toggleTabs = (name) => {\n    G['currentTab'] = name;\n    player.tabnumber = tabNumberConst[name];\n    revealStuff();\n    hideStuff();\n    const subTabList = subTabsInMainTab(player.tabnumber).subTabList;\n    if (player.tabnumber !== -1) {\n        for (let i = 0; i < subTabList.length; i++) {\n            const button = document.getElementById(subTabList[i].buttonID);\n            if (button && button.style.backgroundColor === \"crimson\") {\n                player.subtabNumber = i;\n                break;\n            }\n            if (player.tabnumber === 9 && button.style.borderColor === \"dodgerblue\") {\n                player.subtabNumber = i;\n                break;\n            }\n        }\n    }\n    else {\n        const btns = document.querySelectorAll('#settings .subtabSwitcher > button');\n        for (let i = 0; i < btns.length; i++) {\n            if (btns[i].classList.contains(\"buttonActive\")) {\n                player.subtabNumber = i;\n                break;\n            }\n        }\n    }\n};\nexport const toggleSettings = (i) => {\n    i++;\n    if (player.toggles[i] === true) {\n        player.toggles[i] = false;\n    }\n    else {\n        player.toggles[i] = true;\n    }\n    toggleauto();\n};\nexport const toggleChallenges = (i, auto = false) => {\n    if (player.currentChallenge.transcension === 0 && (i <= 5)) {\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\n            player.currentChallenge.transcension = i;\n            reset(\"transcensionChallenge\", false, \"enterChallenge\");\n            player.transcendCount -= 1;\n        }\n    }\n    if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) && (i >= 6 && i < 11)) {\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\n            player.currentChallenge.reincarnation = i;\n            reset(\"reincarnationChallenge\", false, \"enterChallenge\");\n            player.reincarnationCount -= 1;\n        }\n    }\n    if (player.challengecompletions[10] > 0) {\n        if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0) && (i >= 11)) {\n            reset(\"ascensionChallenge\", false, \"enterChallenge\");\n            player.currentChallenge.ascension = i;\n            if (player.currentChallenge.ascension === 12) {\n                player.antPoints = new Decimal(\"8\");\n            }\n            if (player.currentChallenge.ascension === 15) {\n                player.usedCorruptions[0] = 0;\n                player.prototypeCorruptions[0] = 0;\n                for (let i = 1; i <= 9; i++) {\n                    player.usedCorruptions[i] = 11;\n                }\n            }\n        }\n    }\n    updateChallengeDisplay();\n    getChallengeConditions(i);\n    if (!auto && player.autoChallengeRunning) {\n        toggleAutoChallengeRun();\n    }\n    if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\n        achievementaward(238);\n    }\n};\nexport const toggleBuyAmount = (quantity, type) => {\n    player[`${type}buyamount`] = quantity;\n    const a = ['one', 'ten', 'hundred', 'thousand'][quantity.toString().length - 1];\n    document.getElementById(`${type}${a}`).style.backgroundColor = \"Green\";\n    if (quantity !== 1) {\n        document.getElementById(`${type}one`).style.backgroundColor = \"\";\n    }\n    if (quantity !== 10) {\n        document.getElementById(`${type}ten`).style.backgroundColor = \"\";\n    }\n    if (quantity !== 100) {\n        document.getElementById(`${type}hundred`).style.backgroundColor = \"\";\n    }\n    if (quantity !== 1000) {\n        document.getElementById(`${type}thousand`).style.backgroundColor = \"\";\n    }\n};\nexport const toggleShops = (i) => {\n    if (i === 1 && player.shoptoggles.coin === false) {\n        player.shoptoggles.coin = true;\n        document.getElementById(\"shoptogglecoin\").textContent = \"Auto: ON\";\n    }\n    else if (i === 1 && player.shoptoggles.coin === true) {\n        player.shoptoggles.coin = false;\n        document.getElementById(\"shoptogglecoin\").textContent = \"Auto: OFF\";\n    }\n    if (i === 2 && player.shoptoggles.prestige === false) {\n        player.shoptoggles.prestige = true;\n        document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: ON\";\n    }\n    else if (i === 2 && player.shoptoggles.prestige === true) {\n        player.shoptoggles.prestige = false;\n        document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: OFF\";\n    }\n    if (i === 3 && player.shoptoggles.transcend === false) {\n        player.shoptoggles.transcend = true;\n        document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: ON\";\n    }\n    else if (i === 3 && player.shoptoggles.transcend === true) {\n        player.shoptoggles.transcend = false;\n        document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: OFF\";\n    }\n    if (i === 4 && player.shoptoggles.generators === false) {\n        player.shoptoggles.generators = true;\n        document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: ON\";\n    }\n    else if (i === 4 && player.shoptoggles.generators === true) {\n        player.shoptoggles.generators = false;\n        document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: OFF\";\n    }\n    if (i === 5 && player.shoptoggles.reincarnate === false) {\n        player.shoptoggles.reincarnate = true;\n        document.getElementById(\"particleAutoUpgrade\").textContent = \"Auto: ON\";\n    }\n    else if (i === 5 && player.shoptoggles.reincarnate === true) {\n        player.shoptoggles.reincarnate = false;\n        document.getElementById(\"particleAutoUpgrade\").textContent = \"Auto: OFF\";\n    }\n};\nexport function tabs(mainTab) {\n    const tabs = {\n        \"-1\": { tabName: \"settings\", unlocked: true },\n        0: { tabName: \"shop\", unlocked: player.unlocks.reincarnate },\n        1: { tabName: \"buildings\", unlocked: true },\n        2: { tabName: \"upgrades\", unlocked: true },\n        3: { tabName: \"achievements\", unlocked: player.unlocks.coinfour },\n        4: { tabName: \"runes\", unlocked: player.unlocks.prestige },\n        5: { tabName: \"challenges\", unlocked: player.unlocks.transcend },\n        6: { tabName: \"researches\", unlocked: player.unlocks.reincarnate },\n        7: { tabName: \"ants\", unlocked: player.achievements[127] > 0 },\n        8: { tabName: \"cubes\", unlocked: player.achievements[141] > 0 },\n        9: { tabName: \"traits\", unlocked: player.achievements[141] > 0 }\n    };\n    if (typeof mainTab === 'undefined') {\n        return tabs;\n    }\n    return tabs[mainTab];\n}\nexport const subTabsInMainTab = (mainTab) => {\n    const subTabs = {\n        \"-1\": {\n            tabSwitcher: setActiveSettingScreen,\n            subTabList: [\n                { subTabID: \"settingsubtab\", unlocked: true },\n                { subTabID: \"creditssubtab\", unlocked: true },\n                { subTabID: \"statisticsSubTab\", unlocked: true },\n                { subTabID: \"resetHistorySubTab\", unlocked: player.unlocks.prestige },\n                { subTabID: \"ascendHistorySubTab\", unlocked: player.ascensionCount > 0 },\n                { subTabID: \"testingLogger\", unlocked: true }\n            ]\n        },\n        0: { subTabList: [] },\n        1: {\n            tabSwitcher: toggleBuildingScreen,\n            subTabList: [\n                { subTabID: \"coin\", unlocked: true, buttonID: \"switchToCoinBuilding\" },\n                { subTabID: \"diamond\", unlocked: player.unlocks.prestige, buttonID: \"switchToDiamondBuilding\" },\n                { subTabID: \"mythos\", unlocked: player.unlocks.transcend, buttonID: \"switchToMythosBuilding\" },\n                { subTabID: \"particle\", unlocked: player.unlocks.reincarnate, buttonID: \"switchToParticleBuilding\" },\n                { subTabID: \"tesseract\", unlocked: player.achievements[183] > 0, buttonID: \"switchToTesseractBuilding\" }\n            ]\n        },\n        2: { subTabList: [] },\n        3: { subTabList: [] },\n        4: {\n            tabSwitcher: toggleRuneScreen,\n            subTabList: [\n                { subTabID: 1, unlocked: player.unlocks.prestige, buttonID: \"toggleRuneSubTab1\" },\n                { subTabID: 2, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab2\" },\n                { subTabID: 3, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab3\" },\n                { subTabID: 4, unlocked: player.achievements[204] > 0, buttonID: \"toggleRuneSubTab4\" }\n            ]\n        },\n        5: { subTabList: [] },\n        6: { subTabList: [] },\n        7: { subTabList: [] },\n        8: {\n            tabSwitcher: toggleCubeSubTab,\n            subTabList: [\n                { subTabID: 1, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab1\" },\n                { subTabID: 2, unlocked: player.achievements[197] > 0, buttonID: \"switchCubeSubTab2\" },\n                { subTabID: 3, unlocked: player.achievements[211] > 0, buttonID: \"switchCubeSubTab3\" },\n                { subTabID: 4, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab4\" },\n                { subTabID: 5, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab5\" },\n                { subTabID: 6, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab6\" },\n                { subTabID: 7, unlocked: player.challenge15Exponent >= 1e15, buttonID: \"switchCubeSubTab7\" }\n            ]\n        },\n        9: {\n            tabSwitcher: toggleCorruptionLoadoutsStats,\n            subTabList: [\n                { subTabID: true, unlocked: player.achievements[141] > 0, buttonID: \"corrStatsBtn\" },\n                { subTabID: false, unlocked: player.achievements[141] > 0, buttonID: \"corrLoadoutsBtn\" }\n            ]\n        },\n    };\n    return subTabs[mainTab];\n};\nexport const keyboardTabChange = (dir = 1, main = true) => {\n    if (main) {\n        player.tabnumber += dir;\n        const maxTab = Object.keys(tabs()).reduce((a, b) => Math.max(a, +b), -Infinity);\n        const minTab = Object.keys(tabs()).reduce((a, b) => Math.min(a, +b), Infinity);\n        const handleLoopBack = () => {\n            if (player.tabnumber === maxTab + 1) {\n                player.tabnumber = minTab;\n            }\n            if (player.tabnumber === minTab - 1) {\n                player.tabnumber = maxTab;\n            }\n        };\n        handleLoopBack();\n        while (!tabs(player.tabnumber).unlocked) {\n            player.tabnumber += dir;\n            handleLoopBack();\n        }\n        toggleTabs(tabs(player.tabnumber).tabName);\n    }\n    else {\n        const subTabList = subTabsInMainTab(player.tabnumber).subTabList;\n        if (subTabList.length === 0)\n            return;\n        player.subtabNumber += dir;\n        const handleLoopBack = () => {\n            const numSubTabs = subTabList.length;\n            player.subtabNumber = (player.subtabNumber + numSubTabs) % numSubTabs;\n        };\n        handleLoopBack();\n        while (!subTabList[player.subtabNumber].unlocked) {\n            player.subtabNumber += dir;\n            handleLoopBack();\n        }\n        toggleSubTab(player.tabnumber, player.subtabNumber);\n    }\n    changeTabColor();\n};\nexport const toggleSubTab = (mainTab = 1, subTab = 0) => {\n    if (tabs(mainTab).unlocked && subTabsInMainTab(mainTab).subTabList.length > 0) {\n        if (mainTab === -1) {\n            const btn = document.getElementById(\"settings\").getElementsByClassName(\"subtabSwitcher\")[0].children[subTab];\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID, btn);\n        }\n        else {\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID);\n        }\n    }\n};\nexport const toggleautoreset = (i) => {\n    if (i === 1) {\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            player.resettoggle1 = 2;\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\";\n        }\n        else {\n            player.resettoggle1 = 1;\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n    }\n    else if (i === 2) {\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            player.resettoggle2 = 2;\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\";\n        }\n        else {\n            player.resettoggle2 = 1;\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n    }\n    else if (i === 3) {\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            player.resettoggle3 = 2;\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\";\n        }\n        else {\n            player.resettoggle3 = 1;\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\";\n        }\n    }\n    else if (i === 4) {\n    }\n};\nexport const toggleautobuytesseract = () => {\n    if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\n        player.tesseractAutoBuyerToggle = 2;\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\";\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\";\n    }\n    else {\n        player.tesseractAutoBuyerToggle = 1;\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\";\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\";\n    }\n};\nexport const toggleauto = () => {\n    const autos = document.getElementsByClassName(\"auto\");\n    for (const auto of Array.from(autos)) {\n        const format = auto.getAttribute(\"format\") || 'Auto [$]';\n        const toggleId = auto.getAttribute(\"toggleId\");\n        if (toggleId === undefined || toggleId === null) {\n            continue;\n        }\n        const finishedString = format.replace('$', player.toggles[+toggleId] ? \"ON\" : \"OFF\");\n        auto.textContent = finishedString;\n        auto.style.border = \"2px solid \" + (player.toggles[+toggleId] ? \"green\" : \"red\");\n    }\n};\nexport const toggleResearchBuy = () => {\n    if (G['maxbuyresearch']) {\n        G['maxbuyresearch'] = false;\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: 1 Level\";\n    }\n    else {\n        G['maxbuyresearch'] = true;\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: MAX [if possible]\";\n    }\n};\nexport const toggleAutoResearch = () => {\n    const el = document.getElementById(\"toggleautoresearch\");\n    if (player.autoResearchToggle) {\n        player.autoResearchToggle = false;\n        el.textContent = \"Automatic: OFF\";\n        document.getElementById(`res${player.autoResearch || 1}`).classList.remove(\"researchRoomba\");\n        player.autoResearch = 0;\n    }\n    else {\n        player.autoResearchToggle = true;\n        el.textContent = \"Automatic: ON\";\n    }\n    if (player.autoResearchToggle && player.cubeUpgrades[9] === 1) {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n    }\n};\nexport const toggleAutoSacrifice = (index) => {\n    const el = document.getElementById(\"toggleautosacrifice\");\n    if (index === 0) {\n        if (player.autoSacrificeToggle) {\n            player.autoSacrificeToggle = false;\n            el.textContent = \"Auto Runes: OFF\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\";\n            player.autoSacrifice = 0;\n        }\n        else {\n            player.autoSacrificeToggle = true;\n            el.textContent = \"Auto Runes: ON\";\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\";\n        }\n    }\n    else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAuto > 0.5) {\n        player.autoSacrifice = index;\n    }\n    for (let i = 1; i <= 5; i++) {\n        document.getElementById(\"rune\" + i).style.backgroundColor = player.autoSacrifice === i ? \"orange\" : \"#171717\";\n    }\n    calculateRuneLevels();\n};\nexport const toggleBuildingScreen = (input) => {\n    G['buildingSubTab'] = input;\n    const screen = {\n        \"coin\": {\n            screen: \"coinBuildings\",\n            button: \"switchToCoinBuilding\",\n            subtabNumber: 0\n        },\n        \"diamond\": {\n            screen: \"prestige\",\n            button: \"switchToDiamondBuilding\",\n            subtabNumber: 1\n        },\n        \"mythos\": {\n            screen: \"transcension\",\n            button: \"switchToMythosBuilding\",\n            subtabNumber: 2\n        },\n        \"particle\": {\n            screen: \"reincarnation\",\n            button: \"switchToParticleBuilding\",\n            subtabNumber: 3\n        },\n        \"tesseract\": {\n            screen: \"ascension\",\n            button: \"switchToTesseractBuilding\",\n            subtabNumber: 4\n        }\n    };\n    for (const key in screen) {\n        document.getElementById(screen[key].screen).style.display = \"none\";\n        document.getElementById(screen[key].button).style.backgroundColor = \"\";\n    }\n    document.getElementById(screen[G['buildingSubTab']].screen).style.display = \"flex\";\n    document.getElementById(screen[G['buildingSubTab']].button).style.backgroundColor = \"crimson\";\n    player.subtabNumber = screen[G['buildingSubTab']].subtabNumber;\n};\nexport const toggleRuneScreen = (index) => {\n    const screens = ['runes', 'talismans', 'blessings', 'spirits'];\n    G['runescreen'] = screens[index - 1];\n    for (let i = 1; i <= 4; i++) {\n        const a = document.getElementById(\"toggleRuneSubTab\" + i);\n        const b = document.getElementById(\"runeContainer\" + i);\n        if (i === index) {\n            a.style.border = \"2px solid gold\";\n            a.style.backgroundColor = \"crimson\";\n            b.style.display = \"flex\";\n        }\n        else {\n            a.style.border = \"2px solid silver\";\n            a.style.backgroundColor = \"\";\n            b.style.display = \"none\";\n        }\n    }\n    player.subtabNumber = index - 1;\n};\nexport const toggleautofortify = () => {\n    const el = document.getElementById(\"toggleautofortify\");\n    if (player.autoFortifyToggle === false && player.researches[130] == 1) {\n        el.textContent = \"Auto Fortify: ON\";\n        el.style.border = \"2px solid green\";\n    }\n    else {\n        el.textContent = \"Auto Fortify: OFF\";\n        el.style.border = \"2px solid red\";\n    }\n    player.autoFortifyToggle = !player.autoFortifyToggle;\n};\nexport const toggleautoenhance = () => {\n    const el = document.getElementById(\"toggleautoenhance\");\n    if (player.autoEnhanceToggle === false && player.researches[135] == 1) {\n        el.textContent = \"Auto Enhance: ON\";\n        el.style.border = \"2px solid green\";\n    }\n    else {\n        el.textContent = \"Auto Enhance: OFF\";\n        el.style.border = \"2px solid red\";\n    }\n    player.autoEnhanceToggle = !player.autoEnhanceToggle;\n};\nconst setActiveSettingScreen = (subtab, clickedButton) => __awaiter(void 0, void 0, void 0, function* () {\n    const subtabEl = document.getElementById(subtab);\n    if (subtabEl.classList.contains(\"subtabActive\")) {\n        return;\n    }\n    const switcherEl = clickedButton.parentNode;\n    switcherEl.querySelectorAll(\".buttonActive\").forEach(b => b.classList.remove(\"buttonActive\"));\n    clickedButton.classList.add(\"buttonActive\");\n    subtabEl.parentNode.querySelectorAll(\".subtabActive\").forEach(subtab => subtab.classList.remove(\"subtabActive\"));\n    subtabEl.classList.add(\"subtabActive\");\n    if (subtab === \"statisticsSubTab\") {\n        const refreshStats = function () {\n            if (G['currentTab'] !== \"settings\") {\n                clearInt(id);\n            }\n            loadStatisticsAccelerator();\n            loadStatisticsMultiplier();\n            loadStatisticsOfferingMultipliers();\n            loadStatisticsCubeMultipliers();\n            if (!subtabEl.classList.contains(\"subtabActive\"))\n                clearInt(id);\n        };\n        const id = interval(refreshStats, 1000);\n        refreshStats();\n    }\n    else if (subtab === 'creditssubtab') {\n        const credits = document.getElementById('creditList');\n        const artists = document.getElementById('artistList');\n        if (credits.childElementCount > 0 || artists.childElementCount > 0)\n            return;\n        try {\n            const r = yield fetch('https://api.github.com/repos/pseudo-corp/SynergismOfficial/contributors', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const j = yield r.json();\n            for (const contributor of j) {\n                const div = document.createElement('div');\n                div.classList.add('credit');\n                const img = new Image(32, 32);\n                img.src = contributor.avatar_url;\n                img.alt = contributor.login;\n                const a = document.createElement('a');\n                a.href = `https://github.com/Pseudo-Corp/SynergismOfficial/commits/ts?author=${contributor.login}`;\n                a.textContent = contributor.login;\n                div.appendChild(img);\n                div.appendChild(a);\n                credits.appendChild(div);\n            }\n        }\n        catch (e) {\n            credits.appendChild(document.createTextNode(e.toString()));\n        }\n        try {\n            const r = yield fetch('https://api.github.com/gists/01917ff476d25a141c5bad38340cd756', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const j = yield r.json();\n            const f = JSON.parse(j.files['synergism_artists.json'].content);\n            for (const user of f) {\n                const p = document.createElement('p');\n                p.textContent = user;\n                artists.appendChild(p);\n            }\n        }\n        catch (e) {\n            credits.appendChild(document.createTextNode(e.toString()));\n        }\n    }\n});\nexport const toggleShopConfirmation = () => {\n    const el = document.getElementById(\"toggleConfirmShop\");\n    el.textContent = G['shopConfirmation']\n        ? \"Shop Confirmations: OFF\"\n        : \"Shop Confirmations: ON\";\n    G['shopConfirmation'] = !G['shopConfirmation'];\n};\nexport const toggleAntMaxBuy = () => {\n    const el = document.getElementById(\"toggleAntMax\");\n    el.textContent = player.antMax\n        ? \"Buy Max: OFF\"\n        : \"Buy Max: ON\";\n    player.antMax = !player.antMax;\n};\nexport const toggleAntAutoSacrifice = (mode = 0) => {\n    if (mode === 0) {\n        const el = document.getElementById(\"toggleAutoSacrificeAnt\");\n        if (player.autoAntSacrifice) {\n            player.autoAntSacrifice = false;\n            el.textContent = \"Auto Sacrifice: OFF\";\n        }\n        else {\n            player.autoAntSacrifice = true;\n            el.textContent = \"Auto Sacrifice: ON\";\n        }\n    }\n    else if (mode === 1) {\n        const el = document.getElementById(\"autoSacrificeAntMode\");\n        if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\n            player.autoAntSacrificeMode = 2;\n            el.textContent = \"Mode: Real time\";\n        }\n        else {\n            player.autoAntSacrificeMode = 1;\n            el.textContent = \"Mode: In-game time\";\n        }\n    }\n};\nexport const toggleMaxBuyCube = () => {\n    const el = document.getElementById(\"toggleCubeBuy\");\n    if (G['buyMaxCubeUpgrades']) {\n        G['buyMaxCubeUpgrades'] = false;\n        el.textContent = \"Upgrade: 1 Level wow\";\n    }\n    else {\n        G['buyMaxCubeUpgrades'] = true;\n        el.textContent = \"Upgrade: MAX [if possible wow]\";\n    }\n};\nexport const toggleCubeSubTab = (i) => {\n    const numSubTabs = subTabsInMainTab(8).subTabList.length;\n    for (let j = 1; j <= numSubTabs; j++) {\n        const cubeTab = document.getElementById(`cubeTab${j}`);\n        if (cubeTab.style.display === \"flex\" && j !== i) {\n            cubeTab.style.display = \"none\";\n        }\n        if (cubeTab.style.display === \"none\" && j === i) {\n            cubeTab.style.display = \"flex\";\n            player.subtabNumber = j - 1;\n        }\n        document.getElementById(\"switchCubeSubTab\" + j).style.backgroundColor = i === j ? \"crimson\" : \"\";\n    }\n    visualUpdateCubes();\n};\nexport const updateAutoChallenge = (i) => {\n    switch (i) {\n        case 1: {\n            const t = parseFloat(document.getElementById('startAutoChallengeTimerInput').value) || 0;\n            player.autoChallengeTimer.start = Math.max(t, 0);\n            document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\n            return;\n        }\n        case 2: {\n            const u = parseFloat(document.getElementById('exitAutoChallengeTimerInput').value) || 0;\n            player.autoChallengeTimer.exit = Math.max(u, 0);\n            document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\n            return;\n        }\n        case 3: {\n            const v = parseFloat(document.getElementById('enterAutoChallengeTimerInput').value) || 0;\n            player.autoChallengeTimer.enter = Math.max(v, 0);\n            document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\n            return;\n        }\n    }\n};\nexport const toggleAutoChallengesIgnore = (i) => {\n    const el = document.getElementById(\"toggleAutoChallengeIgnore\");\n    if (player.autoChallengeToggles[i]) {\n        el.style.border = \"2px solid red\";\n        el.textContent = \"Automatically Run Chal.\" + i + \" [OFF]\";\n    }\n    else {\n        el.style.border = \"2px solid green\";\n        el.textContent = \"Automatically Run Chal.\" + i + \" [ON]\";\n    }\n    player.autoChallengeToggles[i] = !player.autoChallengeToggles[i];\n};\nexport const toggleAutoChallengeRun = () => {\n    const el = document.getElementById('toggleAutoChallengeStart');\n    if (player.autoChallengeRunning) {\n        el.style.border = \"2px solid red\";\n        el.textContent = \"Auto Challenge Sweep [OFF]\";\n        player.autoChallengeIndex = 1;\n        G['autoChallengeTimerIncrement'] = 0;\n        toggleAutoChallengeModeText(\"OFF\");\n    }\n    else {\n        el.style.border = \"2px solid gold\";\n        el.textContent = \"Auto Challenge Sweep [ON]\";\n        toggleAutoChallengeModeText(\"START\");\n    }\n    player.autoChallengeRunning = !player.autoChallengeRunning;\n};\nexport const toggleAutoChallengeModeText = (i) => {\n    const a = document.getElementById(\"autoChallengeType\");\n    a.textContent = \"MODE: \" + i;\n};\nexport const toggleAutoAscend = () => {\n    const a = document.getElementById(\"ascensionAutoEnable\");\n    if (player.autoAscend) {\n        a.style.border = \"2px solid red\";\n        a.textContent = \"Auto Ascend [OFF]\";\n    }\n    else {\n        a.style.border = \"2px solid green\";\n        a.textContent = \"Auto Ascend [ON]\";\n    }\n    player.autoAscend = !player.autoAscend;\n};\nexport const updateRuneBlessingBuyAmount = (i) => {\n    switch (i) {\n        case 1: {\n            const t = Math.floor(parseFloat(document.getElementById('buyRuneBlessingInput').value)) || 1;\n            player.runeBlessingBuyAmount = Math.max(t, 1);\n            document.getElementById('buyRuneBlessingToggleValue').textContent = format(player.runeBlessingBuyAmount, 0, true);\n            return;\n        }\n        case 2: {\n            const u = Math.floor(parseFloat(document.getElementById('buyRuneSpiritInput').value)) || 1;\n            player.runeSpiritBuyAmount = Math.max(u, 1);\n            document.getElementById('buyRuneSpiritToggleValue').textContent = format(player.runeSpiritBuyAmount, 0, true);\n            return;\n        }\n    }\n};\nexport const toggleAutoTesseracts = (i) => {\n    const el = document.getElementById('tesseractAutoToggle' + i);\n    if (player.autoTesseracts[i]) {\n        el.textContent = \"Auto [OFF]\";\n        el.style.border = \"2px solid red\";\n    }\n    else {\n        el.textContent = \"Auto [ON]\";\n        el.style.border = \"2px solid green\";\n    }\n    player.autoTesseracts[i] = !player.autoTesseracts[i];\n};\nexport const toggleCorruptionLevel = (index, value) => {\n    const current = player.prototypeCorruptions[index];\n    const maxCorruption = 12;\n    if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value);\n    }\n    if (value < 0 && current > 0 && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] -= Math.min(current, -value);\n    }\n    player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]));\n    if (value === 999 && player.currentChallenge.ascension !== 15) {\n        for (let i = 0; i <= 9; i++) {\n            player.usedCorruptions[i] = 0;\n            player.prototypeCorruptions[i] = 0;\n            if (i > 0)\n                corruptionDisplay(i);\n        }\n        corruptionDisplay(G['corruptionTrigger']);\n        document.getElementById(\"corruptionCleanseConfirm\").style.visibility = \"hidden\";\n        if (player.currentChallenge.ascension === 15) {\n            resetCheck('ascensionChallenge', false, true);\n        }\n    }\n    corruptionDisplay(index);\n    corruptionLoadoutTableUpdate();\n};\nexport const toggleCorruptionLoadoutsStats = (stats) => {\n    player.corruptionShowStats = stats;\n    showCorruptionStatsLoadouts();\n};\nexport const toggleAscStatPerSecond = (id) => {\n    const el = document.getElementById(`unit${id}`);\n    if (!el) {\n        console.log(id, 'platonic needs to fix');\n        return;\n    }\n    el.textContent = player.ascStatToggles[id] ? '/s' : '';\n    player.ascStatToggles[id] = !player.ascStatToggles[id];\n};\n","import { player, format, formatTimeShort, } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate';\nimport { achievementaward, totalachievementpoints } from './Achievements';\nimport { displayRuneInformation } from './Runes';\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions } from './UpdateVisuals';\nimport { getMaxChallenges } from './Challenges';\nexport const revealStuff = () => {\n    const example = document.getElementsByClassName(\"coinunlock1\");\n    for (let i = 0; i < example.length; i++) {\n        player.unlocks.coinone ? example[i].style.display = \"block\" : example[i].style.display = \"none\";\n    }\n    const example2 = document.getElementsByClassName(\"coinunlock2\");\n    for (let i = 0; i < example2.length; i++) {\n        player.unlocks.cointwo ? example2[i].style.display = \"block\" : example2[i].style.display = \"none\";\n    }\n    const example3 = document.getElementsByClassName(\"coinunlock3\");\n    for (let i = 0; i < example3.length; i++) {\n        player.unlocks.cointhree ? example3[i].style.display = \"block\" : example3[i].style.display = \"none\";\n    }\n    const example4 = document.getElementsByClassName(\"coinunlock4\");\n    for (let i = 0; i < example4.length; i++) {\n        player.unlocks.coinfour ? example4[i].style.display = \"block\" : example4[i].style.display = \"none\";\n    }\n    const example5 = document.getElementsByClassName(\"prestigeunlock\");\n    for (let i = 0; i < example5.length; i++) {\n        player.unlocks.prestige ? example5[i].style.display = \"block\" : example5[i].style.display = \"none\";\n    }\n    const example6 = document.getElementsByClassName(\"generationunlock\");\n    for (let i = 0; i < example6.length; i++) {\n        player.unlocks.generation ? example6[i].style.display = \"block\" : example6[i].style.display = \"none\";\n    }\n    const example7 = document.getElementsByClassName(\"transcendunlock\");\n    for (let i = 0; i < example7.length; i++) {\n        player.unlocks.transcend ? example7[i].style.display = \"block\" : example7[i].style.display = \"none\";\n    }\n    const example8 = document.getElementsByClassName(\"reincarnationunlock\");\n    for (let i = 0; i < example8.length; i++) {\n        player.unlocks.reincarnate ? example8[i].style.display = \"block\" : example8[i].style.display = \"none\";\n    }\n    const example9 = document.getElementsByClassName(\"auto\");\n    for (let i = 0; i < example9.length; i++) {\n        example9[i].style.display = \"none\";\n    }\n    const example10 = document.getElementsByClassName(\"reinrow1\");\n    for (let i = 0; i < example10.length; i++) {\n        player.researches[47] === 1 ? example10[i].style.display = \"block\" : example10[i].style.display = \"none\";\n    }\n    const example11 = document.getElementsByClassName(\"reinrow2\");\n    for (let i = 0; i < example11.length; i++) {\n        player.researches[48] === 1 ? example11[i].style.display = \"block\" : example11[i].style.display = \"none\";\n    }\n    const example12 = document.getElementsByClassName(\"reinrow3\");\n    for (let i = 0; i < example12.length; i++) {\n        player.researches[49] === 1 ? example12[i].style.display = \"block\" : example12[i].style.display = \"none\";\n    }\n    const example13 = document.getElementsByClassName(\"reinrow4\");\n    for (let i = 0; i < example13.length; i++) {\n        player.researches[50] === 1 ? example13[i].style.display = \"block\" : example13[i].style.display = \"none\";\n    }\n    const example14 = document.getElementsByClassName(\"chal6\");\n    for (let i = 0; i < example14.length; i++) {\n        player.achievements[113] === 1 ? example14[i].style.display = \"block\" : example14[i].style.display = \"none\";\n    }\n    const example15 = document.getElementsByClassName(\"chal7\");\n    for (let i = 0; i < example15.length; i++) {\n        player.achievements[120] === 1 ? example15[i].style.display = \"block\" : example15[i].style.display = \"none\";\n    }\n    const example16 = document.getElementsByClassName(\"chal7x10\");\n    for (let i = 0; i < example16.length; i++) {\n        player.achievements[124] === 1 ? example16[i].style.display = \"block\" : example16[i].style.display = \"none\";\n    }\n    const example17 = document.getElementsByClassName(\"chal8\");\n    for (let i = 0; i < example17.length; i++) {\n        player.achievements[127] === 1 ? example17[i].style.display = \"block\" : example17[i].style.display = \"none\";\n    }\n    const example18 = document.getElementsByClassName(\"chal9\");\n    for (let i = 0; i < example18.length; i++) {\n        player.achievements[134] === 1 ? example18[i].style.display = \"block\" : example18[i].style.display = \"none\";\n    }\n    const example19 = document.getElementsByClassName(\"chal9x1\");\n    for (let i = 0; i < example19.length; i++) {\n        player.highestchallengecompletions[9] > 0 ? example19[i].style.display = \"block\" : example19[i].style.display = \"none\";\n    }\n    const example20 = document.getElementsByClassName(\"chal10\");\n    for (let i = 0; i < example20.length; i++) {\n        player.achievements[141] === 1 ? example20[i].style.display = \"block\" : example20[i].style.display = \"none\";\n    }\n    const example21 = document.getElementsByClassName(\"ascendunlock\");\n    for (let i = 0; i < example21.length; i++) {\n        player.ascensionCount > 0 ? example21[i].style.display = \"block\" : example21[i].style.display = \"none\";\n    }\n    const example22 = document.getElementsByClassName(\"chal11\");\n    for (let i = 0; i < example22.length; i++) {\n        player.challengecompletions[11] > 0 ? example22[i].style.display = \"block\" : example22[i].style.display = \"none\";\n    }\n    const example23 = document.getElementsByClassName(\"chal12\");\n    for (let i = 0; i < example23.length; i++) {\n        player.challengecompletions[12] > 0 ? example23[i].style.display = \"block\" : example23[i].style.display = \"none\";\n    }\n    const example24 = document.getElementsByClassName(\"chal13\");\n    for (let i = 0; i < example24.length; i++) {\n        player.challengecompletions[13] > 0 ? example24[i].style.display = \"block\" : example24[i].style.display = \"none\";\n    }\n    const example25 = document.getElementsByClassName(\"chal14\");\n    for (let i = 0; i < example25.length; i++) {\n        player.challengecompletions[14] > 0 ? example25[i].style.display = \"block\" : example25[i].style.display = \"none\";\n    }\n    const example26 = document.getElementsByClassName(\"ascendunlockib\");\n    for (let i = 0; i < example26.length; i++) {\n        example26[i].style.display = player.ascensionCount > 0 ? \"inline-block\" : \"none\";\n    }\n    const example27 = document.getElementsByClassName(\"prestigeunlockib\");\n    for (let i = 0; i < example27.length; i++) {\n        example27[i].style.display = +player.unlocks.prestige > 0 ? \"inline-block\" : \"none\";\n    }\n    const example28 = document.getElementsByClassName(\"research150\");\n    for (let i = 0; i < example28.length; i++) {\n        example28[i].style.display = player.researches[150] > 0 ? \"block\" : \"none\";\n    }\n    const example29 = document.getElementsByClassName(\"cubeUpgrade10\");\n    for (let i = 0; i < example29.length; i++) {\n        example29[i].style.display = player.cubeUpgrades[10] > 0 ? \"flex\" : \"none\";\n    }\n    const example30 = document.getElementsByClassName(\"cubeUpgrade19\");\n    for (let i = 0; i < example30.length; i++) {\n        example30[i].style.display = player.cubeUpgrades[19] > 0 ? \"block\" : \"none\";\n    }\n    const example31 = document.getElementsByClassName(\"sacrificeAnts\");\n    for (const ex of Array.from(example31)) {\n        ex.style.display = player.achievements[173] === 1 ? \"block\" : \"none\";\n    }\n    const example32 = document.getElementsByClassName(\"hepteracts\");\n    for (const ex of Array.from(example32)) {\n        ex.style.display = player.challenge15Exponent >= 1e15 ? \"block\" : \"none\";\n    }\n    if (player.upgrades[89] === 1) {\n        document.getElementById('transcendautotoggle').style.display = 'block';\n        document.getElementById('transcendamount').style.display = 'block';\n        document.getElementById('autotranscend').style.display = 'block';\n    }\n    else {\n        document.getElementById('transcendautotoggle').style.display = 'none';\n        document.getElementById('transcendamount').style.display = 'none';\n        document.getElementById('autotranscend').style.display = 'none';\n    }\n    player.achievements[38] === 1 ?\n        (document.getElementById(\"rune2area\").style.display = \"flex\", document.getElementById(\"runeshowpower2\").style.display = \"flex\") :\n        (document.getElementById(\"rune2area\").style.display = \"none\", document.getElementById(\"runeshowpower2\").style.display = \"none\");\n    if (player.achievements[43] === 1) {\n        document.getElementById('prestigeautotoggle').style.display = 'block';\n        document.getElementById('prestigeamount').style.display = 'block';\n        document.getElementById('autoprestige').style.display = 'block';\n    }\n    else {\n        document.getElementById('prestigeautotoggle').style.display = 'none';\n        document.getElementById('prestigeamount').style.display = 'none';\n        document.getElementById('autoprestige').style.display = 'none';\n    }\n    player.achievements[44] === 1 ?\n        (document.getElementById(\"rune3area\").style.display = \"flex\", document.getElementById(\"runeshowpower3\").style.display = \"flex\") :\n        (document.getElementById(\"rune3area\").style.display = \"none\", document.getElementById(\"runeshowpower3\").style.display = \"none\");\n    player.achievements[102] === 1 ?\n        (document.getElementById(\"rune4area\").style.display = \"flex\", document.getElementById(\"runeshowpower4\").style.display = \"flex\") :\n        (document.getElementById(\"rune4area\").style.display = \"none\", document.getElementById(\"runeshowpower4\").style.display = \"none\");\n    player.achievements[119] === 1 ?\n        document.getElementById(\"talisman1area\").style.display = \"flex\" :\n        document.getElementById(\"talisman1area\").style.display = \"none\";\n    player.achievements[126] === 1 ?\n        document.getElementById(\"talisman2area\").style.display = \"flex\" :\n        document.getElementById(\"talisman2area\").style.display = \"none\";\n    player.achievements[133] === 1 ?\n        document.getElementById(\"talisman3area\").style.display = \"flex\" :\n        document.getElementById(\"talisman3area\").style.display = \"none\";\n    player.achievements[134] === 1 ?\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"block\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"block\") :\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"none\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"none\");\n    player.achievements[140] === 1 ?\n        document.getElementById(\"talisman4area\").style.display = \"flex\" :\n        document.getElementById(\"talisman4area\").style.display = \"none\";\n    player.achievements[147] === 1 ?\n        document.getElementById(\"talisman5area\").style.display = \"flex\" :\n        document.getElementById(\"talisman5area\").style.display = \"none\";\n    player.achievements[173] === 1 ?\n        document.getElementById(\"sacrificeAnts\").style.display = \"block\" :\n        document.getElementById(\"sacrificeAnts\").style.display = \"none\";\n    player.researches[39] > 0 ?\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"block\" :\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"none\";\n    player.researches[40] > 0 ?\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"block\" :\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"none\";\n    player.researches[46] > 0 ?\n        document.getElementById(\"reincarnateautomation\").style.display = \"block\" :\n        document.getElementById(\"reincarnateautomation\").style.display = \"none\";\n    player.researches[82] > 0 ?\n        (document.getElementById(\"rune5area\").style.display = \"flex\", document.getElementById(\"runeshowpower5\").style.display = \"flex\") :\n        (document.getElementById(\"rune5area\").style.display = \"none\", document.getElementById(\"runeshowpower5\").style.display = \"none\");\n    player.researches[124] > 0 ?\n        document.getElementById(\"antSacrificeButtons\").style.display = \"block\" :\n        document.getElementById(\"antSacrificeButtons\").style.display = \"none\";\n    player.researches[130] > 0 ?\n        document.getElementById(\"toggleautofortify\").style.display = \"block\" :\n        document.getElementById(\"toggleautofortify\").style.display = \"none\";\n    player.researches[135] > 0 ?\n        document.getElementById(\"toggleautoenhance\").style.display = \"block\" :\n        document.getElementById(\"toggleautoenhance\").style.display = \"none\";\n    for (let z = 1; z <= 5; z++) {\n        (player.researches[190] > 0) ?\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"block\" :\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"none\";\n    }\n    player.researches[190] > 0 ?\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"block\" :\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"none\";\n    player.researches[190] > 0 ?\n        document.getElementById(\"tesseractAmount\").style.display = \"block\" :\n        document.getElementById(\"tesseractAmount\").style.display = \"none\";\n    player.researches[190] > 0 ?\n        document.getElementById(\"autotessbuyeramount\").style.display = \"block\" :\n        document.getElementById(\"autotessbuyeramount\").style.display = \"none\";\n    (player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0) ?\n        document.getElementById(\"talisman6area\").style.display = \"flex\" :\n        document.getElementById(\"talisman6area\").style.display = \"none\";\n    player.shopUpgrades.offeringAuto > 0 ?\n        document.getElementById(\"toggleautosacrifice\").style.display = \"block\" :\n        document.getElementById(\"toggleautosacrifice\").style.display = \"none\";\n    player.shopUpgrades.obtainiumAuto > 0 ?\n        document.getElementById(\"toggleautoresearch\").style.display = \"block\" :\n        document.getElementById(\"toggleautoresearch\").style.display = \"none\";\n    player.shopUpgrades.shopTalisman > 0 ?\n        document.getElementById(\"talisman7area\").style.display = \"flex\" :\n        document.getElementById(\"talisman7area\").style.display = \"none\";\n    player.cubeUpgrades[8] > 0 ?\n        document.getElementById('particleAutoUpgrade').style.display = \"block\" :\n        document.getElementById('particleAutoUpgrade').style.display = \"none\";\n    player.shopUpgrades.infiniteAscent ?\n        (document.getElementById('rune6area').style.display = 'flex', document.getElementById('runeshowpower6').style.display = \"flex\") :\n        (document.getElementById('rune6area').style.display = 'none', document.getElementById('runeshowpower6').style.display = \"none\");\n    document.getElementById('rune7area').style.display = 'none';\n    document.getElementById('runeshowpower7').style.display = 'none';\n    document.getElementById(\"ascensionStats\").style.visibility = player.achievements[197] > 0 ? \"visible\" : \"hidden\";\n    document.getElementById(\"ascHyperStats\").style.display = player.challengecompletions[13] > 0 ? \"\" : \"none\";\n    document.getElementById(\"ascPlatonicStats\").style.display = player.challengecompletions[14] > 0 ? \"\" : \"none\";\n    const automationUnlocks = {\n        \"toggle1\": player.upgrades[81] === 1,\n        \"toggle2\": player.upgrades[82] === 1,\n        \"toggle3\": player.upgrades[83] === 1,\n        \"toggle4\": player.upgrades[84] === 1,\n        \"toggle5\": player.upgrades[85] === 1,\n        \"toggle6\": player.upgrades[86] === 1,\n        \"toggle7\": player.upgrades[87] === 1,\n        \"toggle8\": player.upgrades[88] === 1,\n        \"toggle10\": player.achievements[78] === 1,\n        \"toggle11\": player.achievements[85] === 1,\n        \"toggle12\": player.achievements[92] === 1,\n        \"toggle13\": player.achievements[99] === 1,\n        \"toggle14\": player.achievements[106] === 1,\n        \"toggle15\": player.achievements[43] === 1,\n        \"toggle16\": player.upgrades[94] === 1,\n        \"toggle17\": player.upgrades[95] === 1,\n        \"toggle18\": player.upgrades[96] === 1,\n        \"toggle19\": player.upgrades[97] === 1,\n        \"toggle20\": player.upgrades[98] === 1,\n        \"toggle21\": player.upgrades[89] === 1,\n        \"toggle22\": player.cubeUpgrades[7] === 1,\n        \"toggle23\": player.cubeUpgrades[7] === 1,\n        \"toggle24\": player.cubeUpgrades[7] === 1,\n        \"toggle25\": player.cubeUpgrades[7] === 1,\n        \"toggle26\": player.cubeUpgrades[7] === 1,\n        \"toggle27\": player.researches[46] === 1,\n        \"shoptogglecoin\": player.upgrades[91] === 1,\n        \"shoptoggleprestige\": player.upgrades[92] === 1,\n        \"shoptoggletranscend\": player.upgrades[99] === 1,\n        \"shoptogglegenerator\": player.upgrades[90] === 1,\n        \"toggle9\": player.unlocks.prestige,\n        \"toggle28\": player.prestigeCount > 0.5 || player.reincarnationCount > 0.5,\n        \"toggle29\": player.transcendCount > 0.5 || player.reincarnationCount > 0.5,\n        \"toggle30\": player.reincarnationCount > 0.5,\n        \"toggle31\": player.ascensionCount > 0,\n        \"toggle32\": player.achievements[173] > 0,\n    };\n    Object.keys(automationUnlocks).forEach(key => {\n        const el = document.getElementById(key);\n        if (!el) {\n            console.error(`Automation unlock failed to find element with ID '${key}'.`);\n            return;\n        }\n        el.style.display = automationUnlocks[key] ? \"block\" : \"none\";\n    });\n};\nexport const hideStuff = () => {\n    document.getElementById(\"buildings\").style.display = \"none\";\n    document.getElementById(\"buildingstab\").style.backgroundColor = \"\";\n    document.getElementById(\"upgrades\").style.display = \"none\";\n    document.getElementById(\"upgradestab\").style.backgroundColor = \"\";\n    document.getElementById(\"settings\").style.display = \"none\";\n    const settingsTab = document.getElementById(\"settingstab\");\n    if (settingsTab.getAttribute('full') === '0') {\n        settingsTab.style.backgroundColor = \"\";\n        settingsTab.style.color = \"white\";\n        settingsTab.style.border = '1px solid white';\n    }\n    document.getElementById(\"statistics\").style.display = \"none\";\n    document.getElementById(\"achievementstab\").style.backgroundColor = \"\";\n    document.getElementById(\"achievementstab\").style.color = \"white\";\n    document.getElementById(\"runes\").style.display = \"none\";\n    document.getElementById(\"runestab\").style.backgroundColor = \"\";\n    document.getElementById(\"challenges\").style.display = \"none\";\n    document.getElementById(\"challengetab\").style.backgroundColor = \"\";\n    document.getElementById(\"research\").style.display = \"none\";\n    document.getElementById(\"researchtab\").style.backgroundColor = \"\";\n    document.getElementById(\"shop\").style.display = \"none\";\n    document.getElementById(\"shoptab\").style.backgroundColor = \"\";\n    document.getElementById(\"ants\").style.display = \"none\";\n    document.getElementById(\"anttab\").style.backgroundColor = \"\";\n    document.getElementById(\"cubetab\").style.backgroundColor = \"\";\n    document.getElementById(\"traitstab\").style.backgroundColor = \"\";\n    document.getElementById(\"cubes\").style.display = \"none\";\n    document.getElementById(\"traits\").style.display = \"none\";\n    document.getElementById(\"activaterune2\").style.display = \"none\";\n    document.getElementById(\"activaterune3\").style.display = \"none\";\n    document.getElementById(\"activaterune4\").style.display = \"none\";\n    if (G['currentTab'] === \"buildings\") {\n        document.getElementById(\"buildingstab\").style.backgroundColor = \"orange\";\n        document.getElementById(\"buildings\").style.display = \"block\";\n    }\n    if (G['currentTab'] === \"upgrades\") {\n        document.getElementById(\"upgrades\").style.display = \"block\";\n        document.getElementById(\"upgradestab\").style.backgroundColor = \"orange\";\n        document.getElementById(\"upgradedescription\").textContent = \"Hover over an upgrade to view details!\";\n    }\n    if (G['currentTab'] === \"settings\") {\n        document.getElementById(\"settings\").style.display = \"block\";\n        if (settingsTab.getAttribute('full') === '0') {\n            settingsTab.style.backgroundColor = \"white\";\n            settingsTab.style.color = \"black\";\n            settingsTab.style.border = '1px solid white';\n        }\n    }\n    if (G['currentTab'] === \"achievements\") {\n        document.getElementById(\"statistics\").style.display = \"block\";\n        document.getElementById(\"achievementstab\").style.backgroundColor = \"white\";\n        document.getElementById(\"achievementstab\").style.color = \"black\";\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\";\n    }\n    if (G['currentTab'] === \"runes\") {\n        document.getElementById(\"runes\").style.display = \"block\";\n        document.getElementById(\"runestab\").style.backgroundColor = \"blue\";\n        document.getElementById(\"runeshowlevelup\").textContent = \"Hey, hover over a rune icon to get details on what each one does and what benefits they're giving you!\";\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\n        displayRuneInformation(1, false);\n        displayRuneInformation(2, false);\n        displayRuneInformation(3, false);\n        displayRuneInformation(4, false);\n        displayRuneInformation(5, false);\n        displayRuneInformation(6, false);\n        displayRuneInformation(7, false);\n    }\n    if (G['currentTab'] === \"challenges\") {\n        document.getElementById(\"challenges\").style.display = \"block\";\n        document.getElementById(\"challengetab\").style.backgroundColor = \"purple\";\n    }\n    if (G['currentTab'] === \"researches\") {\n        document.getElementById(\"research\").style.display = \"block\";\n        document.getElementById(\"researchtab\").style.backgroundColor = \"green\";\n    }\n    if (G['currentTab'] === \"shop\") {\n        document.getElementById(\"shop\").style.display = \"block\";\n        document.getElementById(\"shoptab\").style.backgroundColor = \"limegreen\";\n    }\n    if (G['currentTab'] === \"ants\") {\n        document.getElementById(\"ants\").style.display = \"block\";\n        document.getElementById(\"anttab\").style.backgroundColor = \"brown\";\n    }\n    if (G['currentTab'] === \"cubes\") {\n        document.getElementById(\"cubes\").style.display = \"block\";\n        document.getElementById(\"cubetab\").style.backgroundColor = \"white\";\n    }\n    if (G['currentTab'] === \"traits\") {\n        document.getElementById(\"traits\").style.display = \"flex\";\n        document.getElementById(\"traitstab\").style.backgroundColor = \"white\";\n    }\n    if (player.achievements[38] > 0.5) {\n        document.getElementById(\"activaterune2\").style.display = \"block\";\n    }\n    if (player.achievements[44] > 0.5) {\n        document.getElementById(\"activaterune3\").style.display = \"block\";\n    }\n    if (player.achievements[102] > 0.5) {\n        document.getElementById(\"activaterune4\").style.display = \"block\";\n    }\n    if (player.shopUpgrades.infiniteAscent) {\n        document.getElementById(\"activaterune6\").style.display = \"block\";\n    }\n};\nconst visualTab = {\n    buildings: visualUpdateBuildings,\n    upgrades: visualUpdateUpgrades,\n    achievements: visualUpdateAchievements,\n    runes: visualUpdateRunes,\n    challenges: visualUpdateChallenges,\n    research: visualUpdateResearch,\n    settings: visualUpdateSettings,\n    shop: visualUpdateShop,\n    ants: visualUpdateAnts,\n    cubes: visualUpdateCubes,\n    traits: visualUpdateCorruptions\n};\nexport const htmlInserts = () => {\n    var _a;\n    document.getElementById(\"coinDisplay\").textContent = format(player.coins);\n    document.getElementById(\"offeringDisplay\").textContent = format(player.runeshards);\n    document.getElementById(\"diamondDisplay\").textContent = format(player.prestigePoints);\n    document.getElementById(\"mythosDisplay\").textContent = format(player.transcendPoints);\n    document.getElementById(\"mythosshardDisplay\").textContent = format(player.transcendShards);\n    document.getElementById(\"particlesDisplay\").textContent = format(player.reincarnationPoints);\n    document.getElementById(\"quarkDisplay\").textContent = format(player.worlds);\n    document.getElementById(\"obtainiumDisplay\").textContent = format(player.researchPoints);\n    updateAscensionStats();\n    (_a = visualTab[G['currentTab']]) === null || _a === void 0 ? void 0 : _a.call(visualTab);\n};\nexport const buttoncolorchange = () => {\n    (player.toggles[15] && player.achievements[43] === 1) ?\n        document.getElementById('prestigebtn').style.backgroundColor = \"green\" :\n        document.getElementById('prestigebtn').style.backgroundColor = \"#171717\";\n    (player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0)) ?\n        document.getElementById('transcendbtn').style.backgroundColor = \"green\" :\n        document.getElementById('transcendbtn').style.backgroundColor = \"#171717\";\n    (player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0)) ?\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"green\" :\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"#171717\";\n    (player.toggles[8] && player.upgrades[88] > 0.5) ?\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"green\" :\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"#171717\";\n    (player.currentChallenge.transcension === 0) ?\n        document.getElementById('challengebtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('challengebtn').style.backgroundColor = \"purple\";\n    (player.currentChallenge.reincarnation === 0) ?\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"purple\";\n    (player.currentChallenge.ascension === 0) ?\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"#171717\" :\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"purple\";\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"coin\") {\n        const a = document.getElementById(\"buycoin1\");\n        const b = document.getElementById(\"buycoin2\");\n        const c = document.getElementById(\"buycoin3\");\n        const d = document.getElementById(\"buycoin4\");\n        const e = document.getElementById(\"buycoin5\");\n        const f = document.getElementById(\"buyaccelerator\");\n        const g = document.getElementById(\"buymultiplier\");\n        const h = document.getElementById(\"buyacceleratorboost\");\n        ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin))\n            ? a.classList.add(\"buildingPurchaseBtnAvailable\")\n            : a.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin))\n            ? b.classList.add(\"buildingPurchaseBtnAvailable\")\n            : b.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin))\n            ? c.classList.add(\"buildingPurchaseBtnAvailable\")\n            : c.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin))\n            ? d.classList.add(\"buildingPurchaseBtnAvailable\")\n            : d.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin))\n            ? e.classList.add(\"buildingPurchaseBtnAvailable\")\n            : e.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost))\n            ? f.classList.add(\"buildingPurchaseBtnAvailable\")\n            : f.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost))\n            ? g.classList.add(\"buildingPurchaseBtnAvailable\")\n            : g.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost))\n            ? h.classList.add(\"buildingPurchaseBtnAvailable\")\n            : h.classList.remove(\"buildingPurchaseBtnAvailable\");\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\n        const a = document.getElementById(\"buydiamond1\");\n        const b = document.getElementById(\"buydiamond2\");\n        const c = document.getElementById(\"buydiamond3\");\n        const d = document.getElementById(\"buydiamond4\");\n        const e = document.getElementById(\"buydiamond5\");\n        const f = document.getElementById(\"buycrystalupgrade1\");\n        const g = document.getElementById(\"buycrystalupgrade2\");\n        const h = document.getElementById(\"buycrystalupgrade3\");\n        const i = document.getElementById(\"buycrystalupgrade4\");\n        const j = document.getElementById(\"buycrystalupgrade5\");\n        ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds))\n            ? a.classList.add(\"buildingPurchaseBtnAvailable\")\n            : a.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds))\n            ? b.classList.add(\"buildingPurchaseBtnAvailable\")\n            : b.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds))\n            ? c.classList.add(\"buildingPurchaseBtnAvailable\")\n            : c.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds))\n            ? d.classList.add(\"buildingPurchaseBtnAvailable\")\n            : d.classList.remove(\"buildingPurchaseBtnAvailable\");\n        ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds))\n            ? e.classList.add(\"buildingPurchaseBtnAvailable\")\n            : e.classList.remove(\"buildingPurchaseBtnAvailable\");\n        let k = 0;\n        k += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\n        if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\n            k += 10;\n        }\n        (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = \"purple\" : f.style.backgroundColor = \"#171717\";\n        (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = \"purple\" : g.style.backgroundColor = \"#171717\";\n        (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = \"purple\" : h.style.backgroundColor = \"#171717\";\n        (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = \"purple\" : i.style.backgroundColor = \"#171717\";\n        (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = \"purple\" : j.style.backgroundColor = \"#171717\";\n    }\n    if (G['currentTab'] === \"runes\") {\n        if (G['runescreen'] === \"runes\") {\n            for (let i = 1; i <= 7; i++) {\n                player.runeshards > 0.5\n                    ? document.getElementById(`activaterune${i}`).classList.add(\"runeButtonAvailable\")\n                    : document.getElementById(`activaterune${i}`).classList.remove(\"runeButtonAvailable\");\n            }\n        }\n        if (G['runescreen'] === \"talismans\") {\n            const a = document.getElementById(\"buyTalismanItem1\");\n            const b = document.getElementById(\"buyTalismanItem2\");\n            const c = document.getElementById(\"buyTalismanItem3\");\n            const d = document.getElementById(\"buyTalismanItem4\");\n            const e = document.getElementById(\"buyTalismanItem5\");\n            const f = document.getElementById(\"buyTalismanItem6\");\n            const g = document.getElementById(\"buyTalismanItem7\");\n            const arr = [a, b, c, d, e, f, g];\n            for (let i = 0; i < arr.length; i++) {\n                (player.researchPoints > G['talismanResourceObtainiumCosts'][i] && player.runeshards > G['talismanResourceOfferingCosts'][i])\n                    ? arr[i].classList.add(\"talisminBtnAvailable\")\n                    : arr[i].classList.remove(\"talisminBtnAvailable\");\n            }\n        }\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"mythos\") {\n        for (let i = 1; i <= 5; i++) {\n            const toggle = player.toggles[i + 15];\n            const mythos = player[`${G['ordinals'][i - 1]}CostMythos`];\n            (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos)\n                ? document.getElementById(`buymythos${i}`).classList.add(\"buildingPurchaseBtnAvailable\")\n                : document.getElementById(`buymythos${i}`).classList.remove(\"buildingPurchaseBtnAvailable\");\n        }\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"particle\") {\n        for (let i = 1; i <= 5; i++) {\n            const costParticles = player[G['ordinals'][i - 1] + 'CostParticles'];\n            player.reincarnationPoints.gte(costParticles)\n                ? document.getElementById(`buyparticles${i}`).classList.add(\"buildingPurchaseBtnAvailable\")\n                : document.getElementById(`buyparticles${i}`).classList.remove(\"buildingPurchaseBtnAvailable\");\n        }\n    }\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"tesseract\") {\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuilding = player['ascendBuilding' + i]['cost'];\n            Number(player.wowTesseracts) >= ascendBuilding\n                ? document.getElementById(`buyTesseracts${i}`).classList.add(\"buildingPurchaseBtnAvailable\")\n                : document.getElementById(`buyTesseracts${i}`).classList.remove(\"buildingPurchaseBtnAvailable\");\n        }\n        for (let i = 1; i <= 8; i++) {\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i])))\n                ? document.getElementById(`buyConstantUpgrade${i}`).classList.add(\"constUpgradeAvailable\")\n                : document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeAvailable\");\n        }\n        for (let i = 9; i <= 10; i++) {\n            if (player.constantUpgrades[i] >= 1) {\n                document.getElementById(`buyConstantUpgrade${i}`).classList.add(\"constUpgradeSingle\");\n                document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeSingleAvailable\");\n            }\n            else if (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]))) {\n                document.getElementById(`buyConstantUpgrade${i}`).classList.add(\"constUpgradeSingleAvailable\");\n            }\n            else {\n                document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeSingleAvailable\");\n                document.getElementById(`buyConstantUpgrade${i}`).classList.remove(\"constUpgradeSingle\");\n            }\n        }\n    }\n    if (G['currentTab'] === \"ants\") {\n        (player.reincarnationPoints.gte(player.firstCostAnts)) ? document.getElementById(`anttier1`).classList.add(\"antTierBtnAvailable\") : document.getElementById(`anttier1`).classList.remove(\"antTierBtnAvailable\");\n        for (let i = 2; i <= 8; i++) {\n            const costAnts = player[G['ordinals'][i - 1] + 'CostAnts'];\n            player.antPoints.gte(costAnts)\n                ? document.getElementById(`anttier${i}`).classList.add(\"antTierBtnAvailable\")\n                : document.getElementById(`anttier${i}`).classList.remove(\"antTierBtnAvailable\");\n        }\n        for (let i = 1; i <= 12; i++) {\n            player.antPoints.gte(Decimal.pow(G['antUpgradeCostIncreases'][i - 1], player.antUpgrades[i - 1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i - 1]))\n                ? document.getElementById(`antUpgrade${i}`).classList.add(\"antUpgradeBtnAvailable\")\n                : document.getElementById(`antUpgrade${i}`).classList.remove(\"antUpgradeBtnAvailable\");\n        }\n    }\n};\nexport const updateChallengeDisplay = () => {\n    for (let k = 1; k <= 15; k++) {\n        const el = document.getElementById(`challenge${k}`);\n        el.classList.remove(\"challengeActive\");\n        if (player.currentChallenge.transcension === k) {\n            el.classList.add(\"challengeActive\");\n        }\n        if (player.currentChallenge.reincarnation === k) {\n            el.classList.add(\"challengeActive\");\n        }\n        if (player.currentChallenge.ascension === k) {\n            el.classList.add(\"challengeActive\");\n        }\n    }\n    if (player.retrychallenges) {\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: ON\";\n    }\n    else {\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: OFF\";\n    }\n    for (let k = 1; k <= 15; k++) {\n        updateChallengeLevel(k);\n    }\n};\nexport const updateChallengeLevel = (k) => {\n    const el = document.getElementById(\"challenge\" + k + \"level\");\n    const maxChallenges = getMaxChallenges(k);\n    el.textContent = `${player.challengecompletions[k]} / ${maxChallenges}`;\n};\nexport const updateAchievementBG = () => {\n    for (let i = 1; i <= 182; i++) {\n        document.getElementById(\"ach\" + i).style.backgroundColor = \"black\";\n    }\n    const fixDisplay1 = document.getElementsByClassName('purpleach');\n    const fixDisplay2 = document.getElementsByClassName('redach');\n    for (let i = 0; i < fixDisplay1.length; i++) {\n        fixDisplay1[i].style.backgroundColor = \"purple\";\n    }\n    for (let i = 0; i < fixDisplay2.length; i++) {\n        fixDisplay2[i].style.backgroundColor = \"maroon\";\n    }\n    for (let i = 1; i < player.achievements.length; i++) {\n        if (player.achievements[i] > 0.5 && player.achievements[i] !== undefined) {\n            achievementaward(i);\n        }\n    }\n};\nexport const CSSAscend = () => {\n    for (let i = 1; i <= 5; i++) {\n        const a = document.getElementById(\"ascendText\" + i);\n        const b = document.getElementById(\"ascendText\" + (5 + i));\n        const c = document.getElementById(\"tesseracts\" + i);\n        const d = document.getElementById(\"buyTesseracts\" + i);\n        const e = document.getElementById(\"tesseractAutoToggle\" + i);\n        a.style.top = (8 + 35 * i) + \"px\";\n        b.style.top = (8 + 35 * i) + \"px\";\n        c.style.top = (23 + 35 * i) + \"px\";\n        d.style.top = (38 + 35 * i) + \"px\";\n        e.style.top = (22 + 35 * i) + \"px\";\n        a.style.left = \"13%\";\n        b.style.left = \"56.5%\";\n        c.style.left = \"10%\";\n    }\n    for (let i = 1; i <= 6; i++) {\n        const a = document.getElementById(\"switchCubeSubTab\" + i);\n        a.style.top = (30 + 35 * i) + \"px\";\n        a.style.left = \"5%\";\n    }\n};\nexport const showCorruptionStatsLoadouts = () => {\n    if (player.corruptionShowStats) {\n        document.getElementById(\"corruptionStats\").style.display = \"block\";\n        document.getElementById(\"corruptionLoadouts\").style.display = \"none\";\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"dodgerblue\";\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"white\";\n    }\n    else {\n        document.getElementById(\"corruptionStats\").style.display = \"none\";\n        document.getElementById(\"corruptionLoadouts\").style.display = \"block\";\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"white\";\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"dodgerblue\";\n    }\n};\nexport const updateAscensionStats = () => {\n    const t = player.ascensionCounter;\n    const [cubes, tess, hyper, platonic] = CalcCorruptionStuff().splice(4);\n    const fillers = {\n        \"ascLen\": formatTimeShort(player.ascensionCounter),\n        \"ascCubes\": format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2, true),\n        \"ascTess\": format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3, true),\n        \"ascHyper\": format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4, true),\n        \"ascPlatonic\": format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5, true),\n        \"ascC10\": player.challengecompletions[10] + '',\n        \"ascTimeAccel\": `${format(calculateTimeAcceleration(), 3, true)}x`\n    };\n    for (const key in fillers) {\n        document.getElementById(key).textContent = fillers[key];\n    }\n};\nconst tabColors = {\n    buildings: 'yellow',\n    upgrades: 'yellow',\n    achievements: 'white',\n    runes: 'cyan',\n    challenges: 'plum',\n    researches: 'green',\n    ants: 'brown',\n    cubes: 'purple',\n    traits: 'orange',\n    settings: 'white',\n    shop: 'limegreen'\n};\nexport const changeTabColor = () => {\n    var _a;\n    const tab = document.getElementById('tabBorder');\n    const color = (_a = tabColors[G['currentTab']]) !== null && _a !== void 0 ? _a : 'yellow';\n    tab.style.backgroundColor = color;\n};\nexport const ConfirmCB = (text, cb) => {\n    const conf = document.getElementById('confirmationBox');\n    const confWrap = document.getElementById('confirmWrapper');\n    const popup = document.querySelector('#confirm');\n    const ok = popup.querySelector('#ok_confirm');\n    const cancel = popup.querySelector('#cancel_confirm');\n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    popup.querySelector('p').textContent = text;\n    popup.focus();\n    const listener = (e) => {\n        const { id } = e.target;\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        if (id === ok.id)\n            cb(true);\n        else\n            cb(false);\n    };\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n};\nconst AlertCB = (text, cb) => {\n    const conf = document.getElementById('confirmationBox');\n    const alertWrap = document.getElementById('alertWrapper');\n    const popup = document.querySelector('#alert');\n    const ok = popup.querySelector('#ok_alert');\n    conf.style.display = 'block';\n    alertWrap.style.display = 'block';\n    popup.querySelector('p').textContent = text;\n    popup.focus();\n    const listener = () => {\n        ok.removeEventListener('click', listener);\n        popup.removeEventListener('keyup', kbListener);\n        conf.style.display = 'none';\n        alertWrap.style.display = 'none';\n        cb(undefined);\n    };\n    const kbListener = (e) => e.key === 'Enter' && listener();\n    ok.addEventListener('click', listener);\n    popup.addEventListener('keyup', kbListener);\n};\nconst PromptCB = (text, cb) => {\n    const conf = document.getElementById('confirmationBox');\n    const confWrap = document.getElementById('promptWrapper');\n    const popup = document.querySelector('#prompt');\n    const ok = popup.querySelector('#ok_prompt');\n    const cancel = popup.querySelector('#cancel_prompt');\n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    popup.querySelector('label').textContent = text;\n    popup.querySelector('input').focus();\n    const listener = ({ target }) => {\n        const targetEl = target;\n        const input = targetEl.parentNode.querySelector('input').value;\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        popup.querySelector('input').removeEventListener('keyup', kbListener);\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        if (targetEl.id === ok.id)\n            cb(input);\n        else\n            cb(null);\n    };\n    const kbListener = (e) => {\n        if (e.key === 'Enter') {\n            return listener({ target: ok });\n        }\n        return e.preventDefault();\n    };\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n    popup.querySelector('input').addEventListener('keyup', kbListener);\n};\nexport const Alert = (text) => new Promise(res => AlertCB(text, res));\nexport const Prompt = (text) => new Promise(res => PromptCB(text, res));\nexport const Confirm = (text) => new Promise(res => ConfirmCB(text, res));\nconst popunder = (el, v) => {\n    console.log('github actions sucks please work');\n    const id = 'khafraIsAwesome';\n    el.addEventListener('mouseenter', (ev) => {\n        const isOnPage = document.getElementById(id);\n        if (isOnPage !== null)\n            document.body.removeChild(isOnPage);\n        const hover = ev.target;\n        const popunder = document.createElement('div');\n        popunder.setAttribute('id', id);\n        popunder.textContent = format(v(), undefined, undefined, false);\n        popunder.style.setProperty('position', 'absolute');\n        popunder.style.setProperty('text-align', 'center');\n        popunder.style.setProperty('height', `${hover.offsetHeight}px`);\n        popunder.style.setProperty('width', `${hover.offsetWidth}px`);\n        popunder.style.setProperty('top', `${hover.offsetTop + hover.offsetHeight}px`);\n        popunder.style.setProperty('left', `${hover.offsetLeft}px`);\n        popunder.style.setProperty('background-color', 'red');\n        document.body.appendChild(popunder);\n    });\n    el.addEventListener('mouseleave', () => {\n        const isOnPage = document.getElementById(id);\n        if (isOnPage !== null)\n            document.body.removeChild(isOnPage);\n    });\n};\nObject.defineProperty(window, 'popunder', { value: popunder });\n","import Decimal from 'break_infinity.js';\nimport { Globals as G } from './Variables';\nimport { player, format, formatTimeShort, version } from './Synergism';\nimport { CalcECC } from './Challenges';\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration } from './Calculate';\nimport { displayRuneInformation } from './Runes';\nimport { showSacrifice } from './Ants';\nimport { sumContents } from './Utility';\nimport { getShopCosts } from './Shop';\nimport { quarkHandler } from './Quark';\nexport const visualUpdateBuildings = () => {\n    if (G['currentTab'] !== \"buildings\") {\n        console.log(\"buildings update happened not in buildings\");\n        return;\n    }\n    if (G['buildingSubTab'] === \"coin\") {\n        const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'];\n        const names = [null, 'Workers', 'Investments', 'Printers', 'Coin Mints', 'Alchemies'];\n        let percentage = new Decimal();\n        let totalProductionDivisor = new Decimal(G['produceTotal']);\n        if (totalProductionDivisor.equals(0)) {\n            totalProductionDivisor = new Decimal(1);\n        }\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            document.getElementById(\"buildtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedCoin'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedCoin']) + \"]\";\n            document.getElementById(\"buycoin\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostCoin']) + \" coins.\";\n            percentage = percentage.fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent).times(100);\n            document.getElementById(\"buildtext\" + (2 * i)).textContent = \"Coins/Sec: \" + format((place.dividedBy(G['taxdivisor'])).times(40), 2) + \" [\" + format(percentage, 3) + \"%]\";\n        }\n        document.getElementById(\"buildtext11\").textContent = \"Accelerators: \" + format(player.acceleratorBought, 0, true) + \" [+\" + format(G['freeAccelerator'], 0, true) + \"]\";\n        document.getElementById(\"buildtext12\").textContent = \"Acceleration Power: \" + ((G['acceleratorPower'] - 1) * (100)).toPrecision(4) + \"% || Acceleration Multiplier: \" + format(G['acceleratorEffect'], 2) + \"x\";\n        document.getElementById(\"buildtext13\").textContent = \"Multipliers: \" + format(player.multiplierBought, 0, true) + \" [+\" + format(G['freeMultiplier'], 0, true) + \"]\";\n        document.getElementById(\"buildtext14\").textContent = \"Multiplier Power: \" + G['multiplierPower'].toPrecision(4) + \"x || Multiplier: \" + format(G['multiplierEffect'], 2) + \"x\";\n        document.getElementById(\"buildtext15\").textContent = \"Accelerator Boost: \" + format(player.acceleratorBoostBought, 0, true) + \" [+\" + format(G['freeAcceleratorBoost'], 0, false) + \"]\";\n        document.getElementById(\"buildtext16\").textContent = \"Reset Diamonds and Prestige Upgrades, but add \" + (G['tuSevenMulti'] * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100)).toPrecision(4) + \"% Acceleration Power and 5 free Accelerators.\";\n        document.getElementById(\"buyaccelerator\").textContent = \"Cost: \" + format(player.acceleratorCost) + \" coins.\";\n        document.getElementById(\"buymultiplier\").textContent = \"Cost: \" + format(player.multiplierCost) + \" coins.\";\n        document.getElementById(\"buyacceleratorboost\").textContent = \"Cost: \" + format(player.acceleratorBoostCost) + \" Diamonds.\";\n        let warning = \"\";\n        if (player.reincarnationCount > 0.5) {\n            warning = `Your tax also caps your Coin gain at ${format(Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))}/s.`;\n        }\n        document.getElementById(\"taxinfo\").textContent =\n            `Due to your excessive wealth, coin production is divided by ${format(G['taxdivisor'], 2)} to pay taxes! ${warning}`;\n    }\n    if (G['buildingSubTab'] === \"diamond\") {\n        const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'];\n        const names = [null, 'Refineries', 'Coal Plants', 'Coal Rigs', 'Pickaxes', 'Pandoras Boxes'];\n        const perSecNames = [null, \"Crystal/sec\", \"Ref./sec\", \"Plants/sec\", \"Rigs/sec\", \"Pickaxes/sec\"];\n        document.getElementById(\"prestigeshardinfo\").textContent = \"You have \" + format(player.prestigeShards, 2) + \" Crystals, multiplying Coin production by \" + format(G['prestigeMultiplier'], 2) + \"x.\";\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            document.getElementById(\"prestigetext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedDiamonds'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedDiamonds'], 2) + \"]\";\n            document.getElementById(\"prestigetext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\n            document.getElementById(\"buydiamond\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostDiamonds'], 2) + \" Diamonds\";\n        }\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            const p = Decimal.pow(10, Decimal.log(G['prestigePointGain'].add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10));\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when your Diamonds can increase by a factor \" + format(Decimal.pow(10, player.prestigeamount)) + \" [Toggle number above]. Current Multiplier: \" + format(p) + \".\";\n        }\n        if (player.resettoggle1 === 2) {\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when the autotimer is at least \" + (player.prestigeamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].prestige, 1) + \"s.\";\n        }\n    }\n    if (G['buildingSubTab'] === \"mythos\") {\n        const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'];\n        const names = [null, 'Augments', 'Enchantments', 'Wizards', 'Oracles', 'Grandmasters'];\n        const perSecNames = [null, \"Shards/sec\", \"Augments/sec\", \"Enchantments/sec\", \"Wizards/sec\", \"Oracles/sec\"];\n        document.getElementById(\"transcendshardinfo\").textContent = \"You have \" + format(player.transcendShards, 2) + \" Mythos Shards, providing \" + format(G['totalMultiplierBoost'], 0, true) + \" Multiplier Power boosts.\";\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            document.getElementById(\"transcendtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedMythos'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedMythos'], 2) + \"]\";\n            document.getElementById(\"transcendtext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\n            document.getElementById(\"buymythos\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostMythos'], 2) + \" Mythos\";\n        }\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            document.getElementById(\"autotranscend\").textContent = \"Prestige when your Mythos can increase by a factor \" + format(Decimal.pow(10, player.transcendamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['transcendPointGain'].add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2) + \".\";\n        }\n        if (player.resettoggle2 === 2) {\n            document.getElementById(\"autotranscend\").textContent = \"Transcend when the autotimer is at least \" + (player.transcendamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].transcension, 1) + \"s.\";\n        }\n    }\n    if (G['buildingSubTab'] === \"particle\") {\n        const upper = ['FirstParticles', 'SecondParticles', 'ThirdParticles', 'FourthParticles', 'FifthParticles'];\n        const names = ['Protons', 'Elements', 'Pulsars', 'Quasars', 'Galactic Nuclei'];\n        const perSecNames = [\"Atoms/sec\", \"Protons/sec\", \"Elements/sec\", \"Pulsars/sec\", \"Quasars/sec\"];\n        for (let i = 1; i <= 5; i++) {\n            const place = G[`produce${upper[i - 1]}`];\n            document.getElementById(`reincarnationtext${i}`).textContent =\n                `${names[i - 1]}: ${format(player[`${G['ordinals'][i - 1]}OwnedParticles`], 0, true)} [+${format(player[`${G['ordinals'][i - 1]}GeneratedParticles`], 2)}]`;\n            document.getElementById(`reincarnationtext${i + 5}`).textContent =\n                `${perSecNames[i - 1]}: ${format((place).times(40), 2)}`;\n            document.getElementById(`buyparticles${i}`).textContent =\n                `Cost: ${format(player[`${G['ordinals'][i - 1]}CostParticles`], 2)} Particles`;\n        }\n        document.getElementById(\"reincarnationshardinfo\").textContent = \"You have \" + format(player.reincarnationShards, 2) + \" Atoms, providing \" + G['buildingPower'].toPrecision(4) + \" Building Power. Multiplier to Coin Production: \" + format(G['reincarnationMultiplier']);\n        document.getElementById(\"reincarnationCrystalInfo\").textContent = \"Thanks to Research 2x14, you also multiply Crystal production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 50), 3, false);\n        document.getElementById(\"reincarnationMythosInfo\").textContent = \"Thanks to Research 2x15, you also multiply Mythos Shard production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 250), 3, false);\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when your Particles can increase by a factor \" + format(Decimal.pow(10, player.reincarnationamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['reincarnationPointGain'].add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2) + \".\";\n        }\n        if (player.resettoggle3 === 2) {\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when the autotimer is at least \" + (player.reincarnationamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].reincarnation, 1) + \"s.\";\n        }\n    }\n    if (G['buildingSubTab'] === \"tesseract\") {\n        const names = [null, 'Dot', 'Vector', 'Three-Space', 'Bent Time', 'Hilbert Space'];\n        const perSecNames = [null, '+Constant/sec', 'Dot/sec', 'Vector/sec', 'Three-Space/sec', 'Bent Time/sec'];\n        for (let i = 1; i <= 5; i++) {\n            document.getElementById(\"ascendText\" + i).textContent = names[i] + \": \" + format(player['ascendBuilding' + i]['owned'], 0, true) + \" [+\" + format(player['ascendBuilding' + i]['generated'], 2) + \"]\";\n            document.getElementById(\"ascendText\" + (5 + i)).textContent =\n                perSecNames[i] + \": \" + format((G['ascendBuildingProduction'][G['ordinals'][i - 1]]), 2);\n            document.getElementById(\"buyTesseracts\" + i).textContent = \"Cost: \" + format(player['ascendBuilding' + i]['cost'], 0) + \" Tesseracts\";\n        }\n        document.getElementById(\"tesseractInfo\").textContent = \"You have \" + format(player.wowTesseracts) + \" Wow! Tesseracts. Gain more by beating Challenge 10 on each Ascension.\";\n        document.getElementById(\"ascendShardInfo\").textContent = \"You have a mathematical constant of \" + format(player.ascendShards, 2) + \". Taxes are divided by \" + format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + 0.5 * player.platonicUpgrades[15] + (G['platonicBonusMultiplier'][5] - 1)), 4, true) + \".\";\n        document.getElementById(\"autotessbuyeramount\").textContent = \"Auto buyer will save at least \" + format(player.tesseractAutoBuyerAmount) + \" tesseracts. [Enter number above].\";\n    }\n};\nexport const visualUpdateUpgrades = () => {\n    if (G['currentTab'] !== \"upgrades\")\n        return;\n};\nexport const visualUpdateAchievements = () => {\n    if (G['currentTab'] !== \"achievements\")\n        return;\n};\nexport const visualUpdateRunes = () => {\n    if (G['currentTab'] !== \"runes\")\n        return;\n    if (G['runescreen'] === \"runes\") {\n        const talismans = [\n            'rune1Talisman',\n            'rune2Talisman',\n            'rune3Talisman',\n            'rune4Talisman',\n            'rune5Talisman'\n        ];\n        document.getElementById(\"offeringCount\").textContent = \"You have \" + format(player.runeshards, 0, true) + \" Offerings.\";\n        for (let i = 1; i <= 7; i++) {\n            let place = G[talismans[i - 1]];\n            if (i > 5)\n                place = 0;\n            document.getElementById('rune' + i + 'level').childNodes[0].textContent = \"Level: \" + format(player.runelevels[i - 1]) + \"/\" + format(calculateMaxRunes(i));\n            document.getElementById('rune' + i + 'exp').textContent = \"+1 in \" + format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2) + \" EXP\";\n            if (i <= 5)\n                document.getElementById('bonusrune' + i).textContent = \" [Bonus: \" + format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[9 - 1] + G['bonusant9']) + place) + \"]\";\n            else\n                document.getElementById('bonusrune' + i).textContent = \"[Bonus: Nope!]\";\n            displayRuneInformation(i, false);\n        }\n        document.getElementById(\"offeringExperienceValue\").textContent = \"Gain \" + format((1 + Math.min(player.highestchallengecompletions[1], 1) + 1 / 25 * player.highestchallengecompletions[1] + 0.6 * player.researches[22] + 0.3 * player.researches[23] + 3 / 25 * player.upgrades[66] + 2 * player.upgrades[61]) * calculateRecycleMultiplier(), 2, true) + \"* EXP per offering sacrificed.\";\n        document.getElementById(\"offeringRecycleInfo\").textContent = \"You have \" + format((5 * player.achievements[80] + 5 * player.achievements[87] + 5 * player.achievements[94] + 5 * player.achievements[101] + 5 * player.achievements[108] + 5 * player.achievements[115] + 7.5 * player.achievements[122] + 7.5 * player.achievements[129] + 5 * player.upgrades[61] + Math.min(25, G['rune4level'] / 16) + 0.5 * player.cubeUpgrades[2]), 2, true) + \"% chance of recycling your offerings. This multiplies EXP gain by \" + format(calculateRecycleMultiplier(), 2, true) + \"!\";\n    }\n    if (G['runescreen'] === \"talismans\") {\n        for (let i = 1; i <= 7; i++) {\n            document.getElementById('talisman' + i + 'level').textContent = \"Level \" + player.talismanLevels[i - 1] + \"/\" + (30 * player.talismanRarity[i - 1] + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400));\n        }\n    }\n    if (G['runescreen'] === \"blessings\") {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1];\n        let t = 0;\n        for (let i = 1; i <= 5; i++) {\n            document.getElementById(`runeBlessingLevel${i}Value`).textContent = format(player.runeBlessingLevels[i], 0, true);\n            document.getElementById(`runeBlessingPower${i}Value1`).textContent = format(G['runeBlessings'][i]);\n            const levelsPurchasable = calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i];\n            levelsPurchasable > 0\n                ? document.getElementById(`runeBlessingPurchase${i}`).classList.add(\"runeButtonsAvailable\")\n                : document.getElementById(`runeBlessingPurchase${i}`).classList.remove(\"runeButtonsAvailable\");\n            document.getElementById(`runeBlessingPurchaseAmount${i}`).textContent = format(Math.max(1, levelsPurchasable));\n            document.getElementById(`runeBlessingPurchaseCost${i}`).textContent = format(Math.max(G['blessingBaseCost'] * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[1]));\n            if (i === 5) {\n                t = 1;\n            }\n            document.getElementById(`runeBlessingPower${i}Value2`).textContent = format(1 - t + blessingMultiplierArray[i] * G['effectiveRuneBlessingPower'][i], 4, true);\n        }\n    }\n    if (G['runescreen'] === \"spirits\") {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100];\n        const subtract = [0, 0, 0, 1, 0, 0];\n        for (let i = 1; i <= 5; i++) {\n            spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400);\n            document.getElementById(`runeSpiritLevel${i}Value`).textContent = format(player.runeSpiritLevels[i], 0, true);\n            document.getElementById(`runeSpiritPower${i}Value1`).textContent = format(G['runeSpirits'][i]);\n            const levelsPurchasable = calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i];\n            levelsPurchasable > 0\n                ? document.getElementById(`runeSpiritPurchase${i}`).classList.add(\"runeButtonsAvailable\")\n                : document.getElementById(`runeSpiritPurchase${i}`).classList.remove(\"runeButtonsAvailable\");\n            document.getElementById(`runeSpiritPurchaseAmount${i}`).textContent = format(Math.max(1, levelsPurchasable));\n            document.getElementById(`runeSpiritPurchaseCost${i}`).textContent = format(Math.max(G['spiritBaseCost'] * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[1]));\n            document.getElementById(`runeSpiritPower${i}Value2`).textContent = format(1 - subtract[i] + spiritMultiplierArray[i] * G['effectiveRuneSpiritPower'][i], 4, true);\n        }\n    }\n};\nexport const visualUpdateChallenges = () => {\n    if (G['currentTab'] !== \"challenges\")\n        return;\n    if (player.researches[150] > 0) {\n        document.getElementById(\"autoIncrementerAmount\").textContent = format(G['autoChallengeTimerIncrement'], 2) + \"s\";\n    }\n};\nexport const visualUpdateResearch = () => {\n    if (G['currentTab'] !== \"researches\")\n        return;\n    if (player.researches[61] > 0) {\n        document.getElementById(\"automaticobtainium\").textContent = \"Thanks to researches you automatically gain \" + format(calculateAutomaticObtainium() * calculateTimeAcceleration(), 3, true) + \" Obtainium per real life second.\";\n    }\n};\nexport const visualUpdateAnts = () => {\n    if (G['currentTab'] !== \"ants\")\n        return;\n    document.getElementById(\"crumbcount\").textContent = \"You have \" + format(player.antPoints, 2) + \" Galactic Crumbs [\" + format(G['antOneProduce'], 2) + \"/s], providing a \" + format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499))) + \"x Coin Multiplier.\";\n    const mode = player.autoAntSacrificeMode === 2 ? \"Real-time\" : \"In-game time\";\n    const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer;\n    document.getElementById(\"autoAntSacrifice\").textContent = `Sacrifice when the timer is at least ${player.autoAntSacTimer} seconds (${mode}), Currently: ${format(timer)}`;\n    if (player.achievements[173] === 1) {\n        document.getElementById(\"antSacrificeTimer\").textContent = formatTimeShort(player.antSacrificeTimer);\n        showSacrifice();\n    }\n};\nexport const visualUpdateCubes = () => {\n    if (G['currentTab'] !== \"cubes\")\n        return;\n    document.getElementById(\"cubeToQuarkTimerValue\").textContent = format(Math.floor(player.dayTimer / 3600), 0) + \" Hours \" + format(Math.floor(player.dayTimer / 60 % 60), 0) + \" Mins \" + format(Math.floor(player.dayTimer % 60), 0) + \" Secs \";\n    document.getElementById('cubeQuarksTodayValue').textContent = format(player.cubeQuarkDaily);\n    document.getElementById('cubeQuarksOpenTodayValue').textContent = format(player.cubeOpenedDaily);\n    const cubeMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1;\n    document.getElementById('cubeQuarksOpenRequirementValue').textContent = format(Number(player.wowCubes.checkCubesToNextQuark(5, cubeMult, player.cubeQuarkDaily, player.cubeOpenedDaily)), 0, true);\n    document.getElementById('tesseractQuarksTodayValue').textContent = format(player.tesseractQuarkDaily);\n    document.getElementById('tesseractQuarksOpenTodayValue').textContent = format(player.tesseractOpenedDaily);\n    const tesseractMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1;\n    document.getElementById('tesseractQuarksOpenRequirementValue').textContent = format(Number(player.wowTesseracts.checkCubesToNextQuark(7, tesseractMult, player.tesseractQuarkDaily, player.tesseractOpenedDaily)), 0, true);\n    document.getElementById('hypercubeQuarksTodayValue').textContent = format(player.hypercubeQuarkDaily);\n    document.getElementById('hypercubeQuarksOpenTodayValue').textContent = format(player.hypercubeOpenedDaily);\n    const hypercubeMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1;\n    document.getElementById('hypercubeQuarksOpenRequirementValue').textContent = format(Number(player.wowHypercubes.checkCubesToNextQuark(10, hypercubeMult, player.hypercubeQuarkDaily, player.hypercubeOpenedDaily)), 0, true);\n    document.getElementById('platonicQuarksTodayValue').textContent = format(player.platonicCubeQuarkDaily);\n    document.getElementById('platonicQuarksOpenTodayValue').textContent = format(player.platonicCubeOpenedDaily);\n    const platonicMult = 1.5;\n    document.getElementById('platonicQuarksOpenRequirementValue').textContent = format(Number(player.wowPlatonicCubes.checkCubesToNextQuark(15, platonicMult, player.platonicCubeQuarkDaily, player.platonicCubeOpenedDaily)), 0, true);\n    let accuracy;\n    switch (player.subtabNumber) {\n        case 0: {\n            document.getElementById(\"cubeQuantity\").textContent = format(player.wowCubes, 0, true);\n            const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed];\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3];\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (cubeArray[i] >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`cubeBlessing${i}Amount`).textContent = `x${format(cubeArray[i], 0, true)}`;\n                document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(100 * (G['cubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n                if (i === 1 || i === 8 || i === 9) {\n                    document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(G['cubeBonusMultiplier'][i] - 1, accuracy[i] + augmentAccuracy, true)}`;\n                }\n            }\n            document.getElementById(\"cubeBlessingTotalAmount\").textContent = format(sumContents(cubeArray), 0, true);\n            break;\n        }\n        case 1: {\n            document.getElementById(\"tesseractQuantity\").textContent = format(player.wowTesseracts, 0, true);\n            const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed];\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (tesseractArray[i] >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`tesseractBlessing${i}Amount`).textContent = `x${format(tesseractArray[i], 0, true)}`;\n                document.getElementById(`tesseractBlessing${i}Effect`).textContent = `+${format(100 * (G['tesseractBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n            }\n            document.getElementById(\"tesseractBlessingTotalAmount\").textContent = format(sumContents(tesseractArray), 0, true);\n            break;\n        }\n        case 2: {\n            document.getElementById(\"hypercubeQuantity\").textContent = format(player.wowHypercubes, 0, true);\n            const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed];\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (hypercubeArray[i] >= 1000) {\n                    augmentAccuracy += 2;\n                }\n                document.getElementById(`hypercubeBlessing${i}Amount`).textContent = `x${format(hypercubeArray[i], 0, true)}`;\n                document.getElementById(`hypercubeBlessing${i}Effect`).textContent = `+${format(100 * (G['hypercubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n            }\n            document.getElementById(\"hypercubeBlessingTotalAmount\").textContent = format(sumContents(hypercubeArray), 0, true);\n            break;\n        }\n        case 3: {\n            document.getElementById(\"platonicQuantity\").textContent = format(player.wowPlatonicCubes, 0, true);\n            const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed];\n            const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4];\n            accuracy = [5, 5, 5, 5, 2, 3, 3, 2];\n            for (let i = 0; i < platonicArray.length; i++) {\n                let augmentAccuracy = 0;\n                if (platonicArray[i] >= DRThreshold[i]) {\n                    augmentAccuracy += 1;\n                }\n                document.getElementById(`platonicBlessing${i + 1}Amount`).textContent = `x${format(platonicArray[i], 0, true)}`;\n                document.getElementById(`platonicBlessing${i + 1}Effect`).textContent = `+${format(100 * (G['platonicBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\n            }\n            document.getElementById(\"platonicBlessingTotalAmount\").textContent = format(sumContents(platonicArray), 0, true);\n            break;\n        }\n        case 4:\n            document.getElementById(\"cubeAmount2\").textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`;\n            break;\n        case 5:\n            break;\n        case 6:\n            document.getElementById('hepteractQuantity').textContent = format(player.wowAbyssals, 0, true);\n            break;\n        default:\n            break;\n    }\n};\nexport const visualUpdateCorruptions = () => {\n    if (G['currentTab'] !== \"traits\")\n        return;\n    document.getElementById(\"autoAscendMetric\").textContent = format(player.autoAscendThreshold, 0, true);\n    const metaData = CalcCorruptionStuff();\n    document.getElementById(\"corruptionBankValue\").textContent = format(metaData[0]);\n    document.getElementById(\"corruptionScoreValue\").textContent = format(metaData[1], 0, true);\n    document.getElementById(\"corruptionMultiplierValue\").textContent = format(metaData[2], 1, true);\n    document.getElementById(\"corruptionTotalScore\").textContent = format(metaData[3], 0, true);\n    document.getElementById(\"corruptionCubesValue\").textContent = format(metaData[4], 0, true);\n    document.getElementById(\"corruptionTesseractsValue\").textContent = format(metaData[5]);\n    document.getElementById(\"corruptionHypercubesValue\").textContent = format(metaData[6]);\n    document.getElementById(\"corruptionPlatonicCubesValue\").textContent = format(metaData[7]);\n    document.getElementById(\"corruptionHepteractsValue\").textContent = format(metaData[8]);\n    document.getElementById(\"corruptionAntExponentValue\").textContent = format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G['extinctionMultiplier'][player.usedCorruptions[7]], 3);\n    document.getElementById(\"corruptionSpiritBonusValue\").textContent = format(calculateCorruptionPoints() / 400, 2, true);\n};\nexport const visualUpdateSettings = () => {\n    if (G['currentTab'] !== \"settings\")\n        return;\n    document.getElementById(\"prestigeCountStatistic\").childNodes[1].textContent = format(player.prestigeCount, 0, true);\n    document.getElementById(\"transcensionCountStatistic\").childNodes[1].textContent = format(player.transcendCount, 0, true);\n    document.getElementById(\"reincarnationCountStatistic\").childNodes[1].textContent = format(player.reincarnationCount, 0, true);\n    document.getElementById(\"fastestPrestigeStatistic\").childNodes[1].textContent = format(1000 * player.fastestprestige) + \"ms\";\n    document.getElementById(\"fastestTranscensionStatistic\").childNodes[1].textContent = format(1000 * player.fastesttranscend) + \"ms\";\n    document.getElementById(\"fastestReincarnationStatistic\").childNodes[1].textContent = format(1000 * player.fastestreincarnate) + \"ms\";\n    document.getElementById(\"mostOfferingStatistic\").childNodes[1].textContent = format(player.maxofferings);\n    document.getElementById(\"mostObtainiumStatistic\").childNodes[1].textContent = format(player.maxobtainium);\n    document.getElementById(\"mostObtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.maxobtainiumpersecond, 2, true);\n    document.getElementById(\"runeSumStatistic\").childNodes[1].textContent = format(G['runeSum']);\n    document.getElementById(\"obtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.obtainiumpersecond, 2, true);\n    document.getElementById(\"ascensionCountStatistic\").childNodes[1].textContent = format(player.ascensionCount, 0, true);\n    document.getElementById(\"saveString\").textContent =\n        `Currently: ${player.saveString.replace(\"$VERSION$\", \"v\" + version)}`;\n    const quarkData = quarkHandler();\n    const onExportQuarks = quarkData.gain;\n    const maxExportQuarks = quarkData.capacity;\n    document.getElementById(\"quarktimerdisplay\").textContent = format((3600 / quarkData.perHour - (player.quarkstimer % (3600.00001 / quarkData.perHour))), 2) + \"s until +1 export Quark\";\n    document.getElementById(\"quarktimeramount\").textContent = \"Quarks on export: \"\n        + onExportQuarks\n        + \" [Max \"\n        + format(maxExportQuarks)\n        + \"]\";\n    if (onExportQuarks === maxExportQuarks) {\n        const settingsTab = document.getElementById('settingstab');\n        settingsTab.style.backgroundColor = 'orange';\n        settingsTab.style.border = '1px solid gold';\n        settingsTab.setAttribute('full', '1');\n    }\n};\nexport const visualUpdateShop = () => {\n    if (G['currentTab'] !== \"shop\")\n        return;\n    document.getElementById(\"quarkamount\").textContent = \"You have \" + format(player.worlds) + \" Quarks!\";\n    document.getElementById(\"offeringpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.offeringPotion);\n    document.getElementById(\"obtainiumpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.obtainiumPotion);\n    document.getElementById(\"offeringtimerlevel\").textContent = \"Level: \" + player.shopUpgrades.offeringEX + \"/100\";\n    document.getElementById(\"obtainiumtimerlevel\").textContent = \"Level: \" + player.shopUpgrades.obtainiumEX + \"/100\";\n    document.getElementById(\"offeringautolevel\").textContent = \"Level: \" + player.shopUpgrades.offeringAuto + \"/100\";\n    document.getElementById(\"obtainiumautolevel\").textContent = \"Level: \" + player.shopUpgrades.obtainiumAuto + \"/100\";\n    document.getElementById(\"instantchallenge\").textContent = player.shopUpgrades.instantChallenge > 0 ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"antspeed\").textContent = \"Level: \" + player.shopUpgrades.antSpeed + \"/100\";\n    document.getElementById(\"cashgrab\").textContent = \"Level: \" + player.shopUpgrades.cashGrab + \"/100\";\n    document.getElementById(\"shoptalisman\").textContent = player.shopUpgrades.shopTalisman > 0 ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"challengeUpgradeLevel\").textContent = \"Level: \" + player.shopUpgrades.challengeExtension + \"/5\";\n    document.getElementById(\"challenge10TomeLevel\").textContent = \"Level: \" + player.shopUpgrades.challengeTome + \"/15\";\n    document.getElementById(\"seasonPassLevel\").textContent = \"Level: \" + player.shopUpgrades.seasonPass + \"/100\";\n    document.getElementById(\"cubeToQuark\").textContent = player.shopUpgrades.cubeToQuark ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"tesseractToQuark\").textContent = player.shopUpgrades.tesseractToQuark ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"hypercubeToQuark\").textContent = player.shopUpgrades.hypercubeToQuark ? \"Bought\" : \"Not Bought\";\n    document.getElementById(\"seasonPass2Level\").textContent = \"Level \" + player.shopUpgrades.seasonPass2 + \"/100\";\n    document.getElementById(\"seasonPass3Level\").textContent = \"Level \" + player.shopUpgrades.seasonPass3 + \"/100\";\n    document.getElementById(\"chronometerLevel\").textContent = \"Level \" + player.shopUpgrades.chronometer + \"/100\";\n    document.getElementById(\"infiniteAscentUpgrade\").textContent = player.shopUpgrades.infiniteAscent ? \"Bought\" : \"Not Bought\";\n    player.shopUpgrades.offeringEX === 100 ?\n        document.getElementById(\"offeringtimerbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"offeringtimerbutton\").textContent = \"Upgrade for \" + format(getShopCosts('offeringEX')) + \" Quarks\";\n    player.shopUpgrades.offeringAuto === 100 ?\n        document.getElementById(\"offeringautobutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"offeringautobutton\").textContent = \"Upgrade for \" + format(getShopCosts('offeringAuto')) + \" Quarks\";\n    player.shopUpgrades.obtainiumEX === 100 ?\n        document.getElementById(\"obtainiumtimerbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"obtainiumtimerbutton\").textContent = \"Upgrade for \" + format(getShopCosts('obtainiumEX')) + \" Quarks\";\n    player.shopUpgrades.obtainiumAuto === 100 ?\n        document.getElementById(\"obtainiumautobutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"obtainiumautobutton\").textContent = \"Upgrade for \" + format(getShopCosts('obtainiumAuto')) + \" Quarks\";\n    player.shopUpgrades.instantChallenge > 0 ?\n        (document.getElementById(\"instantchallengebutton\").textContent = \"Bought!\") :\n        document.getElementById(\"instantchallengebutton\").textContent = \"Buy for \" + format(getShopCosts('instantChallenge')) + \" Quarks\";\n    player.shopUpgrades.antSpeed === 100 ?\n        document.getElementById(\"antspeedbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"antspeedbutton\").textContent = \"Upgrade for \" + format(getShopCosts('antSpeed')) + \" Quarks\";\n    player.shopUpgrades.cashGrab === 100 ?\n        document.getElementById(\"cashgrabbutton\").textContent = \"Maxed!\" :\n        document.getElementById(\"cashgrabbutton\").textContent = \"Upgrade for \" + format(getShopCosts('cashGrab')) + \" Quarks\";\n    player.shopUpgrades.shopTalisman > 0 ?\n        (document.getElementById(\"shoptalismanbutton\").textContent = \"Bought!\") :\n        document.getElementById(\"shoptalismanbutton\").textContent = \"Buy for \" + format(getShopCosts('shopTalisman')) + \" Quarks\";\n    player.shopUpgrades.challengeExtension === 5 ?\n        document.getElementById(\"challengeUpgradeButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"challengeUpgradeButton\").textContent = \"Buy for \" + format(getShopCosts('challengeExtension')) + \" Quarks\";\n    player.shopUpgrades.challengeTome === 15 ?\n        document.getElementById(\"challenge10TomeButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"challenge10TomeButton\").textContent = \"Buy for \" + format(getShopCosts('challengeTome')) + \" Quarks\";\n    player.shopUpgrades.seasonPass === 100 ?\n        document.getElementById(\"seasonPassButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"seasonPassButton\").textContent = \"Buy for \" + format(getShopCosts('seasonPass')) + \" Quarks\";\n    player.shopUpgrades.cubeToQuark > 0 ?\n        (document.getElementById(\"cubeToQuarkButton\").textContent = \"Maxed!\") :\n        document.getElementById(\"cubeToQuarkButton\").textContent = \"Buy for \" + format(getShopCosts('cubeToQuark')) + \" Quarks\";\n    player.shopUpgrades.tesseractToQuark > 0 ?\n        (document.getElementById(\"tesseractToQuarkButton\").textContent = \"Maxed!\") :\n        document.getElementById(\"tesseractToQuarkButton\").textContent = \"Buy for \" + format(getShopCosts('tesseractToQuark')) + \" Quarks\";\n    player.shopUpgrades.hypercubeToQuark > 0 ?\n        (document.getElementById(\"hypercubeToQuarkButton\").textContent = \"Maxed!\") :\n        document.getElementById(\"hypercubeToQuarkButton\").textContent = \"Buy for \" + format(getShopCosts('hypercubeToQuark')) + \" Quarks\";\n    player.shopUpgrades.seasonPass2 === 100 ?\n        document.getElementById(\"seasonPass2Button\").textContent = \"Maxed!\" :\n        document.getElementById(\"seasonPass2Button\").textContent = \"Buy for \" + format(getShopCosts('seasonPass2')) + \" Quarks\";\n    player.shopUpgrades.seasonPass3 === 100 ?\n        document.getElementById(\"seasonPass3Button\").textContent = \"Maxed!\" :\n        document.getElementById(\"seasonPass3Button\").textContent = \"Buy for \" + format(getShopCosts('seasonPass3')) + \" Quarks\";\n    player.shopUpgrades.chronometer === 100 ?\n        document.getElementById(\"chronometerButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"chronometerButton\").textContent = \"Buy for \" + format(getShopCosts('chronometer')) + \" Quarks\";\n    player.shopUpgrades.infiniteAscent ?\n        document.getElementById(\"infiniteAscentButton\").textContent = \"Maxed!\" :\n        document.getElementById(\"infiniteAscentButton\").textContent = \"Buy for \" + format(getShopCosts('infiniteAscent')) + \" Quarks\";\n};\n","import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { calculateAnts, calculateRuneLevels } from './Calculate';\nimport { sumContents } from './Utility';\nimport { buyUpgrades } from './Buy';\nimport { buyGenerator } from './Generators';\nimport { buyAutobuyers } from './Automation';\nimport { revealStuff } from './UpdateHTML';\nconst upgdesc = {\n    upgdesc1: \"Increase production of Workers per producer bought.\",\n    upgdesc2: \"Increase production of Investments per producer bought.\",\n    upgdesc3: \"Increase production of Printers per producer bought.\",\n    upgdesc4: \"Increase production of Mints per producer bought.\",\n    upgdesc5: \"Increase production of Alchemies per producer bought.\",\n    upgdesc6: \"Increase all production based on producer bought.\",\n    upgdesc7: \"Gain free multipliers based on your purchased Alchemies.\",\n    upgdesc8: \"Gain 1 free Accelerator per 7 purchased Multipliers.\",\n    upgdesc9: \"Gain 1 free Multiplier per 10 purchased Accelerators.\",\n    upgdesc10: \"Improve Workers based on the first 750 purchased Investments.\",\n    upgdesc11: \"Accelerators improve generation production by 2% each.\",\n    upgdesc12: \"Each prestige multiplies production by 1.01, multiplicatively (Max: 1e4x).\",\n    upgdesc13: \"Augments buff the production of Investments.\",\n    upgdesc14: \"Free Accelerators buff generation of Printers.\",\n    upgdesc15: \"Free Accelerators buff generation of Mints.\",\n    upgdesc16: \"Acceleration Multiplier buffs Diamond gain.\",\n    upgdesc17: \"Multiply Mint production by 1e+100.\",\n    upgdesc18: \"Multiply Printer production based on Mythos Shards.\",\n    upgdesc19: \"Multiply Investment production based on Mythos.\",\n    upgdesc20: \"Coin upgrade 1 is raised to the eleventh power.\",\n    upgdesc21: \"Gain 1 Multiplier and 5 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc22: \"Gain 1 Multiplier and 4 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc23: \"Gain 1 Multiplier and 3 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc24: \"Gain 1 Multiplier and 2 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc25: \"Gain 1 Multiplier and 1 Accelerators plus 1% more free Multipliers/Accelerators.\",\n    upgdesc26: \"Gain a free Accelerator Boost.\",\n    upgdesc27: \"Gain free Accelerators based on unspent Coins.\",\n    upgdesc28: \"Gain a free Multiplier per 160 Coin producers bought.\",\n    upgdesc29: \"Gain a free Accelerator per 80 Coin producers bought.\",\n    upgdesc30: \"Gain free Multipliers based on unspent Coins.\",\n    upgdesc31: \"Gain 1 free Accelerator Boost per 2,000 Coin producers bought.\",\n    upgdesc32: \"Gain free Accelerators based on Unspent Diamonds.\",\n    upgdesc33: \"Gain 1 free Multiplier for each Accelerator Boost owned.\",\n    upgdesc34: \"Gain 3% more free Multipliers.\",\n    upgdesc35: \"Gain 2% more free Multipliers.\",\n    upgdesc36: \"Multiply crystal production by Diamonds, maximum 1e5000x.\",\n    upgdesc37: \"Multiply mythos shard production by the squared logarithm of Diamonds.\",\n    upgdesc38: \"Gain +15% more offerings thanks to generous Discord Server Boosters!\",\n    upgdesc39: \"Gain +50% more Ant Speed thanks to generous Discord Server Boosters!\",\n    upgdesc40: \"Gain +25% more Ant Sacrifice rewards thanks to generous Discord Server Boosters!\",\n    upgdesc41: \"Multiply production based on unspent Mythos.\",\n    upgdesc42: \"Multiply Mythos Shard production based on unspent Diamonds.\",\n    upgdesc43: \"Multiply coin production by 1.01 per transcension (Max: 1e30x).\",\n    upgdesc44: \"Multiply Mythos gain on Transcend by 1.01 per transcension (Max: 1e6x).\",\n    upgdesc45: \"Gain free Accelerators based on Mythos Shards.\",\n    upgdesc46: \"Accelerator Boosts are 5% stronger and do not reset prestige features.\",\n    upgdesc47: \"Multiply Mythos Shard production based on your AP.\",\n    upgdesc48: \"Multiply production based on owned Accelerators and Multipliers.\",\n    upgdesc49: \"Gain free Multipliers based on unspent Mythos.\",\n    upgdesc50: \"Gain +25% free Accelerators and Multipliers, but ONLY while doing challenges.\",\n    upgdesc51: \"Increase production of all Mythos buildings based on owned Accelerator Boosts.\",\n    upgdesc52: \"Mythos building exponent +0.025.\",\n    upgdesc53: \"Augments produce more Shards based on Acceleration Multiplier.\",\n    upgdesc54: \"Wizards produce more Enchantments based on Multiplier.\",\n    upgdesc55: \"Grandmasters produce more Oracles based on Building power.\",\n    upgdesc56: \"Worker production is multiplied by 1e+5000.\",\n    upgdesc57: \"Investment production is multiplied by 1e+7500.\",\n    upgdesc58: \"Printer production is multiplied by 1e+15000.\",\n    upgdesc59: \"Coin Mint production is multiplied by 1e+25000.\",\n    upgdesc60: \"Alchemies production is multiplied by 1e+35000.\",\n    upgdesc61: \"Welcome to reincarnation! +5% Offering Recycle, +5 EXP/Offering!\",\n    upgdesc62: \"Completing challenges, automatically or manually, increase offerings gained in Reincarnation. Bonus subject to time multiplier!\",\n    upgdesc63: \"Crystal Production is multiplied based on Particles to the sixth power [Caps at 1e6000x].\",\n    upgdesc64: \"Mythos Shard Production is multiplied by your Particles squared.\",\n    upgdesc65: \"Multiply the gain of Particles from Reincarnation by 5x!\",\n    upgdesc66: \"When you use an Offering, every unlocked rune will get 3 free experience.\",\n    upgdesc67: \"Atom gain is increased by 3% per Particle producer purchased!\",\n    upgdesc68: \"Gain a free multiplier for every 1e1000x increase in tax.\",\n    upgdesc69: \"Gain more Obtainium based on your particle gain. [Works with automation at a reduced rate!]\",\n    upgdesc70: \"Time seems to go +0.333*log10(MAX obtainium +1)% faster when you buy this.\",\n    upgdesc71: \"Runes will gain (Rune Level/25) additional EXP per offering used.\",\n    upgdesc72: \"Obtainium gain from Reincarnations is multiplied (1 + 2C) where C is #Reincarnation Challenges completed, up to 50x!\",\n    upgdesc73: \"Gain +100% free accelerator boosts and +10 free Crystal Upgrade levels, but only in Reincarnation Challenges.\",\n    upgdesc74: \"Obtainium gain is increased based on highest ever unspent offerings. [Max: 100,000 unspent]\",\n    upgdesc75: \"Offering gain is increased based on highest ever unspent obtainium [Max: 30,000,000 obtainium]\",\n    upgdesc76: \"Ant generation kinda slow? I agree! Make all ant tiers 5x faster!\",\n    upgdesc77: \"This is Synergism, right? Let's make each purchased ant make all ants 0.4% faster.\",\n    upgdesc78: \"Gain an ant speed multiplier equivalent to (1 + 0.005 * (log10(MAX offerings + 1))^2).\",\n    upgdesc79: \"The Ant God will accept an arbitrary number of Particles in order to give you 10% more from sacrifices.\",\n    upgdesc80: \"The Ant God will accept a larger arbitrary number of Particles to give you more ant ELO.\",\n    upgdesc81: \"Automatically buy Workers if affordable.\",\n    upgdesc82: \"Automatically buy Investments if affordable.\",\n    upgdesc83: \"Automatically buy Printers if affordable.\",\n    upgdesc84: \"Automatically buy Coin Mints if affordable.\",\n    upgdesc85: \"Automatically buy Alchemies if affordable.\",\n    upgdesc86: \"Automatically buy Accelerators if affordable.\",\n    upgdesc87: \"Automatically buy Multipliers if affordable.\",\n    upgdesc88: \"Automatically buy Accelerator Boosts if affordable.\",\n    upgdesc89: \"Unlock Automatic Transcensions.\",\n    upgdesc90: \"Automatically buy from the Generator Shop.\",\n    upgdesc91: \"Automatically buy Coin Upgrades.\",\n    upgdesc92: \"Automatically buy Diamond Upgrades.\",\n    upgdesc93: \"Generate 1% of Diamond Gain from prestiging per second.\",\n    upgdesc94: \"Automatically buy Augments if affordable.\",\n    upgdesc95: \"Automatically buy Enchantments if affordable.\",\n    upgdesc96: \"Automatically buy Wizards if affordable.\",\n    upgdesc97: \"Automatically buy Oracles if affordable.\",\n    upgdesc98: \"Automatically buy Grandmasters if affordable.\",\n    upgdesc99: \"Automatically buy Mythos Upgrades if affordable.\",\n    upgdesc100: \"Generate 1% of Mythos Gain from transcending per second.\",\n    upgdesc101: \"Alchemies will produce Coin Mints.\",\n    upgdesc102: \"Coin Mints will produce Printers.\",\n    upgdesc103: \"Printers will produce Investments.\",\n    upgdesc104: \"Investments will produce Workers.\",\n    upgdesc105: \"Purchased Workers will produce Alchemies.\",\n    upgdesc106: \"Refineries can produce Alchemies equal to Refineries owned raised to 0.10\",\n    upgdesc107: \"Refinery -> Alchemy exponent increased from 0.10 to 0.25.\",\n    upgdesc108: \"Refinery -> Alchemy exponent increased from 0.25 to 0.50\",\n    upgdesc109: \"Refinery -> Alchemy exponent increased from 0.50 to 0.75\",\n    upgdesc110: \"Refinery -> Alchemy exponent increased from 0.75 to 1\",\n    upgdesc111: \"Augments can produce Pandora Boxes equal to Augments owned raised to 0.08\",\n    upgdesc112: \"Augment -> Box exponent increased from 0.08 to 0.16\",\n    upgdesc113: \"Augment -> Box exponent increased from 0.16 to 0.24\",\n    upgdesc114: \"Augment -> Box exponent increased from 0.24 to 0.32\",\n    upgdesc115: \"Augment -> Box exponent increased from 0.32 to 0.40\",\n    upgdesc116: \"Protons can produce Grandmasters equal to Protons owned raised to 0.05\",\n    upgdesc117: \"Protons -> Grandmaster exponent increased from 0.05 to 0.10\",\n    upgdesc118: \"Protons -> Grandmaster exponent increased from 0.10 to 0.15\",\n    upgdesc119: \"Protons -> Grandmaster exponent increased from 0.15 to 0.20\",\n    upgdesc120: \"Protons -> Grandmaster exponent increased from 0.20 to 0.25\",\n    upgdesc121: \"You probably autobought this. -50% taxes!\",\n    upgdesc122: \"Increase Crystal Upgrade 3 cap from +12% to +100%!\",\n    upgdesc123: \"Raise coin production to the power of 1.025. More EXPONENTS.\",\n    upgdesc124: \"Gain +3% more effective ELO.\",\n    upgdesc125: \"Constant Tax divisor is 0.333% stronger per challenge 10 completion. [Divisor^(1 + upgrade)]\"\n};\nconst crystalupgdesc = {\n    crystalupgdesc1: \"Gain a 5% multiplicative boost to crystals per AP per level.\",\n    crystalupgdesc2: \"Gain a boost to crystals based on held coins per level.\",\n    crystalupgdesc3: \"Each purchased Crystal producer increases generation of Crystal producers by .1% per level. [MAX: 12%]\",\n    crystalupgdesc4: \"Improve the multiplier to coin production by .05 exponent per level. [MAX: +10.00]\",\n    crystalupgdesc5: \"Every challenge completion increases crystal gain by 1% per level.\",\n    crystalupgdesc6: \"Coming SOON!\",\n    crystalupgdesc7: \"Coming SOON!\",\n    crystalupgdesc8: \"Coming SOON!\"\n};\nconst constantUpgDesc = {\n    constantUpgDesc1: \"Make all Tesseract buildings 5% more productive per level.\",\n    constantUpgDesc2: \"Each Tesseract building bought increases the production of all of them by 0.1% per level [Max 10%].\",\n    constantUpgDesc3: \"Increase offering gain +2% per level.\",\n    constantUpgDesc4: \"Increase obtainium gain +4% per level.\",\n    constantUpgDesc5: \"Multiply ant speed by (1 + log10(Constant + 1)/10)^level\",\n    constantUpgDesc6: \"Add +2 free Ant Levels per level.\",\n    constantUpgDesc7: \"Provides 7 free rune levels and increases the rune cap by 3 per level.\",\n    constantUpgDesc8: \"Increase the rune EXP given by offerings by 10% per level [Additive]\",\n    constantUpgDesc9: \"When bought, rune effectiveness is increased by Log4(Talisman Shards +1) %\",\n    constantUpgDesc10: \"When bought, gain Log4(Constant + 1)% more Wow! Cubes and Tesseracts on ascension.\"\n};\nconst upgradetexts = [\n    () => \"Worker Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Investment Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Printer Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Mint Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Alchemy Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"All Coin production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => \"Gain \" + Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))) + \" free multipliers from bought Alchemies.\",\n    () => \"+\" + Math.floor(player.multiplierBought / 7) + \" free Accelerators.\",\n    () => \"+\" + Math.floor(player.acceleratorBought / 10) + \" free Multipliers.\",\n    () => \"Worker Production x\" + format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\n    () => \"Generator efficiency x\" + format(Decimal.pow(1.02, G['freeAccelerator']), 2),\n    () => \"All Coin production x\" + format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\n    () => \"Investment Production x\" + format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\n    () => \"Printer Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => \"Mint Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => \"Gain \" + format(Decimal.pow(G['acceleratorEffect'], 1 / 3), 2) + \"x more Diamonds on prestige\",\n    () => \"Mint Production x1e100 (Duh)\",\n    () => \"Printer Production x\" + format(Decimal.min(1e125, player.transcendShards.add(1))),\n    () => \"Investment Production x\" + format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\n    () => \"All coin production is further multiplied by \" + format(Decimal.pow((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 10), 2) + \" [Stacks with upgrade 1]!\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((5 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((4 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((3 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((2 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((1 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\n    () => \"+1 Accelerator Boost.\",\n    () => \"+\" + format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))) + \" Accelerators.\",\n    () => \"+\" + format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))) + \" Multipliers.\",\n    () => \"+\" + format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))) + \" Accelerators.\",\n    () => \"+\" + format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))) + \" Multipliers.\",\n    () => \"+\" + format(Math.floor(G['totalCoinOwned'] / 2000)) + \" Accelerator Boosts\",\n    () => \"+\" + format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))) + \" Accelerators\",\n    () => \"+\" + format(G['totalAcceleratorBoost']) + \" Multipliers\",\n    () => \"+\" + format(Math.floor(3 / 103 * G['freeMultiplier'])) + \" Multipliers\",\n    () => \"+\" + format(Math.floor(2 / 102 * G['freeMultiplier'])) + \" Multipliers\",\n    () => \"All Crystal producers x\" + format(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)), 2),\n    () => \"All Mythos producers production x\" + format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Thank you for getting the server above 30 boosts!\",\n    () => \"Welcome to Transcension! Coin production is multiplied by \" + format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))) + \".\",\n    () => \"All mythos shard producers are going into overdrive: x\" + format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2) + \" the production!\",\n    () => \"Multiply all coin production by \" + format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\n    () => \"Multiply Mythos gained in Transcension by \" + format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\n    () => \"+\" + format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))) + \" Accelerators!\",\n    () => \"It's kinda self-evident, ain't it?\",\n    () => \"Mythos-tier producers production x\" + format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\n    () => \"Multiply coin production by a factor of \" + format(Math.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8)) + \"!\",\n    () => \"+\" + format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))) + \" Multipliers through magic!\",\n    () => \"It's quite obvious what the benefit is, but you must be in a challenge for it to be in use!\",\n    () => \"Mythos-tier producers production x\" + format(Math.pow(G['totalAcceleratorBoost'], 2), 2) + \"!\",\n    () => \"Mythos-tier producers production x\" + format(Decimal.pow(G['globalMythosMultiplier'], 0.025), 2) + \"! It's like inception, or something.\",\n    () => \"Augments will produce \" + format(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)), 2) + \"x as many Mythos Shards.\",\n    () => \"Wizards will produce \" + format(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)), 2) + \"x as many Enchantments; what productive spirits!\",\n    () => \"Grandmasters will produce \" + format((Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1))), 2) + \"x as many Oracles!\",\n    () => \"It's quite obvious, ain't it?\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"Look above!\",\n    () => \"+5% Offering Recycle/+5EXP per Offerings. Duh!\",\n    () => \"Base offering amount for Reincarnations +\" + Math.floor(1 / 5 * (sumContents(player.challengecompletions))) + \". Challenge yourself!\",\n    () => \"All crystal production x\" + format(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6))),\n    () => \"All mythos shard production x\" + format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\n    () => \"5x Particle gain from Reincarnations. Duh!\",\n    () => \"It's quite clear in the description!\",\n    () => \"The first particle-tier producer is \" + format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2) + \"x as productive.\",\n    () => \"Your compliance with tax laws provides you with \" + format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G['taxdivisor'], 10)))) + \" free Multipliers, for some reason.\",\n    () => {\n        const a = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        const b = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        return \"Cosmic Magnetics will allow you to gain \" +\n            format(Math.min(10, new Decimal(a).toNumber()), 2) +\n            \"x as much Obtainium reincarnating, x\" +\n            format(Math.min(3, new Decimal(b).toNumber()), 2) +\n            \" automation gain.\";\n    },\n    () => \"Contracted time makes your game timers run \" + format(1 / 3 * Math.log(player.maxobtainium + 1) / Math.log(10), 2, true) + \"% more quickly.\",\n    () => \"Writing's on the wall. Look above!\",\n    () => \"Obtainium multiplier: x\" + Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\n    () => \"Same as Transcend upgrade 10, except you MUST be in a Reincarnation challenge in particular.\",\n    () => \"Obtainium multiplier: x\" + format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\n    () => \"Offering Multiplier: x\" + format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\n    () => \"Epic 5x Ants!\",\n    () => \"Ant Speed Multiplier: x\" + format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\n    () => \"Ant Speed Multiplier: x\" + format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2), 2, true),\n    () => \"You will gain +10% rewards =)\",\n    () => \"Ant Elo +75 if this upgrade is purchased.\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"All you need to know is right above this message!\",\n    () => \"-50% Taxes duh!\",\n    () => \"+88% cap to Crystal Upgrade 3, duh!\",\n    () => \"Coin Production ^1.025, duh!\",\n    () => \"+3% Effective Ant ELO, duh!\",\n    () => \"+\" + format(0.333 * player.challengecompletions[10], 0) + \"% Constant Divisor power.\"\n];\nexport const upgradeeffects = (i) => {\n    document.getElementById(\"upgradeeffect\").textContent = \"Effect: \" + upgradetexts[i - 1]();\n};\nexport const upgradedescriptions = (i) => {\n    const y = upgdesc[`upgdesc${i}`];\n    const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : '';\n    const el = document.getElementById(\"upgradedescription\");\n    el.textContent = y + z;\n    el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white';\n    if (player.toggles[9] === true) {\n        let type = '';\n        if (i <= 20 && i >= 1) {\n            type = 'coin';\n        }\n        if (i <= 40 && i >= 21) {\n            type = 'prestige';\n        }\n        if (i <= 60 && i >= 41) {\n            type = 'transcend';\n        }\n        if (i <= 80 && i >= 61) {\n            type = 'reincarnation';\n        }\n        if (i <= 87 && i >= 81) {\n            type = 'prestige';\n        }\n        if (i <= 93 && i >= 88) {\n            type = 'transcend';\n        }\n        if (i <= 100 && i >= 94) {\n            type = 'reincarnation';\n        }\n        if (type !== '' && i <= 80 && i >= 1) {\n            buyUpgrades(type, i);\n        }\n        if (type !== '' && i <= 100 && i >= 81) {\n            buyAutobuyers(i - 80);\n        }\n        if (i <= 120 && i >= 101) {\n            buyGenerator(i - 100);\n        }\n    }\n    let currency = '';\n    let color = '';\n    if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\n        currency = \"Coins\";\n        color = \"yellow\";\n    }\n    if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\n        currency = \"Diamonds\";\n        color = \"cyan\";\n    }\n    if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\n        currency = \"Mythos\";\n        color = \"plum\";\n    }\n    if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\n        currency = \"Particles\";\n        color = \"limegreen\";\n    }\n    document.getElementById(\"upgradecost\").textContent = \"Cost: \" + format(Decimal.pow(10, G['upgradeCosts'][i])) + \" \" + currency;\n    document.getElementById(\"upgradecost\").style.color = color;\n    upgradeeffects(i);\n};\nexport const crystalupgradedescriptions = (i) => {\n    const w = crystalupgdesc[`crystalupgdesc${i}`];\n    const p = player.crystalUpgrades[i - 1];\n    const c = (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\n        (Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100);\n    const q = Decimal.pow(10, (G['crystalUpgradesCost'][i - 1] + G['crystalUpgradeCostIncrement'][i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)));\n    document.getElementById(\"crystalupgradedescription\").textContent = w;\n    document.getElementById(\"crystalupgradeslevel\").textContent = \"Level: \" + p;\n    document.getElementById(\"crystalupgradescost\").textContent = \"Cost: \" + format(q) + \" crystals\";\n};\nexport const upgradeupdate = (num, fast) => {\n    const el = document.getElementById(`upg${num}`);\n    if (player.upgrades[num] > 0.5 && ((num <= 60 || num > 80) && (num <= 93 || num > 100))) {\n        el.style.backgroundColor = \"green\";\n    }\n    else if (player.upgrades[num] > 0.5 && ((num > 60 && num <= 80) || (num > 93 && num <= 100) || (num > 120))) {\n        el.style.backgroundColor = \"white\";\n    }\n    const b = upgdesc[`upgdesc${num}`];\n    const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : '';\n    if (player.upgrades[num] > 0.5) {\n        if (!fast) {\n            document.getElementById(\"upgradedescription\").textContent = b + c;\n            document.getElementById(\"upgradedescription\").style.color = \"gold\";\n        }\n    }\n    else {\n        el.style.backgroundColor = \"Black\";\n    }\n    if (!fast)\n        revealStuff();\n};\nconst constUpgEffect = {\n    1: () => `Tesseract building production x${format(Decimal.pow(1.05, player.constantUpgrades[1]), 2, true)}`,\n    2: () => `Tesseract building production x${format(Decimal.pow(1 + 0.001 * Math.min(100, player.constantUpgrades[2]), player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned), 2, true)}`,\n    3: () => `Offering gain x${format(1 + 0.02 * player.constantUpgrades[3], 2, true)}`,\n    4: () => `Obtainium gain x${format(1 + 0.04 * player.constantUpgrades[4], 2, true)}`,\n    5: () => `Ant Speed x${format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)}`,\n    6: () => `+ ${format(2 * player.constantUpgrades[6])} free Ant Levels`,\n    7: () => `+${format(7 * player.constantUpgrades[7])} free Rune Levels, +${format(3 * player.constantUpgrades[7])} to Rune Cap`,\n    8: () => `Rune EXP x${format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)}`,\n    9: () => `Runes effectiveness x${format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)}`,\n    10: () => `Cubes/Tesseracts on Ascension x${format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)}`\n};\nexport const returnConstUpgEffect = (i) => { var _a; return (_a = constUpgEffect[i]) === null || _a === void 0 ? void 0 : _a.call(constUpgEffect); };\nexport const getConstUpgradeMetadata = (i) => {\n    const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G['constUpgradeCosts'][i]) / Math.log(10)));\n    let cost = new Decimal(\"1\");\n    if (toBuy > player.constantUpgrades[i]) {\n        cost = Decimal.pow(10, toBuy - 1).times(G['constUpgradeCosts'][i]);\n    }\n    else {\n        cost = Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]);\n    }\n    return [Math.max(1, toBuy - player.constantUpgrades[i]), cost];\n};\nexport const constantUpgradeDescriptions = (i) => {\n    const [level, cost] = getConstUpgradeMetadata(i);\n    const y = constantUpgDesc[`constantUpgDesc${i}`];\n    document.getElementById(\"constUpgradeDescription\").textContent = y;\n    document.getElementById(\"constUpgradeLevel2\").textContent = format(player.constantUpgrades[i]);\n    document.getElementById(\"constUpgradeCost2\").textContent = format(cost) + \" [+\" + format(level) + \" LVL]\";\n    document.getElementById(\"constUpgradeEffect2\").textContent = returnConstUpgEffect(i);\n};\nexport const buyConstantUpgrades = (i, fast = false) => {\n    const [level, cost] = getConstUpgradeMetadata(i);\n    if (player.ascendShards.gte(cost)) {\n        player.constantUpgrades[i] += level;\n        if (player.researches[175] === 0) {\n            player.ascendShards = player.ascendShards.sub(cost);\n        }\n        if (!fast) {\n            constantUpgradeDescriptions(i);\n        }\n    }\n    calculateAnts();\n    calculateRuneLevels();\n};\n","import Decimal from 'break_infinity.js';\nexport const isDecimal = (o) => o instanceof Decimal ||\n    (typeof o === 'object' &&\n        o !== null &&\n        Object.keys(o).length === 2 &&\n        'mantissa' in o &&\n        'exponent' in o);\nexport const smallestInc = (x = 0) => {\n    if (x <= Number.MAX_SAFE_INTEGER) {\n        return 1;\n    }\n    else {\n        return Math.pow(2, Math.ceil(Math.log2(x) - 53));\n    }\n};\nexport const sumContents = (array) => {\n    array = Array.isArray(array)\n        ? array\n        : Object.values(array);\n    return array.reduce((a, b) => a + b, 0);\n};\nexport const productContents = (array) => array.reduce((a, b) => a * b);\nexport const sortWithIndeces = (toSort) => {\n    return Array\n        .from([...toSort.keys()])\n        .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]));\n};\nexport const getElementById = (id) => document.getElementById(id);\nexport const stripIndents = (temp, ...args) => {\n    var _a;\n    const s = temp.raw;\n    let f = '';\n    for (let i = 0; i < s.length; i++) {\n        f += `${s[i].replace(/\\n +/g, '\\n')}${(_a = args.shift()) !== null && _a !== void 0 ? _a : ''}`;\n    }\n    return f.trim();\n};\nexport const padArray = (a, b, length) => {\n    for (let i = 0; i < length; i++)\n        if (!(i in a))\n            a[i] = b;\n    return a;\n};\nexport const updateClassList = (targetElement, additions, removals) => {\n    const target = document.getElementById(targetElement);\n    for (const addition of additions) {\n        target.classList.add(addition);\n    }\n    for (const removal of removals) {\n        target.classList.remove(removal);\n    }\n};\n","import Decimal from 'break_infinity.js';\nexport const Globals = {\n    runediv: [1.5, 2, 3, 5, 8, 1, 1],\n    runeexpbase: [1, 4, 9, 16, 1000, 1e75, 1e150],\n    upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\n        2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\n        1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\n        0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\n        3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\n        12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\n        1e3, 1e6, 1e9, 1e12, 1e15],\n    crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\n    crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\n    researchBaseCosts: [1e200,\n        1, 1, 1, 1, 1,\n        1, 1e2, 1e4, 1e6, 1e8,\n        2, 2e2, 2e4, 2e6, 2e8,\n        4e4, 4e8, 10, 1e5, 1e9,\n        100, 100, 1e4, 2e3, 2e5,\n        40, 200, 50, 5000, 20000000,\n        777, 7777, 50000, 500000, 5000000,\n        2e3, 2e6, 2e9, 1e5, 1e9,\n        1, 1, 5, 25, 125,\n        2, 5, 320, 1280, 2.5e9,\n        10, 2e3, 4e5, 8e7, 2e9,\n        5, 400, 1e4, 3e6, 9e8,\n        100, 2500, 100, 2000, 2e5,\n        1, 20, 3e3, 4e5, 5e7,\n        10, 40, 160, 1000, 10000,\n        4e9, 7e9, 1e10, 1.2e10, 1.5e10,\n        1e12, 1e13, 3e12, 2e13, 2e13,\n        2e14, 6e14, 2e15, 6e15, 2e16,\n        1e16, 2e16, 2e17, 4e17, 1e18,\n        1e13, 1e14, 1e15, 7.777e18, 7.777e20,\n        1e16, 3e16, 1e17, 3e17, 1e20,\n        1e18, 3e18, 1e19, 3e19, 1e20,\n        1e20, 2e20, 4e20, 8e20, 1e21,\n        2e21, 4e21, 8e21, 2e22, 4e22,\n        3.2e21, 2e23, 4e23, 1e21, 7.777e32,\n        5e8, 5e12, 5e16, 5e20, 5e24,\n        1e25, 2e25, 4e25, 8e25, 1e26,\n        4e26, 8e26, 1e27, 2e27, 1e28,\n        5e9, 5e15, 5e21, 5e27, 1e28,\n        1e29, 2e29, 4e29, 8e29, 1e27,\n        2e30, 4e30, 8e30, 1e31, 2e31,\n        5e31, 1e32, 2e32, 4e32, 8e32,\n        1e33, 2e33, 4e33, 8e33, 1e34,\n        3e34, 1e35, 3e35, 6e35, 1e36,\n        3e36, 1e37, 3e37, 1e38, 3e38,\n        1e39, 3e39, 1e40, 3e40, 1e50,\n        3e41, 1e42, 3e42, 6e42, 1e43,\n        3e43, 1e44, 3e44, 1e45, 3e45,\n        2e46, 6e46, 2e47, 6e47, 1e64,\n        6e48, 2e49, 1e50, 1e51, 4e56\n    ],\n    researchMaxLevels: [0, 1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10,\n        10, 10, 1, 1, 1,\n        25, 25, 25, 20, 20,\n        10, 10, 10, 10, 10,\n        12, 12, 10, 10, 10,\n        10, 10, 10, 1, 1,\n        1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        20, 20, 20, 20, 20,\n        1, 5, 4, 5, 5,\n        10, 10, 10, 10, 10,\n        1, 1, 1, 1, 1,\n        10, 50, 50, 50, 50,\n        10, 1, 20, 20, 20,\n        20, 20, 20, 20, 10,\n        20, 20, 20, 20, 1,\n        20, 5, 5, 3, 2,\n        10, 10, 10, 10, 1,\n        10, 10, 20, 25, 25,\n        50, 50, 50, 50, 100,\n        10, 10, 10, 100, 100,\n        25, 25, 25, 1, 5,\n        10, 10, 10, 10, 1,\n        10, 10, 10, 1, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 10, 1,\n        10, 1, 6, 10, 1,\n        25, 25, 1, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 10, 10, 10, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 3, 6, 10, 5,\n        25, 25, 1, 15, 1,\n        20, 20, 20, 1, 1,\n        20, 1, 50, 50, 10,\n        25, 25, 25, 15, 100000\n    ],\n    ticker: 0,\n    costDivisor: 1,\n    freeAccelerator: 0,\n    totalAccelerator: 0,\n    freeAcceleratorBoost: 0,\n    totalAcceleratorBoost: 0,\n    acceleratorPower: 1.10,\n    acceleratorEffect: new Decimal(1),\n    acceleratorEffectDisplay: new Decimal(1),\n    generatorPower: new Decimal(1),\n    freeMultiplier: 0,\n    totalMultiplier: 0,\n    multiplierPower: 2,\n    multiplierEffect: new Decimal(1),\n    challengeOneLog: 3,\n    freeMultiplierBoost: 0,\n    totalMultiplierBoost: 0,\n    globalCoinMultiplier: new Decimal(1),\n    totalCoinOwned: 0,\n    prestigeMultiplier: new Decimal(1),\n    buildingPower: 1,\n    reincarnationMultiplier: new Decimal(1),\n    coinOneMulti: new Decimal(1),\n    coinTwoMulti: new Decimal(1),\n    coinThreeMulti: new Decimal(1),\n    coinFourMulti: new Decimal(1),\n    coinFiveMulti: new Decimal(1),\n    globalCrystalMultiplier: new Decimal(1),\n    globalMythosMultiplier: new Decimal(0.01),\n    grandmasterMultiplier: new Decimal(1),\n    atomsMultiplier: new Decimal(1),\n    mythosBuildingPower: 1,\n    challengeThreeMultiplier: new Decimal(1),\n    totalMythosOwned: 0,\n    prestigePointGain: new Decimal(0),\n    challengeFivePower: 1 / 3,\n    transcendPointGain: new Decimal(0),\n    reincarnationPointGain: new Decimal(0),\n    produceFirst: new Decimal(0),\n    produceSecond: new Decimal(0),\n    produceThird: new Decimal(0),\n    produceFourth: new Decimal(0),\n    produceFifth: new Decimal(0),\n    produceTotal: new Decimal(0),\n    produceFirstDiamonds: new Decimal(0),\n    produceSecondDiamonds: new Decimal(0),\n    produceThirdDiamonds: new Decimal(0),\n    produceFourthDiamonds: new Decimal(0),\n    produceFifthDiamonds: new Decimal(0),\n    produceDiamonds: new Decimal(0),\n    produceFirstMythos: new Decimal(0),\n    produceSecondMythos: new Decimal(0),\n    produceThirdMythos: new Decimal(0),\n    produceFourthMythos: new Decimal(0),\n    produceFifthMythos: new Decimal(0),\n    produceMythos: new Decimal(0),\n    produceFirstParticles: new Decimal(0),\n    produceSecondParticles: new Decimal(0),\n    produceThirdParticles: new Decimal(0),\n    produceFourthParticles: new Decimal(0),\n    produceFifthParticles: new Decimal(0),\n    produceParticles: new Decimal(0),\n    producePerSecond: new Decimal(0),\n    producePerSecondDiamonds: new Decimal(0),\n    producePerSecondMythos: new Decimal(0),\n    producePerSecondParticles: new Decimal(0),\n    uFourteenMulti: new Decimal(1),\n    uFifteenMulti: new Decimal(1),\n    tuSevenMulti: 1,\n    currentTab: 'buildings',\n    researchfiller1: \"Hover over the grid to get details about researches!\",\n    researchfiller2: \"Level: \",\n    ordinals: [\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\", \"eighteenth\", \"nineteenth\", \"twentieth\"],\n    cardinals: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\", \"twentyone\", \"twentytwo\", \"twentythree\", \"twentyfour\", \"twentyfive\", \"twentysix\", \"twentyseven\", \"twentyeight\", \"twentynine\", \"thirty\", \"thirtyone\", \"thirtytwo\", \"thirtythree\", \"thirtyfour\"],\n    challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 7500, 2.0e8, 3.5e9],\n    prestigeamount: 1,\n    taxdivisor: new Decimal(\"1\"),\n    taxdivisorcheck: new Decimal(\"1\"),\n    runemultiplierincrease: {\n        one: 1,\n        two: 1,\n        three: 1,\n        four: 1,\n        five: 1\n    },\n    mythosupgrade13: new Decimal(\"1\"),\n    mythosupgrade14: new Decimal(\"1\"),\n    mythosupgrade15: new Decimal(\"1\"),\n    challengefocus: 0,\n    maxexponent: 10000,\n    maxbuyresearch: false,\n    effectiveLevelMult: 1,\n    optimalOfferingTimer: 600,\n    optimalObtainiumTimer: 3600,\n    runeSum: 0,\n    shopConfirmation: true,\n    globalAntMult: new Decimal(\"1\"),\n    antMultiplier: new Decimal(\"1\"),\n    antOneProduce: new Decimal(\"1\"),\n    antTwoProduce: new Decimal(\"1\"),\n    antThreeProduce: new Decimal(\"1\"),\n    antFourProduce: new Decimal(\"1\"),\n    antFiveProduce: new Decimal(\"1\"),\n    antSixProduce: new Decimal(\"1\"),\n    antSevenProduce: new Decimal(\"1\"),\n    antEightProduce: new Decimal(\"1\"),\n    antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\n    antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\n    antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\n    bonusant1: 0,\n    bonusant2: 0,\n    bonusant3: 0,\n    bonusant4: 0,\n    bonusant5: 0,\n    bonusant6: 0,\n    bonusant7: 0,\n    bonusant8: 0,\n    bonusant9: 0,\n    bonusant10: 0,\n    bonusant11: 0,\n    bonusant12: 0,\n    rune1level: 1,\n    rune2level: 1,\n    rune3level: 1,\n    rune4level: 1,\n    rune5level: 1,\n    rune1Talisman: 0,\n    rune2Talisman: 0,\n    rune3Talisman: 0,\n    rune4Talisman: 0,\n    rune5Talisman: 0,\n    talisman1Effect: [null, 0, 0, 0, 0, 0],\n    talisman2Effect: [null, 0, 0, 0, 0, 0],\n    talisman3Effect: [null, 0, 0, 0, 0, 0],\n    talisman4Effect: [null, 0, 0, 0, 0, 0],\n    talisman5Effect: [null, 0, 0, 0, 0, 0],\n    talisman6Effect: [null, 0, 0, 0, 0, 0],\n    talisman7Effect: [null, 0, 0, 0, 0, 0],\n    talisman6Power: 0,\n    talisman7Quarks: 0,\n    runescreen: \"runes\",\n    settingscreen: \"settings\",\n    talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\n    talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\n    talismanLevelCostMultiplier: [null, 1, 4, 1e4, 1e8, 1e13, 10, 100],\n    talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\n    talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\n    commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\n    uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\n    rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\n    epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\n    legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\n    mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\n    talismanRespec: 1,\n    obtainiumGain: 0,\n    mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\n    antELO: 0,\n    effectiveELO: 0,\n    timeWarp: false,\n    blessingMultiplier: 1,\n    spiritMultiplier: 1,\n    runeBlessings: [0, 0, 0, 0, 0, 0],\n    runeSpirits: [0, 0, 0, 0, 0, 0],\n    effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\n    effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\n    blessingBaseCost: 1e6,\n    spiritBaseCost: 1e20,\n    triggerChallenge: 0,\n    prevReductionValue: -1,\n    buildingSubTab: \"coin\",\n    blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\n    blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\n    giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\n    benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\n    platonicCubeBase: [2 / 4e6, 1.5 / 4e6, 1 / 4e6, 1 / 8e4, 1 / 1e4, 1 / 1e5, 1 / 1e4, 1 / 1e4],\n    platonicDRPower: [1 / 5, 1 / 5, 1 / 5, 1 / 5, 1 / 16, 1 / 16, 1 / 4, 1 / 8],\n    cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\n    buyMaxCubeUpgrades: false,\n    autoOfferingCounter: 0,\n    researchOrderByCost: [],\n    divisivenessPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1],\n    maladaptivePower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1],\n    lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1 / 1e13, 1 / 1e16, 1 / 1e20, 1 / 1e25, 1 / 1e35],\n    hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400],\n    illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01],\n    deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1 / 1e6, 1 / 1e8, 1 / 1e10, 1 / 1e12, 1 / 1e15, 1 / 1e18, 1 / 1e25, 1 / 1e35],\n    extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0],\n    droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80],\n    financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03],\n    corruptionPointMultipliers: [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10],\n    ascendBuildingProduction: {\n        first: new Decimal('0'),\n        second: new Decimal('0'),\n        third: new Decimal('0'),\n        fourth: new Decimal('0'),\n        fifth: new Decimal('0'),\n    },\n    freeUpgradeAccelerator: 0,\n    freeUpgradeMultiplier: 0,\n    acceleratorMultiplier: 1,\n    multiplierMultiplier: 1,\n    constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\n    globalConstantMult: new Decimal(\"1\"),\n    autoTalismanTimer: 0,\n    autoChallengeTimerIncrement: 0,\n    corruptionTrigger: 1,\n    challenge15Rewards: {\n        cube1: 1,\n        ascensions: 1,\n        coinExponent: 1,\n        taxes: 1,\n        obtainium: 1,\n        offering: 1,\n        accelerator: 1,\n        multiplier: 1,\n        runeExp: 1,\n        runeBonus: 1,\n        cube2: 1,\n        transcendChallengeReduction: 1,\n        reincarnationChallengeReduction: 1,\n        antSpeed: 1,\n        bonusAntLevel: 1,\n        cube3: 1,\n        talismanBonus: 1,\n        globalSpeed: 1,\n        blessingBonus: 1,\n        constantBonus: 1,\n        cube4: 1,\n        spiritBonus: 1,\n        score: 1,\n        quarks: 1,\n        hepteractUnlocked: 0,\n    },\n    autoResetTimers: {\n        prestige: 0,\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0\n    },\n    timeMultiplier: 1,\n    upgradeMultiplier: 1\n};\nexport const blankGlobals = Object.assign({}, Globals);\n","var map = {\n\t\"./Dashboard\": [\n\t\t261,\n\t\t261\n\t],\n\t\"./Dashboard.ts\": [\n\t\t261,\n\t\t261\n\t],\n\t\"./OpenCubes\": [\n\t\t302,\n\t\t302\n\t],\n\t\"./OpenCubes.ts\": [\n\t\t302,\n\t\t302\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => Object.keys(map);\nwebpackAsyncContext.id = 464;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/SynergismOfficial/dist/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => {\n\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n\t\t\t\t\t});\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no deferred startup\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksynergismofficial\"] = self[\"webpackChunksynergismofficial\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\n// no deferred startup","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(915);\n"],"sourceRoot":""}